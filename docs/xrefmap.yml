### YamlMime:XRefMap
sorted: true
references:
- uid: ALE.ETLBox
  name: ALE.ETLBox
  href: api/ALE.ETLBox.html
  commentId: N:ALE.ETLBox
  fullName: ALE.ETLBox
  nameWithType: ALE.ETLBox
- uid: ALE.ETLBox.ConnectionManager
  name: ALE.ETLBox.ConnectionManager
  href: api/ALE.ETLBox.ConnectionManager.html
  commentId: N:ALE.ETLBox.ConnectionManager
  fullName: ALE.ETLBox.ConnectionManager
  nameWithType: ALE.ETLBox.ConnectionManager
- uid: ALE.ETLBox.ConnectionManager.AccessOdbcConnectionManager
  name: AccessOdbcConnectionManager
  href: api/ALE.ETLBox.ConnectionManager.AccessOdbcConnectionManager.html
  commentId: T:ALE.ETLBox.ConnectionManager.AccessOdbcConnectionManager
  fullName: ALE.ETLBox.ConnectionManager.AccessOdbcConnectionManager
  nameWithType: AccessOdbcConnectionManager
- uid: ALE.ETLBox.ConnectionManager.AccessOdbcConnectionManager.#ctor
  name: AccessOdbcConnectionManager()
  href: api/ALE.ETLBox.ConnectionManager.AccessOdbcConnectionManager.html#ALE_ETLBox_ConnectionManager_AccessOdbcConnectionManager__ctor
  commentId: M:ALE.ETLBox.ConnectionManager.AccessOdbcConnectionManager.#ctor
  fullName: ALE.ETLBox.ConnectionManager.AccessOdbcConnectionManager.AccessOdbcConnectionManager()
  nameWithType: AccessOdbcConnectionManager.AccessOdbcConnectionManager()
- uid: ALE.ETLBox.ConnectionManager.AccessOdbcConnectionManager.#ctor(ALE.ETLBox.OdbcConnectionString)
  name: AccessOdbcConnectionManager(OdbcConnectionString)
  href: api/ALE.ETLBox.ConnectionManager.AccessOdbcConnectionManager.html#ALE_ETLBox_ConnectionManager_AccessOdbcConnectionManager__ctor_ALE_ETLBox_OdbcConnectionString_
  commentId: M:ALE.ETLBox.ConnectionManager.AccessOdbcConnectionManager.#ctor(ALE.ETLBox.OdbcConnectionString)
  fullName: ALE.ETLBox.ConnectionManager.AccessOdbcConnectionManager.AccessOdbcConnectionManager(ALE.ETLBox.OdbcConnectionString)
  nameWithType: AccessOdbcConnectionManager.AccessOdbcConnectionManager(OdbcConnectionString)
- uid: ALE.ETLBox.ConnectionManager.AccessOdbcConnectionManager.#ctor(System.String)
  name: AccessOdbcConnectionManager(String)
  href: api/ALE.ETLBox.ConnectionManager.AccessOdbcConnectionManager.html#ALE_ETLBox_ConnectionManager_AccessOdbcConnectionManager__ctor_System_String_
  commentId: M:ALE.ETLBox.ConnectionManager.AccessOdbcConnectionManager.#ctor(System.String)
  fullName: ALE.ETLBox.ConnectionManager.AccessOdbcConnectionManager.AccessOdbcConnectionManager(System.String)
  nameWithType: AccessOdbcConnectionManager.AccessOdbcConnectionManager(String)
- uid: ALE.ETLBox.ConnectionManager.AccessOdbcConnectionManager.#ctor*
  name: AccessOdbcConnectionManager
  href: api/ALE.ETLBox.ConnectionManager.AccessOdbcConnectionManager.html#ALE_ETLBox_ConnectionManager_AccessOdbcConnectionManager__ctor_
  commentId: Overload:ALE.ETLBox.ConnectionManager.AccessOdbcConnectionManager.#ctor
  isSpec: "True"
  fullName: ALE.ETLBox.ConnectionManager.AccessOdbcConnectionManager.AccessOdbcConnectionManager
  nameWithType: AccessOdbcConnectionManager.AccessOdbcConnectionManager
- uid: ALE.ETLBox.ConnectionManager.AccessOdbcConnectionManager.AfterBulkInsert(System.String)
  name: AfterBulkInsert(String)
  href: api/ALE.ETLBox.ConnectionManager.AccessOdbcConnectionManager.html#ALE_ETLBox_ConnectionManager_AccessOdbcConnectionManager_AfterBulkInsert_System_String_
  commentId: M:ALE.ETLBox.ConnectionManager.AccessOdbcConnectionManager.AfterBulkInsert(System.String)
  fullName: ALE.ETLBox.ConnectionManager.AccessOdbcConnectionManager.AfterBulkInsert(System.String)
  nameWithType: AccessOdbcConnectionManager.AfterBulkInsert(String)
- uid: ALE.ETLBox.ConnectionManager.AccessOdbcConnectionManager.AfterBulkInsert*
  name: AfterBulkInsert
  href: api/ALE.ETLBox.ConnectionManager.AccessOdbcConnectionManager.html#ALE_ETLBox_ConnectionManager_AccessOdbcConnectionManager_AfterBulkInsert_
  commentId: Overload:ALE.ETLBox.ConnectionManager.AccessOdbcConnectionManager.AfterBulkInsert
  isSpec: "True"
  fullName: ALE.ETLBox.ConnectionManager.AccessOdbcConnectionManager.AfterBulkInsert
  nameWithType: AccessOdbcConnectionManager.AfterBulkInsert
- uid: ALE.ETLBox.ConnectionManager.AccessOdbcConnectionManager.BeforeBulkInsert(System.String)
  name: BeforeBulkInsert(String)
  href: api/ALE.ETLBox.ConnectionManager.AccessOdbcConnectionManager.html#ALE_ETLBox_ConnectionManager_AccessOdbcConnectionManager_BeforeBulkInsert_System_String_
  commentId: M:ALE.ETLBox.ConnectionManager.AccessOdbcConnectionManager.BeforeBulkInsert(System.String)
  fullName: ALE.ETLBox.ConnectionManager.AccessOdbcConnectionManager.BeforeBulkInsert(System.String)
  nameWithType: AccessOdbcConnectionManager.BeforeBulkInsert(String)
- uid: ALE.ETLBox.ConnectionManager.AccessOdbcConnectionManager.BeforeBulkInsert*
  name: BeforeBulkInsert
  href: api/ALE.ETLBox.ConnectionManager.AccessOdbcConnectionManager.html#ALE_ETLBox_ConnectionManager_AccessOdbcConnectionManager_BeforeBulkInsert_
  commentId: Overload:ALE.ETLBox.ConnectionManager.AccessOdbcConnectionManager.BeforeBulkInsert
  isSpec: "True"
  fullName: ALE.ETLBox.ConnectionManager.AccessOdbcConnectionManager.BeforeBulkInsert
  nameWithType: AccessOdbcConnectionManager.BeforeBulkInsert
- uid: ALE.ETLBox.ConnectionManager.AccessOdbcConnectionManager.BulkInsert(ALE.ETLBox.ITableData,System.String)
  name: BulkInsert(ITableData, String)
  href: api/ALE.ETLBox.ConnectionManager.AccessOdbcConnectionManager.html#ALE_ETLBox_ConnectionManager_AccessOdbcConnectionManager_BulkInsert_ALE_ETLBox_ITableData_System_String_
  commentId: M:ALE.ETLBox.ConnectionManager.AccessOdbcConnectionManager.BulkInsert(ALE.ETLBox.ITableData,System.String)
  fullName: ALE.ETLBox.ConnectionManager.AccessOdbcConnectionManager.BulkInsert(ALE.ETLBox.ITableData, System.String)
  nameWithType: AccessOdbcConnectionManager.BulkInsert(ITableData, String)
- uid: ALE.ETLBox.ConnectionManager.AccessOdbcConnectionManager.BulkInsert*
  name: BulkInsert
  href: api/ALE.ETLBox.ConnectionManager.AccessOdbcConnectionManager.html#ALE_ETLBox_ConnectionManager_AccessOdbcConnectionManager_BulkInsert_
  commentId: Overload:ALE.ETLBox.ConnectionManager.AccessOdbcConnectionManager.BulkInsert
  isSpec: "True"
  fullName: ALE.ETLBox.ConnectionManager.AccessOdbcConnectionManager.BulkInsert
  nameWithType: AccessOdbcConnectionManager.BulkInsert
- uid: ALE.ETLBox.ConnectionManager.AccessOdbcConnectionManager.CheckIfTableOrViewExists(System.String)
  name: CheckIfTableOrViewExists(String)
  href: api/ALE.ETLBox.ConnectionManager.AccessOdbcConnectionManager.html#ALE_ETLBox_ConnectionManager_AccessOdbcConnectionManager_CheckIfTableOrViewExists_System_String_
  commentId: M:ALE.ETLBox.ConnectionManager.AccessOdbcConnectionManager.CheckIfTableOrViewExists(System.String)
  fullName: ALE.ETLBox.ConnectionManager.AccessOdbcConnectionManager.CheckIfTableOrViewExists(System.String)
  nameWithType: AccessOdbcConnectionManager.CheckIfTableOrViewExists(String)
- uid: ALE.ETLBox.ConnectionManager.AccessOdbcConnectionManager.CheckIfTableOrViewExists*
  name: CheckIfTableOrViewExists
  href: api/ALE.ETLBox.ConnectionManager.AccessOdbcConnectionManager.html#ALE_ETLBox_ConnectionManager_AccessOdbcConnectionManager_CheckIfTableOrViewExists_
  commentId: Overload:ALE.ETLBox.ConnectionManager.AccessOdbcConnectionManager.CheckIfTableOrViewExists
  isSpec: "True"
  fullName: ALE.ETLBox.ConnectionManager.AccessOdbcConnectionManager.CheckIfTableOrViewExists
  nameWithType: AccessOdbcConnectionManager.CheckIfTableOrViewExists
- uid: ALE.ETLBox.ConnectionManager.AccessOdbcConnectionManager.Clone
  name: Clone()
  href: api/ALE.ETLBox.ConnectionManager.AccessOdbcConnectionManager.html#ALE_ETLBox_ConnectionManager_AccessOdbcConnectionManager_Clone
  commentId: M:ALE.ETLBox.ConnectionManager.AccessOdbcConnectionManager.Clone
  fullName: ALE.ETLBox.ConnectionManager.AccessOdbcConnectionManager.Clone()
  nameWithType: AccessOdbcConnectionManager.Clone()
- uid: ALE.ETLBox.ConnectionManager.AccessOdbcConnectionManager.Clone*
  name: Clone
  href: api/ALE.ETLBox.ConnectionManager.AccessOdbcConnectionManager.html#ALE_ETLBox_ConnectionManager_AccessOdbcConnectionManager_Clone_
  commentId: Overload:ALE.ETLBox.ConnectionManager.AccessOdbcConnectionManager.Clone
  isSpec: "True"
  fullName: ALE.ETLBox.ConnectionManager.AccessOdbcConnectionManager.Clone
  nameWithType: AccessOdbcConnectionManager.Clone
- uid: ALE.ETLBox.ConnectionManager.AccessOdbcConnectionManager.DummyTableName
  name: DummyTableName
  href: api/ALE.ETLBox.ConnectionManager.AccessOdbcConnectionManager.html#ALE_ETLBox_ConnectionManager_AccessOdbcConnectionManager_DummyTableName
  commentId: P:ALE.ETLBox.ConnectionManager.AccessOdbcConnectionManager.DummyTableName
  fullName: ALE.ETLBox.ConnectionManager.AccessOdbcConnectionManager.DummyTableName
  nameWithType: AccessOdbcConnectionManager.DummyTableName
- uid: ALE.ETLBox.ConnectionManager.AccessOdbcConnectionManager.DummyTableName*
  name: DummyTableName
  href: api/ALE.ETLBox.ConnectionManager.AccessOdbcConnectionManager.html#ALE_ETLBox_ConnectionManager_AccessOdbcConnectionManager_DummyTableName_
  commentId: Overload:ALE.ETLBox.ConnectionManager.AccessOdbcConnectionManager.DummyTableName
  isSpec: "True"
  fullName: ALE.ETLBox.ConnectionManager.AccessOdbcConnectionManager.DummyTableName
  nameWithType: AccessOdbcConnectionManager.DummyTableName
- uid: ALE.ETLBox.ConnectionManager.AdomdConnectionManager
  name: AdomdConnectionManager
  href: api/ALE.ETLBox.ConnectionManager.AdomdConnectionManager.html
  commentId: T:ALE.ETLBox.ConnectionManager.AdomdConnectionManager
  fullName: ALE.ETLBox.ConnectionManager.AdomdConnectionManager
  nameWithType: AdomdConnectionManager
- uid: ALE.ETLBox.ConnectionManager.AdomdConnectionManager.#ctor
  name: AdomdConnectionManager()
  href: api/ALE.ETLBox.ConnectionManager.AdomdConnectionManager.html#ALE_ETLBox_ConnectionManager_AdomdConnectionManager__ctor
  commentId: M:ALE.ETLBox.ConnectionManager.AdomdConnectionManager.#ctor
  fullName: ALE.ETLBox.ConnectionManager.AdomdConnectionManager.AdomdConnectionManager()
  nameWithType: AdomdConnectionManager.AdomdConnectionManager()
- uid: ALE.ETLBox.ConnectionManager.AdomdConnectionManager.#ctor(ALE.ETLBox.SqlConnectionString)
  name: AdomdConnectionManager(SqlConnectionString)
  href: api/ALE.ETLBox.ConnectionManager.AdomdConnectionManager.html#ALE_ETLBox_ConnectionManager_AdomdConnectionManager__ctor_ALE_ETLBox_SqlConnectionString_
  commentId: M:ALE.ETLBox.ConnectionManager.AdomdConnectionManager.#ctor(ALE.ETLBox.SqlConnectionString)
  fullName: ALE.ETLBox.ConnectionManager.AdomdConnectionManager.AdomdConnectionManager(ALE.ETLBox.SqlConnectionString)
  nameWithType: AdomdConnectionManager.AdomdConnectionManager(SqlConnectionString)
- uid: ALE.ETLBox.ConnectionManager.AdomdConnectionManager.#ctor(System.String)
  name: AdomdConnectionManager(String)
  href: api/ALE.ETLBox.ConnectionManager.AdomdConnectionManager.html#ALE_ETLBox_ConnectionManager_AdomdConnectionManager__ctor_System_String_
  commentId: M:ALE.ETLBox.ConnectionManager.AdomdConnectionManager.#ctor(System.String)
  fullName: ALE.ETLBox.ConnectionManager.AdomdConnectionManager.AdomdConnectionManager(System.String)
  nameWithType: AdomdConnectionManager.AdomdConnectionManager(String)
- uid: ALE.ETLBox.ConnectionManager.AdomdConnectionManager.#ctor*
  name: AdomdConnectionManager
  href: api/ALE.ETLBox.ConnectionManager.AdomdConnectionManager.html#ALE_ETLBox_ConnectionManager_AdomdConnectionManager__ctor_
  commentId: Overload:ALE.ETLBox.ConnectionManager.AdomdConnectionManager.#ctor
  isSpec: "True"
  fullName: ALE.ETLBox.ConnectionManager.AdomdConnectionManager.AdomdConnectionManager
  nameWithType: AdomdConnectionManager.AdomdConnectionManager
- uid: ALE.ETLBox.ConnectionManager.AdomdConnectionManager.AfterBulkInsert(System.String)
  name: AfterBulkInsert(String)
  href: api/ALE.ETLBox.ConnectionManager.AdomdConnectionManager.html#ALE_ETLBox_ConnectionManager_AdomdConnectionManager_AfterBulkInsert_System_String_
  commentId: M:ALE.ETLBox.ConnectionManager.AdomdConnectionManager.AfterBulkInsert(System.String)
  fullName: ALE.ETLBox.ConnectionManager.AdomdConnectionManager.AfterBulkInsert(System.String)
  nameWithType: AdomdConnectionManager.AfterBulkInsert(String)
- uid: ALE.ETLBox.ConnectionManager.AdomdConnectionManager.AfterBulkInsert*
  name: AfterBulkInsert
  href: api/ALE.ETLBox.ConnectionManager.AdomdConnectionManager.html#ALE_ETLBox_ConnectionManager_AdomdConnectionManager_AfterBulkInsert_
  commentId: Overload:ALE.ETLBox.ConnectionManager.AdomdConnectionManager.AfterBulkInsert
  isSpec: "True"
  fullName: ALE.ETLBox.ConnectionManager.AdomdConnectionManager.AfterBulkInsert
  nameWithType: AdomdConnectionManager.AfterBulkInsert
- uid: ALE.ETLBox.ConnectionManager.AdomdConnectionManager.BeforeBulkInsert(System.String)
  name: BeforeBulkInsert(String)
  href: api/ALE.ETLBox.ConnectionManager.AdomdConnectionManager.html#ALE_ETLBox_ConnectionManager_AdomdConnectionManager_BeforeBulkInsert_System_String_
  commentId: M:ALE.ETLBox.ConnectionManager.AdomdConnectionManager.BeforeBulkInsert(System.String)
  fullName: ALE.ETLBox.ConnectionManager.AdomdConnectionManager.BeforeBulkInsert(System.String)
  nameWithType: AdomdConnectionManager.BeforeBulkInsert(String)
- uid: ALE.ETLBox.ConnectionManager.AdomdConnectionManager.BeforeBulkInsert*
  name: BeforeBulkInsert
  href: api/ALE.ETLBox.ConnectionManager.AdomdConnectionManager.html#ALE_ETLBox_ConnectionManager_AdomdConnectionManager_BeforeBulkInsert_
  commentId: Overload:ALE.ETLBox.ConnectionManager.AdomdConnectionManager.BeforeBulkInsert
  isSpec: "True"
  fullName: ALE.ETLBox.ConnectionManager.AdomdConnectionManager.BeforeBulkInsert
  nameWithType: AdomdConnectionManager.BeforeBulkInsert
- uid: ALE.ETLBox.ConnectionManager.AdomdConnectionManager.BulkInsert(ALE.ETLBox.ITableData,System.String)
  name: BulkInsert(ITableData, String)
  href: api/ALE.ETLBox.ConnectionManager.AdomdConnectionManager.html#ALE_ETLBox_ConnectionManager_AdomdConnectionManager_BulkInsert_ALE_ETLBox_ITableData_System_String_
  commentId: M:ALE.ETLBox.ConnectionManager.AdomdConnectionManager.BulkInsert(ALE.ETLBox.ITableData,System.String)
  fullName: ALE.ETLBox.ConnectionManager.AdomdConnectionManager.BulkInsert(ALE.ETLBox.ITableData, System.String)
  nameWithType: AdomdConnectionManager.BulkInsert(ITableData, String)
- uid: ALE.ETLBox.ConnectionManager.AdomdConnectionManager.BulkInsert*
  name: BulkInsert
  href: api/ALE.ETLBox.ConnectionManager.AdomdConnectionManager.html#ALE_ETLBox_ConnectionManager_AdomdConnectionManager_BulkInsert_
  commentId: Overload:ALE.ETLBox.ConnectionManager.AdomdConnectionManager.BulkInsert
  isSpec: "True"
  fullName: ALE.ETLBox.ConnectionManager.AdomdConnectionManager.BulkInsert
  nameWithType: AdomdConnectionManager.BulkInsert
- uid: ALE.ETLBox.ConnectionManager.AdomdConnectionManager.Clone
  name: Clone()
  href: api/ALE.ETLBox.ConnectionManager.AdomdConnectionManager.html#ALE_ETLBox_ConnectionManager_AdomdConnectionManager_Clone
  commentId: M:ALE.ETLBox.ConnectionManager.AdomdConnectionManager.Clone
  fullName: ALE.ETLBox.ConnectionManager.AdomdConnectionManager.Clone()
  nameWithType: AdomdConnectionManager.Clone()
- uid: ALE.ETLBox.ConnectionManager.AdomdConnectionManager.Clone*
  name: Clone
  href: api/ALE.ETLBox.ConnectionManager.AdomdConnectionManager.html#ALE_ETLBox_ConnectionManager_AdomdConnectionManager_Clone_
  commentId: Overload:ALE.ETLBox.ConnectionManager.AdomdConnectionManager.Clone
  isSpec: "True"
  fullName: ALE.ETLBox.ConnectionManager.AdomdConnectionManager.Clone
  nameWithType: AdomdConnectionManager.Clone
- uid: ALE.ETLBox.ConnectionManager.ConnectionManagerSpecifics
  name: ConnectionManagerSpecifics
  href: api/ALE.ETLBox.ConnectionManager.ConnectionManagerSpecifics.html
  commentId: T:ALE.ETLBox.ConnectionManager.ConnectionManagerSpecifics
  fullName: ALE.ETLBox.ConnectionManager.ConnectionManagerSpecifics
  nameWithType: ConnectionManagerSpecifics
- uid: ALE.ETLBox.ConnectionManager.ConnectionManagerSpecifics.GetBeginQuotation(ALE.ETLBox.ConnectionManager.ConnectionManagerType)
  name: GetBeginQuotation(ConnectionManagerType)
  href: api/ALE.ETLBox.ConnectionManager.ConnectionManagerSpecifics.html#ALE_ETLBox_ConnectionManager_ConnectionManagerSpecifics_GetBeginQuotation_ALE_ETLBox_ConnectionManager_ConnectionManagerType_
  commentId: M:ALE.ETLBox.ConnectionManager.ConnectionManagerSpecifics.GetBeginQuotation(ALE.ETLBox.ConnectionManager.ConnectionManagerType)
  fullName: ALE.ETLBox.ConnectionManager.ConnectionManagerSpecifics.GetBeginQuotation(ALE.ETLBox.ConnectionManager.ConnectionManagerType)
  nameWithType: ConnectionManagerSpecifics.GetBeginQuotation(ConnectionManagerType)
- uid: ALE.ETLBox.ConnectionManager.ConnectionManagerSpecifics.GetBeginQuotation(ALE.ETLBox.ConnectionManager.IConnectionManager)
  name: GetBeginQuotation(IConnectionManager)
  href: api/ALE.ETLBox.ConnectionManager.ConnectionManagerSpecifics.html#ALE_ETLBox_ConnectionManager_ConnectionManagerSpecifics_GetBeginQuotation_ALE_ETLBox_ConnectionManager_IConnectionManager_
  commentId: M:ALE.ETLBox.ConnectionManager.ConnectionManagerSpecifics.GetBeginQuotation(ALE.ETLBox.ConnectionManager.IConnectionManager)
  fullName: ALE.ETLBox.ConnectionManager.ConnectionManagerSpecifics.GetBeginQuotation(ALE.ETLBox.ConnectionManager.IConnectionManager)
  nameWithType: ConnectionManagerSpecifics.GetBeginQuotation(IConnectionManager)
- uid: ALE.ETLBox.ConnectionManager.ConnectionManagerSpecifics.GetBeginQuotation*
  name: GetBeginQuotation
  href: api/ALE.ETLBox.ConnectionManager.ConnectionManagerSpecifics.html#ALE_ETLBox_ConnectionManager_ConnectionManagerSpecifics_GetBeginQuotation_
  commentId: Overload:ALE.ETLBox.ConnectionManager.ConnectionManagerSpecifics.GetBeginQuotation
  isSpec: "True"
  fullName: ALE.ETLBox.ConnectionManager.ConnectionManagerSpecifics.GetBeginQuotation
  nameWithType: ConnectionManagerSpecifics.GetBeginQuotation
- uid: ALE.ETLBox.ConnectionManager.ConnectionManagerSpecifics.GetEndQuotation(ALE.ETLBox.ConnectionManager.ConnectionManagerType)
  name: GetEndQuotation(ConnectionManagerType)
  href: api/ALE.ETLBox.ConnectionManager.ConnectionManagerSpecifics.html#ALE_ETLBox_ConnectionManager_ConnectionManagerSpecifics_GetEndQuotation_ALE_ETLBox_ConnectionManager_ConnectionManagerType_
  commentId: M:ALE.ETLBox.ConnectionManager.ConnectionManagerSpecifics.GetEndQuotation(ALE.ETLBox.ConnectionManager.ConnectionManagerType)
  fullName: ALE.ETLBox.ConnectionManager.ConnectionManagerSpecifics.GetEndQuotation(ALE.ETLBox.ConnectionManager.ConnectionManagerType)
  nameWithType: ConnectionManagerSpecifics.GetEndQuotation(ConnectionManagerType)
- uid: ALE.ETLBox.ConnectionManager.ConnectionManagerSpecifics.GetEndQuotation(ALE.ETLBox.ConnectionManager.IConnectionManager)
  name: GetEndQuotation(IConnectionManager)
  href: api/ALE.ETLBox.ConnectionManager.ConnectionManagerSpecifics.html#ALE_ETLBox_ConnectionManager_ConnectionManagerSpecifics_GetEndQuotation_ALE_ETLBox_ConnectionManager_IConnectionManager_
  commentId: M:ALE.ETLBox.ConnectionManager.ConnectionManagerSpecifics.GetEndQuotation(ALE.ETLBox.ConnectionManager.IConnectionManager)
  fullName: ALE.ETLBox.ConnectionManager.ConnectionManagerSpecifics.GetEndQuotation(ALE.ETLBox.ConnectionManager.IConnectionManager)
  nameWithType: ConnectionManagerSpecifics.GetEndQuotation(IConnectionManager)
- uid: ALE.ETLBox.ConnectionManager.ConnectionManagerSpecifics.GetEndQuotation*
  name: GetEndQuotation
  href: api/ALE.ETLBox.ConnectionManager.ConnectionManagerSpecifics.html#ALE_ETLBox_ConnectionManager_ConnectionManagerSpecifics_GetEndQuotation_
  commentId: Overload:ALE.ETLBox.ConnectionManager.ConnectionManagerSpecifics.GetEndQuotation
  isSpec: "True"
  fullName: ALE.ETLBox.ConnectionManager.ConnectionManagerSpecifics.GetEndQuotation
  nameWithType: ConnectionManagerSpecifics.GetEndQuotation
- uid: ALE.ETLBox.ConnectionManager.ConnectionManagerSpecifics.GetType(ALE.ETLBox.ConnectionManager.IConnectionManager)
  name: GetType(IConnectionManager)
  href: api/ALE.ETLBox.ConnectionManager.ConnectionManagerSpecifics.html#ALE_ETLBox_ConnectionManager_ConnectionManagerSpecifics_GetType_ALE_ETLBox_ConnectionManager_IConnectionManager_
  commentId: M:ALE.ETLBox.ConnectionManager.ConnectionManagerSpecifics.GetType(ALE.ETLBox.ConnectionManager.IConnectionManager)
  fullName: ALE.ETLBox.ConnectionManager.ConnectionManagerSpecifics.GetType(ALE.ETLBox.ConnectionManager.IConnectionManager)
  nameWithType: ConnectionManagerSpecifics.GetType(IConnectionManager)
- uid: ALE.ETLBox.ConnectionManager.ConnectionManagerSpecifics.GetType*
  name: GetType
  href: api/ALE.ETLBox.ConnectionManager.ConnectionManagerSpecifics.html#ALE_ETLBox_ConnectionManager_ConnectionManagerSpecifics_GetType_
  commentId: Overload:ALE.ETLBox.ConnectionManager.ConnectionManagerSpecifics.GetType
  isSpec: "True"
  fullName: ALE.ETLBox.ConnectionManager.ConnectionManagerSpecifics.GetType
  nameWithType: ConnectionManagerSpecifics.GetType
- uid: ALE.ETLBox.ConnectionManager.ConnectionManagerType
  name: ConnectionManagerType
  href: api/ALE.ETLBox.ConnectionManager.ConnectionManagerType.html
  commentId: T:ALE.ETLBox.ConnectionManager.ConnectionManagerType
  fullName: ALE.ETLBox.ConnectionManager.ConnectionManagerType
  nameWithType: ConnectionManagerType
- uid: ALE.ETLBox.ConnectionManager.ConnectionManagerType.Access
  name: Access
  href: api/ALE.ETLBox.ConnectionManager.ConnectionManagerType.html#ALE_ETLBox_ConnectionManager_ConnectionManagerType_Access
  commentId: F:ALE.ETLBox.ConnectionManager.ConnectionManagerType.Access
  fullName: ALE.ETLBox.ConnectionManager.ConnectionManagerType.Access
  nameWithType: ConnectionManagerType.Access
- uid: ALE.ETLBox.ConnectionManager.ConnectionManagerType.Adomd
  name: Adomd
  href: api/ALE.ETLBox.ConnectionManager.ConnectionManagerType.html#ALE_ETLBox_ConnectionManager_ConnectionManagerType_Adomd
  commentId: F:ALE.ETLBox.ConnectionManager.ConnectionManagerType.Adomd
  fullName: ALE.ETLBox.ConnectionManager.ConnectionManagerType.Adomd
  nameWithType: ConnectionManagerType.Adomd
- uid: ALE.ETLBox.ConnectionManager.ConnectionManagerType.MySql
  name: MySql
  href: api/ALE.ETLBox.ConnectionManager.ConnectionManagerType.html#ALE_ETLBox_ConnectionManager_ConnectionManagerType_MySql
  commentId: F:ALE.ETLBox.ConnectionManager.ConnectionManagerType.MySql
  fullName: ALE.ETLBox.ConnectionManager.ConnectionManagerType.MySql
  nameWithType: ConnectionManagerType.MySql
- uid: ALE.ETLBox.ConnectionManager.ConnectionManagerType.Postgres
  name: Postgres
  href: api/ALE.ETLBox.ConnectionManager.ConnectionManagerType.html#ALE_ETLBox_ConnectionManager_ConnectionManagerType_Postgres
  commentId: F:ALE.ETLBox.ConnectionManager.ConnectionManagerType.Postgres
  fullName: ALE.ETLBox.ConnectionManager.ConnectionManagerType.Postgres
  nameWithType: ConnectionManagerType.Postgres
- uid: ALE.ETLBox.ConnectionManager.ConnectionManagerType.SQLite
  name: SQLite
  href: api/ALE.ETLBox.ConnectionManager.ConnectionManagerType.html#ALE_ETLBox_ConnectionManager_ConnectionManagerType_SQLite
  commentId: F:ALE.ETLBox.ConnectionManager.ConnectionManagerType.SQLite
  fullName: ALE.ETLBox.ConnectionManager.ConnectionManagerType.SQLite
  nameWithType: ConnectionManagerType.SQLite
- uid: ALE.ETLBox.ConnectionManager.ConnectionManagerType.SqlServer
  name: SqlServer
  href: api/ALE.ETLBox.ConnectionManager.ConnectionManagerType.html#ALE_ETLBox_ConnectionManager_ConnectionManagerType_SqlServer
  commentId: F:ALE.ETLBox.ConnectionManager.ConnectionManagerType.SqlServer
  fullName: ALE.ETLBox.ConnectionManager.ConnectionManagerType.SqlServer
  nameWithType: ConnectionManagerType.SqlServer
- uid: ALE.ETLBox.ConnectionManager.ConnectionManagerType.Unknown
  name: Unknown
  href: api/ALE.ETLBox.ConnectionManager.ConnectionManagerType.html#ALE_ETLBox_ConnectionManager_ConnectionManagerType_Unknown
  commentId: F:ALE.ETLBox.ConnectionManager.ConnectionManagerType.Unknown
  fullName: ALE.ETLBox.ConnectionManager.ConnectionManagerType.Unknown
  nameWithType: ConnectionManagerType.Unknown
- uid: ALE.ETLBox.ConnectionManager.DataTypeConverter
  name: DataTypeConverter
  href: api/ALE.ETLBox.ConnectionManager.DataTypeConverter.html
  commentId: T:ALE.ETLBox.ConnectionManager.DataTypeConverter
  fullName: ALE.ETLBox.ConnectionManager.DataTypeConverter
  nameWithType: DataTypeConverter
- uid: ALE.ETLBox.ConnectionManager.DataTypeConverter._REGEX
  name: _REGEX
  href: api/ALE.ETLBox.ConnectionManager.DataTypeConverter.html#ALE_ETLBox_ConnectionManager_DataTypeConverter__REGEX
  commentId: F:ALE.ETLBox.ConnectionManager.DataTypeConverter._REGEX
  fullName: ALE.ETLBox.ConnectionManager.DataTypeConverter._REGEX
  nameWithType: DataTypeConverter._REGEX
- uid: ALE.ETLBox.ConnectionManager.DataTypeConverter.DefaultBigIntegerLength
  name: DefaultBigIntegerLength
  href: api/ALE.ETLBox.ConnectionManager.DataTypeConverter.html#ALE_ETLBox_ConnectionManager_DataTypeConverter_DefaultBigIntegerLength
  commentId: F:ALE.ETLBox.ConnectionManager.DataTypeConverter.DefaultBigIntegerLength
  fullName: ALE.ETLBox.ConnectionManager.DataTypeConverter.DefaultBigIntegerLength
  nameWithType: DataTypeConverter.DefaultBigIntegerLength
- uid: ALE.ETLBox.ConnectionManager.DataTypeConverter.DefaultDateTime2Length
  name: DefaultDateTime2Length
  href: api/ALE.ETLBox.ConnectionManager.DataTypeConverter.html#ALE_ETLBox_ConnectionManager_DataTypeConverter_DefaultDateTime2Length
  commentId: F:ALE.ETLBox.ConnectionManager.DataTypeConverter.DefaultDateTime2Length
  fullName: ALE.ETLBox.ConnectionManager.DataTypeConverter.DefaultDateTime2Length
  nameWithType: DataTypeConverter.DefaultDateTime2Length
- uid: ALE.ETLBox.ConnectionManager.DataTypeConverter.DefaultDateTimeLength
  name: DefaultDateTimeLength
  href: api/ALE.ETLBox.ConnectionManager.DataTypeConverter.html#ALE_ETLBox_ConnectionManager_DataTypeConverter_DefaultDateTimeLength
  commentId: F:ALE.ETLBox.ConnectionManager.DataTypeConverter.DefaultDateTimeLength
  fullName: ALE.ETLBox.ConnectionManager.DataTypeConverter.DefaultDateTimeLength
  nameWithType: DataTypeConverter.DefaultDateTimeLength
- uid: ALE.ETLBox.ConnectionManager.DataTypeConverter.DefaultDecimalLength
  name: DefaultDecimalLength
  href: api/ALE.ETLBox.ConnectionManager.DataTypeConverter.html#ALE_ETLBox_ConnectionManager_DataTypeConverter_DefaultDecimalLength
  commentId: F:ALE.ETLBox.ConnectionManager.DataTypeConverter.DefaultDecimalLength
  fullName: ALE.ETLBox.ConnectionManager.DataTypeConverter.DefaultDecimalLength
  nameWithType: DataTypeConverter.DefaultDecimalLength
- uid: ALE.ETLBox.ConnectionManager.DataTypeConverter.DefaultIntegerLength
  name: DefaultIntegerLength
  href: api/ALE.ETLBox.ConnectionManager.DataTypeConverter.html#ALE_ETLBox_ConnectionManager_DataTypeConverter_DefaultIntegerLength
  commentId: F:ALE.ETLBox.ConnectionManager.DataTypeConverter.DefaultIntegerLength
  fullName: ALE.ETLBox.ConnectionManager.DataTypeConverter.DefaultIntegerLength
  nameWithType: DataTypeConverter.DefaultIntegerLength
- uid: ALE.ETLBox.ConnectionManager.DataTypeConverter.DefaultSmallIntegerLength
  name: DefaultSmallIntegerLength
  href: api/ALE.ETLBox.ConnectionManager.DataTypeConverter.html#ALE_ETLBox_ConnectionManager_DataTypeConverter_DefaultSmallIntegerLength
  commentId: F:ALE.ETLBox.ConnectionManager.DataTypeConverter.DefaultSmallIntegerLength
  fullName: ALE.ETLBox.ConnectionManager.DataTypeConverter.DefaultSmallIntegerLength
  nameWithType: DataTypeConverter.DefaultSmallIntegerLength
- uid: ALE.ETLBox.ConnectionManager.DataTypeConverter.DefaultStringLength
  name: DefaultStringLength
  href: api/ALE.ETLBox.ConnectionManager.DataTypeConverter.html#ALE_ETLBox_ConnectionManager_DataTypeConverter_DefaultStringLength
  commentId: F:ALE.ETLBox.ConnectionManager.DataTypeConverter.DefaultStringLength
  fullName: ALE.ETLBox.ConnectionManager.DataTypeConverter.DefaultStringLength
  nameWithType: DataTypeConverter.DefaultStringLength
- uid: ALE.ETLBox.ConnectionManager.DataTypeConverter.DefaultTinyIntegerLength
  name: DefaultTinyIntegerLength
  href: api/ALE.ETLBox.ConnectionManager.DataTypeConverter.html#ALE_ETLBox_ConnectionManager_DataTypeConverter_DefaultTinyIntegerLength
  commentId: F:ALE.ETLBox.ConnectionManager.DataTypeConverter.DefaultTinyIntegerLength
  fullName: ALE.ETLBox.ConnectionManager.DataTypeConverter.DefaultTinyIntegerLength
  nameWithType: DataTypeConverter.DefaultTinyIntegerLength
- uid: ALE.ETLBox.ConnectionManager.DataTypeConverter.GetDBType(System.String)
  name: GetDBType(String)
  href: api/ALE.ETLBox.ConnectionManager.DataTypeConverter.html#ALE_ETLBox_ConnectionManager_DataTypeConverter_GetDBType_System_String_
  commentId: M:ALE.ETLBox.ConnectionManager.DataTypeConverter.GetDBType(System.String)
  fullName: ALE.ETLBox.ConnectionManager.DataTypeConverter.GetDBType(System.String)
  nameWithType: DataTypeConverter.GetDBType(String)
- uid: ALE.ETLBox.ConnectionManager.DataTypeConverter.GetDBType*
  name: GetDBType
  href: api/ALE.ETLBox.ConnectionManager.DataTypeConverter.html#ALE_ETLBox_ConnectionManager_DataTypeConverter_GetDBType_
  commentId: Overload:ALE.ETLBox.ConnectionManager.DataTypeConverter.GetDBType
  isSpec: "True"
  fullName: ALE.ETLBox.ConnectionManager.DataTypeConverter.GetDBType
  nameWithType: DataTypeConverter.GetDBType
- uid: ALE.ETLBox.ConnectionManager.DataTypeConverter.GetNETObjectTypeString(System.String)
  name: GetNETObjectTypeString(String)
  href: api/ALE.ETLBox.ConnectionManager.DataTypeConverter.html#ALE_ETLBox_ConnectionManager_DataTypeConverter_GetNETObjectTypeString_System_String_
  commentId: M:ALE.ETLBox.ConnectionManager.DataTypeConverter.GetNETObjectTypeString(System.String)
  fullName: ALE.ETLBox.ConnectionManager.DataTypeConverter.GetNETObjectTypeString(System.String)
  nameWithType: DataTypeConverter.GetNETObjectTypeString(String)
- uid: ALE.ETLBox.ConnectionManager.DataTypeConverter.GetNETObjectTypeString*
  name: GetNETObjectTypeString
  href: api/ALE.ETLBox.ConnectionManager.DataTypeConverter.html#ALE_ETLBox_ConnectionManager_DataTypeConverter_GetNETObjectTypeString_
  commentId: Overload:ALE.ETLBox.ConnectionManager.DataTypeConverter.GetNETObjectTypeString
  isSpec: "True"
  fullName: ALE.ETLBox.ConnectionManager.DataTypeConverter.GetNETObjectTypeString
  nameWithType: DataTypeConverter.GetNETObjectTypeString
- uid: ALE.ETLBox.ConnectionManager.DataTypeConverter.GetStringLengthFromCharString(System.String)
  name: GetStringLengthFromCharString(String)
  href: api/ALE.ETLBox.ConnectionManager.DataTypeConverter.html#ALE_ETLBox_ConnectionManager_DataTypeConverter_GetStringLengthFromCharString_System_String_
  commentId: M:ALE.ETLBox.ConnectionManager.DataTypeConverter.GetStringLengthFromCharString(System.String)
  fullName: ALE.ETLBox.ConnectionManager.DataTypeConverter.GetStringLengthFromCharString(System.String)
  nameWithType: DataTypeConverter.GetStringLengthFromCharString(String)
- uid: ALE.ETLBox.ConnectionManager.DataTypeConverter.GetStringLengthFromCharString*
  name: GetStringLengthFromCharString
  href: api/ALE.ETLBox.ConnectionManager.DataTypeConverter.html#ALE_ETLBox_ConnectionManager_DataTypeConverter_GetStringLengthFromCharString_
  commentId: Overload:ALE.ETLBox.ConnectionManager.DataTypeConverter.GetStringLengthFromCharString
  isSpec: "True"
  fullName: ALE.ETLBox.ConnectionManager.DataTypeConverter.GetStringLengthFromCharString
  nameWithType: DataTypeConverter.GetStringLengthFromCharString
- uid: ALE.ETLBox.ConnectionManager.DataTypeConverter.GetTypeLength(System.String)
  name: GetTypeLength(String)
  href: api/ALE.ETLBox.ConnectionManager.DataTypeConverter.html#ALE_ETLBox_ConnectionManager_DataTypeConverter_GetTypeLength_System_String_
  commentId: M:ALE.ETLBox.ConnectionManager.DataTypeConverter.GetTypeLength(System.String)
  fullName: ALE.ETLBox.ConnectionManager.DataTypeConverter.GetTypeLength(System.String)
  nameWithType: DataTypeConverter.GetTypeLength(String)
- uid: ALE.ETLBox.ConnectionManager.DataTypeConverter.GetTypeLength*
  name: GetTypeLength
  href: api/ALE.ETLBox.ConnectionManager.DataTypeConverter.html#ALE_ETLBox_ConnectionManager_DataTypeConverter_GetTypeLength_
  commentId: Overload:ALE.ETLBox.ConnectionManager.DataTypeConverter.GetTypeLength
  isSpec: "True"
  fullName: ALE.ETLBox.ConnectionManager.DataTypeConverter.GetTypeLength
  nameWithType: DataTypeConverter.GetTypeLength
- uid: ALE.ETLBox.ConnectionManager.DataTypeConverter.GetTypeObject(System.String)
  name: GetTypeObject(String)
  href: api/ALE.ETLBox.ConnectionManager.DataTypeConverter.html#ALE_ETLBox_ConnectionManager_DataTypeConverter_GetTypeObject_System_String_
  commentId: M:ALE.ETLBox.ConnectionManager.DataTypeConverter.GetTypeObject(System.String)
  fullName: ALE.ETLBox.ConnectionManager.DataTypeConverter.GetTypeObject(System.String)
  nameWithType: DataTypeConverter.GetTypeObject(String)
- uid: ALE.ETLBox.ConnectionManager.DataTypeConverter.GetTypeObject*
  name: GetTypeObject
  href: api/ALE.ETLBox.ConnectionManager.DataTypeConverter.html#ALE_ETLBox_ConnectionManager_DataTypeConverter_GetTypeObject_
  commentId: Overload:ALE.ETLBox.ConnectionManager.DataTypeConverter.GetTypeObject
  isSpec: "True"
  fullName: ALE.ETLBox.ConnectionManager.DataTypeConverter.GetTypeObject
  nameWithType: DataTypeConverter.GetTypeObject
- uid: ALE.ETLBox.ConnectionManager.DataTypeConverter.IsCharTypeDefinition(System.String)
  name: IsCharTypeDefinition(String)
  href: api/ALE.ETLBox.ConnectionManager.DataTypeConverter.html#ALE_ETLBox_ConnectionManager_DataTypeConverter_IsCharTypeDefinition_System_String_
  commentId: M:ALE.ETLBox.ConnectionManager.DataTypeConverter.IsCharTypeDefinition(System.String)
  fullName: ALE.ETLBox.ConnectionManager.DataTypeConverter.IsCharTypeDefinition(System.String)
  nameWithType: DataTypeConverter.IsCharTypeDefinition(String)
- uid: ALE.ETLBox.ConnectionManager.DataTypeConverter.IsCharTypeDefinition*
  name: IsCharTypeDefinition
  href: api/ALE.ETLBox.ConnectionManager.DataTypeConverter.html#ALE_ETLBox_ConnectionManager_DataTypeConverter_IsCharTypeDefinition_
  commentId: Overload:ALE.ETLBox.ConnectionManager.DataTypeConverter.IsCharTypeDefinition
  isSpec: "True"
  fullName: ALE.ETLBox.ConnectionManager.DataTypeConverter.IsCharTypeDefinition
  nameWithType: DataTypeConverter.IsCharTypeDefinition
- uid: ALE.ETLBox.ConnectionManager.DataTypeConverter.TryGetDBSpecificType(System.String,ALE.ETLBox.ConnectionManager.ConnectionManagerType)
  name: TryGetDBSpecificType(String, ConnectionManagerType)
  href: api/ALE.ETLBox.ConnectionManager.DataTypeConverter.html#ALE_ETLBox_ConnectionManager_DataTypeConverter_TryGetDBSpecificType_System_String_ALE_ETLBox_ConnectionManager_ConnectionManagerType_
  commentId: M:ALE.ETLBox.ConnectionManager.DataTypeConverter.TryGetDBSpecificType(System.String,ALE.ETLBox.ConnectionManager.ConnectionManagerType)
  fullName: ALE.ETLBox.ConnectionManager.DataTypeConverter.TryGetDBSpecificType(System.String, ALE.ETLBox.ConnectionManager.ConnectionManagerType)
  nameWithType: DataTypeConverter.TryGetDBSpecificType(String, ConnectionManagerType)
- uid: ALE.ETLBox.ConnectionManager.DataTypeConverter.TryGetDBSpecificType*
  name: TryGetDBSpecificType
  href: api/ALE.ETLBox.ConnectionManager.DataTypeConverter.html#ALE_ETLBox_ConnectionManager_DataTypeConverter_TryGetDBSpecificType_
  commentId: Overload:ALE.ETLBox.ConnectionManager.DataTypeConverter.TryGetDBSpecificType
  isSpec: "True"
  fullName: ALE.ETLBox.ConnectionManager.DataTypeConverter.TryGetDBSpecificType
  nameWithType: DataTypeConverter.TryGetDBSpecificType
- uid: ALE.ETLBox.ConnectionManager.DbConnectionManager`1
  name: DbConnectionManager<Connection>
  href: api/ALE.ETLBox.ConnectionManager.DbConnectionManager-1.html
  commentId: T:ALE.ETLBox.ConnectionManager.DbConnectionManager`1
  name.vb: DbConnectionManager(Of Connection)
  fullName: ALE.ETLBox.ConnectionManager.DbConnectionManager<Connection>
  fullName.vb: ALE.ETLBox.ConnectionManager.DbConnectionManager(Of Connection)
  nameWithType: DbConnectionManager<Connection>
  nameWithType.vb: DbConnectionManager(Of Connection)
- uid: ALE.ETLBox.ConnectionManager.DbConnectionManager`1.#ctor
  name: DbConnectionManager()
  href: api/ALE.ETLBox.ConnectionManager.DbConnectionManager-1.html#ALE_ETLBox_ConnectionManager_DbConnectionManager_1__ctor
  commentId: M:ALE.ETLBox.ConnectionManager.DbConnectionManager`1.#ctor
  fullName: ALE.ETLBox.ConnectionManager.DbConnectionManager<Connection>.DbConnectionManager()
  fullName.vb: ALE.ETLBox.ConnectionManager.DbConnectionManager(Of Connection).DbConnectionManager()
  nameWithType: DbConnectionManager<Connection>.DbConnectionManager()
  nameWithType.vb: DbConnectionManager(Of Connection).DbConnectionManager()
- uid: ALE.ETLBox.ConnectionManager.DbConnectionManager`1.#ctor(ALE.ETLBox.IDbConnectionString)
  name: DbConnectionManager(IDbConnectionString)
  href: api/ALE.ETLBox.ConnectionManager.DbConnectionManager-1.html#ALE_ETLBox_ConnectionManager_DbConnectionManager_1__ctor_ALE_ETLBox_IDbConnectionString_
  commentId: M:ALE.ETLBox.ConnectionManager.DbConnectionManager`1.#ctor(ALE.ETLBox.IDbConnectionString)
  fullName: ALE.ETLBox.ConnectionManager.DbConnectionManager<Connection>.DbConnectionManager(ALE.ETLBox.IDbConnectionString)
  fullName.vb: ALE.ETLBox.ConnectionManager.DbConnectionManager(Of Connection).DbConnectionManager(ALE.ETLBox.IDbConnectionString)
  nameWithType: DbConnectionManager<Connection>.DbConnectionManager(IDbConnectionString)
  nameWithType.vb: DbConnectionManager(Of Connection).DbConnectionManager(IDbConnectionString)
- uid: ALE.ETLBox.ConnectionManager.DbConnectionManager`1.#ctor*
  name: DbConnectionManager
  href: api/ALE.ETLBox.ConnectionManager.DbConnectionManager-1.html#ALE_ETLBox_ConnectionManager_DbConnectionManager_1__ctor_
  commentId: Overload:ALE.ETLBox.ConnectionManager.DbConnectionManager`1.#ctor
  isSpec: "True"
  fullName: ALE.ETLBox.ConnectionManager.DbConnectionManager<Connection>.DbConnectionManager
  fullName.vb: ALE.ETLBox.ConnectionManager.DbConnectionManager(Of Connection).DbConnectionManager
  nameWithType: DbConnectionManager<Connection>.DbConnectionManager
  nameWithType.vb: DbConnectionManager(Of Connection).DbConnectionManager
- uid: ALE.ETLBox.ConnectionManager.DbConnectionManager`1.AfterBulkInsert(System.String)
  name: AfterBulkInsert(String)
  href: api/ALE.ETLBox.ConnectionManager.DbConnectionManager-1.html#ALE_ETLBox_ConnectionManager_DbConnectionManager_1_AfterBulkInsert_System_String_
  commentId: M:ALE.ETLBox.ConnectionManager.DbConnectionManager`1.AfterBulkInsert(System.String)
  fullName: ALE.ETLBox.ConnectionManager.DbConnectionManager<Connection>.AfterBulkInsert(System.String)
  fullName.vb: ALE.ETLBox.ConnectionManager.DbConnectionManager(Of Connection).AfterBulkInsert(System.String)
  nameWithType: DbConnectionManager<Connection>.AfterBulkInsert(String)
  nameWithType.vb: DbConnectionManager(Of Connection).AfterBulkInsert(String)
- uid: ALE.ETLBox.ConnectionManager.DbConnectionManager`1.AfterBulkInsert*
  name: AfterBulkInsert
  href: api/ALE.ETLBox.ConnectionManager.DbConnectionManager-1.html#ALE_ETLBox_ConnectionManager_DbConnectionManager_1_AfterBulkInsert_
  commentId: Overload:ALE.ETLBox.ConnectionManager.DbConnectionManager`1.AfterBulkInsert
  isSpec: "True"
  fullName: ALE.ETLBox.ConnectionManager.DbConnectionManager<Connection>.AfterBulkInsert
  fullName.vb: ALE.ETLBox.ConnectionManager.DbConnectionManager(Of Connection).AfterBulkInsert
  nameWithType: DbConnectionManager<Connection>.AfterBulkInsert
  nameWithType.vb: DbConnectionManager(Of Connection).AfterBulkInsert
- uid: ALE.ETLBox.ConnectionManager.DbConnectionManager`1.BeforeBulkInsert(System.String)
  name: BeforeBulkInsert(String)
  href: api/ALE.ETLBox.ConnectionManager.DbConnectionManager-1.html#ALE_ETLBox_ConnectionManager_DbConnectionManager_1_BeforeBulkInsert_System_String_
  commentId: M:ALE.ETLBox.ConnectionManager.DbConnectionManager`1.BeforeBulkInsert(System.String)
  fullName: ALE.ETLBox.ConnectionManager.DbConnectionManager<Connection>.BeforeBulkInsert(System.String)
  fullName.vb: ALE.ETLBox.ConnectionManager.DbConnectionManager(Of Connection).BeforeBulkInsert(System.String)
  nameWithType: DbConnectionManager<Connection>.BeforeBulkInsert(String)
  nameWithType.vb: DbConnectionManager(Of Connection).BeforeBulkInsert(String)
- uid: ALE.ETLBox.ConnectionManager.DbConnectionManager`1.BeforeBulkInsert*
  name: BeforeBulkInsert
  href: api/ALE.ETLBox.ConnectionManager.DbConnectionManager-1.html#ALE_ETLBox_ConnectionManager_DbConnectionManager_1_BeforeBulkInsert_
  commentId: Overload:ALE.ETLBox.ConnectionManager.DbConnectionManager`1.BeforeBulkInsert
  isSpec: "True"
  fullName: ALE.ETLBox.ConnectionManager.DbConnectionManager<Connection>.BeforeBulkInsert
  fullName.vb: ALE.ETLBox.ConnectionManager.DbConnectionManager(Of Connection).BeforeBulkInsert
  nameWithType: DbConnectionManager<Connection>.BeforeBulkInsert
  nameWithType.vb: DbConnectionManager(Of Connection).BeforeBulkInsert
- uid: ALE.ETLBox.ConnectionManager.DbConnectionManager`1.BulkInsert(ALE.ETLBox.ITableData,System.String)
  name: BulkInsert(ITableData, String)
  href: api/ALE.ETLBox.ConnectionManager.DbConnectionManager-1.html#ALE_ETLBox_ConnectionManager_DbConnectionManager_1_BulkInsert_ALE_ETLBox_ITableData_System_String_
  commentId: M:ALE.ETLBox.ConnectionManager.DbConnectionManager`1.BulkInsert(ALE.ETLBox.ITableData,System.String)
  fullName: ALE.ETLBox.ConnectionManager.DbConnectionManager<Connection>.BulkInsert(ALE.ETLBox.ITableData, System.String)
  fullName.vb: ALE.ETLBox.ConnectionManager.DbConnectionManager(Of Connection).BulkInsert(ALE.ETLBox.ITableData, System.String)
  nameWithType: DbConnectionManager<Connection>.BulkInsert(ITableData, String)
  nameWithType.vb: DbConnectionManager(Of Connection).BulkInsert(ITableData, String)
- uid: ALE.ETLBox.ConnectionManager.DbConnectionManager`1.BulkInsert*
  name: BulkInsert
  href: api/ALE.ETLBox.ConnectionManager.DbConnectionManager-1.html#ALE_ETLBox_ConnectionManager_DbConnectionManager_1_BulkInsert_
  commentId: Overload:ALE.ETLBox.ConnectionManager.DbConnectionManager`1.BulkInsert
  isSpec: "True"
  fullName: ALE.ETLBox.ConnectionManager.DbConnectionManager<Connection>.BulkInsert
  fullName.vb: ALE.ETLBox.ConnectionManager.DbConnectionManager(Of Connection).BulkInsert
  nameWithType: DbConnectionManager<Connection>.BulkInsert
  nameWithType.vb: DbConnectionManager(Of Connection).BulkInsert
- uid: ALE.ETLBox.ConnectionManager.DbConnectionManager`1.Clone
  name: Clone()
  href: api/ALE.ETLBox.ConnectionManager.DbConnectionManager-1.html#ALE_ETLBox_ConnectionManager_DbConnectionManager_1_Clone
  commentId: M:ALE.ETLBox.ConnectionManager.DbConnectionManager`1.Clone
  fullName: ALE.ETLBox.ConnectionManager.DbConnectionManager<Connection>.Clone()
  fullName.vb: ALE.ETLBox.ConnectionManager.DbConnectionManager(Of Connection).Clone()
  nameWithType: DbConnectionManager<Connection>.Clone()
  nameWithType.vb: DbConnectionManager(Of Connection).Clone()
- uid: ALE.ETLBox.ConnectionManager.DbConnectionManager`1.Clone*
  name: Clone
  href: api/ALE.ETLBox.ConnectionManager.DbConnectionManager-1.html#ALE_ETLBox_ConnectionManager_DbConnectionManager_1_Clone_
  commentId: Overload:ALE.ETLBox.ConnectionManager.DbConnectionManager`1.Clone
  isSpec: "True"
  fullName: ALE.ETLBox.ConnectionManager.DbConnectionManager<Connection>.Clone
  fullName.vb: ALE.ETLBox.ConnectionManager.DbConnectionManager(Of Connection).Clone
  nameWithType: DbConnectionManager<Connection>.Clone
  nameWithType.vb: DbConnectionManager(Of Connection).Clone
- uid: ALE.ETLBox.ConnectionManager.DbConnectionManager`1.Close
  name: Close()
  href: api/ALE.ETLBox.ConnectionManager.DbConnectionManager-1.html#ALE_ETLBox_ConnectionManager_DbConnectionManager_1_Close
  commentId: M:ALE.ETLBox.ConnectionManager.DbConnectionManager`1.Close
  fullName: ALE.ETLBox.ConnectionManager.DbConnectionManager<Connection>.Close()
  fullName.vb: ALE.ETLBox.ConnectionManager.DbConnectionManager(Of Connection).Close()
  nameWithType: DbConnectionManager<Connection>.Close()
  nameWithType.vb: DbConnectionManager(Of Connection).Close()
- uid: ALE.ETLBox.ConnectionManager.DbConnectionManager`1.Close*
  name: Close
  href: api/ALE.ETLBox.ConnectionManager.DbConnectionManager-1.html#ALE_ETLBox_ConnectionManager_DbConnectionManager_1_Close_
  commentId: Overload:ALE.ETLBox.ConnectionManager.DbConnectionManager`1.Close
  isSpec: "True"
  fullName: ALE.ETLBox.ConnectionManager.DbConnectionManager<Connection>.Close
  fullName.vb: ALE.ETLBox.ConnectionManager.DbConnectionManager(Of Connection).Close
  nameWithType: DbConnectionManager<Connection>.Close
  nameWithType.vb: DbConnectionManager(Of Connection).Close
- uid: ALE.ETLBox.ConnectionManager.DbConnectionManager`1.ConnectionString
  name: ConnectionString
  href: api/ALE.ETLBox.ConnectionManager.DbConnectionManager-1.html#ALE_ETLBox_ConnectionManager_DbConnectionManager_1_ConnectionString
  commentId: P:ALE.ETLBox.ConnectionManager.DbConnectionManager`1.ConnectionString
  fullName: ALE.ETLBox.ConnectionManager.DbConnectionManager<Connection>.ConnectionString
  fullName.vb: ALE.ETLBox.ConnectionManager.DbConnectionManager(Of Connection).ConnectionString
  nameWithType: DbConnectionManager<Connection>.ConnectionString
  nameWithType.vb: DbConnectionManager(Of Connection).ConnectionString
- uid: ALE.ETLBox.ConnectionManager.DbConnectionManager`1.ConnectionString*
  name: ConnectionString
  href: api/ALE.ETLBox.ConnectionManager.DbConnectionManager-1.html#ALE_ETLBox_ConnectionManager_DbConnectionManager_1_ConnectionString_
  commentId: Overload:ALE.ETLBox.ConnectionManager.DbConnectionManager`1.ConnectionString
  isSpec: "True"
  fullName: ALE.ETLBox.ConnectionManager.DbConnectionManager<Connection>.ConnectionString
  fullName.vb: ALE.ETLBox.ConnectionManager.DbConnectionManager(Of Connection).ConnectionString
  nameWithType: DbConnectionManager<Connection>.ConnectionString
  nameWithType.vb: DbConnectionManager(Of Connection).ConnectionString
- uid: ALE.ETLBox.ConnectionManager.DbConnectionManager`1.CreateCommand(System.String,System.Collections.Generic.IEnumerable{ALE.ETLBox.QueryParameter})
  name: CreateCommand(String, IEnumerable<QueryParameter>)
  href: api/ALE.ETLBox.ConnectionManager.DbConnectionManager-1.html#ALE_ETLBox_ConnectionManager_DbConnectionManager_1_CreateCommand_System_String_System_Collections_Generic_IEnumerable_ALE_ETLBox_QueryParameter__
  commentId: M:ALE.ETLBox.ConnectionManager.DbConnectionManager`1.CreateCommand(System.String,System.Collections.Generic.IEnumerable{ALE.ETLBox.QueryParameter})
  name.vb: CreateCommand(String, IEnumerable(Of QueryParameter))
  fullName: ALE.ETLBox.ConnectionManager.DbConnectionManager<Connection>.CreateCommand(System.String, System.Collections.Generic.IEnumerable<ALE.ETLBox.QueryParameter>)
  fullName.vb: ALE.ETLBox.ConnectionManager.DbConnectionManager(Of Connection).CreateCommand(System.String, System.Collections.Generic.IEnumerable(Of ALE.ETLBox.QueryParameter))
  nameWithType: DbConnectionManager<Connection>.CreateCommand(String, IEnumerable<QueryParameter>)
  nameWithType.vb: DbConnectionManager(Of Connection).CreateCommand(String, IEnumerable(Of QueryParameter))
- uid: ALE.ETLBox.ConnectionManager.DbConnectionManager`1.CreateCommand*
  name: CreateCommand
  href: api/ALE.ETLBox.ConnectionManager.DbConnectionManager-1.html#ALE_ETLBox_ConnectionManager_DbConnectionManager_1_CreateCommand_
  commentId: Overload:ALE.ETLBox.ConnectionManager.DbConnectionManager`1.CreateCommand
  isSpec: "True"
  fullName: ALE.ETLBox.ConnectionManager.DbConnectionManager<Connection>.CreateCommand
  fullName.vb: ALE.ETLBox.ConnectionManager.DbConnectionManager(Of Connection).CreateCommand
  nameWithType: DbConnectionManager<Connection>.CreateCommand
  nameWithType.vb: DbConnectionManager(Of Connection).CreateCommand
- uid: ALE.ETLBox.ConnectionManager.DbConnectionManager`1.Dispose
  name: Dispose()
  href: api/ALE.ETLBox.ConnectionManager.DbConnectionManager-1.html#ALE_ETLBox_ConnectionManager_DbConnectionManager_1_Dispose
  commentId: M:ALE.ETLBox.ConnectionManager.DbConnectionManager`1.Dispose
  fullName: ALE.ETLBox.ConnectionManager.DbConnectionManager<Connection>.Dispose()
  fullName.vb: ALE.ETLBox.ConnectionManager.DbConnectionManager(Of Connection).Dispose()
  nameWithType: DbConnectionManager<Connection>.Dispose()
  nameWithType.vb: DbConnectionManager(Of Connection).Dispose()
- uid: ALE.ETLBox.ConnectionManager.DbConnectionManager`1.Dispose(System.Boolean)
  name: Dispose(Boolean)
  href: api/ALE.ETLBox.ConnectionManager.DbConnectionManager-1.html#ALE_ETLBox_ConnectionManager_DbConnectionManager_1_Dispose_System_Boolean_
  commentId: M:ALE.ETLBox.ConnectionManager.DbConnectionManager`1.Dispose(System.Boolean)
  fullName: ALE.ETLBox.ConnectionManager.DbConnectionManager<Connection>.Dispose(System.Boolean)
  fullName.vb: ALE.ETLBox.ConnectionManager.DbConnectionManager(Of Connection).Dispose(System.Boolean)
  nameWithType: DbConnectionManager<Connection>.Dispose(Boolean)
  nameWithType.vb: DbConnectionManager(Of Connection).Dispose(Boolean)
- uid: ALE.ETLBox.ConnectionManager.DbConnectionManager`1.Dispose*
  name: Dispose
  href: api/ALE.ETLBox.ConnectionManager.DbConnectionManager-1.html#ALE_ETLBox_ConnectionManager_DbConnectionManager_1_Dispose_
  commentId: Overload:ALE.ETLBox.ConnectionManager.DbConnectionManager`1.Dispose
  isSpec: "True"
  fullName: ALE.ETLBox.ConnectionManager.DbConnectionManager<Connection>.Dispose
  fullName.vb: ALE.ETLBox.ConnectionManager.DbConnectionManager(Of Connection).Dispose
  nameWithType: DbConnectionManager<Connection>.Dispose
  nameWithType.vb: DbConnectionManager(Of Connection).Dispose
- uid: ALE.ETLBox.ConnectionManager.DbConnectionManager`1.ExecuteNonQuery(System.String,System.Collections.Generic.IEnumerable{ALE.ETLBox.QueryParameter})
  name: ExecuteNonQuery(String, IEnumerable<QueryParameter>)
  href: api/ALE.ETLBox.ConnectionManager.DbConnectionManager-1.html#ALE_ETLBox_ConnectionManager_DbConnectionManager_1_ExecuteNonQuery_System_String_System_Collections_Generic_IEnumerable_ALE_ETLBox_QueryParameter__
  commentId: M:ALE.ETLBox.ConnectionManager.DbConnectionManager`1.ExecuteNonQuery(System.String,System.Collections.Generic.IEnumerable{ALE.ETLBox.QueryParameter})
  name.vb: ExecuteNonQuery(String, IEnumerable(Of QueryParameter))
  fullName: ALE.ETLBox.ConnectionManager.DbConnectionManager<Connection>.ExecuteNonQuery(System.String, System.Collections.Generic.IEnumerable<ALE.ETLBox.QueryParameter>)
  fullName.vb: ALE.ETLBox.ConnectionManager.DbConnectionManager(Of Connection).ExecuteNonQuery(System.String, System.Collections.Generic.IEnumerable(Of ALE.ETLBox.QueryParameter))
  nameWithType: DbConnectionManager<Connection>.ExecuteNonQuery(String, IEnumerable<QueryParameter>)
  nameWithType.vb: DbConnectionManager(Of Connection).ExecuteNonQuery(String, IEnumerable(Of QueryParameter))
- uid: ALE.ETLBox.ConnectionManager.DbConnectionManager`1.ExecuteNonQuery*
  name: ExecuteNonQuery
  href: api/ALE.ETLBox.ConnectionManager.DbConnectionManager-1.html#ALE_ETLBox_ConnectionManager_DbConnectionManager_1_ExecuteNonQuery_
  commentId: Overload:ALE.ETLBox.ConnectionManager.DbConnectionManager`1.ExecuteNonQuery
  isSpec: "True"
  fullName: ALE.ETLBox.ConnectionManager.DbConnectionManager<Connection>.ExecuteNonQuery
  fullName.vb: ALE.ETLBox.ConnectionManager.DbConnectionManager(Of Connection).ExecuteNonQuery
  nameWithType: DbConnectionManager<Connection>.ExecuteNonQuery
  nameWithType.vb: DbConnectionManager(Of Connection).ExecuteNonQuery
- uid: ALE.ETLBox.ConnectionManager.DbConnectionManager`1.ExecuteReader(System.String,System.Collections.Generic.IEnumerable{ALE.ETLBox.QueryParameter})
  name: ExecuteReader(String, IEnumerable<QueryParameter>)
  href: api/ALE.ETLBox.ConnectionManager.DbConnectionManager-1.html#ALE_ETLBox_ConnectionManager_DbConnectionManager_1_ExecuteReader_System_String_System_Collections_Generic_IEnumerable_ALE_ETLBox_QueryParameter__
  commentId: M:ALE.ETLBox.ConnectionManager.DbConnectionManager`1.ExecuteReader(System.String,System.Collections.Generic.IEnumerable{ALE.ETLBox.QueryParameter})
  name.vb: ExecuteReader(String, IEnumerable(Of QueryParameter))
  fullName: ALE.ETLBox.ConnectionManager.DbConnectionManager<Connection>.ExecuteReader(System.String, System.Collections.Generic.IEnumerable<ALE.ETLBox.QueryParameter>)
  fullName.vb: ALE.ETLBox.ConnectionManager.DbConnectionManager(Of Connection).ExecuteReader(System.String, System.Collections.Generic.IEnumerable(Of ALE.ETLBox.QueryParameter))
  nameWithType: DbConnectionManager<Connection>.ExecuteReader(String, IEnumerable<QueryParameter>)
  nameWithType.vb: DbConnectionManager(Of Connection).ExecuteReader(String, IEnumerable(Of QueryParameter))
- uid: ALE.ETLBox.ConnectionManager.DbConnectionManager`1.ExecuteReader*
  name: ExecuteReader
  href: api/ALE.ETLBox.ConnectionManager.DbConnectionManager-1.html#ALE_ETLBox_ConnectionManager_DbConnectionManager_1_ExecuteReader_
  commentId: Overload:ALE.ETLBox.ConnectionManager.DbConnectionManager`1.ExecuteReader
  isSpec: "True"
  fullName: ALE.ETLBox.ConnectionManager.DbConnectionManager<Connection>.ExecuteReader
  fullName.vb: ALE.ETLBox.ConnectionManager.DbConnectionManager(Of Connection).ExecuteReader
  nameWithType: DbConnectionManager<Connection>.ExecuteReader
  nameWithType.vb: DbConnectionManager(Of Connection).ExecuteReader
- uid: ALE.ETLBox.ConnectionManager.DbConnectionManager`1.ExecuteScalar(System.String,System.Collections.Generic.IEnumerable{ALE.ETLBox.QueryParameter})
  name: ExecuteScalar(String, IEnumerable<QueryParameter>)
  href: api/ALE.ETLBox.ConnectionManager.DbConnectionManager-1.html#ALE_ETLBox_ConnectionManager_DbConnectionManager_1_ExecuteScalar_System_String_System_Collections_Generic_IEnumerable_ALE_ETLBox_QueryParameter__
  commentId: M:ALE.ETLBox.ConnectionManager.DbConnectionManager`1.ExecuteScalar(System.String,System.Collections.Generic.IEnumerable{ALE.ETLBox.QueryParameter})
  name.vb: ExecuteScalar(String, IEnumerable(Of QueryParameter))
  fullName: ALE.ETLBox.ConnectionManager.DbConnectionManager<Connection>.ExecuteScalar(System.String, System.Collections.Generic.IEnumerable<ALE.ETLBox.QueryParameter>)
  fullName.vb: ALE.ETLBox.ConnectionManager.DbConnectionManager(Of Connection).ExecuteScalar(System.String, System.Collections.Generic.IEnumerable(Of ALE.ETLBox.QueryParameter))
  nameWithType: DbConnectionManager<Connection>.ExecuteScalar(String, IEnumerable<QueryParameter>)
  nameWithType.vb: DbConnectionManager(Of Connection).ExecuteScalar(String, IEnumerable(Of QueryParameter))
- uid: ALE.ETLBox.ConnectionManager.DbConnectionManager`1.ExecuteScalar*
  name: ExecuteScalar
  href: api/ALE.ETLBox.ConnectionManager.DbConnectionManager-1.html#ALE_ETLBox_ConnectionManager_DbConnectionManager_1_ExecuteScalar_
  commentId: Overload:ALE.ETLBox.ConnectionManager.DbConnectionManager`1.ExecuteScalar
  isSpec: "True"
  fullName: ALE.ETLBox.ConnectionManager.DbConnectionManager<Connection>.ExecuteScalar
  fullName.vb: ALE.ETLBox.ConnectionManager.DbConnectionManager(Of Connection).ExecuteScalar
  nameWithType: DbConnectionManager<Connection>.ExecuteScalar
  nameWithType.vb: DbConnectionManager(Of Connection).ExecuteScalar
- uid: ALE.ETLBox.ConnectionManager.DbConnectionManager`1.LeaveOpen
  name: LeaveOpen
  href: api/ALE.ETLBox.ConnectionManager.DbConnectionManager-1.html#ALE_ETLBox_ConnectionManager_DbConnectionManager_1_LeaveOpen
  commentId: P:ALE.ETLBox.ConnectionManager.DbConnectionManager`1.LeaveOpen
  fullName: ALE.ETLBox.ConnectionManager.DbConnectionManager<Connection>.LeaveOpen
  fullName.vb: ALE.ETLBox.ConnectionManager.DbConnectionManager(Of Connection).LeaveOpen
  nameWithType: DbConnectionManager<Connection>.LeaveOpen
  nameWithType.vb: DbConnectionManager(Of Connection).LeaveOpen
- uid: ALE.ETLBox.ConnectionManager.DbConnectionManager`1.LeaveOpen*
  name: LeaveOpen
  href: api/ALE.ETLBox.ConnectionManager.DbConnectionManager-1.html#ALE_ETLBox_ConnectionManager_DbConnectionManager_1_LeaveOpen_
  commentId: Overload:ALE.ETLBox.ConnectionManager.DbConnectionManager`1.LeaveOpen
  isSpec: "True"
  fullName: ALE.ETLBox.ConnectionManager.DbConnectionManager<Connection>.LeaveOpen
  fullName.vb: ALE.ETLBox.ConnectionManager.DbConnectionManager(Of Connection).LeaveOpen
  nameWithType: DbConnectionManager<Connection>.LeaveOpen
  nameWithType.vb: DbConnectionManager(Of Connection).LeaveOpen
- uid: ALE.ETLBox.ConnectionManager.DbConnectionManager`1.MaxLoginAttempts
  name: MaxLoginAttempts
  href: api/ALE.ETLBox.ConnectionManager.DbConnectionManager-1.html#ALE_ETLBox_ConnectionManager_DbConnectionManager_1_MaxLoginAttempts
  commentId: P:ALE.ETLBox.ConnectionManager.DbConnectionManager`1.MaxLoginAttempts
  fullName: ALE.ETLBox.ConnectionManager.DbConnectionManager<Connection>.MaxLoginAttempts
  fullName.vb: ALE.ETLBox.ConnectionManager.DbConnectionManager(Of Connection).MaxLoginAttempts
  nameWithType: DbConnectionManager<Connection>.MaxLoginAttempts
  nameWithType.vb: DbConnectionManager(Of Connection).MaxLoginAttempts
- uid: ALE.ETLBox.ConnectionManager.DbConnectionManager`1.MaxLoginAttempts*
  name: MaxLoginAttempts
  href: api/ALE.ETLBox.ConnectionManager.DbConnectionManager-1.html#ALE_ETLBox_ConnectionManager_DbConnectionManager_1_MaxLoginAttempts_
  commentId: Overload:ALE.ETLBox.ConnectionManager.DbConnectionManager`1.MaxLoginAttempts
  isSpec: "True"
  fullName: ALE.ETLBox.ConnectionManager.DbConnectionManager<Connection>.MaxLoginAttempts
  fullName.vb: ALE.ETLBox.ConnectionManager.DbConnectionManager(Of Connection).MaxLoginAttempts
  nameWithType: DbConnectionManager<Connection>.MaxLoginAttempts
  nameWithType.vb: DbConnectionManager(Of Connection).MaxLoginAttempts
- uid: ALE.ETLBox.ConnectionManager.DbConnectionManager`1.Open
  name: Open()
  href: api/ALE.ETLBox.ConnectionManager.DbConnectionManager-1.html#ALE_ETLBox_ConnectionManager_DbConnectionManager_1_Open
  commentId: M:ALE.ETLBox.ConnectionManager.DbConnectionManager`1.Open
  fullName: ALE.ETLBox.ConnectionManager.DbConnectionManager<Connection>.Open()
  fullName.vb: ALE.ETLBox.ConnectionManager.DbConnectionManager(Of Connection).Open()
  nameWithType: DbConnectionManager<Connection>.Open()
  nameWithType.vb: DbConnectionManager(Of Connection).Open()
- uid: ALE.ETLBox.ConnectionManager.DbConnectionManager`1.Open*
  name: Open
  href: api/ALE.ETLBox.ConnectionManager.DbConnectionManager-1.html#ALE_ETLBox_ConnectionManager_DbConnectionManager_1_Open_
  commentId: Overload:ALE.ETLBox.ConnectionManager.DbConnectionManager`1.Open
  isSpec: "True"
  fullName: ALE.ETLBox.ConnectionManager.DbConnectionManager<Connection>.Open
  fullName.vb: ALE.ETLBox.ConnectionManager.DbConnectionManager(Of Connection).Open
  nameWithType: DbConnectionManager<Connection>.Open
  nameWithType.vb: DbConnectionManager(Of Connection).Open
- uid: ALE.ETLBox.ConnectionManager.DbConnectionManager`1.State
  name: State
  href: api/ALE.ETLBox.ConnectionManager.DbConnectionManager-1.html#ALE_ETLBox_ConnectionManager_DbConnectionManager_1_State
  commentId: P:ALE.ETLBox.ConnectionManager.DbConnectionManager`1.State
  fullName: ALE.ETLBox.ConnectionManager.DbConnectionManager<Connection>.State
  fullName.vb: ALE.ETLBox.ConnectionManager.DbConnectionManager(Of Connection).State
  nameWithType: DbConnectionManager<Connection>.State
  nameWithType.vb: DbConnectionManager(Of Connection).State
- uid: ALE.ETLBox.ConnectionManager.DbConnectionManager`1.State*
  name: State
  href: api/ALE.ETLBox.ConnectionManager.DbConnectionManager-1.html#ALE_ETLBox_ConnectionManager_DbConnectionManager_1_State_
  commentId: Overload:ALE.ETLBox.ConnectionManager.DbConnectionManager`1.State
  isSpec: "True"
  fullName: ALE.ETLBox.ConnectionManager.DbConnectionManager<Connection>.State
  fullName.vb: ALE.ETLBox.ConnectionManager.DbConnectionManager(Of Connection).State
  nameWithType: DbConnectionManager<Connection>.State
  nameWithType.vb: DbConnectionManager(Of Connection).State
- uid: ALE.ETLBox.ConnectionManager.IConnectionManager
  name: IConnectionManager
  href: api/ALE.ETLBox.ConnectionManager.IConnectionManager.html
  commentId: T:ALE.ETLBox.ConnectionManager.IConnectionManager
  fullName: ALE.ETLBox.ConnectionManager.IConnectionManager
  nameWithType: IConnectionManager
- uid: ALE.ETLBox.ConnectionManager.IConnectionManager.AfterBulkInsert(System.String)
  name: AfterBulkInsert(String)
  href: api/ALE.ETLBox.ConnectionManager.IConnectionManager.html#ALE_ETLBox_ConnectionManager_IConnectionManager_AfterBulkInsert_System_String_
  commentId: M:ALE.ETLBox.ConnectionManager.IConnectionManager.AfterBulkInsert(System.String)
  fullName: ALE.ETLBox.ConnectionManager.IConnectionManager.AfterBulkInsert(System.String)
  nameWithType: IConnectionManager.AfterBulkInsert(String)
- uid: ALE.ETLBox.ConnectionManager.IConnectionManager.AfterBulkInsert*
  name: AfterBulkInsert
  href: api/ALE.ETLBox.ConnectionManager.IConnectionManager.html#ALE_ETLBox_ConnectionManager_IConnectionManager_AfterBulkInsert_
  commentId: Overload:ALE.ETLBox.ConnectionManager.IConnectionManager.AfterBulkInsert
  isSpec: "True"
  fullName: ALE.ETLBox.ConnectionManager.IConnectionManager.AfterBulkInsert
  nameWithType: IConnectionManager.AfterBulkInsert
- uid: ALE.ETLBox.ConnectionManager.IConnectionManager.BeforeBulkInsert(System.String)
  name: BeforeBulkInsert(String)
  href: api/ALE.ETLBox.ConnectionManager.IConnectionManager.html#ALE_ETLBox_ConnectionManager_IConnectionManager_BeforeBulkInsert_System_String_
  commentId: M:ALE.ETLBox.ConnectionManager.IConnectionManager.BeforeBulkInsert(System.String)
  fullName: ALE.ETLBox.ConnectionManager.IConnectionManager.BeforeBulkInsert(System.String)
  nameWithType: IConnectionManager.BeforeBulkInsert(String)
- uid: ALE.ETLBox.ConnectionManager.IConnectionManager.BeforeBulkInsert*
  name: BeforeBulkInsert
  href: api/ALE.ETLBox.ConnectionManager.IConnectionManager.html#ALE_ETLBox_ConnectionManager_IConnectionManager_BeforeBulkInsert_
  commentId: Overload:ALE.ETLBox.ConnectionManager.IConnectionManager.BeforeBulkInsert
  isSpec: "True"
  fullName: ALE.ETLBox.ConnectionManager.IConnectionManager.BeforeBulkInsert
  nameWithType: IConnectionManager.BeforeBulkInsert
- uid: ALE.ETLBox.ConnectionManager.IConnectionManager.BulkInsert(ALE.ETLBox.ITableData,System.String)
  name: BulkInsert(ITableData, String)
  href: api/ALE.ETLBox.ConnectionManager.IConnectionManager.html#ALE_ETLBox_ConnectionManager_IConnectionManager_BulkInsert_ALE_ETLBox_ITableData_System_String_
  commentId: M:ALE.ETLBox.ConnectionManager.IConnectionManager.BulkInsert(ALE.ETLBox.ITableData,System.String)
  fullName: ALE.ETLBox.ConnectionManager.IConnectionManager.BulkInsert(ALE.ETLBox.ITableData, System.String)
  nameWithType: IConnectionManager.BulkInsert(ITableData, String)
- uid: ALE.ETLBox.ConnectionManager.IConnectionManager.BulkInsert*
  name: BulkInsert
  href: api/ALE.ETLBox.ConnectionManager.IConnectionManager.html#ALE_ETLBox_ConnectionManager_IConnectionManager_BulkInsert_
  commentId: Overload:ALE.ETLBox.ConnectionManager.IConnectionManager.BulkInsert
  isSpec: "True"
  fullName: ALE.ETLBox.ConnectionManager.IConnectionManager.BulkInsert
  nameWithType: IConnectionManager.BulkInsert
- uid: ALE.ETLBox.ConnectionManager.IConnectionManager.Clone
  name: Clone()
  href: api/ALE.ETLBox.ConnectionManager.IConnectionManager.html#ALE_ETLBox_ConnectionManager_IConnectionManager_Clone
  commentId: M:ALE.ETLBox.ConnectionManager.IConnectionManager.Clone
  fullName: ALE.ETLBox.ConnectionManager.IConnectionManager.Clone()
  nameWithType: IConnectionManager.Clone()
- uid: ALE.ETLBox.ConnectionManager.IConnectionManager.Clone*
  name: Clone
  href: api/ALE.ETLBox.ConnectionManager.IConnectionManager.html#ALE_ETLBox_ConnectionManager_IConnectionManager_Clone_
  commentId: Overload:ALE.ETLBox.ConnectionManager.IConnectionManager.Clone
  isSpec: "True"
  fullName: ALE.ETLBox.ConnectionManager.IConnectionManager.Clone
  nameWithType: IConnectionManager.Clone
- uid: ALE.ETLBox.ConnectionManager.IConnectionManager.Close
  name: Close()
  href: api/ALE.ETLBox.ConnectionManager.IConnectionManager.html#ALE_ETLBox_ConnectionManager_IConnectionManager_Close
  commentId: M:ALE.ETLBox.ConnectionManager.IConnectionManager.Close
  fullName: ALE.ETLBox.ConnectionManager.IConnectionManager.Close()
  nameWithType: IConnectionManager.Close()
- uid: ALE.ETLBox.ConnectionManager.IConnectionManager.Close*
  name: Close
  href: api/ALE.ETLBox.ConnectionManager.IConnectionManager.html#ALE_ETLBox_ConnectionManager_IConnectionManager_Close_
  commentId: Overload:ALE.ETLBox.ConnectionManager.IConnectionManager.Close
  isSpec: "True"
  fullName: ALE.ETLBox.ConnectionManager.IConnectionManager.Close
  nameWithType: IConnectionManager.Close
- uid: ALE.ETLBox.ConnectionManager.IConnectionManager.ConnectionString
  name: ConnectionString
  href: api/ALE.ETLBox.ConnectionManager.IConnectionManager.html#ALE_ETLBox_ConnectionManager_IConnectionManager_ConnectionString
  commentId: P:ALE.ETLBox.ConnectionManager.IConnectionManager.ConnectionString
  fullName: ALE.ETLBox.ConnectionManager.IConnectionManager.ConnectionString
  nameWithType: IConnectionManager.ConnectionString
- uid: ALE.ETLBox.ConnectionManager.IConnectionManager.ConnectionString*
  name: ConnectionString
  href: api/ALE.ETLBox.ConnectionManager.IConnectionManager.html#ALE_ETLBox_ConnectionManager_IConnectionManager_ConnectionString_
  commentId: Overload:ALE.ETLBox.ConnectionManager.IConnectionManager.ConnectionString
  isSpec: "True"
  fullName: ALE.ETLBox.ConnectionManager.IConnectionManager.ConnectionString
  nameWithType: IConnectionManager.ConnectionString
- uid: ALE.ETLBox.ConnectionManager.IConnectionManager.CreateCommand(System.String,System.Collections.Generic.IEnumerable{ALE.ETLBox.QueryParameter})
  name: CreateCommand(String, IEnumerable<QueryParameter>)
  href: api/ALE.ETLBox.ConnectionManager.IConnectionManager.html#ALE_ETLBox_ConnectionManager_IConnectionManager_CreateCommand_System_String_System_Collections_Generic_IEnumerable_ALE_ETLBox_QueryParameter__
  commentId: M:ALE.ETLBox.ConnectionManager.IConnectionManager.CreateCommand(System.String,System.Collections.Generic.IEnumerable{ALE.ETLBox.QueryParameter})
  name.vb: CreateCommand(String, IEnumerable(Of QueryParameter))
  fullName: ALE.ETLBox.ConnectionManager.IConnectionManager.CreateCommand(System.String, System.Collections.Generic.IEnumerable<ALE.ETLBox.QueryParameter>)
  fullName.vb: ALE.ETLBox.ConnectionManager.IConnectionManager.CreateCommand(System.String, System.Collections.Generic.IEnumerable(Of ALE.ETLBox.QueryParameter))
  nameWithType: IConnectionManager.CreateCommand(String, IEnumerable<QueryParameter>)
  nameWithType.vb: IConnectionManager.CreateCommand(String, IEnumerable(Of QueryParameter))
- uid: ALE.ETLBox.ConnectionManager.IConnectionManager.CreateCommand*
  name: CreateCommand
  href: api/ALE.ETLBox.ConnectionManager.IConnectionManager.html#ALE_ETLBox_ConnectionManager_IConnectionManager_CreateCommand_
  commentId: Overload:ALE.ETLBox.ConnectionManager.IConnectionManager.CreateCommand
  isSpec: "True"
  fullName: ALE.ETLBox.ConnectionManager.IConnectionManager.CreateCommand
  nameWithType: IConnectionManager.CreateCommand
- uid: ALE.ETLBox.ConnectionManager.IConnectionManager.ExecuteNonQuery(System.String,System.Collections.Generic.IEnumerable{ALE.ETLBox.QueryParameter})
  name: ExecuteNonQuery(String, IEnumerable<QueryParameter>)
  href: api/ALE.ETLBox.ConnectionManager.IConnectionManager.html#ALE_ETLBox_ConnectionManager_IConnectionManager_ExecuteNonQuery_System_String_System_Collections_Generic_IEnumerable_ALE_ETLBox_QueryParameter__
  commentId: M:ALE.ETLBox.ConnectionManager.IConnectionManager.ExecuteNonQuery(System.String,System.Collections.Generic.IEnumerable{ALE.ETLBox.QueryParameter})
  name.vb: ExecuteNonQuery(String, IEnumerable(Of QueryParameter))
  fullName: ALE.ETLBox.ConnectionManager.IConnectionManager.ExecuteNonQuery(System.String, System.Collections.Generic.IEnumerable<ALE.ETLBox.QueryParameter>)
  fullName.vb: ALE.ETLBox.ConnectionManager.IConnectionManager.ExecuteNonQuery(System.String, System.Collections.Generic.IEnumerable(Of ALE.ETLBox.QueryParameter))
  nameWithType: IConnectionManager.ExecuteNonQuery(String, IEnumerable<QueryParameter>)
  nameWithType.vb: IConnectionManager.ExecuteNonQuery(String, IEnumerable(Of QueryParameter))
- uid: ALE.ETLBox.ConnectionManager.IConnectionManager.ExecuteNonQuery*
  name: ExecuteNonQuery
  href: api/ALE.ETLBox.ConnectionManager.IConnectionManager.html#ALE_ETLBox_ConnectionManager_IConnectionManager_ExecuteNonQuery_
  commentId: Overload:ALE.ETLBox.ConnectionManager.IConnectionManager.ExecuteNonQuery
  isSpec: "True"
  fullName: ALE.ETLBox.ConnectionManager.IConnectionManager.ExecuteNonQuery
  nameWithType: IConnectionManager.ExecuteNonQuery
- uid: ALE.ETLBox.ConnectionManager.IConnectionManager.ExecuteReader(System.String,System.Collections.Generic.IEnumerable{ALE.ETLBox.QueryParameter})
  name: ExecuteReader(String, IEnumerable<QueryParameter>)
  href: api/ALE.ETLBox.ConnectionManager.IConnectionManager.html#ALE_ETLBox_ConnectionManager_IConnectionManager_ExecuteReader_System_String_System_Collections_Generic_IEnumerable_ALE_ETLBox_QueryParameter__
  commentId: M:ALE.ETLBox.ConnectionManager.IConnectionManager.ExecuteReader(System.String,System.Collections.Generic.IEnumerable{ALE.ETLBox.QueryParameter})
  name.vb: ExecuteReader(String, IEnumerable(Of QueryParameter))
  fullName: ALE.ETLBox.ConnectionManager.IConnectionManager.ExecuteReader(System.String, System.Collections.Generic.IEnumerable<ALE.ETLBox.QueryParameter>)
  fullName.vb: ALE.ETLBox.ConnectionManager.IConnectionManager.ExecuteReader(System.String, System.Collections.Generic.IEnumerable(Of ALE.ETLBox.QueryParameter))
  nameWithType: IConnectionManager.ExecuteReader(String, IEnumerable<QueryParameter>)
  nameWithType.vb: IConnectionManager.ExecuteReader(String, IEnumerable(Of QueryParameter))
- uid: ALE.ETLBox.ConnectionManager.IConnectionManager.ExecuteReader*
  name: ExecuteReader
  href: api/ALE.ETLBox.ConnectionManager.IConnectionManager.html#ALE_ETLBox_ConnectionManager_IConnectionManager_ExecuteReader_
  commentId: Overload:ALE.ETLBox.ConnectionManager.IConnectionManager.ExecuteReader
  isSpec: "True"
  fullName: ALE.ETLBox.ConnectionManager.IConnectionManager.ExecuteReader
  nameWithType: IConnectionManager.ExecuteReader
- uid: ALE.ETLBox.ConnectionManager.IConnectionManager.ExecuteScalar(System.String,System.Collections.Generic.IEnumerable{ALE.ETLBox.QueryParameter})
  name: ExecuteScalar(String, IEnumerable<QueryParameter>)
  href: api/ALE.ETLBox.ConnectionManager.IConnectionManager.html#ALE_ETLBox_ConnectionManager_IConnectionManager_ExecuteScalar_System_String_System_Collections_Generic_IEnumerable_ALE_ETLBox_QueryParameter__
  commentId: M:ALE.ETLBox.ConnectionManager.IConnectionManager.ExecuteScalar(System.String,System.Collections.Generic.IEnumerable{ALE.ETLBox.QueryParameter})
  name.vb: ExecuteScalar(String, IEnumerable(Of QueryParameter))
  fullName: ALE.ETLBox.ConnectionManager.IConnectionManager.ExecuteScalar(System.String, System.Collections.Generic.IEnumerable<ALE.ETLBox.QueryParameter>)
  fullName.vb: ALE.ETLBox.ConnectionManager.IConnectionManager.ExecuteScalar(System.String, System.Collections.Generic.IEnumerable(Of ALE.ETLBox.QueryParameter))
  nameWithType: IConnectionManager.ExecuteScalar(String, IEnumerable<QueryParameter>)
  nameWithType.vb: IConnectionManager.ExecuteScalar(String, IEnumerable(Of QueryParameter))
- uid: ALE.ETLBox.ConnectionManager.IConnectionManager.ExecuteScalar*
  name: ExecuteScalar
  href: api/ALE.ETLBox.ConnectionManager.IConnectionManager.html#ALE_ETLBox_ConnectionManager_IConnectionManager_ExecuteScalar_
  commentId: Overload:ALE.ETLBox.ConnectionManager.IConnectionManager.ExecuteScalar
  isSpec: "True"
  fullName: ALE.ETLBox.ConnectionManager.IConnectionManager.ExecuteScalar
  nameWithType: IConnectionManager.ExecuteScalar
- uid: ALE.ETLBox.ConnectionManager.IConnectionManager.LeaveOpen
  name: LeaveOpen
  href: api/ALE.ETLBox.ConnectionManager.IConnectionManager.html#ALE_ETLBox_ConnectionManager_IConnectionManager_LeaveOpen
  commentId: P:ALE.ETLBox.ConnectionManager.IConnectionManager.LeaveOpen
  fullName: ALE.ETLBox.ConnectionManager.IConnectionManager.LeaveOpen
  nameWithType: IConnectionManager.LeaveOpen
- uid: ALE.ETLBox.ConnectionManager.IConnectionManager.LeaveOpen*
  name: LeaveOpen
  href: api/ALE.ETLBox.ConnectionManager.IConnectionManager.html#ALE_ETLBox_ConnectionManager_IConnectionManager_LeaveOpen_
  commentId: Overload:ALE.ETLBox.ConnectionManager.IConnectionManager.LeaveOpen
  isSpec: "True"
  fullName: ALE.ETLBox.ConnectionManager.IConnectionManager.LeaveOpen
  nameWithType: IConnectionManager.LeaveOpen
- uid: ALE.ETLBox.ConnectionManager.IConnectionManager.Open
  name: Open()
  href: api/ALE.ETLBox.ConnectionManager.IConnectionManager.html#ALE_ETLBox_ConnectionManager_IConnectionManager_Open
  commentId: M:ALE.ETLBox.ConnectionManager.IConnectionManager.Open
  fullName: ALE.ETLBox.ConnectionManager.IConnectionManager.Open()
  nameWithType: IConnectionManager.Open()
- uid: ALE.ETLBox.ConnectionManager.IConnectionManager.Open*
  name: Open
  href: api/ALE.ETLBox.ConnectionManager.IConnectionManager.html#ALE_ETLBox_ConnectionManager_IConnectionManager_Open_
  commentId: Overload:ALE.ETLBox.ConnectionManager.IConnectionManager.Open
  isSpec: "True"
  fullName: ALE.ETLBox.ConnectionManager.IConnectionManager.Open
  nameWithType: IConnectionManager.Open
- uid: ALE.ETLBox.ConnectionManager.MySqlConnectionManager
  name: MySqlConnectionManager
  href: api/ALE.ETLBox.ConnectionManager.MySqlConnectionManager.html
  commentId: T:ALE.ETLBox.ConnectionManager.MySqlConnectionManager
  fullName: ALE.ETLBox.ConnectionManager.MySqlConnectionManager
  nameWithType: MySqlConnectionManager
- uid: ALE.ETLBox.ConnectionManager.MySqlConnectionManager.#ctor
  name: MySqlConnectionManager()
  href: api/ALE.ETLBox.ConnectionManager.MySqlConnectionManager.html#ALE_ETLBox_ConnectionManager_MySqlConnectionManager__ctor
  commentId: M:ALE.ETLBox.ConnectionManager.MySqlConnectionManager.#ctor
  fullName: ALE.ETLBox.ConnectionManager.MySqlConnectionManager.MySqlConnectionManager()
  nameWithType: MySqlConnectionManager.MySqlConnectionManager()
- uid: ALE.ETLBox.ConnectionManager.MySqlConnectionManager.#ctor(ALE.ETLBox.MySqlConnectionString)
  name: MySqlConnectionManager(MySqlConnectionString)
  href: api/ALE.ETLBox.ConnectionManager.MySqlConnectionManager.html#ALE_ETLBox_ConnectionManager_MySqlConnectionManager__ctor_ALE_ETLBox_MySqlConnectionString_
  commentId: M:ALE.ETLBox.ConnectionManager.MySqlConnectionManager.#ctor(ALE.ETLBox.MySqlConnectionString)
  fullName: ALE.ETLBox.ConnectionManager.MySqlConnectionManager.MySqlConnectionManager(ALE.ETLBox.MySqlConnectionString)
  nameWithType: MySqlConnectionManager.MySqlConnectionManager(MySqlConnectionString)
- uid: ALE.ETLBox.ConnectionManager.MySqlConnectionManager.#ctor(System.String)
  name: MySqlConnectionManager(String)
  href: api/ALE.ETLBox.ConnectionManager.MySqlConnectionManager.html#ALE_ETLBox_ConnectionManager_MySqlConnectionManager__ctor_System_String_
  commentId: M:ALE.ETLBox.ConnectionManager.MySqlConnectionManager.#ctor(System.String)
  fullName: ALE.ETLBox.ConnectionManager.MySqlConnectionManager.MySqlConnectionManager(System.String)
  nameWithType: MySqlConnectionManager.MySqlConnectionManager(String)
- uid: ALE.ETLBox.ConnectionManager.MySqlConnectionManager.#ctor*
  name: MySqlConnectionManager
  href: api/ALE.ETLBox.ConnectionManager.MySqlConnectionManager.html#ALE_ETLBox_ConnectionManager_MySqlConnectionManager__ctor_
  commentId: Overload:ALE.ETLBox.ConnectionManager.MySqlConnectionManager.#ctor
  isSpec: "True"
  fullName: ALE.ETLBox.ConnectionManager.MySqlConnectionManager.MySqlConnectionManager
  nameWithType: MySqlConnectionManager.MySqlConnectionManager
- uid: ALE.ETLBox.ConnectionManager.MySqlConnectionManager.AfterBulkInsert(System.String)
  name: AfterBulkInsert(String)
  href: api/ALE.ETLBox.ConnectionManager.MySqlConnectionManager.html#ALE_ETLBox_ConnectionManager_MySqlConnectionManager_AfterBulkInsert_System_String_
  commentId: M:ALE.ETLBox.ConnectionManager.MySqlConnectionManager.AfterBulkInsert(System.String)
  fullName: ALE.ETLBox.ConnectionManager.MySqlConnectionManager.AfterBulkInsert(System.String)
  nameWithType: MySqlConnectionManager.AfterBulkInsert(String)
- uid: ALE.ETLBox.ConnectionManager.MySqlConnectionManager.AfterBulkInsert*
  name: AfterBulkInsert
  href: api/ALE.ETLBox.ConnectionManager.MySqlConnectionManager.html#ALE_ETLBox_ConnectionManager_MySqlConnectionManager_AfterBulkInsert_
  commentId: Overload:ALE.ETLBox.ConnectionManager.MySqlConnectionManager.AfterBulkInsert
  isSpec: "True"
  fullName: ALE.ETLBox.ConnectionManager.MySqlConnectionManager.AfterBulkInsert
  nameWithType: MySqlConnectionManager.AfterBulkInsert
- uid: ALE.ETLBox.ConnectionManager.MySqlConnectionManager.BeforeBulkInsert(System.String)
  name: BeforeBulkInsert(String)
  href: api/ALE.ETLBox.ConnectionManager.MySqlConnectionManager.html#ALE_ETLBox_ConnectionManager_MySqlConnectionManager_BeforeBulkInsert_System_String_
  commentId: M:ALE.ETLBox.ConnectionManager.MySqlConnectionManager.BeforeBulkInsert(System.String)
  fullName: ALE.ETLBox.ConnectionManager.MySqlConnectionManager.BeforeBulkInsert(System.String)
  nameWithType: MySqlConnectionManager.BeforeBulkInsert(String)
- uid: ALE.ETLBox.ConnectionManager.MySqlConnectionManager.BeforeBulkInsert*
  name: BeforeBulkInsert
  href: api/ALE.ETLBox.ConnectionManager.MySqlConnectionManager.html#ALE_ETLBox_ConnectionManager_MySqlConnectionManager_BeforeBulkInsert_
  commentId: Overload:ALE.ETLBox.ConnectionManager.MySqlConnectionManager.BeforeBulkInsert
  isSpec: "True"
  fullName: ALE.ETLBox.ConnectionManager.MySqlConnectionManager.BeforeBulkInsert
  nameWithType: MySqlConnectionManager.BeforeBulkInsert
- uid: ALE.ETLBox.ConnectionManager.MySqlConnectionManager.BulkInsert(ALE.ETLBox.ITableData,System.String)
  name: BulkInsert(ITableData, String)
  href: api/ALE.ETLBox.ConnectionManager.MySqlConnectionManager.html#ALE_ETLBox_ConnectionManager_MySqlConnectionManager_BulkInsert_ALE_ETLBox_ITableData_System_String_
  commentId: M:ALE.ETLBox.ConnectionManager.MySqlConnectionManager.BulkInsert(ALE.ETLBox.ITableData,System.String)
  fullName: ALE.ETLBox.ConnectionManager.MySqlConnectionManager.BulkInsert(ALE.ETLBox.ITableData, System.String)
  nameWithType: MySqlConnectionManager.BulkInsert(ITableData, String)
- uid: ALE.ETLBox.ConnectionManager.MySqlConnectionManager.BulkInsert*
  name: BulkInsert
  href: api/ALE.ETLBox.ConnectionManager.MySqlConnectionManager.html#ALE_ETLBox_ConnectionManager_MySqlConnectionManager_BulkInsert_
  commentId: Overload:ALE.ETLBox.ConnectionManager.MySqlConnectionManager.BulkInsert
  isSpec: "True"
  fullName: ALE.ETLBox.ConnectionManager.MySqlConnectionManager.BulkInsert
  nameWithType: MySqlConnectionManager.BulkInsert
- uid: ALE.ETLBox.ConnectionManager.MySqlConnectionManager.Clone
  name: Clone()
  href: api/ALE.ETLBox.ConnectionManager.MySqlConnectionManager.html#ALE_ETLBox_ConnectionManager_MySqlConnectionManager_Clone
  commentId: M:ALE.ETLBox.ConnectionManager.MySqlConnectionManager.Clone
  fullName: ALE.ETLBox.ConnectionManager.MySqlConnectionManager.Clone()
  nameWithType: MySqlConnectionManager.Clone()
- uid: ALE.ETLBox.ConnectionManager.MySqlConnectionManager.Clone*
  name: Clone
  href: api/ALE.ETLBox.ConnectionManager.MySqlConnectionManager.html#ALE_ETLBox_ConnectionManager_MySqlConnectionManager_Clone_
  commentId: Overload:ALE.ETLBox.ConnectionManager.MySqlConnectionManager.Clone
  isSpec: "True"
  fullName: ALE.ETLBox.ConnectionManager.MySqlConnectionManager.Clone
  nameWithType: MySqlConnectionManager.Clone
- uid: ALE.ETLBox.ConnectionManager.OdbcConnectionManager
  name: OdbcConnectionManager
  href: api/ALE.ETLBox.ConnectionManager.OdbcConnectionManager.html
  commentId: T:ALE.ETLBox.ConnectionManager.OdbcConnectionManager
  fullName: ALE.ETLBox.ConnectionManager.OdbcConnectionManager
  nameWithType: OdbcConnectionManager
- uid: ALE.ETLBox.ConnectionManager.OdbcConnectionManager.#ctor
  name: OdbcConnectionManager()
  href: api/ALE.ETLBox.ConnectionManager.OdbcConnectionManager.html#ALE_ETLBox_ConnectionManager_OdbcConnectionManager__ctor
  commentId: M:ALE.ETLBox.ConnectionManager.OdbcConnectionManager.#ctor
  fullName: ALE.ETLBox.ConnectionManager.OdbcConnectionManager.OdbcConnectionManager()
  nameWithType: OdbcConnectionManager.OdbcConnectionManager()
- uid: ALE.ETLBox.ConnectionManager.OdbcConnectionManager.#ctor(ALE.ETLBox.OdbcConnectionString)
  name: OdbcConnectionManager(OdbcConnectionString)
  href: api/ALE.ETLBox.ConnectionManager.OdbcConnectionManager.html#ALE_ETLBox_ConnectionManager_OdbcConnectionManager__ctor_ALE_ETLBox_OdbcConnectionString_
  commentId: M:ALE.ETLBox.ConnectionManager.OdbcConnectionManager.#ctor(ALE.ETLBox.OdbcConnectionString)
  fullName: ALE.ETLBox.ConnectionManager.OdbcConnectionManager.OdbcConnectionManager(ALE.ETLBox.OdbcConnectionString)
  nameWithType: OdbcConnectionManager.OdbcConnectionManager(OdbcConnectionString)
- uid: ALE.ETLBox.ConnectionManager.OdbcConnectionManager.#ctor*
  name: OdbcConnectionManager
  href: api/ALE.ETLBox.ConnectionManager.OdbcConnectionManager.html#ALE_ETLBox_ConnectionManager_OdbcConnectionManager__ctor_
  commentId: Overload:ALE.ETLBox.ConnectionManager.OdbcConnectionManager.#ctor
  isSpec: "True"
  fullName: ALE.ETLBox.ConnectionManager.OdbcConnectionManager.OdbcConnectionManager
  nameWithType: OdbcConnectionManager.OdbcConnectionManager
- uid: ALE.ETLBox.ConnectionManager.OdbcConnectionManager.AfterBulkInsert(System.String)
  name: AfterBulkInsert(String)
  href: api/ALE.ETLBox.ConnectionManager.OdbcConnectionManager.html#ALE_ETLBox_ConnectionManager_OdbcConnectionManager_AfterBulkInsert_System_String_
  commentId: M:ALE.ETLBox.ConnectionManager.OdbcConnectionManager.AfterBulkInsert(System.String)
  fullName: ALE.ETLBox.ConnectionManager.OdbcConnectionManager.AfterBulkInsert(System.String)
  nameWithType: OdbcConnectionManager.AfterBulkInsert(String)
- uid: ALE.ETLBox.ConnectionManager.OdbcConnectionManager.AfterBulkInsert*
  name: AfterBulkInsert
  href: api/ALE.ETLBox.ConnectionManager.OdbcConnectionManager.html#ALE_ETLBox_ConnectionManager_OdbcConnectionManager_AfterBulkInsert_
  commentId: Overload:ALE.ETLBox.ConnectionManager.OdbcConnectionManager.AfterBulkInsert
  isSpec: "True"
  fullName: ALE.ETLBox.ConnectionManager.OdbcConnectionManager.AfterBulkInsert
  nameWithType: OdbcConnectionManager.AfterBulkInsert
- uid: ALE.ETLBox.ConnectionManager.OdbcConnectionManager.BeforeBulkInsert(System.String)
  name: BeforeBulkInsert(String)
  href: api/ALE.ETLBox.ConnectionManager.OdbcConnectionManager.html#ALE_ETLBox_ConnectionManager_OdbcConnectionManager_BeforeBulkInsert_System_String_
  commentId: M:ALE.ETLBox.ConnectionManager.OdbcConnectionManager.BeforeBulkInsert(System.String)
  fullName: ALE.ETLBox.ConnectionManager.OdbcConnectionManager.BeforeBulkInsert(System.String)
  nameWithType: OdbcConnectionManager.BeforeBulkInsert(String)
- uid: ALE.ETLBox.ConnectionManager.OdbcConnectionManager.BeforeBulkInsert*
  name: BeforeBulkInsert
  href: api/ALE.ETLBox.ConnectionManager.OdbcConnectionManager.html#ALE_ETLBox_ConnectionManager_OdbcConnectionManager_BeforeBulkInsert_
  commentId: Overload:ALE.ETLBox.ConnectionManager.OdbcConnectionManager.BeforeBulkInsert
  isSpec: "True"
  fullName: ALE.ETLBox.ConnectionManager.OdbcConnectionManager.BeforeBulkInsert
  nameWithType: OdbcConnectionManager.BeforeBulkInsert
- uid: ALE.ETLBox.ConnectionManager.OdbcConnectionManager.BulkInsert(ALE.ETLBox.ITableData,System.String)
  name: BulkInsert(ITableData, String)
  href: api/ALE.ETLBox.ConnectionManager.OdbcConnectionManager.html#ALE_ETLBox_ConnectionManager_OdbcConnectionManager_BulkInsert_ALE_ETLBox_ITableData_System_String_
  commentId: M:ALE.ETLBox.ConnectionManager.OdbcConnectionManager.BulkInsert(ALE.ETLBox.ITableData,System.String)
  fullName: ALE.ETLBox.ConnectionManager.OdbcConnectionManager.BulkInsert(ALE.ETLBox.ITableData, System.String)
  nameWithType: OdbcConnectionManager.BulkInsert(ITableData, String)
- uid: ALE.ETLBox.ConnectionManager.OdbcConnectionManager.BulkInsert*
  name: BulkInsert
  href: api/ALE.ETLBox.ConnectionManager.OdbcConnectionManager.html#ALE_ETLBox_ConnectionManager_OdbcConnectionManager_BulkInsert_
  commentId: Overload:ALE.ETLBox.ConnectionManager.OdbcConnectionManager.BulkInsert
  isSpec: "True"
  fullName: ALE.ETLBox.ConnectionManager.OdbcConnectionManager.BulkInsert
  nameWithType: OdbcConnectionManager.BulkInsert
- uid: ALE.ETLBox.ConnectionManager.PostgresConnectionManager
  name: PostgresConnectionManager
  href: api/ALE.ETLBox.ConnectionManager.PostgresConnectionManager.html
  commentId: T:ALE.ETLBox.ConnectionManager.PostgresConnectionManager
  fullName: ALE.ETLBox.ConnectionManager.PostgresConnectionManager
  nameWithType: PostgresConnectionManager
- uid: ALE.ETLBox.ConnectionManager.PostgresConnectionManager.#ctor
  name: PostgresConnectionManager()
  href: api/ALE.ETLBox.ConnectionManager.PostgresConnectionManager.html#ALE_ETLBox_ConnectionManager_PostgresConnectionManager__ctor
  commentId: M:ALE.ETLBox.ConnectionManager.PostgresConnectionManager.#ctor
  fullName: ALE.ETLBox.ConnectionManager.PostgresConnectionManager.PostgresConnectionManager()
  nameWithType: PostgresConnectionManager.PostgresConnectionManager()
- uid: ALE.ETLBox.ConnectionManager.PostgresConnectionManager.#ctor(ALE.ETLBox.PostgresConnectionString)
  name: PostgresConnectionManager(PostgresConnectionString)
  href: api/ALE.ETLBox.ConnectionManager.PostgresConnectionManager.html#ALE_ETLBox_ConnectionManager_PostgresConnectionManager__ctor_ALE_ETLBox_PostgresConnectionString_
  commentId: M:ALE.ETLBox.ConnectionManager.PostgresConnectionManager.#ctor(ALE.ETLBox.PostgresConnectionString)
  fullName: ALE.ETLBox.ConnectionManager.PostgresConnectionManager.PostgresConnectionManager(ALE.ETLBox.PostgresConnectionString)
  nameWithType: PostgresConnectionManager.PostgresConnectionManager(PostgresConnectionString)
- uid: ALE.ETLBox.ConnectionManager.PostgresConnectionManager.#ctor(System.String)
  name: PostgresConnectionManager(String)
  href: api/ALE.ETLBox.ConnectionManager.PostgresConnectionManager.html#ALE_ETLBox_ConnectionManager_PostgresConnectionManager__ctor_System_String_
  commentId: M:ALE.ETLBox.ConnectionManager.PostgresConnectionManager.#ctor(System.String)
  fullName: ALE.ETLBox.ConnectionManager.PostgresConnectionManager.PostgresConnectionManager(System.String)
  nameWithType: PostgresConnectionManager.PostgresConnectionManager(String)
- uid: ALE.ETLBox.ConnectionManager.PostgresConnectionManager.#ctor*
  name: PostgresConnectionManager
  href: api/ALE.ETLBox.ConnectionManager.PostgresConnectionManager.html#ALE_ETLBox_ConnectionManager_PostgresConnectionManager__ctor_
  commentId: Overload:ALE.ETLBox.ConnectionManager.PostgresConnectionManager.#ctor
  isSpec: "True"
  fullName: ALE.ETLBox.ConnectionManager.PostgresConnectionManager.PostgresConnectionManager
  nameWithType: PostgresConnectionManager.PostgresConnectionManager
- uid: ALE.ETLBox.ConnectionManager.PostgresConnectionManager.AfterBulkInsert(System.String)
  name: AfterBulkInsert(String)
  href: api/ALE.ETLBox.ConnectionManager.PostgresConnectionManager.html#ALE_ETLBox_ConnectionManager_PostgresConnectionManager_AfterBulkInsert_System_String_
  commentId: M:ALE.ETLBox.ConnectionManager.PostgresConnectionManager.AfterBulkInsert(System.String)
  fullName: ALE.ETLBox.ConnectionManager.PostgresConnectionManager.AfterBulkInsert(System.String)
  nameWithType: PostgresConnectionManager.AfterBulkInsert(String)
- uid: ALE.ETLBox.ConnectionManager.PostgresConnectionManager.AfterBulkInsert*
  name: AfterBulkInsert
  href: api/ALE.ETLBox.ConnectionManager.PostgresConnectionManager.html#ALE_ETLBox_ConnectionManager_PostgresConnectionManager_AfterBulkInsert_
  commentId: Overload:ALE.ETLBox.ConnectionManager.PostgresConnectionManager.AfterBulkInsert
  isSpec: "True"
  fullName: ALE.ETLBox.ConnectionManager.PostgresConnectionManager.AfterBulkInsert
  nameWithType: PostgresConnectionManager.AfterBulkInsert
- uid: ALE.ETLBox.ConnectionManager.PostgresConnectionManager.BeforeBulkInsert(System.String)
  name: BeforeBulkInsert(String)
  href: api/ALE.ETLBox.ConnectionManager.PostgresConnectionManager.html#ALE_ETLBox_ConnectionManager_PostgresConnectionManager_BeforeBulkInsert_System_String_
  commentId: M:ALE.ETLBox.ConnectionManager.PostgresConnectionManager.BeforeBulkInsert(System.String)
  fullName: ALE.ETLBox.ConnectionManager.PostgresConnectionManager.BeforeBulkInsert(System.String)
  nameWithType: PostgresConnectionManager.BeforeBulkInsert(String)
- uid: ALE.ETLBox.ConnectionManager.PostgresConnectionManager.BeforeBulkInsert*
  name: BeforeBulkInsert
  href: api/ALE.ETLBox.ConnectionManager.PostgresConnectionManager.html#ALE_ETLBox_ConnectionManager_PostgresConnectionManager_BeforeBulkInsert_
  commentId: Overload:ALE.ETLBox.ConnectionManager.PostgresConnectionManager.BeforeBulkInsert
  isSpec: "True"
  fullName: ALE.ETLBox.ConnectionManager.PostgresConnectionManager.BeforeBulkInsert
  nameWithType: PostgresConnectionManager.BeforeBulkInsert
- uid: ALE.ETLBox.ConnectionManager.PostgresConnectionManager.BulkInsert(ALE.ETLBox.ITableData,System.String)
  name: BulkInsert(ITableData, String)
  href: api/ALE.ETLBox.ConnectionManager.PostgresConnectionManager.html#ALE_ETLBox_ConnectionManager_PostgresConnectionManager_BulkInsert_ALE_ETLBox_ITableData_System_String_
  commentId: M:ALE.ETLBox.ConnectionManager.PostgresConnectionManager.BulkInsert(ALE.ETLBox.ITableData,System.String)
  fullName: ALE.ETLBox.ConnectionManager.PostgresConnectionManager.BulkInsert(ALE.ETLBox.ITableData, System.String)
  nameWithType: PostgresConnectionManager.BulkInsert(ITableData, String)
- uid: ALE.ETLBox.ConnectionManager.PostgresConnectionManager.BulkInsert*
  name: BulkInsert
  href: api/ALE.ETLBox.ConnectionManager.PostgresConnectionManager.html#ALE_ETLBox_ConnectionManager_PostgresConnectionManager_BulkInsert_
  commentId: Overload:ALE.ETLBox.ConnectionManager.PostgresConnectionManager.BulkInsert
  isSpec: "True"
  fullName: ALE.ETLBox.ConnectionManager.PostgresConnectionManager.BulkInsert
  nameWithType: PostgresConnectionManager.BulkInsert
- uid: ALE.ETLBox.ConnectionManager.PostgresConnectionManager.Clone
  name: Clone()
  href: api/ALE.ETLBox.ConnectionManager.PostgresConnectionManager.html#ALE_ETLBox_ConnectionManager_PostgresConnectionManager_Clone
  commentId: M:ALE.ETLBox.ConnectionManager.PostgresConnectionManager.Clone
  fullName: ALE.ETLBox.ConnectionManager.PostgresConnectionManager.Clone()
  nameWithType: PostgresConnectionManager.Clone()
- uid: ALE.ETLBox.ConnectionManager.PostgresConnectionManager.Clone*
  name: Clone
  href: api/ALE.ETLBox.ConnectionManager.PostgresConnectionManager.html#ALE_ETLBox_ConnectionManager_PostgresConnectionManager_Clone_
  commentId: Overload:ALE.ETLBox.ConnectionManager.PostgresConnectionManager.Clone
  isSpec: "True"
  fullName: ALE.ETLBox.ConnectionManager.PostgresConnectionManager.Clone
  nameWithType: PostgresConnectionManager.Clone
- uid: ALE.ETLBox.ConnectionManager.SqlConnectionManager
  name: SqlConnectionManager
  href: api/ALE.ETLBox.ConnectionManager.SqlConnectionManager.html
  commentId: T:ALE.ETLBox.ConnectionManager.SqlConnectionManager
  fullName: ALE.ETLBox.ConnectionManager.SqlConnectionManager
  nameWithType: SqlConnectionManager
- uid: ALE.ETLBox.ConnectionManager.SqlConnectionManager.#ctor
  name: SqlConnectionManager()
  href: api/ALE.ETLBox.ConnectionManager.SqlConnectionManager.html#ALE_ETLBox_ConnectionManager_SqlConnectionManager__ctor
  commentId: M:ALE.ETLBox.ConnectionManager.SqlConnectionManager.#ctor
  fullName: ALE.ETLBox.ConnectionManager.SqlConnectionManager.SqlConnectionManager()
  nameWithType: SqlConnectionManager.SqlConnectionManager()
- uid: ALE.ETLBox.ConnectionManager.SqlConnectionManager.#ctor(ALE.ETLBox.SqlConnectionString)
  name: SqlConnectionManager(SqlConnectionString)
  href: api/ALE.ETLBox.ConnectionManager.SqlConnectionManager.html#ALE_ETLBox_ConnectionManager_SqlConnectionManager__ctor_ALE_ETLBox_SqlConnectionString_
  commentId: M:ALE.ETLBox.ConnectionManager.SqlConnectionManager.#ctor(ALE.ETLBox.SqlConnectionString)
  fullName: ALE.ETLBox.ConnectionManager.SqlConnectionManager.SqlConnectionManager(ALE.ETLBox.SqlConnectionString)
  nameWithType: SqlConnectionManager.SqlConnectionManager(SqlConnectionString)
- uid: ALE.ETLBox.ConnectionManager.SqlConnectionManager.#ctor(System.String)
  name: SqlConnectionManager(String)
  href: api/ALE.ETLBox.ConnectionManager.SqlConnectionManager.html#ALE_ETLBox_ConnectionManager_SqlConnectionManager__ctor_System_String_
  commentId: M:ALE.ETLBox.ConnectionManager.SqlConnectionManager.#ctor(System.String)
  fullName: ALE.ETLBox.ConnectionManager.SqlConnectionManager.SqlConnectionManager(System.String)
  nameWithType: SqlConnectionManager.SqlConnectionManager(String)
- uid: ALE.ETLBox.ConnectionManager.SqlConnectionManager.#ctor*
  name: SqlConnectionManager
  href: api/ALE.ETLBox.ConnectionManager.SqlConnectionManager.html#ALE_ETLBox_ConnectionManager_SqlConnectionManager__ctor_
  commentId: Overload:ALE.ETLBox.ConnectionManager.SqlConnectionManager.#ctor
  isSpec: "True"
  fullName: ALE.ETLBox.ConnectionManager.SqlConnectionManager.SqlConnectionManager
  nameWithType: SqlConnectionManager.SqlConnectionManager
- uid: ALE.ETLBox.ConnectionManager.SqlConnectionManager.AfterBulkInsert(System.String)
  name: AfterBulkInsert(String)
  href: api/ALE.ETLBox.ConnectionManager.SqlConnectionManager.html#ALE_ETLBox_ConnectionManager_SqlConnectionManager_AfterBulkInsert_System_String_
  commentId: M:ALE.ETLBox.ConnectionManager.SqlConnectionManager.AfterBulkInsert(System.String)
  fullName: ALE.ETLBox.ConnectionManager.SqlConnectionManager.AfterBulkInsert(System.String)
  nameWithType: SqlConnectionManager.AfterBulkInsert(String)
- uid: ALE.ETLBox.ConnectionManager.SqlConnectionManager.AfterBulkInsert*
  name: AfterBulkInsert
  href: api/ALE.ETLBox.ConnectionManager.SqlConnectionManager.html#ALE_ETLBox_ConnectionManager_SqlConnectionManager_AfterBulkInsert_
  commentId: Overload:ALE.ETLBox.ConnectionManager.SqlConnectionManager.AfterBulkInsert
  isSpec: "True"
  fullName: ALE.ETLBox.ConnectionManager.SqlConnectionManager.AfterBulkInsert
  nameWithType: SqlConnectionManager.AfterBulkInsert
- uid: ALE.ETLBox.ConnectionManager.SqlConnectionManager.BeforeBulkInsert(System.String)
  name: BeforeBulkInsert(String)
  href: api/ALE.ETLBox.ConnectionManager.SqlConnectionManager.html#ALE_ETLBox_ConnectionManager_SqlConnectionManager_BeforeBulkInsert_System_String_
  commentId: M:ALE.ETLBox.ConnectionManager.SqlConnectionManager.BeforeBulkInsert(System.String)
  fullName: ALE.ETLBox.ConnectionManager.SqlConnectionManager.BeforeBulkInsert(System.String)
  nameWithType: SqlConnectionManager.BeforeBulkInsert(String)
- uid: ALE.ETLBox.ConnectionManager.SqlConnectionManager.BeforeBulkInsert*
  name: BeforeBulkInsert
  href: api/ALE.ETLBox.ConnectionManager.SqlConnectionManager.html#ALE_ETLBox_ConnectionManager_SqlConnectionManager_BeforeBulkInsert_
  commentId: Overload:ALE.ETLBox.ConnectionManager.SqlConnectionManager.BeforeBulkInsert
  isSpec: "True"
  fullName: ALE.ETLBox.ConnectionManager.SqlConnectionManager.BeforeBulkInsert
  nameWithType: SqlConnectionManager.BeforeBulkInsert
- uid: ALE.ETLBox.ConnectionManager.SqlConnectionManager.BulkInsert(ALE.ETLBox.ITableData,System.String)
  name: BulkInsert(ITableData, String)
  href: api/ALE.ETLBox.ConnectionManager.SqlConnectionManager.html#ALE_ETLBox_ConnectionManager_SqlConnectionManager_BulkInsert_ALE_ETLBox_ITableData_System_String_
  commentId: M:ALE.ETLBox.ConnectionManager.SqlConnectionManager.BulkInsert(ALE.ETLBox.ITableData,System.String)
  fullName: ALE.ETLBox.ConnectionManager.SqlConnectionManager.BulkInsert(ALE.ETLBox.ITableData, System.String)
  nameWithType: SqlConnectionManager.BulkInsert(ITableData, String)
- uid: ALE.ETLBox.ConnectionManager.SqlConnectionManager.BulkInsert*
  name: BulkInsert
  href: api/ALE.ETLBox.ConnectionManager.SqlConnectionManager.html#ALE_ETLBox_ConnectionManager_SqlConnectionManager_BulkInsert_
  commentId: Overload:ALE.ETLBox.ConnectionManager.SqlConnectionManager.BulkInsert
  isSpec: "True"
  fullName: ALE.ETLBox.ConnectionManager.SqlConnectionManager.BulkInsert
  nameWithType: SqlConnectionManager.BulkInsert
- uid: ALE.ETLBox.ConnectionManager.SqlConnectionManager.Clone
  name: Clone()
  href: api/ALE.ETLBox.ConnectionManager.SqlConnectionManager.html#ALE_ETLBox_ConnectionManager_SqlConnectionManager_Clone
  commentId: M:ALE.ETLBox.ConnectionManager.SqlConnectionManager.Clone
  fullName: ALE.ETLBox.ConnectionManager.SqlConnectionManager.Clone()
  nameWithType: SqlConnectionManager.Clone()
- uid: ALE.ETLBox.ConnectionManager.SqlConnectionManager.Clone*
  name: Clone
  href: api/ALE.ETLBox.ConnectionManager.SqlConnectionManager.html#ALE_ETLBox_ConnectionManager_SqlConnectionManager_Clone_
  commentId: Overload:ALE.ETLBox.ConnectionManager.SqlConnectionManager.Clone
  isSpec: "True"
  fullName: ALE.ETLBox.ConnectionManager.SqlConnectionManager.Clone
  nameWithType: SqlConnectionManager.Clone
- uid: ALE.ETLBox.ConnectionManager.SqlConnectionManager.ModifyDBSettings
  name: ModifyDBSettings
  href: api/ALE.ETLBox.ConnectionManager.SqlConnectionManager.html#ALE_ETLBox_ConnectionManager_SqlConnectionManager_ModifyDBSettings
  commentId: P:ALE.ETLBox.ConnectionManager.SqlConnectionManager.ModifyDBSettings
  fullName: ALE.ETLBox.ConnectionManager.SqlConnectionManager.ModifyDBSettings
  nameWithType: SqlConnectionManager.ModifyDBSettings
- uid: ALE.ETLBox.ConnectionManager.SqlConnectionManager.ModifyDBSettings*
  name: ModifyDBSettings
  href: api/ALE.ETLBox.ConnectionManager.SqlConnectionManager.html#ALE_ETLBox_ConnectionManager_SqlConnectionManager_ModifyDBSettings_
  commentId: Overload:ALE.ETLBox.ConnectionManager.SqlConnectionManager.ModifyDBSettings
  isSpec: "True"
  fullName: ALE.ETLBox.ConnectionManager.SqlConnectionManager.ModifyDBSettings
  nameWithType: SqlConnectionManager.ModifyDBSettings
- uid: ALE.ETLBox.ConnectionManager.SQLiteConnectionManager
  name: SQLiteConnectionManager
  href: api/ALE.ETLBox.ConnectionManager.SQLiteConnectionManager.html
  commentId: T:ALE.ETLBox.ConnectionManager.SQLiteConnectionManager
  fullName: ALE.ETLBox.ConnectionManager.SQLiteConnectionManager
  nameWithType: SQLiteConnectionManager
- uid: ALE.ETLBox.ConnectionManager.SQLiteConnectionManager.#ctor
  name: SQLiteConnectionManager()
  href: api/ALE.ETLBox.ConnectionManager.SQLiteConnectionManager.html#ALE_ETLBox_ConnectionManager_SQLiteConnectionManager__ctor
  commentId: M:ALE.ETLBox.ConnectionManager.SQLiteConnectionManager.#ctor
  fullName: ALE.ETLBox.ConnectionManager.SQLiteConnectionManager.SQLiteConnectionManager()
  nameWithType: SQLiteConnectionManager.SQLiteConnectionManager()
- uid: ALE.ETLBox.ConnectionManager.SQLiteConnectionManager.#ctor(ALE.ETLBox.SQLiteConnectionString)
  name: SQLiteConnectionManager(SQLiteConnectionString)
  href: api/ALE.ETLBox.ConnectionManager.SQLiteConnectionManager.html#ALE_ETLBox_ConnectionManager_SQLiteConnectionManager__ctor_ALE_ETLBox_SQLiteConnectionString_
  commentId: M:ALE.ETLBox.ConnectionManager.SQLiteConnectionManager.#ctor(ALE.ETLBox.SQLiteConnectionString)
  fullName: ALE.ETLBox.ConnectionManager.SQLiteConnectionManager.SQLiteConnectionManager(ALE.ETLBox.SQLiteConnectionString)
  nameWithType: SQLiteConnectionManager.SQLiteConnectionManager(SQLiteConnectionString)
- uid: ALE.ETLBox.ConnectionManager.SQLiteConnectionManager.#ctor(System.String)
  name: SQLiteConnectionManager(String)
  href: api/ALE.ETLBox.ConnectionManager.SQLiteConnectionManager.html#ALE_ETLBox_ConnectionManager_SQLiteConnectionManager__ctor_System_String_
  commentId: M:ALE.ETLBox.ConnectionManager.SQLiteConnectionManager.#ctor(System.String)
  fullName: ALE.ETLBox.ConnectionManager.SQLiteConnectionManager.SQLiteConnectionManager(System.String)
  nameWithType: SQLiteConnectionManager.SQLiteConnectionManager(String)
- uid: ALE.ETLBox.ConnectionManager.SQLiteConnectionManager.#ctor*
  name: SQLiteConnectionManager
  href: api/ALE.ETLBox.ConnectionManager.SQLiteConnectionManager.html#ALE_ETLBox_ConnectionManager_SQLiteConnectionManager__ctor_
  commentId: Overload:ALE.ETLBox.ConnectionManager.SQLiteConnectionManager.#ctor
  isSpec: "True"
  fullName: ALE.ETLBox.ConnectionManager.SQLiteConnectionManager.SQLiteConnectionManager
  nameWithType: SQLiteConnectionManager.SQLiteConnectionManager
- uid: ALE.ETLBox.ConnectionManager.SQLiteConnectionManager.AfterBulkInsert(System.String)
  name: AfterBulkInsert(String)
  href: api/ALE.ETLBox.ConnectionManager.SQLiteConnectionManager.html#ALE_ETLBox_ConnectionManager_SQLiteConnectionManager_AfterBulkInsert_System_String_
  commentId: M:ALE.ETLBox.ConnectionManager.SQLiteConnectionManager.AfterBulkInsert(System.String)
  fullName: ALE.ETLBox.ConnectionManager.SQLiteConnectionManager.AfterBulkInsert(System.String)
  nameWithType: SQLiteConnectionManager.AfterBulkInsert(String)
- uid: ALE.ETLBox.ConnectionManager.SQLiteConnectionManager.AfterBulkInsert*
  name: AfterBulkInsert
  href: api/ALE.ETLBox.ConnectionManager.SQLiteConnectionManager.html#ALE_ETLBox_ConnectionManager_SQLiteConnectionManager_AfterBulkInsert_
  commentId: Overload:ALE.ETLBox.ConnectionManager.SQLiteConnectionManager.AfterBulkInsert
  isSpec: "True"
  fullName: ALE.ETLBox.ConnectionManager.SQLiteConnectionManager.AfterBulkInsert
  nameWithType: SQLiteConnectionManager.AfterBulkInsert
- uid: ALE.ETLBox.ConnectionManager.SQLiteConnectionManager.BeforeBulkInsert(System.String)
  name: BeforeBulkInsert(String)
  href: api/ALE.ETLBox.ConnectionManager.SQLiteConnectionManager.html#ALE_ETLBox_ConnectionManager_SQLiteConnectionManager_BeforeBulkInsert_System_String_
  commentId: M:ALE.ETLBox.ConnectionManager.SQLiteConnectionManager.BeforeBulkInsert(System.String)
  fullName: ALE.ETLBox.ConnectionManager.SQLiteConnectionManager.BeforeBulkInsert(System.String)
  nameWithType: SQLiteConnectionManager.BeforeBulkInsert(String)
- uid: ALE.ETLBox.ConnectionManager.SQLiteConnectionManager.BeforeBulkInsert*
  name: BeforeBulkInsert
  href: api/ALE.ETLBox.ConnectionManager.SQLiteConnectionManager.html#ALE_ETLBox_ConnectionManager_SQLiteConnectionManager_BeforeBulkInsert_
  commentId: Overload:ALE.ETLBox.ConnectionManager.SQLiteConnectionManager.BeforeBulkInsert
  isSpec: "True"
  fullName: ALE.ETLBox.ConnectionManager.SQLiteConnectionManager.BeforeBulkInsert
  nameWithType: SQLiteConnectionManager.BeforeBulkInsert
- uid: ALE.ETLBox.ConnectionManager.SQLiteConnectionManager.BulkInsert(ALE.ETLBox.ITableData,System.String)
  name: BulkInsert(ITableData, String)
  href: api/ALE.ETLBox.ConnectionManager.SQLiteConnectionManager.html#ALE_ETLBox_ConnectionManager_SQLiteConnectionManager_BulkInsert_ALE_ETLBox_ITableData_System_String_
  commentId: M:ALE.ETLBox.ConnectionManager.SQLiteConnectionManager.BulkInsert(ALE.ETLBox.ITableData,System.String)
  fullName: ALE.ETLBox.ConnectionManager.SQLiteConnectionManager.BulkInsert(ALE.ETLBox.ITableData, System.String)
  nameWithType: SQLiteConnectionManager.BulkInsert(ITableData, String)
- uid: ALE.ETLBox.ConnectionManager.SQLiteConnectionManager.BulkInsert*
  name: BulkInsert
  href: api/ALE.ETLBox.ConnectionManager.SQLiteConnectionManager.html#ALE_ETLBox_ConnectionManager_SQLiteConnectionManager_BulkInsert_
  commentId: Overload:ALE.ETLBox.ConnectionManager.SQLiteConnectionManager.BulkInsert
  isSpec: "True"
  fullName: ALE.ETLBox.ConnectionManager.SQLiteConnectionManager.BulkInsert
  nameWithType: SQLiteConnectionManager.BulkInsert
- uid: ALE.ETLBox.ConnectionManager.SQLiteConnectionManager.Clone
  name: Clone()
  href: api/ALE.ETLBox.ConnectionManager.SQLiteConnectionManager.html#ALE_ETLBox_ConnectionManager_SQLiteConnectionManager_Clone
  commentId: M:ALE.ETLBox.ConnectionManager.SQLiteConnectionManager.Clone
  fullName: ALE.ETLBox.ConnectionManager.SQLiteConnectionManager.Clone()
  nameWithType: SQLiteConnectionManager.Clone()
- uid: ALE.ETLBox.ConnectionManager.SQLiteConnectionManager.Clone*
  name: Clone
  href: api/ALE.ETLBox.ConnectionManager.SQLiteConnectionManager.html#ALE_ETLBox_ConnectionManager_SQLiteConnectionManager_Clone_
  commentId: Overload:ALE.ETLBox.ConnectionManager.SQLiteConnectionManager.Clone
  isSpec: "True"
  fullName: ALE.ETLBox.ConnectionManager.SQLiteConnectionManager.Clone
  nameWithType: SQLiteConnectionManager.Clone
- uid: ALE.ETLBox.ConnectionManager.SQLiteConnectionManager.ModifyDBSettings
  name: ModifyDBSettings
  href: api/ALE.ETLBox.ConnectionManager.SQLiteConnectionManager.html#ALE_ETLBox_ConnectionManager_SQLiteConnectionManager_ModifyDBSettings
  commentId: P:ALE.ETLBox.ConnectionManager.SQLiteConnectionManager.ModifyDBSettings
  fullName: ALE.ETLBox.ConnectionManager.SQLiteConnectionManager.ModifyDBSettings
  nameWithType: SQLiteConnectionManager.ModifyDBSettings
- uid: ALE.ETLBox.ConnectionManager.SQLiteConnectionManager.ModifyDBSettings*
  name: ModifyDBSettings
  href: api/ALE.ETLBox.ConnectionManager.SQLiteConnectionManager.html#ALE_ETLBox_ConnectionManager_SQLiteConnectionManager_ModifyDBSettings_
  commentId: Overload:ALE.ETLBox.ConnectionManager.SQLiteConnectionManager.ModifyDBSettings
  isSpec: "True"
  fullName: ALE.ETLBox.ConnectionManager.SQLiteConnectionManager.ModifyDBSettings
  nameWithType: SQLiteConnectionManager.ModifyDBSettings
- uid: ALE.ETLBox.ConnectionManager.SqlOdbcConnectionManager
  name: SqlOdbcConnectionManager
  href: api/ALE.ETLBox.ConnectionManager.SqlOdbcConnectionManager.html
  commentId: T:ALE.ETLBox.ConnectionManager.SqlOdbcConnectionManager
  fullName: ALE.ETLBox.ConnectionManager.SqlOdbcConnectionManager
  nameWithType: SqlOdbcConnectionManager
- uid: ALE.ETLBox.ConnectionManager.SqlOdbcConnectionManager.#ctor
  name: SqlOdbcConnectionManager()
  href: api/ALE.ETLBox.ConnectionManager.SqlOdbcConnectionManager.html#ALE_ETLBox_ConnectionManager_SqlOdbcConnectionManager__ctor
  commentId: M:ALE.ETLBox.ConnectionManager.SqlOdbcConnectionManager.#ctor
  fullName: ALE.ETLBox.ConnectionManager.SqlOdbcConnectionManager.SqlOdbcConnectionManager()
  nameWithType: SqlOdbcConnectionManager.SqlOdbcConnectionManager()
- uid: ALE.ETLBox.ConnectionManager.SqlOdbcConnectionManager.#ctor(ALE.ETLBox.OdbcConnectionString)
  name: SqlOdbcConnectionManager(OdbcConnectionString)
  href: api/ALE.ETLBox.ConnectionManager.SqlOdbcConnectionManager.html#ALE_ETLBox_ConnectionManager_SqlOdbcConnectionManager__ctor_ALE_ETLBox_OdbcConnectionString_
  commentId: M:ALE.ETLBox.ConnectionManager.SqlOdbcConnectionManager.#ctor(ALE.ETLBox.OdbcConnectionString)
  fullName: ALE.ETLBox.ConnectionManager.SqlOdbcConnectionManager.SqlOdbcConnectionManager(ALE.ETLBox.OdbcConnectionString)
  nameWithType: SqlOdbcConnectionManager.SqlOdbcConnectionManager(OdbcConnectionString)
- uid: ALE.ETLBox.ConnectionManager.SqlOdbcConnectionManager.#ctor(System.String)
  name: SqlOdbcConnectionManager(String)
  href: api/ALE.ETLBox.ConnectionManager.SqlOdbcConnectionManager.html#ALE_ETLBox_ConnectionManager_SqlOdbcConnectionManager__ctor_System_String_
  commentId: M:ALE.ETLBox.ConnectionManager.SqlOdbcConnectionManager.#ctor(System.String)
  fullName: ALE.ETLBox.ConnectionManager.SqlOdbcConnectionManager.SqlOdbcConnectionManager(System.String)
  nameWithType: SqlOdbcConnectionManager.SqlOdbcConnectionManager(String)
- uid: ALE.ETLBox.ConnectionManager.SqlOdbcConnectionManager.#ctor*
  name: SqlOdbcConnectionManager
  href: api/ALE.ETLBox.ConnectionManager.SqlOdbcConnectionManager.html#ALE_ETLBox_ConnectionManager_SqlOdbcConnectionManager__ctor_
  commentId: Overload:ALE.ETLBox.ConnectionManager.SqlOdbcConnectionManager.#ctor
  isSpec: "True"
  fullName: ALE.ETLBox.ConnectionManager.SqlOdbcConnectionManager.SqlOdbcConnectionManager
  nameWithType: SqlOdbcConnectionManager.SqlOdbcConnectionManager
- uid: ALE.ETLBox.ConnectionManager.SqlOdbcConnectionManager.Clone
  name: Clone()
  href: api/ALE.ETLBox.ConnectionManager.SqlOdbcConnectionManager.html#ALE_ETLBox_ConnectionManager_SqlOdbcConnectionManager_Clone
  commentId: M:ALE.ETLBox.ConnectionManager.SqlOdbcConnectionManager.Clone
  fullName: ALE.ETLBox.ConnectionManager.SqlOdbcConnectionManager.Clone()
  nameWithType: SqlOdbcConnectionManager.Clone()
- uid: ALE.ETLBox.ConnectionManager.SqlOdbcConnectionManager.Clone*
  name: Clone
  href: api/ALE.ETLBox.ConnectionManager.SqlOdbcConnectionManager.html#ALE_ETLBox_ConnectionManager_SqlOdbcConnectionManager_Clone_
  commentId: Overload:ALE.ETLBox.ConnectionManager.SqlOdbcConnectionManager.Clone
  isSpec: "True"
  fullName: ALE.ETLBox.ConnectionManager.SqlOdbcConnectionManager.Clone
  nameWithType: SqlOdbcConnectionManager.Clone
- uid: ALE.ETLBox.ControlFlow
  name: ALE.ETLBox.ControlFlow
  href: api/ALE.ETLBox.ControlFlow.html
  commentId: N:ALE.ETLBox.ControlFlow
  fullName: ALE.ETLBox.ControlFlow
  nameWithType: ALE.ETLBox.ControlFlow
- uid: ALE.ETLBox.ControlFlow.ControlFlow
  name: ControlFlow
  href: api/ALE.ETLBox.ControlFlow.ControlFlow.html
  commentId: T:ALE.ETLBox.ControlFlow.ControlFlow
  fullName: ALE.ETLBox.ControlFlow.ControlFlow
  nameWithType: ControlFlow
- uid: ALE.ETLBox.ControlFlow.ControlFlow.AddLoggingDatabaseToConfig(ALE.ETLBox.ConnectionManager.IConnectionManager)
  name: AddLoggingDatabaseToConfig(IConnectionManager)
  href: api/ALE.ETLBox.ControlFlow.ControlFlow.html#ALE_ETLBox_ControlFlow_ControlFlow_AddLoggingDatabaseToConfig_ALE_ETLBox_ConnectionManager_IConnectionManager_
  commentId: M:ALE.ETLBox.ControlFlow.ControlFlow.AddLoggingDatabaseToConfig(ALE.ETLBox.ConnectionManager.IConnectionManager)
  fullName: ALE.ETLBox.ControlFlow.ControlFlow.AddLoggingDatabaseToConfig(ALE.ETLBox.ConnectionManager.IConnectionManager)
  nameWithType: ControlFlow.AddLoggingDatabaseToConfig(IConnectionManager)
- uid: ALE.ETLBox.ControlFlow.ControlFlow.AddLoggingDatabaseToConfig(ALE.ETLBox.ConnectionManager.IConnectionManager,NLog.LogLevel,System.String)
  name: AddLoggingDatabaseToConfig(IConnectionManager, LogLevel, String)
  href: api/ALE.ETLBox.ControlFlow.ControlFlow.html#ALE_ETLBox_ControlFlow_ControlFlow_AddLoggingDatabaseToConfig_ALE_ETLBox_ConnectionManager_IConnectionManager_NLog_LogLevel_System_String_
  commentId: M:ALE.ETLBox.ControlFlow.ControlFlow.AddLoggingDatabaseToConfig(ALE.ETLBox.ConnectionManager.IConnectionManager,NLog.LogLevel,System.String)
  fullName: ALE.ETLBox.ControlFlow.ControlFlow.AddLoggingDatabaseToConfig(ALE.ETLBox.ConnectionManager.IConnectionManager, NLog.LogLevel, System.String)
  nameWithType: ControlFlow.AddLoggingDatabaseToConfig(IConnectionManager, LogLevel, String)
- uid: ALE.ETLBox.ControlFlow.ControlFlow.AddLoggingDatabaseToConfig*
  name: AddLoggingDatabaseToConfig
  href: api/ALE.ETLBox.ControlFlow.ControlFlow.html#ALE_ETLBox_ControlFlow_ControlFlow_AddLoggingDatabaseToConfig_
  commentId: Overload:ALE.ETLBox.ControlFlow.ControlFlow.AddLoggingDatabaseToConfig
  isSpec: "True"
  fullName: ALE.ETLBox.ControlFlow.ControlFlow.AddLoggingDatabaseToConfig
  nameWithType: ControlFlow.AddLoggingDatabaseToConfig
- uid: ALE.ETLBox.ControlFlow.ControlFlow.ClearSettings
  name: ClearSettings()
  href: api/ALE.ETLBox.ControlFlow.ControlFlow.html#ALE_ETLBox_ControlFlow_ControlFlow_ClearSettings
  commentId: M:ALE.ETLBox.ControlFlow.ControlFlow.ClearSettings
  fullName: ALE.ETLBox.ControlFlow.ControlFlow.ClearSettings()
  nameWithType: ControlFlow.ClearSettings()
- uid: ALE.ETLBox.ControlFlow.ControlFlow.ClearSettings*
  name: ClearSettings
  href: api/ALE.ETLBox.ControlFlow.ControlFlow.html#ALE_ETLBox_ControlFlow_ControlFlow_ClearSettings_
  commentId: Overload:ALE.ETLBox.ControlFlow.ControlFlow.ClearSettings
  isSpec: "True"
  fullName: ALE.ETLBox.ControlFlow.ControlFlow.ClearSettings
  nameWithType: ControlFlow.ClearSettings
- uid: ALE.ETLBox.ControlFlow.ControlFlow.CurrentLoadProcess
  name: CurrentLoadProcess
  href: api/ALE.ETLBox.ControlFlow.ControlFlow.html#ALE_ETLBox_ControlFlow_ControlFlow_CurrentLoadProcess
  commentId: P:ALE.ETLBox.ControlFlow.ControlFlow.CurrentLoadProcess
  fullName: ALE.ETLBox.ControlFlow.ControlFlow.CurrentLoadProcess
  nameWithType: ControlFlow.CurrentLoadProcess
- uid: ALE.ETLBox.ControlFlow.ControlFlow.CurrentLoadProcess*
  name: CurrentLoadProcess
  href: api/ALE.ETLBox.ControlFlow.ControlFlow.html#ALE_ETLBox_ControlFlow_ControlFlow_CurrentLoadProcess_
  commentId: Overload:ALE.ETLBox.ControlFlow.ControlFlow.CurrentLoadProcess
  isSpec: "True"
  fullName: ALE.ETLBox.ControlFlow.ControlFlow.CurrentLoadProcess
  nameWithType: ControlFlow.CurrentLoadProcess
- uid: ALE.ETLBox.ControlFlow.ControlFlow.DefaultDbConnection
  name: DefaultDbConnection
  href: api/ALE.ETLBox.ControlFlow.ControlFlow.html#ALE_ETLBox_ControlFlow_ControlFlow_DefaultDbConnection
  commentId: P:ALE.ETLBox.ControlFlow.ControlFlow.DefaultDbConnection
  fullName: ALE.ETLBox.ControlFlow.ControlFlow.DefaultDbConnection
  nameWithType: ControlFlow.DefaultDbConnection
- uid: ALE.ETLBox.ControlFlow.ControlFlow.DefaultDbConnection*
  name: DefaultDbConnection
  href: api/ALE.ETLBox.ControlFlow.ControlFlow.html#ALE_ETLBox_ControlFlow_ControlFlow_DefaultDbConnection_
  commentId: Overload:ALE.ETLBox.ControlFlow.ControlFlow.DefaultDbConnection
  isSpec: "True"
  fullName: ALE.ETLBox.ControlFlow.ControlFlow.DefaultDbConnection
  nameWithType: ControlFlow.DefaultDbConnection
- uid: ALE.ETLBox.ControlFlow.ControlFlow.DEFAULTLOADPROCESSTABLENAME
  name: DEFAULTLOADPROCESSTABLENAME
  href: api/ALE.ETLBox.ControlFlow.ControlFlow.html#ALE_ETLBox_ControlFlow_ControlFlow_DEFAULTLOADPROCESSTABLENAME
  commentId: F:ALE.ETLBox.ControlFlow.ControlFlow.DEFAULTLOADPROCESSTABLENAME
  fullName: ALE.ETLBox.ControlFlow.ControlFlow.DEFAULTLOADPROCESSTABLENAME
  nameWithType: ControlFlow.DEFAULTLOADPROCESSTABLENAME
- uid: ALE.ETLBox.ControlFlow.ControlFlow.DEFAULTLOGTABLENAME
  name: DEFAULTLOGTABLENAME
  href: api/ALE.ETLBox.ControlFlow.ControlFlow.html#ALE_ETLBox_ControlFlow_ControlFlow_DEFAULTLOGTABLENAME
  commentId: F:ALE.ETLBox.ControlFlow.ControlFlow.DEFAULTLOGTABLENAME
  fullName: ALE.ETLBox.ControlFlow.ControlFlow.DEFAULTLOGTABLENAME
  nameWithType: ControlFlow.DEFAULTLOGTABLENAME
- uid: ALE.ETLBox.ControlFlow.ControlFlow.DisableAllLogging
  name: DisableAllLogging
  href: api/ALE.ETLBox.ControlFlow.ControlFlow.html#ALE_ETLBox_ControlFlow_ControlFlow_DisableAllLogging
  commentId: P:ALE.ETLBox.ControlFlow.ControlFlow.DisableAllLogging
  fullName: ALE.ETLBox.ControlFlow.ControlFlow.DisableAllLogging
  nameWithType: ControlFlow.DisableAllLogging
- uid: ALE.ETLBox.ControlFlow.ControlFlow.DisableAllLogging*
  name: DisableAllLogging
  href: api/ALE.ETLBox.ControlFlow.ControlFlow.html#ALE_ETLBox_ControlFlow_ControlFlow_DisableAllLogging_
  commentId: Overload:ALE.ETLBox.ControlFlow.ControlFlow.DisableAllLogging
  isSpec: "True"
  fullName: ALE.ETLBox.ControlFlow.ControlFlow.DisableAllLogging
  nameWithType: ControlFlow.DisableAllLogging
- uid: ALE.ETLBox.ControlFlow.ControlFlow.GetLogger
  name: GetLogger()
  href: api/ALE.ETLBox.ControlFlow.ControlFlow.html#ALE_ETLBox_ControlFlow_ControlFlow_GetLogger
  commentId: M:ALE.ETLBox.ControlFlow.ControlFlow.GetLogger
  fullName: ALE.ETLBox.ControlFlow.ControlFlow.GetLogger()
  nameWithType: ControlFlow.GetLogger()
- uid: ALE.ETLBox.ControlFlow.ControlFlow.GetLogger*
  name: GetLogger
  href: api/ALE.ETLBox.ControlFlow.ControlFlow.html#ALE_ETLBox_ControlFlow_ControlFlow_GetLogger_
  commentId: Overload:ALE.ETLBox.ControlFlow.ControlFlow.GetLogger
  isSpec: "True"
  fullName: ALE.ETLBox.ControlFlow.ControlFlow.GetLogger
  nameWithType: ControlFlow.GetLogger
- uid: ALE.ETLBox.ControlFlow.ControlFlow.LoadProcessTable
  name: LoadProcessTable
  href: api/ALE.ETLBox.ControlFlow.ControlFlow.html#ALE_ETLBox_ControlFlow_ControlFlow_LoadProcessTable
  commentId: P:ALE.ETLBox.ControlFlow.ControlFlow.LoadProcessTable
  fullName: ALE.ETLBox.ControlFlow.ControlFlow.LoadProcessTable
  nameWithType: ControlFlow.LoadProcessTable
- uid: ALE.ETLBox.ControlFlow.ControlFlow.LoadProcessTable*
  name: LoadProcessTable
  href: api/ALE.ETLBox.ControlFlow.ControlFlow.html#ALE_ETLBox_ControlFlow_ControlFlow_LoadProcessTable_
  commentId: Overload:ALE.ETLBox.ControlFlow.ControlFlow.LoadProcessTable
  isSpec: "True"
  fullName: ALE.ETLBox.ControlFlow.ControlFlow.LoadProcessTable
  nameWithType: ControlFlow.LoadProcessTable
- uid: ALE.ETLBox.ControlFlow.ControlFlow.LogTable
  name: LogTable
  href: api/ALE.ETLBox.ControlFlow.ControlFlow.html#ALE_ETLBox_ControlFlow_ControlFlow_LogTable
  commentId: P:ALE.ETLBox.ControlFlow.ControlFlow.LogTable
  fullName: ALE.ETLBox.ControlFlow.ControlFlow.LogTable
  nameWithType: ControlFlow.LogTable
- uid: ALE.ETLBox.ControlFlow.ControlFlow.LogTable*
  name: LogTable
  href: api/ALE.ETLBox.ControlFlow.ControlFlow.html#ALE_ETLBox_ControlFlow_ControlFlow_LogTable_
  commentId: Overload:ALE.ETLBox.ControlFlow.ControlFlow.LogTable
  isSpec: "True"
  fullName: ALE.ETLBox.ControlFlow.ControlFlow.LogTable
  nameWithType: ControlFlow.LogTable
- uid: ALE.ETLBox.ControlFlow.ControlFlow.STAGE
  name: STAGE
  href: api/ALE.ETLBox.ControlFlow.ControlFlow.html#ALE_ETLBox_ControlFlow_ControlFlow_STAGE
  commentId: P:ALE.ETLBox.ControlFlow.ControlFlow.STAGE
  fullName: ALE.ETLBox.ControlFlow.ControlFlow.STAGE
  nameWithType: ControlFlow.STAGE
- uid: ALE.ETLBox.ControlFlow.ControlFlow.STAGE*
  name: STAGE
  href: api/ALE.ETLBox.ControlFlow.ControlFlow.html#ALE_ETLBox_ControlFlow_ControlFlow_STAGE_
  commentId: Overload:ALE.ETLBox.ControlFlow.ControlFlow.STAGE
  isSpec: "True"
  fullName: ALE.ETLBox.ControlFlow.ControlFlow.STAGE
  nameWithType: ControlFlow.STAGE
- uid: ALE.ETLBox.ControlFlow.CreateDatabaseTask
  name: CreateDatabaseTask
  href: api/ALE.ETLBox.ControlFlow.CreateDatabaseTask.html
  commentId: T:ALE.ETLBox.ControlFlow.CreateDatabaseTask
  fullName: ALE.ETLBox.ControlFlow.CreateDatabaseTask
  nameWithType: CreateDatabaseTask
- uid: ALE.ETLBox.ControlFlow.CreateDatabaseTask.#ctor
  name: CreateDatabaseTask()
  href: api/ALE.ETLBox.ControlFlow.CreateDatabaseTask.html#ALE_ETLBox_ControlFlow_CreateDatabaseTask__ctor
  commentId: M:ALE.ETLBox.ControlFlow.CreateDatabaseTask.#ctor
  fullName: ALE.ETLBox.ControlFlow.CreateDatabaseTask.CreateDatabaseTask()
  nameWithType: CreateDatabaseTask.CreateDatabaseTask()
- uid: ALE.ETLBox.ControlFlow.CreateDatabaseTask.#ctor(System.String)
  name: CreateDatabaseTask(String)
  href: api/ALE.ETLBox.ControlFlow.CreateDatabaseTask.html#ALE_ETLBox_ControlFlow_CreateDatabaseTask__ctor_System_String_
  commentId: M:ALE.ETLBox.ControlFlow.CreateDatabaseTask.#ctor(System.String)
  fullName: ALE.ETLBox.ControlFlow.CreateDatabaseTask.CreateDatabaseTask(System.String)
  nameWithType: CreateDatabaseTask.CreateDatabaseTask(String)
- uid: ALE.ETLBox.ControlFlow.CreateDatabaseTask.#ctor(System.String,System.String)
  name: CreateDatabaseTask(String, String)
  href: api/ALE.ETLBox.ControlFlow.CreateDatabaseTask.html#ALE_ETLBox_ControlFlow_CreateDatabaseTask__ctor_System_String_System_String_
  commentId: M:ALE.ETLBox.ControlFlow.CreateDatabaseTask.#ctor(System.String,System.String)
  fullName: ALE.ETLBox.ControlFlow.CreateDatabaseTask.CreateDatabaseTask(System.String, System.String)
  nameWithType: CreateDatabaseTask.CreateDatabaseTask(String, String)
- uid: ALE.ETLBox.ControlFlow.CreateDatabaseTask.#ctor*
  name: CreateDatabaseTask
  href: api/ALE.ETLBox.ControlFlow.CreateDatabaseTask.html#ALE_ETLBox_ControlFlow_CreateDatabaseTask__ctor_
  commentId: Overload:ALE.ETLBox.ControlFlow.CreateDatabaseTask.#ctor
  isSpec: "True"
  fullName: ALE.ETLBox.ControlFlow.CreateDatabaseTask.CreateDatabaseTask
  nameWithType: CreateDatabaseTask.CreateDatabaseTask
- uid: ALE.ETLBox.ControlFlow.CreateDatabaseTask.Collation
  name: Collation
  href: api/ALE.ETLBox.ControlFlow.CreateDatabaseTask.html#ALE_ETLBox_ControlFlow_CreateDatabaseTask_Collation
  commentId: P:ALE.ETLBox.ControlFlow.CreateDatabaseTask.Collation
  fullName: ALE.ETLBox.ControlFlow.CreateDatabaseTask.Collation
  nameWithType: CreateDatabaseTask.Collation
- uid: ALE.ETLBox.ControlFlow.CreateDatabaseTask.Collation*
  name: Collation
  href: api/ALE.ETLBox.ControlFlow.CreateDatabaseTask.html#ALE_ETLBox_ControlFlow_CreateDatabaseTask_Collation_
  commentId: Overload:ALE.ETLBox.ControlFlow.CreateDatabaseTask.Collation
  isSpec: "True"
  fullName: ALE.ETLBox.ControlFlow.CreateDatabaseTask.Collation
  nameWithType: CreateDatabaseTask.Collation
- uid: ALE.ETLBox.ControlFlow.CreateDatabaseTask.Create
  name: Create()
  href: api/ALE.ETLBox.ControlFlow.CreateDatabaseTask.html#ALE_ETLBox_ControlFlow_CreateDatabaseTask_Create
  commentId: M:ALE.ETLBox.ControlFlow.CreateDatabaseTask.Create
  fullName: ALE.ETLBox.ControlFlow.CreateDatabaseTask.Create()
  nameWithType: CreateDatabaseTask.Create()
- uid: ALE.ETLBox.ControlFlow.CreateDatabaseTask.Create(ALE.ETLBox.ConnectionManager.IConnectionManager,System.String)
  name: Create(IConnectionManager, String)
  href: api/ALE.ETLBox.ControlFlow.CreateDatabaseTask.html#ALE_ETLBox_ControlFlow_CreateDatabaseTask_Create_ALE_ETLBox_ConnectionManager_IConnectionManager_System_String_
  commentId: M:ALE.ETLBox.ControlFlow.CreateDatabaseTask.Create(ALE.ETLBox.ConnectionManager.IConnectionManager,System.String)
  fullName: ALE.ETLBox.ControlFlow.CreateDatabaseTask.Create(ALE.ETLBox.ConnectionManager.IConnectionManager, System.String)
  nameWithType: CreateDatabaseTask.Create(IConnectionManager, String)
- uid: ALE.ETLBox.ControlFlow.CreateDatabaseTask.Create(ALE.ETLBox.ConnectionManager.IConnectionManager,System.String,System.String)
  name: Create(IConnectionManager, String, String)
  href: api/ALE.ETLBox.ControlFlow.CreateDatabaseTask.html#ALE_ETLBox_ControlFlow_CreateDatabaseTask_Create_ALE_ETLBox_ConnectionManager_IConnectionManager_System_String_System_String_
  commentId: M:ALE.ETLBox.ControlFlow.CreateDatabaseTask.Create(ALE.ETLBox.ConnectionManager.IConnectionManager,System.String,System.String)
  fullName: ALE.ETLBox.ControlFlow.CreateDatabaseTask.Create(ALE.ETLBox.ConnectionManager.IConnectionManager, System.String, System.String)
  nameWithType: CreateDatabaseTask.Create(IConnectionManager, String, String)
- uid: ALE.ETLBox.ControlFlow.CreateDatabaseTask.Create(System.String)
  name: Create(String)
  href: api/ALE.ETLBox.ControlFlow.CreateDatabaseTask.html#ALE_ETLBox_ControlFlow_CreateDatabaseTask_Create_System_String_
  commentId: M:ALE.ETLBox.ControlFlow.CreateDatabaseTask.Create(System.String)
  fullName: ALE.ETLBox.ControlFlow.CreateDatabaseTask.Create(System.String)
  nameWithType: CreateDatabaseTask.Create(String)
- uid: ALE.ETLBox.ControlFlow.CreateDatabaseTask.Create(System.String,System.String)
  name: Create(String, String)
  href: api/ALE.ETLBox.ControlFlow.CreateDatabaseTask.html#ALE_ETLBox_ControlFlow_CreateDatabaseTask_Create_System_String_System_String_
  commentId: M:ALE.ETLBox.ControlFlow.CreateDatabaseTask.Create(System.String,System.String)
  fullName: ALE.ETLBox.ControlFlow.CreateDatabaseTask.Create(System.String, System.String)
  nameWithType: CreateDatabaseTask.Create(String, String)
- uid: ALE.ETLBox.ControlFlow.CreateDatabaseTask.Create*
  name: Create
  href: api/ALE.ETLBox.ControlFlow.CreateDatabaseTask.html#ALE_ETLBox_ControlFlow_CreateDatabaseTask_Create_
  commentId: Overload:ALE.ETLBox.ControlFlow.CreateDatabaseTask.Create
  isSpec: "True"
  fullName: ALE.ETLBox.ControlFlow.CreateDatabaseTask.Create
  nameWithType: CreateDatabaseTask.Create
- uid: ALE.ETLBox.ControlFlow.CreateDatabaseTask.DatabaseName
  name: DatabaseName
  href: api/ALE.ETLBox.ControlFlow.CreateDatabaseTask.html#ALE_ETLBox_ControlFlow_CreateDatabaseTask_DatabaseName
  commentId: P:ALE.ETLBox.ControlFlow.CreateDatabaseTask.DatabaseName
  fullName: ALE.ETLBox.ControlFlow.CreateDatabaseTask.DatabaseName
  nameWithType: CreateDatabaseTask.DatabaseName
- uid: ALE.ETLBox.ControlFlow.CreateDatabaseTask.DatabaseName*
  name: DatabaseName
  href: api/ALE.ETLBox.ControlFlow.CreateDatabaseTask.html#ALE_ETLBox_ControlFlow_CreateDatabaseTask_DatabaseName_
  commentId: Overload:ALE.ETLBox.ControlFlow.CreateDatabaseTask.DatabaseName
  isSpec: "True"
  fullName: ALE.ETLBox.ControlFlow.CreateDatabaseTask.DatabaseName
  nameWithType: CreateDatabaseTask.DatabaseName
- uid: ALE.ETLBox.ControlFlow.CreateDatabaseTask.Execute
  name: Execute()
  href: api/ALE.ETLBox.ControlFlow.CreateDatabaseTask.html#ALE_ETLBox_ControlFlow_CreateDatabaseTask_Execute
  commentId: M:ALE.ETLBox.ControlFlow.CreateDatabaseTask.Execute
  fullName: ALE.ETLBox.ControlFlow.CreateDatabaseTask.Execute()
  nameWithType: CreateDatabaseTask.Execute()
- uid: ALE.ETLBox.ControlFlow.CreateDatabaseTask.Execute*
  name: Execute
  href: api/ALE.ETLBox.ControlFlow.CreateDatabaseTask.html#ALE_ETLBox_ControlFlow_CreateDatabaseTask_Execute_
  commentId: Overload:ALE.ETLBox.ControlFlow.CreateDatabaseTask.Execute
  isSpec: "True"
  fullName: ALE.ETLBox.ControlFlow.CreateDatabaseTask.Execute
  nameWithType: CreateDatabaseTask.Execute
- uid: ALE.ETLBox.ControlFlow.CreateDatabaseTask.RecoveryModel
  name: RecoveryModel
  href: api/ALE.ETLBox.ControlFlow.CreateDatabaseTask.html#ALE_ETLBox_ControlFlow_CreateDatabaseTask_RecoveryModel
  commentId: P:ALE.ETLBox.ControlFlow.CreateDatabaseTask.RecoveryModel
  fullName: ALE.ETLBox.ControlFlow.CreateDatabaseTask.RecoveryModel
  nameWithType: CreateDatabaseTask.RecoveryModel
- uid: ALE.ETLBox.ControlFlow.CreateDatabaseTask.RecoveryModel*
  name: RecoveryModel
  href: api/ALE.ETLBox.ControlFlow.CreateDatabaseTask.html#ALE_ETLBox_ControlFlow_CreateDatabaseTask_RecoveryModel_
  commentId: Overload:ALE.ETLBox.ControlFlow.CreateDatabaseTask.RecoveryModel
  isSpec: "True"
  fullName: ALE.ETLBox.ControlFlow.CreateDatabaseTask.RecoveryModel
  nameWithType: CreateDatabaseTask.RecoveryModel
- uid: ALE.ETLBox.ControlFlow.CreateDatabaseTask.Sql
  name: Sql
  href: api/ALE.ETLBox.ControlFlow.CreateDatabaseTask.html#ALE_ETLBox_ControlFlow_CreateDatabaseTask_Sql
  commentId: P:ALE.ETLBox.ControlFlow.CreateDatabaseTask.Sql
  fullName: ALE.ETLBox.ControlFlow.CreateDatabaseTask.Sql
  nameWithType: CreateDatabaseTask.Sql
- uid: ALE.ETLBox.ControlFlow.CreateDatabaseTask.Sql*
  name: Sql
  href: api/ALE.ETLBox.ControlFlow.CreateDatabaseTask.html#ALE_ETLBox_ControlFlow_CreateDatabaseTask_Sql_
  commentId: Overload:ALE.ETLBox.ControlFlow.CreateDatabaseTask.Sql
  isSpec: "True"
  fullName: ALE.ETLBox.ControlFlow.CreateDatabaseTask.Sql
  nameWithType: CreateDatabaseTask.Sql
- uid: ALE.ETLBox.ControlFlow.CreateDatabaseTask.TaskName
  name: TaskName
  href: api/ALE.ETLBox.ControlFlow.CreateDatabaseTask.html#ALE_ETLBox_ControlFlow_CreateDatabaseTask_TaskName
  commentId: P:ALE.ETLBox.ControlFlow.CreateDatabaseTask.TaskName
  fullName: ALE.ETLBox.ControlFlow.CreateDatabaseTask.TaskName
  nameWithType: CreateDatabaseTask.TaskName
- uid: ALE.ETLBox.ControlFlow.CreateDatabaseTask.TaskName*
  name: TaskName
  href: api/ALE.ETLBox.ControlFlow.CreateDatabaseTask.html#ALE_ETLBox_ControlFlow_CreateDatabaseTask_TaskName_
  commentId: Overload:ALE.ETLBox.ControlFlow.CreateDatabaseTask.TaskName
  isSpec: "True"
  fullName: ALE.ETLBox.ControlFlow.CreateDatabaseTask.TaskName
  nameWithType: CreateDatabaseTask.TaskName
- uid: ALE.ETLBox.ControlFlow.CreateIndexTask
  name: CreateIndexTask
  href: api/ALE.ETLBox.ControlFlow.CreateIndexTask.html
  commentId: T:ALE.ETLBox.ControlFlow.CreateIndexTask
  fullName: ALE.ETLBox.ControlFlow.CreateIndexTask
  nameWithType: CreateIndexTask
- uid: ALE.ETLBox.ControlFlow.CreateIndexTask.#ctor
  name: CreateIndexTask()
  href: api/ALE.ETLBox.ControlFlow.CreateIndexTask.html#ALE_ETLBox_ControlFlow_CreateIndexTask__ctor
  commentId: M:ALE.ETLBox.ControlFlow.CreateIndexTask.#ctor
  fullName: ALE.ETLBox.ControlFlow.CreateIndexTask.CreateIndexTask()
  nameWithType: CreateIndexTask.CreateIndexTask()
- uid: ALE.ETLBox.ControlFlow.CreateIndexTask.#ctor(System.String,System.String,System.Collections.Generic.IList{System.String})
  name: CreateIndexTask(String, String, IList<String>)
  href: api/ALE.ETLBox.ControlFlow.CreateIndexTask.html#ALE_ETLBox_ControlFlow_CreateIndexTask__ctor_System_String_System_String_System_Collections_Generic_IList_System_String__
  commentId: M:ALE.ETLBox.ControlFlow.CreateIndexTask.#ctor(System.String,System.String,System.Collections.Generic.IList{System.String})
  name.vb: CreateIndexTask(String, String, IList(Of String))
  fullName: ALE.ETLBox.ControlFlow.CreateIndexTask.CreateIndexTask(System.String, System.String, System.Collections.Generic.IList<System.String>)
  fullName.vb: ALE.ETLBox.ControlFlow.CreateIndexTask.CreateIndexTask(System.String, System.String, System.Collections.Generic.IList(Of System.String))
  nameWithType: CreateIndexTask.CreateIndexTask(String, String, IList<String>)
  nameWithType.vb: CreateIndexTask.CreateIndexTask(String, String, IList(Of String))
- uid: ALE.ETLBox.ControlFlow.CreateIndexTask.#ctor(System.String,System.String,System.Collections.Generic.IList{System.String},System.Collections.Generic.IList{System.String})
  name: CreateIndexTask(String, String, IList<String>, IList<String>)
  href: api/ALE.ETLBox.ControlFlow.CreateIndexTask.html#ALE_ETLBox_ControlFlow_CreateIndexTask__ctor_System_String_System_String_System_Collections_Generic_IList_System_String__System_Collections_Generic_IList_System_String__
  commentId: M:ALE.ETLBox.ControlFlow.CreateIndexTask.#ctor(System.String,System.String,System.Collections.Generic.IList{System.String},System.Collections.Generic.IList{System.String})
  name.vb: CreateIndexTask(String, String, IList(Of String), IList(Of String))
  fullName: ALE.ETLBox.ControlFlow.CreateIndexTask.CreateIndexTask(System.String, System.String, System.Collections.Generic.IList<System.String>, System.Collections.Generic.IList<System.String>)
  fullName.vb: ALE.ETLBox.ControlFlow.CreateIndexTask.CreateIndexTask(System.String, System.String, System.Collections.Generic.IList(Of System.String), System.Collections.Generic.IList(Of System.String))
  nameWithType: CreateIndexTask.CreateIndexTask(String, String, IList<String>, IList<String>)
  nameWithType.vb: CreateIndexTask.CreateIndexTask(String, String, IList(Of String), IList(Of String))
- uid: ALE.ETLBox.ControlFlow.CreateIndexTask.#ctor*
  name: CreateIndexTask
  href: api/ALE.ETLBox.ControlFlow.CreateIndexTask.html#ALE_ETLBox_ControlFlow_CreateIndexTask__ctor_
  commentId: Overload:ALE.ETLBox.ControlFlow.CreateIndexTask.#ctor
  isSpec: "True"
  fullName: ALE.ETLBox.ControlFlow.CreateIndexTask.CreateIndexTask
  nameWithType: CreateIndexTask.CreateIndexTask
- uid: ALE.ETLBox.ControlFlow.CreateIndexTask.CreateOrRecrate
  name: CreateOrRecrate()
  href: api/ALE.ETLBox.ControlFlow.CreateIndexTask.html#ALE_ETLBox_ControlFlow_CreateIndexTask_CreateOrRecrate
  commentId: M:ALE.ETLBox.ControlFlow.CreateIndexTask.CreateOrRecrate
  fullName: ALE.ETLBox.ControlFlow.CreateIndexTask.CreateOrRecrate()
  nameWithType: CreateIndexTask.CreateOrRecrate()
- uid: ALE.ETLBox.ControlFlow.CreateIndexTask.CreateOrRecrate*
  name: CreateOrRecrate
  href: api/ALE.ETLBox.ControlFlow.CreateIndexTask.html#ALE_ETLBox_ControlFlow_CreateIndexTask_CreateOrRecrate_
  commentId: Overload:ALE.ETLBox.ControlFlow.CreateIndexTask.CreateOrRecrate
  isSpec: "True"
  fullName: ALE.ETLBox.ControlFlow.CreateIndexTask.CreateOrRecrate
  nameWithType: CreateIndexTask.CreateOrRecrate
- uid: ALE.ETLBox.ControlFlow.CreateIndexTask.CreateOrRecreate(ALE.ETLBox.ConnectionManager.IConnectionManager,System.String,System.String,System.Collections.Generic.IList{System.String})
  name: CreateOrRecreate(IConnectionManager, String, String, IList<String>)
  href: api/ALE.ETLBox.ControlFlow.CreateIndexTask.html#ALE_ETLBox_ControlFlow_CreateIndexTask_CreateOrRecreate_ALE_ETLBox_ConnectionManager_IConnectionManager_System_String_System_String_System_Collections_Generic_IList_System_String__
  commentId: M:ALE.ETLBox.ControlFlow.CreateIndexTask.CreateOrRecreate(ALE.ETLBox.ConnectionManager.IConnectionManager,System.String,System.String,System.Collections.Generic.IList{System.String})
  name.vb: CreateOrRecreate(IConnectionManager, String, String, IList(Of String))
  fullName: ALE.ETLBox.ControlFlow.CreateIndexTask.CreateOrRecreate(ALE.ETLBox.ConnectionManager.IConnectionManager, System.String, System.String, System.Collections.Generic.IList<System.String>)
  fullName.vb: ALE.ETLBox.ControlFlow.CreateIndexTask.CreateOrRecreate(ALE.ETLBox.ConnectionManager.IConnectionManager, System.String, System.String, System.Collections.Generic.IList(Of System.String))
  nameWithType: CreateIndexTask.CreateOrRecreate(IConnectionManager, String, String, IList<String>)
  nameWithType.vb: CreateIndexTask.CreateOrRecreate(IConnectionManager, String, String, IList(Of String))
- uid: ALE.ETLBox.ControlFlow.CreateIndexTask.CreateOrRecreate(ALE.ETLBox.ConnectionManager.IConnectionManager,System.String,System.String,System.Collections.Generic.IList{System.String},System.Collections.Generic.IList{System.String})
  name: CreateOrRecreate(IConnectionManager, String, String, IList<String>, IList<String>)
  href: api/ALE.ETLBox.ControlFlow.CreateIndexTask.html#ALE_ETLBox_ControlFlow_CreateIndexTask_CreateOrRecreate_ALE_ETLBox_ConnectionManager_IConnectionManager_System_String_System_String_System_Collections_Generic_IList_System_String__System_Collections_Generic_IList_System_String__
  commentId: M:ALE.ETLBox.ControlFlow.CreateIndexTask.CreateOrRecreate(ALE.ETLBox.ConnectionManager.IConnectionManager,System.String,System.String,System.Collections.Generic.IList{System.String},System.Collections.Generic.IList{System.String})
  name.vb: CreateOrRecreate(IConnectionManager, String, String, IList(Of String), IList(Of String))
  fullName: ALE.ETLBox.ControlFlow.CreateIndexTask.CreateOrRecreate(ALE.ETLBox.ConnectionManager.IConnectionManager, System.String, System.String, System.Collections.Generic.IList<System.String>, System.Collections.Generic.IList<System.String>)
  fullName.vb: ALE.ETLBox.ControlFlow.CreateIndexTask.CreateOrRecreate(ALE.ETLBox.ConnectionManager.IConnectionManager, System.String, System.String, System.Collections.Generic.IList(Of System.String), System.Collections.Generic.IList(Of System.String))
  nameWithType: CreateIndexTask.CreateOrRecreate(IConnectionManager, String, String, IList<String>, IList<String>)
  nameWithType.vb: CreateIndexTask.CreateOrRecreate(IConnectionManager, String, String, IList(Of String), IList(Of String))
- uid: ALE.ETLBox.ControlFlow.CreateIndexTask.CreateOrRecreate(System.String,System.String,System.Collections.Generic.IList{System.String})
  name: CreateOrRecreate(String, String, IList<String>)
  href: api/ALE.ETLBox.ControlFlow.CreateIndexTask.html#ALE_ETLBox_ControlFlow_CreateIndexTask_CreateOrRecreate_System_String_System_String_System_Collections_Generic_IList_System_String__
  commentId: M:ALE.ETLBox.ControlFlow.CreateIndexTask.CreateOrRecreate(System.String,System.String,System.Collections.Generic.IList{System.String})
  name.vb: CreateOrRecreate(String, String, IList(Of String))
  fullName: ALE.ETLBox.ControlFlow.CreateIndexTask.CreateOrRecreate(System.String, System.String, System.Collections.Generic.IList<System.String>)
  fullName.vb: ALE.ETLBox.ControlFlow.CreateIndexTask.CreateOrRecreate(System.String, System.String, System.Collections.Generic.IList(Of System.String))
  nameWithType: CreateIndexTask.CreateOrRecreate(String, String, IList<String>)
  nameWithType.vb: CreateIndexTask.CreateOrRecreate(String, String, IList(Of String))
- uid: ALE.ETLBox.ControlFlow.CreateIndexTask.CreateOrRecreate(System.String,System.String,System.Collections.Generic.IList{System.String},System.Collections.Generic.IList{System.String})
  name: CreateOrRecreate(String, String, IList<String>, IList<String>)
  href: api/ALE.ETLBox.ControlFlow.CreateIndexTask.html#ALE_ETLBox_ControlFlow_CreateIndexTask_CreateOrRecreate_System_String_System_String_System_Collections_Generic_IList_System_String__System_Collections_Generic_IList_System_String__
  commentId: M:ALE.ETLBox.ControlFlow.CreateIndexTask.CreateOrRecreate(System.String,System.String,System.Collections.Generic.IList{System.String},System.Collections.Generic.IList{System.String})
  name.vb: CreateOrRecreate(String, String, IList(Of String), IList(Of String))
  fullName: ALE.ETLBox.ControlFlow.CreateIndexTask.CreateOrRecreate(System.String, System.String, System.Collections.Generic.IList<System.String>, System.Collections.Generic.IList<System.String>)
  fullName.vb: ALE.ETLBox.ControlFlow.CreateIndexTask.CreateOrRecreate(System.String, System.String, System.Collections.Generic.IList(Of System.String), System.Collections.Generic.IList(Of System.String))
  nameWithType: CreateIndexTask.CreateOrRecreate(String, String, IList<String>, IList<String>)
  nameWithType.vb: CreateIndexTask.CreateOrRecreate(String, String, IList(Of String), IList(Of String))
- uid: ALE.ETLBox.ControlFlow.CreateIndexTask.CreateOrRecreate*
  name: CreateOrRecreate
  href: api/ALE.ETLBox.ControlFlow.CreateIndexTask.html#ALE_ETLBox_ControlFlow_CreateIndexTask_CreateOrRecreate_
  commentId: Overload:ALE.ETLBox.ControlFlow.CreateIndexTask.CreateOrRecreate
  isSpec: "True"
  fullName: ALE.ETLBox.ControlFlow.CreateIndexTask.CreateOrRecreate
  nameWithType: CreateIndexTask.CreateOrRecreate
- uid: ALE.ETLBox.ControlFlow.CreateIndexTask.Execute
  name: Execute()
  href: api/ALE.ETLBox.ControlFlow.CreateIndexTask.html#ALE_ETLBox_ControlFlow_CreateIndexTask_Execute
  commentId: M:ALE.ETLBox.ControlFlow.CreateIndexTask.Execute
  fullName: ALE.ETLBox.ControlFlow.CreateIndexTask.Execute()
  nameWithType: CreateIndexTask.Execute()
- uid: ALE.ETLBox.ControlFlow.CreateIndexTask.Execute*
  name: Execute
  href: api/ALE.ETLBox.ControlFlow.CreateIndexTask.html#ALE_ETLBox_ControlFlow_CreateIndexTask_Execute_
  commentId: Overload:ALE.ETLBox.ControlFlow.CreateIndexTask.Execute
  isSpec: "True"
  fullName: ALE.ETLBox.ControlFlow.CreateIndexTask.Execute
  nameWithType: CreateIndexTask.Execute
- uid: ALE.ETLBox.ControlFlow.CreateIndexTask.IN
  name: IN
  href: api/ALE.ETLBox.ControlFlow.CreateIndexTask.html#ALE_ETLBox_ControlFlow_CreateIndexTask_IN
  commentId: P:ALE.ETLBox.ControlFlow.CreateIndexTask.IN
  fullName: ALE.ETLBox.ControlFlow.CreateIndexTask.IN
  nameWithType: CreateIndexTask.IN
- uid: ALE.ETLBox.ControlFlow.CreateIndexTask.IN*
  name: IN
  href: api/ALE.ETLBox.ControlFlow.CreateIndexTask.html#ALE_ETLBox_ControlFlow_CreateIndexTask_IN_
  commentId: Overload:ALE.ETLBox.ControlFlow.CreateIndexTask.IN
  isSpec: "True"
  fullName: ALE.ETLBox.ControlFlow.CreateIndexTask.IN
  nameWithType: CreateIndexTask.IN
- uid: ALE.ETLBox.ControlFlow.CreateIndexTask.IncludeColumns
  name: IncludeColumns
  href: api/ALE.ETLBox.ControlFlow.CreateIndexTask.html#ALE_ETLBox_ControlFlow_CreateIndexTask_IncludeColumns
  commentId: P:ALE.ETLBox.ControlFlow.CreateIndexTask.IncludeColumns
  fullName: ALE.ETLBox.ControlFlow.CreateIndexTask.IncludeColumns
  nameWithType: CreateIndexTask.IncludeColumns
- uid: ALE.ETLBox.ControlFlow.CreateIndexTask.IncludeColumns*
  name: IncludeColumns
  href: api/ALE.ETLBox.ControlFlow.CreateIndexTask.html#ALE_ETLBox_ControlFlow_CreateIndexTask_IncludeColumns_
  commentId: Overload:ALE.ETLBox.ControlFlow.CreateIndexTask.IncludeColumns
  isSpec: "True"
  fullName: ALE.ETLBox.ControlFlow.CreateIndexTask.IncludeColumns
  nameWithType: CreateIndexTask.IncludeColumns
- uid: ALE.ETLBox.ControlFlow.CreateIndexTask.IndexColumns
  name: IndexColumns
  href: api/ALE.ETLBox.ControlFlow.CreateIndexTask.html#ALE_ETLBox_ControlFlow_CreateIndexTask_IndexColumns
  commentId: P:ALE.ETLBox.ControlFlow.CreateIndexTask.IndexColumns
  fullName: ALE.ETLBox.ControlFlow.CreateIndexTask.IndexColumns
  nameWithType: CreateIndexTask.IndexColumns
- uid: ALE.ETLBox.ControlFlow.CreateIndexTask.IndexColumns*
  name: IndexColumns
  href: api/ALE.ETLBox.ControlFlow.CreateIndexTask.html#ALE_ETLBox_ControlFlow_CreateIndexTask_IndexColumns_
  commentId: Overload:ALE.ETLBox.ControlFlow.CreateIndexTask.IndexColumns
  isSpec: "True"
  fullName: ALE.ETLBox.ControlFlow.CreateIndexTask.IndexColumns
  nameWithType: CreateIndexTask.IndexColumns
- uid: ALE.ETLBox.ControlFlow.CreateIndexTask.IndexName
  name: IndexName
  href: api/ALE.ETLBox.ControlFlow.CreateIndexTask.html#ALE_ETLBox_ControlFlow_CreateIndexTask_IndexName
  commentId: P:ALE.ETLBox.ControlFlow.CreateIndexTask.IndexName
  fullName: ALE.ETLBox.ControlFlow.CreateIndexTask.IndexName
  nameWithType: CreateIndexTask.IndexName
- uid: ALE.ETLBox.ControlFlow.CreateIndexTask.IndexName*
  name: IndexName
  href: api/ALE.ETLBox.ControlFlow.CreateIndexTask.html#ALE_ETLBox_ControlFlow_CreateIndexTask_IndexName_
  commentId: Overload:ALE.ETLBox.ControlFlow.CreateIndexTask.IndexName
  isSpec: "True"
  fullName: ALE.ETLBox.ControlFlow.CreateIndexTask.IndexName
  nameWithType: CreateIndexTask.IndexName
- uid: ALE.ETLBox.ControlFlow.CreateIndexTask.IsClustered
  name: IsClustered
  href: api/ALE.ETLBox.ControlFlow.CreateIndexTask.html#ALE_ETLBox_ControlFlow_CreateIndexTask_IsClustered
  commentId: P:ALE.ETLBox.ControlFlow.CreateIndexTask.IsClustered
  fullName: ALE.ETLBox.ControlFlow.CreateIndexTask.IsClustered
  nameWithType: CreateIndexTask.IsClustered
- uid: ALE.ETLBox.ControlFlow.CreateIndexTask.IsClustered*
  name: IsClustered
  href: api/ALE.ETLBox.ControlFlow.CreateIndexTask.html#ALE_ETLBox_ControlFlow_CreateIndexTask_IsClustered_
  commentId: Overload:ALE.ETLBox.ControlFlow.CreateIndexTask.IsClustered
  isSpec: "True"
  fullName: ALE.ETLBox.ControlFlow.CreateIndexTask.IsClustered
  nameWithType: CreateIndexTask.IsClustered
- uid: ALE.ETLBox.ControlFlow.CreateIndexTask.IsUnique
  name: IsUnique
  href: api/ALE.ETLBox.ControlFlow.CreateIndexTask.html#ALE_ETLBox_ControlFlow_CreateIndexTask_IsUnique
  commentId: P:ALE.ETLBox.ControlFlow.CreateIndexTask.IsUnique
  fullName: ALE.ETLBox.ControlFlow.CreateIndexTask.IsUnique
  nameWithType: CreateIndexTask.IsUnique
- uid: ALE.ETLBox.ControlFlow.CreateIndexTask.IsUnique*
  name: IsUnique
  href: api/ALE.ETLBox.ControlFlow.CreateIndexTask.html#ALE_ETLBox_ControlFlow_CreateIndexTask_IsUnique_
  commentId: Overload:ALE.ETLBox.ControlFlow.CreateIndexTask.IsUnique
  isSpec: "True"
  fullName: ALE.ETLBox.ControlFlow.CreateIndexTask.IsUnique
  nameWithType: CreateIndexTask.IsUnique
- uid: ALE.ETLBox.ControlFlow.CreateIndexTask.Sql
  name: Sql
  href: api/ALE.ETLBox.ControlFlow.CreateIndexTask.html#ALE_ETLBox_ControlFlow_CreateIndexTask_Sql
  commentId: P:ALE.ETLBox.ControlFlow.CreateIndexTask.Sql
  fullName: ALE.ETLBox.ControlFlow.CreateIndexTask.Sql
  nameWithType: CreateIndexTask.Sql
- uid: ALE.ETLBox.ControlFlow.CreateIndexTask.Sql*
  name: Sql
  href: api/ALE.ETLBox.ControlFlow.CreateIndexTask.html#ALE_ETLBox_ControlFlow_CreateIndexTask_Sql_
  commentId: Overload:ALE.ETLBox.ControlFlow.CreateIndexTask.Sql
  isSpec: "True"
  fullName: ALE.ETLBox.ControlFlow.CreateIndexTask.Sql
  nameWithType: CreateIndexTask.Sql
- uid: ALE.ETLBox.ControlFlow.CreateIndexTask.TableName
  name: TableName
  href: api/ALE.ETLBox.ControlFlow.CreateIndexTask.html#ALE_ETLBox_ControlFlow_CreateIndexTask_TableName
  commentId: P:ALE.ETLBox.ControlFlow.CreateIndexTask.TableName
  fullName: ALE.ETLBox.ControlFlow.CreateIndexTask.TableName
  nameWithType: CreateIndexTask.TableName
- uid: ALE.ETLBox.ControlFlow.CreateIndexTask.TableName*
  name: TableName
  href: api/ALE.ETLBox.ControlFlow.CreateIndexTask.html#ALE_ETLBox_ControlFlow_CreateIndexTask_TableName_
  commentId: Overload:ALE.ETLBox.ControlFlow.CreateIndexTask.TableName
  isSpec: "True"
  fullName: ALE.ETLBox.ControlFlow.CreateIndexTask.TableName
  nameWithType: CreateIndexTask.TableName
- uid: ALE.ETLBox.ControlFlow.CreateIndexTask.TaskName
  name: TaskName
  href: api/ALE.ETLBox.ControlFlow.CreateIndexTask.html#ALE_ETLBox_ControlFlow_CreateIndexTask_TaskName
  commentId: P:ALE.ETLBox.ControlFlow.CreateIndexTask.TaskName
  fullName: ALE.ETLBox.ControlFlow.CreateIndexTask.TaskName
  nameWithType: CreateIndexTask.TaskName
- uid: ALE.ETLBox.ControlFlow.CreateIndexTask.TaskName*
  name: TaskName
  href: api/ALE.ETLBox.ControlFlow.CreateIndexTask.html#ALE_ETLBox_ControlFlow_CreateIndexTask_TaskName_
  commentId: Overload:ALE.ETLBox.ControlFlow.CreateIndexTask.TaskName
  isSpec: "True"
  fullName: ALE.ETLBox.ControlFlow.CreateIndexTask.TaskName
  nameWithType: CreateIndexTask.TaskName
- uid: ALE.ETLBox.ControlFlow.CreateIndexTask.TN
  name: TN
  href: api/ALE.ETLBox.ControlFlow.CreateIndexTask.html#ALE_ETLBox_ControlFlow_CreateIndexTask_TN
  commentId: P:ALE.ETLBox.ControlFlow.CreateIndexTask.TN
  fullName: ALE.ETLBox.ControlFlow.CreateIndexTask.TN
  nameWithType: CreateIndexTask.TN
- uid: ALE.ETLBox.ControlFlow.CreateIndexTask.TN*
  name: TN
  href: api/ALE.ETLBox.ControlFlow.CreateIndexTask.html#ALE_ETLBox_ControlFlow_CreateIndexTask_TN_
  commentId: Overload:ALE.ETLBox.ControlFlow.CreateIndexTask.TN
  isSpec: "True"
  fullName: ALE.ETLBox.ControlFlow.CreateIndexTask.TN
  nameWithType: CreateIndexTask.TN
- uid: ALE.ETLBox.ControlFlow.CreateProcedureTask
  name: CreateProcedureTask
  href: api/ALE.ETLBox.ControlFlow.CreateProcedureTask.html
  commentId: T:ALE.ETLBox.ControlFlow.CreateProcedureTask
  fullName: ALE.ETLBox.ControlFlow.CreateProcedureTask
  nameWithType: CreateProcedureTask
- uid: ALE.ETLBox.ControlFlow.CreateProcedureTask.#ctor
  name: CreateProcedureTask()
  href: api/ALE.ETLBox.ControlFlow.CreateProcedureTask.html#ALE_ETLBox_ControlFlow_CreateProcedureTask__ctor
  commentId: M:ALE.ETLBox.ControlFlow.CreateProcedureTask.#ctor
  fullName: ALE.ETLBox.ControlFlow.CreateProcedureTask.CreateProcedureTask()
  nameWithType: CreateProcedureTask.CreateProcedureTask()
- uid: ALE.ETLBox.ControlFlow.CreateProcedureTask.#ctor(ALE.ETLBox.ProcedureDefinition)
  name: CreateProcedureTask(ProcedureDefinition)
  href: api/ALE.ETLBox.ControlFlow.CreateProcedureTask.html#ALE_ETLBox_ControlFlow_CreateProcedureTask__ctor_ALE_ETLBox_ProcedureDefinition_
  commentId: M:ALE.ETLBox.ControlFlow.CreateProcedureTask.#ctor(ALE.ETLBox.ProcedureDefinition)
  fullName: ALE.ETLBox.ControlFlow.CreateProcedureTask.CreateProcedureTask(ALE.ETLBox.ProcedureDefinition)
  nameWithType: CreateProcedureTask.CreateProcedureTask(ProcedureDefinition)
- uid: ALE.ETLBox.ControlFlow.CreateProcedureTask.#ctor(System.String,System.String)
  name: CreateProcedureTask(String, String)
  href: api/ALE.ETLBox.ControlFlow.CreateProcedureTask.html#ALE_ETLBox_ControlFlow_CreateProcedureTask__ctor_System_String_System_String_
  commentId: M:ALE.ETLBox.ControlFlow.CreateProcedureTask.#ctor(System.String,System.String)
  fullName: ALE.ETLBox.ControlFlow.CreateProcedureTask.CreateProcedureTask(System.String, System.String)
  nameWithType: CreateProcedureTask.CreateProcedureTask(String, String)
- uid: ALE.ETLBox.ControlFlow.CreateProcedureTask.#ctor(System.String,System.String,System.Collections.Generic.IList{ALE.ETLBox.ProcedureParameter})
  name: CreateProcedureTask(String, String, IList<ProcedureParameter>)
  href: api/ALE.ETLBox.ControlFlow.CreateProcedureTask.html#ALE_ETLBox_ControlFlow_CreateProcedureTask__ctor_System_String_System_String_System_Collections_Generic_IList_ALE_ETLBox_ProcedureParameter__
  commentId: M:ALE.ETLBox.ControlFlow.CreateProcedureTask.#ctor(System.String,System.String,System.Collections.Generic.IList{ALE.ETLBox.ProcedureParameter})
  name.vb: CreateProcedureTask(String, String, IList(Of ProcedureParameter))
  fullName: ALE.ETLBox.ControlFlow.CreateProcedureTask.CreateProcedureTask(System.String, System.String, System.Collections.Generic.IList<ALE.ETLBox.ProcedureParameter>)
  fullName.vb: ALE.ETLBox.ControlFlow.CreateProcedureTask.CreateProcedureTask(System.String, System.String, System.Collections.Generic.IList(Of ALE.ETLBox.ProcedureParameter))
  nameWithType: CreateProcedureTask.CreateProcedureTask(String, String, IList<ProcedureParameter>)
  nameWithType.vb: CreateProcedureTask.CreateProcedureTask(String, String, IList(Of ProcedureParameter))
- uid: ALE.ETLBox.ControlFlow.CreateProcedureTask.#ctor*
  name: CreateProcedureTask
  href: api/ALE.ETLBox.ControlFlow.CreateProcedureTask.html#ALE_ETLBox_ControlFlow_CreateProcedureTask__ctor_
  commentId: Overload:ALE.ETLBox.ControlFlow.CreateProcedureTask.#ctor
  isSpec: "True"
  fullName: ALE.ETLBox.ControlFlow.CreateProcedureTask.CreateProcedureTask
  nameWithType: CreateProcedureTask.CreateProcedureTask
- uid: ALE.ETLBox.ControlFlow.CreateProcedureTask.CreateOrAlter(ALE.ETLBox.ConnectionManager.IConnectionManager,ALE.ETLBox.ProcedureDefinition)
  name: CreateOrAlter(IConnectionManager, ProcedureDefinition)
  href: api/ALE.ETLBox.ControlFlow.CreateProcedureTask.html#ALE_ETLBox_ControlFlow_CreateProcedureTask_CreateOrAlter_ALE_ETLBox_ConnectionManager_IConnectionManager_ALE_ETLBox_ProcedureDefinition_
  commentId: M:ALE.ETLBox.ControlFlow.CreateProcedureTask.CreateOrAlter(ALE.ETLBox.ConnectionManager.IConnectionManager,ALE.ETLBox.ProcedureDefinition)
  fullName: ALE.ETLBox.ControlFlow.CreateProcedureTask.CreateOrAlter(ALE.ETLBox.ConnectionManager.IConnectionManager, ALE.ETLBox.ProcedureDefinition)
  nameWithType: CreateProcedureTask.CreateOrAlter(IConnectionManager, ProcedureDefinition)
- uid: ALE.ETLBox.ControlFlow.CreateProcedureTask.CreateOrAlter(ALE.ETLBox.ConnectionManager.IConnectionManager,System.String,System.String)
  name: CreateOrAlter(IConnectionManager, String, String)
  href: api/ALE.ETLBox.ControlFlow.CreateProcedureTask.html#ALE_ETLBox_ControlFlow_CreateProcedureTask_CreateOrAlter_ALE_ETLBox_ConnectionManager_IConnectionManager_System_String_System_String_
  commentId: M:ALE.ETLBox.ControlFlow.CreateProcedureTask.CreateOrAlter(ALE.ETLBox.ConnectionManager.IConnectionManager,System.String,System.String)
  fullName: ALE.ETLBox.ControlFlow.CreateProcedureTask.CreateOrAlter(ALE.ETLBox.ConnectionManager.IConnectionManager, System.String, System.String)
  nameWithType: CreateProcedureTask.CreateOrAlter(IConnectionManager, String, String)
- uid: ALE.ETLBox.ControlFlow.CreateProcedureTask.CreateOrAlter(ALE.ETLBox.ConnectionManager.IConnectionManager,System.String,System.String,System.Collections.Generic.IList{ALE.ETLBox.ProcedureParameter})
  name: CreateOrAlter(IConnectionManager, String, String, IList<ProcedureParameter>)
  href: api/ALE.ETLBox.ControlFlow.CreateProcedureTask.html#ALE_ETLBox_ControlFlow_CreateProcedureTask_CreateOrAlter_ALE_ETLBox_ConnectionManager_IConnectionManager_System_String_System_String_System_Collections_Generic_IList_ALE_ETLBox_ProcedureParameter__
  commentId: M:ALE.ETLBox.ControlFlow.CreateProcedureTask.CreateOrAlter(ALE.ETLBox.ConnectionManager.IConnectionManager,System.String,System.String,System.Collections.Generic.IList{ALE.ETLBox.ProcedureParameter})
  name.vb: CreateOrAlter(IConnectionManager, String, String, IList(Of ProcedureParameter))
  fullName: ALE.ETLBox.ControlFlow.CreateProcedureTask.CreateOrAlter(ALE.ETLBox.ConnectionManager.IConnectionManager, System.String, System.String, System.Collections.Generic.IList<ALE.ETLBox.ProcedureParameter>)
  fullName.vb: ALE.ETLBox.ControlFlow.CreateProcedureTask.CreateOrAlter(ALE.ETLBox.ConnectionManager.IConnectionManager, System.String, System.String, System.Collections.Generic.IList(Of ALE.ETLBox.ProcedureParameter))
  nameWithType: CreateProcedureTask.CreateOrAlter(IConnectionManager, String, String, IList<ProcedureParameter>)
  nameWithType.vb: CreateProcedureTask.CreateOrAlter(IConnectionManager, String, String, IList(Of ProcedureParameter))
- uid: ALE.ETLBox.ControlFlow.CreateProcedureTask.CreateOrAlter(ALE.ETLBox.ProcedureDefinition)
  name: CreateOrAlter(ProcedureDefinition)
  href: api/ALE.ETLBox.ControlFlow.CreateProcedureTask.html#ALE_ETLBox_ControlFlow_CreateProcedureTask_CreateOrAlter_ALE_ETLBox_ProcedureDefinition_
  commentId: M:ALE.ETLBox.ControlFlow.CreateProcedureTask.CreateOrAlter(ALE.ETLBox.ProcedureDefinition)
  fullName: ALE.ETLBox.ControlFlow.CreateProcedureTask.CreateOrAlter(ALE.ETLBox.ProcedureDefinition)
  nameWithType: CreateProcedureTask.CreateOrAlter(ProcedureDefinition)
- uid: ALE.ETLBox.ControlFlow.CreateProcedureTask.CreateOrAlter(System.String,System.String)
  name: CreateOrAlter(String, String)
  href: api/ALE.ETLBox.ControlFlow.CreateProcedureTask.html#ALE_ETLBox_ControlFlow_CreateProcedureTask_CreateOrAlter_System_String_System_String_
  commentId: M:ALE.ETLBox.ControlFlow.CreateProcedureTask.CreateOrAlter(System.String,System.String)
  fullName: ALE.ETLBox.ControlFlow.CreateProcedureTask.CreateOrAlter(System.String, System.String)
  nameWithType: CreateProcedureTask.CreateOrAlter(String, String)
- uid: ALE.ETLBox.ControlFlow.CreateProcedureTask.CreateOrAlter(System.String,System.String,System.Collections.Generic.IList{ALE.ETLBox.ProcedureParameter})
  name: CreateOrAlter(String, String, IList<ProcedureParameter>)
  href: api/ALE.ETLBox.ControlFlow.CreateProcedureTask.html#ALE_ETLBox_ControlFlow_CreateProcedureTask_CreateOrAlter_System_String_System_String_System_Collections_Generic_IList_ALE_ETLBox_ProcedureParameter__
  commentId: M:ALE.ETLBox.ControlFlow.CreateProcedureTask.CreateOrAlter(System.String,System.String,System.Collections.Generic.IList{ALE.ETLBox.ProcedureParameter})
  name.vb: CreateOrAlter(String, String, IList(Of ProcedureParameter))
  fullName: ALE.ETLBox.ControlFlow.CreateProcedureTask.CreateOrAlter(System.String, System.String, System.Collections.Generic.IList<ALE.ETLBox.ProcedureParameter>)
  fullName.vb: ALE.ETLBox.ControlFlow.CreateProcedureTask.CreateOrAlter(System.String, System.String, System.Collections.Generic.IList(Of ALE.ETLBox.ProcedureParameter))
  nameWithType: CreateProcedureTask.CreateOrAlter(String, String, IList<ProcedureParameter>)
  nameWithType.vb: CreateProcedureTask.CreateOrAlter(String, String, IList(Of ProcedureParameter))
- uid: ALE.ETLBox.ControlFlow.CreateProcedureTask.CreateOrAlter*
  name: CreateOrAlter
  href: api/ALE.ETLBox.ControlFlow.CreateProcedureTask.html#ALE_ETLBox_ControlFlow_CreateProcedureTask_CreateOrAlter_
  commentId: Overload:ALE.ETLBox.ControlFlow.CreateProcedureTask.CreateOrAlter
  isSpec: "True"
  fullName: ALE.ETLBox.ControlFlow.CreateProcedureTask.CreateOrAlter
  nameWithType: CreateProcedureTask.CreateOrAlter
- uid: ALE.ETLBox.ControlFlow.CreateProcedureTask.Execute
  name: Execute()
  href: api/ALE.ETLBox.ControlFlow.CreateProcedureTask.html#ALE_ETLBox_ControlFlow_CreateProcedureTask_Execute
  commentId: M:ALE.ETLBox.ControlFlow.CreateProcedureTask.Execute
  fullName: ALE.ETLBox.ControlFlow.CreateProcedureTask.Execute()
  nameWithType: CreateProcedureTask.Execute()
- uid: ALE.ETLBox.ControlFlow.CreateProcedureTask.Execute*
  name: Execute
  href: api/ALE.ETLBox.ControlFlow.CreateProcedureTask.html#ALE_ETLBox_ControlFlow_CreateProcedureTask_Execute_
  commentId: Overload:ALE.ETLBox.ControlFlow.CreateProcedureTask.Execute
  isSpec: "True"
  fullName: ALE.ETLBox.ControlFlow.CreateProcedureTask.Execute
  nameWithType: CreateProcedureTask.Execute
- uid: ALE.ETLBox.ControlFlow.CreateProcedureTask.ParameterSql(ALE.ETLBox.ProcedureParameter)
  name: ParameterSql(ProcedureParameter)
  href: api/ALE.ETLBox.ControlFlow.CreateProcedureTask.html#ALE_ETLBox_ControlFlow_CreateProcedureTask_ParameterSql_ALE_ETLBox_ProcedureParameter_
  commentId: M:ALE.ETLBox.ControlFlow.CreateProcedureTask.ParameterSql(ALE.ETLBox.ProcedureParameter)
  fullName: ALE.ETLBox.ControlFlow.CreateProcedureTask.ParameterSql(ALE.ETLBox.ProcedureParameter)
  nameWithType: CreateProcedureTask.ParameterSql(ProcedureParameter)
- uid: ALE.ETLBox.ControlFlow.CreateProcedureTask.ParameterSql*
  name: ParameterSql
  href: api/ALE.ETLBox.ControlFlow.CreateProcedureTask.html#ALE_ETLBox_ControlFlow_CreateProcedureTask_ParameterSql_
  commentId: Overload:ALE.ETLBox.ControlFlow.CreateProcedureTask.ParameterSql
  isSpec: "True"
  fullName: ALE.ETLBox.ControlFlow.CreateProcedureTask.ParameterSql
  nameWithType: CreateProcedureTask.ParameterSql
- uid: ALE.ETLBox.ControlFlow.CreateProcedureTask.PN
  name: PN
  href: api/ALE.ETLBox.ControlFlow.CreateProcedureTask.html#ALE_ETLBox_ControlFlow_CreateProcedureTask_PN
  commentId: P:ALE.ETLBox.ControlFlow.CreateProcedureTask.PN
  fullName: ALE.ETLBox.ControlFlow.CreateProcedureTask.PN
  nameWithType: CreateProcedureTask.PN
- uid: ALE.ETLBox.ControlFlow.CreateProcedureTask.PN*
  name: PN
  href: api/ALE.ETLBox.ControlFlow.CreateProcedureTask.html#ALE_ETLBox_ControlFlow_CreateProcedureTask_PN_
  commentId: Overload:ALE.ETLBox.ControlFlow.CreateProcedureTask.PN
  isSpec: "True"
  fullName: ALE.ETLBox.ControlFlow.CreateProcedureTask.PN
  nameWithType: CreateProcedureTask.PN
- uid: ALE.ETLBox.ControlFlow.CreateProcedureTask.ProcedureDefinition
  name: ProcedureDefinition
  href: api/ALE.ETLBox.ControlFlow.CreateProcedureTask.html#ALE_ETLBox_ControlFlow_CreateProcedureTask_ProcedureDefinition
  commentId: P:ALE.ETLBox.ControlFlow.CreateProcedureTask.ProcedureDefinition
  fullName: ALE.ETLBox.ControlFlow.CreateProcedureTask.ProcedureDefinition
  nameWithType: CreateProcedureTask.ProcedureDefinition
- uid: ALE.ETLBox.ControlFlow.CreateProcedureTask.ProcedureDefinition*
  name: ProcedureDefinition
  href: api/ALE.ETLBox.ControlFlow.CreateProcedureTask.html#ALE_ETLBox_ControlFlow_CreateProcedureTask_ProcedureDefinition_
  commentId: Overload:ALE.ETLBox.ControlFlow.CreateProcedureTask.ProcedureDefinition
  isSpec: "True"
  fullName: ALE.ETLBox.ControlFlow.CreateProcedureTask.ProcedureDefinition
  nameWithType: CreateProcedureTask.ProcedureDefinition
- uid: ALE.ETLBox.ControlFlow.CreateProcedureTask.ProcedureName
  name: ProcedureName
  href: api/ALE.ETLBox.ControlFlow.CreateProcedureTask.html#ALE_ETLBox_ControlFlow_CreateProcedureTask_ProcedureName
  commentId: P:ALE.ETLBox.ControlFlow.CreateProcedureTask.ProcedureName
  fullName: ALE.ETLBox.ControlFlow.CreateProcedureTask.ProcedureName
  nameWithType: CreateProcedureTask.ProcedureName
- uid: ALE.ETLBox.ControlFlow.CreateProcedureTask.ProcedureName*
  name: ProcedureName
  href: api/ALE.ETLBox.ControlFlow.CreateProcedureTask.html#ALE_ETLBox_ControlFlow_CreateProcedureTask_ProcedureName_
  commentId: Overload:ALE.ETLBox.ControlFlow.CreateProcedureTask.ProcedureName
  isSpec: "True"
  fullName: ALE.ETLBox.ControlFlow.CreateProcedureTask.ProcedureName
  nameWithType: CreateProcedureTask.ProcedureName
- uid: ALE.ETLBox.ControlFlow.CreateProcedureTask.ProcedureParameters
  name: ProcedureParameters
  href: api/ALE.ETLBox.ControlFlow.CreateProcedureTask.html#ALE_ETLBox_ControlFlow_CreateProcedureTask_ProcedureParameters
  commentId: P:ALE.ETLBox.ControlFlow.CreateProcedureTask.ProcedureParameters
  fullName: ALE.ETLBox.ControlFlow.CreateProcedureTask.ProcedureParameters
  nameWithType: CreateProcedureTask.ProcedureParameters
- uid: ALE.ETLBox.ControlFlow.CreateProcedureTask.ProcedureParameters*
  name: ProcedureParameters
  href: api/ALE.ETLBox.ControlFlow.CreateProcedureTask.html#ALE_ETLBox_ControlFlow_CreateProcedureTask_ProcedureParameters_
  commentId: Overload:ALE.ETLBox.ControlFlow.CreateProcedureTask.ProcedureParameters
  isSpec: "True"
  fullName: ALE.ETLBox.ControlFlow.CreateProcedureTask.ProcedureParameters
  nameWithType: CreateProcedureTask.ProcedureParameters
- uid: ALE.ETLBox.ControlFlow.CreateProcedureTask.Sql
  name: Sql
  href: api/ALE.ETLBox.ControlFlow.CreateProcedureTask.html#ALE_ETLBox_ControlFlow_CreateProcedureTask_Sql
  commentId: P:ALE.ETLBox.ControlFlow.CreateProcedureTask.Sql
  fullName: ALE.ETLBox.ControlFlow.CreateProcedureTask.Sql
  nameWithType: CreateProcedureTask.Sql
- uid: ALE.ETLBox.ControlFlow.CreateProcedureTask.Sql*
  name: Sql
  href: api/ALE.ETLBox.ControlFlow.CreateProcedureTask.html#ALE_ETLBox_ControlFlow_CreateProcedureTask_Sql_
  commentId: Overload:ALE.ETLBox.ControlFlow.CreateProcedureTask.Sql
  isSpec: "True"
  fullName: ALE.ETLBox.ControlFlow.CreateProcedureTask.Sql
  nameWithType: CreateProcedureTask.Sql
- uid: ALE.ETLBox.ControlFlow.CreateProcedureTask.TaskName
  name: TaskName
  href: api/ALE.ETLBox.ControlFlow.CreateProcedureTask.html#ALE_ETLBox_ControlFlow_CreateProcedureTask_TaskName
  commentId: P:ALE.ETLBox.ControlFlow.CreateProcedureTask.TaskName
  fullName: ALE.ETLBox.ControlFlow.CreateProcedureTask.TaskName
  nameWithType: CreateProcedureTask.TaskName
- uid: ALE.ETLBox.ControlFlow.CreateProcedureTask.TaskName*
  name: TaskName
  href: api/ALE.ETLBox.ControlFlow.CreateProcedureTask.html#ALE_ETLBox_ControlFlow_CreateProcedureTask_TaskName_
  commentId: Overload:ALE.ETLBox.ControlFlow.CreateProcedureTask.TaskName
  isSpec: "True"
  fullName: ALE.ETLBox.ControlFlow.CreateProcedureTask.TaskName
  nameWithType: CreateProcedureTask.TaskName
- uid: ALE.ETLBox.ControlFlow.CreateSchemaTask
  name: CreateSchemaTask
  href: api/ALE.ETLBox.ControlFlow.CreateSchemaTask.html
  commentId: T:ALE.ETLBox.ControlFlow.CreateSchemaTask
  fullName: ALE.ETLBox.ControlFlow.CreateSchemaTask
  nameWithType: CreateSchemaTask
- uid: ALE.ETLBox.ControlFlow.CreateSchemaTask.#ctor
  name: CreateSchemaTask()
  href: api/ALE.ETLBox.ControlFlow.CreateSchemaTask.html#ALE_ETLBox_ControlFlow_CreateSchemaTask__ctor
  commentId: M:ALE.ETLBox.ControlFlow.CreateSchemaTask.#ctor
  fullName: ALE.ETLBox.ControlFlow.CreateSchemaTask.CreateSchemaTask()
  nameWithType: CreateSchemaTask.CreateSchemaTask()
- uid: ALE.ETLBox.ControlFlow.CreateSchemaTask.#ctor(System.String)
  name: CreateSchemaTask(String)
  href: api/ALE.ETLBox.ControlFlow.CreateSchemaTask.html#ALE_ETLBox_ControlFlow_CreateSchemaTask__ctor_System_String_
  commentId: M:ALE.ETLBox.ControlFlow.CreateSchemaTask.#ctor(System.String)
  fullName: ALE.ETLBox.ControlFlow.CreateSchemaTask.CreateSchemaTask(System.String)
  nameWithType: CreateSchemaTask.CreateSchemaTask(String)
- uid: ALE.ETLBox.ControlFlow.CreateSchemaTask.#ctor*
  name: CreateSchemaTask
  href: api/ALE.ETLBox.ControlFlow.CreateSchemaTask.html#ALE_ETLBox_ControlFlow_CreateSchemaTask__ctor_
  commentId: Overload:ALE.ETLBox.ControlFlow.CreateSchemaTask.#ctor
  isSpec: "True"
  fullName: ALE.ETLBox.ControlFlow.CreateSchemaTask.CreateSchemaTask
  nameWithType: CreateSchemaTask.CreateSchemaTask
- uid: ALE.ETLBox.ControlFlow.CreateSchemaTask.Create(ALE.ETLBox.ConnectionManager.IConnectionManager,System.String)
  name: Create(IConnectionManager, String)
  href: api/ALE.ETLBox.ControlFlow.CreateSchemaTask.html#ALE_ETLBox_ControlFlow_CreateSchemaTask_Create_ALE_ETLBox_ConnectionManager_IConnectionManager_System_String_
  commentId: M:ALE.ETLBox.ControlFlow.CreateSchemaTask.Create(ALE.ETLBox.ConnectionManager.IConnectionManager,System.String)
  fullName: ALE.ETLBox.ControlFlow.CreateSchemaTask.Create(ALE.ETLBox.ConnectionManager.IConnectionManager, System.String)
  nameWithType: CreateSchemaTask.Create(IConnectionManager, String)
- uid: ALE.ETLBox.ControlFlow.CreateSchemaTask.Create(System.String)
  name: Create(String)
  href: api/ALE.ETLBox.ControlFlow.CreateSchemaTask.html#ALE_ETLBox_ControlFlow_CreateSchemaTask_Create_System_String_
  commentId: M:ALE.ETLBox.ControlFlow.CreateSchemaTask.Create(System.String)
  fullName: ALE.ETLBox.ControlFlow.CreateSchemaTask.Create(System.String)
  nameWithType: CreateSchemaTask.Create(String)
- uid: ALE.ETLBox.ControlFlow.CreateSchemaTask.Create*
  name: Create
  href: api/ALE.ETLBox.ControlFlow.CreateSchemaTask.html#ALE_ETLBox_ControlFlow_CreateSchemaTask_Create_
  commentId: Overload:ALE.ETLBox.ControlFlow.CreateSchemaTask.Create
  isSpec: "True"
  fullName: ALE.ETLBox.ControlFlow.CreateSchemaTask.Create
  nameWithType: CreateSchemaTask.Create
- uid: ALE.ETLBox.ControlFlow.CreateSchemaTask.Execute
  name: Execute()
  href: api/ALE.ETLBox.ControlFlow.CreateSchemaTask.html#ALE_ETLBox_ControlFlow_CreateSchemaTask_Execute
  commentId: M:ALE.ETLBox.ControlFlow.CreateSchemaTask.Execute
  fullName: ALE.ETLBox.ControlFlow.CreateSchemaTask.Execute()
  nameWithType: CreateSchemaTask.Execute()
- uid: ALE.ETLBox.ControlFlow.CreateSchemaTask.Execute*
  name: Execute
  href: api/ALE.ETLBox.ControlFlow.CreateSchemaTask.html#ALE_ETLBox_ControlFlow_CreateSchemaTask_Execute_
  commentId: Overload:ALE.ETLBox.ControlFlow.CreateSchemaTask.Execute
  isSpec: "True"
  fullName: ALE.ETLBox.ControlFlow.CreateSchemaTask.Execute
  nameWithType: CreateSchemaTask.Execute
- uid: ALE.ETLBox.ControlFlow.CreateSchemaTask.ON
  name: ON
  href: api/ALE.ETLBox.ControlFlow.CreateSchemaTask.html#ALE_ETLBox_ControlFlow_CreateSchemaTask_ON
  commentId: P:ALE.ETLBox.ControlFlow.CreateSchemaTask.ON
  fullName: ALE.ETLBox.ControlFlow.CreateSchemaTask.ON
  nameWithType: CreateSchemaTask.ON
- uid: ALE.ETLBox.ControlFlow.CreateSchemaTask.ON*
  name: ON
  href: api/ALE.ETLBox.ControlFlow.CreateSchemaTask.html#ALE_ETLBox_ControlFlow_CreateSchemaTask_ON_
  commentId: Overload:ALE.ETLBox.ControlFlow.CreateSchemaTask.ON
  isSpec: "True"
  fullName: ALE.ETLBox.ControlFlow.CreateSchemaTask.ON
  nameWithType: CreateSchemaTask.ON
- uid: ALE.ETLBox.ControlFlow.CreateSchemaTask.SchemaName
  name: SchemaName
  href: api/ALE.ETLBox.ControlFlow.CreateSchemaTask.html#ALE_ETLBox_ControlFlow_CreateSchemaTask_SchemaName
  commentId: P:ALE.ETLBox.ControlFlow.CreateSchemaTask.SchemaName
  fullName: ALE.ETLBox.ControlFlow.CreateSchemaTask.SchemaName
  nameWithType: CreateSchemaTask.SchemaName
- uid: ALE.ETLBox.ControlFlow.CreateSchemaTask.SchemaName*
  name: SchemaName
  href: api/ALE.ETLBox.ControlFlow.CreateSchemaTask.html#ALE_ETLBox_ControlFlow_CreateSchemaTask_SchemaName_
  commentId: Overload:ALE.ETLBox.ControlFlow.CreateSchemaTask.SchemaName
  isSpec: "True"
  fullName: ALE.ETLBox.ControlFlow.CreateSchemaTask.SchemaName
  nameWithType: CreateSchemaTask.SchemaName
- uid: ALE.ETLBox.ControlFlow.CreateSchemaTask.Sql
  name: Sql
  href: api/ALE.ETLBox.ControlFlow.CreateSchemaTask.html#ALE_ETLBox_ControlFlow_CreateSchemaTask_Sql
  commentId: P:ALE.ETLBox.ControlFlow.CreateSchemaTask.Sql
  fullName: ALE.ETLBox.ControlFlow.CreateSchemaTask.Sql
  nameWithType: CreateSchemaTask.Sql
- uid: ALE.ETLBox.ControlFlow.CreateSchemaTask.Sql*
  name: Sql
  href: api/ALE.ETLBox.ControlFlow.CreateSchemaTask.html#ALE_ETLBox_ControlFlow_CreateSchemaTask_Sql_
  commentId: Overload:ALE.ETLBox.ControlFlow.CreateSchemaTask.Sql
  isSpec: "True"
  fullName: ALE.ETLBox.ControlFlow.CreateSchemaTask.Sql
  nameWithType: CreateSchemaTask.Sql
- uid: ALE.ETLBox.ControlFlow.CreateSchemaTask.TaskName
  name: TaskName
  href: api/ALE.ETLBox.ControlFlow.CreateSchemaTask.html#ALE_ETLBox_ControlFlow_CreateSchemaTask_TaskName
  commentId: P:ALE.ETLBox.ControlFlow.CreateSchemaTask.TaskName
  fullName: ALE.ETLBox.ControlFlow.CreateSchemaTask.TaskName
  nameWithType: CreateSchemaTask.TaskName
- uid: ALE.ETLBox.ControlFlow.CreateSchemaTask.TaskName*
  name: TaskName
  href: api/ALE.ETLBox.ControlFlow.CreateSchemaTask.html#ALE_ETLBox_ControlFlow_CreateSchemaTask_TaskName_
  commentId: Overload:ALE.ETLBox.ControlFlow.CreateSchemaTask.TaskName
  isSpec: "True"
  fullName: ALE.ETLBox.ControlFlow.CreateSchemaTask.TaskName
  nameWithType: CreateSchemaTask.TaskName
- uid: ALE.ETLBox.ControlFlow.CreateTableTask
  name: CreateTableTask
  href: api/ALE.ETLBox.ControlFlow.CreateTableTask.html
  commentId: T:ALE.ETLBox.ControlFlow.CreateTableTask
  fullName: ALE.ETLBox.ControlFlow.CreateTableTask
  nameWithType: CreateTableTask
- uid: ALE.ETLBox.ControlFlow.CreateTableTask.#ctor
  name: CreateTableTask()
  href: api/ALE.ETLBox.ControlFlow.CreateTableTask.html#ALE_ETLBox_ControlFlow_CreateTableTask__ctor
  commentId: M:ALE.ETLBox.ControlFlow.CreateTableTask.#ctor
  fullName: ALE.ETLBox.ControlFlow.CreateTableTask.CreateTableTask()
  nameWithType: CreateTableTask.CreateTableTask()
- uid: ALE.ETLBox.ControlFlow.CreateTableTask.#ctor(ALE.ETLBox.TableDefinition)
  name: CreateTableTask(TableDefinition)
  href: api/ALE.ETLBox.ControlFlow.CreateTableTask.html#ALE_ETLBox_ControlFlow_CreateTableTask__ctor_ALE_ETLBox_TableDefinition_
  commentId: M:ALE.ETLBox.ControlFlow.CreateTableTask.#ctor(ALE.ETLBox.TableDefinition)
  fullName: ALE.ETLBox.ControlFlow.CreateTableTask.CreateTableTask(ALE.ETLBox.TableDefinition)
  nameWithType: CreateTableTask.CreateTableTask(TableDefinition)
- uid: ALE.ETLBox.ControlFlow.CreateTableTask.#ctor(System.String,System.Collections.Generic.IList{ALE.ETLBox.ITableColumn})
  name: CreateTableTask(String, IList<ITableColumn>)
  href: api/ALE.ETLBox.ControlFlow.CreateTableTask.html#ALE_ETLBox_ControlFlow_CreateTableTask__ctor_System_String_System_Collections_Generic_IList_ALE_ETLBox_ITableColumn__
  commentId: M:ALE.ETLBox.ControlFlow.CreateTableTask.#ctor(System.String,System.Collections.Generic.IList{ALE.ETLBox.ITableColumn})
  name.vb: CreateTableTask(String, IList(Of ITableColumn))
  fullName: ALE.ETLBox.ControlFlow.CreateTableTask.CreateTableTask(System.String, System.Collections.Generic.IList<ALE.ETLBox.ITableColumn>)
  fullName.vb: ALE.ETLBox.ControlFlow.CreateTableTask.CreateTableTask(System.String, System.Collections.Generic.IList(Of ALE.ETLBox.ITableColumn))
  nameWithType: CreateTableTask.CreateTableTask(String, IList<ITableColumn>)
  nameWithType.vb: CreateTableTask.CreateTableTask(String, IList(Of ITableColumn))
- uid: ALE.ETLBox.ControlFlow.CreateTableTask.#ctor*
  name: CreateTableTask
  href: api/ALE.ETLBox.ControlFlow.CreateTableTask.html#ALE_ETLBox_ControlFlow_CreateTableTask__ctor_
  commentId: Overload:ALE.ETLBox.ControlFlow.CreateTableTask.#ctor
  isSpec: "True"
  fullName: ALE.ETLBox.ControlFlow.CreateTableTask.CreateTableTask
  nameWithType: CreateTableTask.CreateTableTask
- uid: ALE.ETLBox.ControlFlow.CreateTableTask.Columns
  name: Columns
  href: api/ALE.ETLBox.ControlFlow.CreateTableTask.html#ALE_ETLBox_ControlFlow_CreateTableTask_Columns
  commentId: P:ALE.ETLBox.ControlFlow.CreateTableTask.Columns
  fullName: ALE.ETLBox.ControlFlow.CreateTableTask.Columns
  nameWithType: CreateTableTask.Columns
- uid: ALE.ETLBox.ControlFlow.CreateTableTask.Columns*
  name: Columns
  href: api/ALE.ETLBox.ControlFlow.CreateTableTask.html#ALE_ETLBox_ControlFlow_CreateTableTask_Columns_
  commentId: Overload:ALE.ETLBox.ControlFlow.CreateTableTask.Columns
  isSpec: "True"
  fullName: ALE.ETLBox.ControlFlow.CreateTableTask.Columns
  nameWithType: CreateTableTask.Columns
- uid: ALE.ETLBox.ControlFlow.CreateTableTask.Create
  name: Create()
  href: api/ALE.ETLBox.ControlFlow.CreateTableTask.html#ALE_ETLBox_ControlFlow_CreateTableTask_Create
  commentId: M:ALE.ETLBox.ControlFlow.CreateTableTask.Create
  fullName: ALE.ETLBox.ControlFlow.CreateTableTask.Create()
  nameWithType: CreateTableTask.Create()
- uid: ALE.ETLBox.ControlFlow.CreateTableTask.Create(ALE.ETLBox.ConnectionManager.IConnectionManager,ALE.ETLBox.TableDefinition)
  name: Create(IConnectionManager, TableDefinition)
  href: api/ALE.ETLBox.ControlFlow.CreateTableTask.html#ALE_ETLBox_ControlFlow_CreateTableTask_Create_ALE_ETLBox_ConnectionManager_IConnectionManager_ALE_ETLBox_TableDefinition_
  commentId: M:ALE.ETLBox.ControlFlow.CreateTableTask.Create(ALE.ETLBox.ConnectionManager.IConnectionManager,ALE.ETLBox.TableDefinition)
  fullName: ALE.ETLBox.ControlFlow.CreateTableTask.Create(ALE.ETLBox.ConnectionManager.IConnectionManager, ALE.ETLBox.TableDefinition)
  nameWithType: CreateTableTask.Create(IConnectionManager, TableDefinition)
- uid: ALE.ETLBox.ControlFlow.CreateTableTask.Create(ALE.ETLBox.ConnectionManager.IConnectionManager,System.String,System.Collections.Generic.IList{ALE.ETLBox.ITableColumn})
  name: Create(IConnectionManager, String, IList<ITableColumn>)
  href: api/ALE.ETLBox.ControlFlow.CreateTableTask.html#ALE_ETLBox_ControlFlow_CreateTableTask_Create_ALE_ETLBox_ConnectionManager_IConnectionManager_System_String_System_Collections_Generic_IList_ALE_ETLBox_ITableColumn__
  commentId: M:ALE.ETLBox.ControlFlow.CreateTableTask.Create(ALE.ETLBox.ConnectionManager.IConnectionManager,System.String,System.Collections.Generic.IList{ALE.ETLBox.ITableColumn})
  name.vb: Create(IConnectionManager, String, IList(Of ITableColumn))
  fullName: ALE.ETLBox.ControlFlow.CreateTableTask.Create(ALE.ETLBox.ConnectionManager.IConnectionManager, System.String, System.Collections.Generic.IList<ALE.ETLBox.ITableColumn>)
  fullName.vb: ALE.ETLBox.ControlFlow.CreateTableTask.Create(ALE.ETLBox.ConnectionManager.IConnectionManager, System.String, System.Collections.Generic.IList(Of ALE.ETLBox.ITableColumn))
  nameWithType: CreateTableTask.Create(IConnectionManager, String, IList<ITableColumn>)
  nameWithType.vb: CreateTableTask.Create(IConnectionManager, String, IList(Of ITableColumn))
- uid: ALE.ETLBox.ControlFlow.CreateTableTask.Create(ALE.ETLBox.ConnectionManager.IConnectionManager,System.String,System.Collections.Generic.List{ALE.ETLBox.TableColumn})
  name: Create(IConnectionManager, String, List<TableColumn>)
  href: api/ALE.ETLBox.ControlFlow.CreateTableTask.html#ALE_ETLBox_ControlFlow_CreateTableTask_Create_ALE_ETLBox_ConnectionManager_IConnectionManager_System_String_System_Collections_Generic_List_ALE_ETLBox_TableColumn__
  commentId: M:ALE.ETLBox.ControlFlow.CreateTableTask.Create(ALE.ETLBox.ConnectionManager.IConnectionManager,System.String,System.Collections.Generic.List{ALE.ETLBox.TableColumn})
  name.vb: Create(IConnectionManager, String, List(Of TableColumn))
  fullName: ALE.ETLBox.ControlFlow.CreateTableTask.Create(ALE.ETLBox.ConnectionManager.IConnectionManager, System.String, System.Collections.Generic.List<ALE.ETLBox.TableColumn>)
  fullName.vb: ALE.ETLBox.ControlFlow.CreateTableTask.Create(ALE.ETLBox.ConnectionManager.IConnectionManager, System.String, System.Collections.Generic.List(Of ALE.ETLBox.TableColumn))
  nameWithType: CreateTableTask.Create(IConnectionManager, String, List<TableColumn>)
  nameWithType.vb: CreateTableTask.Create(IConnectionManager, String, List(Of TableColumn))
- uid: ALE.ETLBox.ControlFlow.CreateTableTask.Create(ALE.ETLBox.TableDefinition)
  name: Create(TableDefinition)
  href: api/ALE.ETLBox.ControlFlow.CreateTableTask.html#ALE_ETLBox_ControlFlow_CreateTableTask_Create_ALE_ETLBox_TableDefinition_
  commentId: M:ALE.ETLBox.ControlFlow.CreateTableTask.Create(ALE.ETLBox.TableDefinition)
  fullName: ALE.ETLBox.ControlFlow.CreateTableTask.Create(ALE.ETLBox.TableDefinition)
  nameWithType: CreateTableTask.Create(TableDefinition)
- uid: ALE.ETLBox.ControlFlow.CreateTableTask.Create(System.String,System.Collections.Generic.IList{ALE.ETLBox.ITableColumn})
  name: Create(String, IList<ITableColumn>)
  href: api/ALE.ETLBox.ControlFlow.CreateTableTask.html#ALE_ETLBox_ControlFlow_CreateTableTask_Create_System_String_System_Collections_Generic_IList_ALE_ETLBox_ITableColumn__
  commentId: M:ALE.ETLBox.ControlFlow.CreateTableTask.Create(System.String,System.Collections.Generic.IList{ALE.ETLBox.ITableColumn})
  name.vb: Create(String, IList(Of ITableColumn))
  fullName: ALE.ETLBox.ControlFlow.CreateTableTask.Create(System.String, System.Collections.Generic.IList<ALE.ETLBox.ITableColumn>)
  fullName.vb: ALE.ETLBox.ControlFlow.CreateTableTask.Create(System.String, System.Collections.Generic.IList(Of ALE.ETLBox.ITableColumn))
  nameWithType: CreateTableTask.Create(String, IList<ITableColumn>)
  nameWithType.vb: CreateTableTask.Create(String, IList(Of ITableColumn))
- uid: ALE.ETLBox.ControlFlow.CreateTableTask.Create(System.String,System.Collections.Generic.List{ALE.ETLBox.TableColumn})
  name: Create(String, List<TableColumn>)
  href: api/ALE.ETLBox.ControlFlow.CreateTableTask.html#ALE_ETLBox_ControlFlow_CreateTableTask_Create_System_String_System_Collections_Generic_List_ALE_ETLBox_TableColumn__
  commentId: M:ALE.ETLBox.ControlFlow.CreateTableTask.Create(System.String,System.Collections.Generic.List{ALE.ETLBox.TableColumn})
  name.vb: Create(String, List(Of TableColumn))
  fullName: ALE.ETLBox.ControlFlow.CreateTableTask.Create(System.String, System.Collections.Generic.List<ALE.ETLBox.TableColumn>)
  fullName.vb: ALE.ETLBox.ControlFlow.CreateTableTask.Create(System.String, System.Collections.Generic.List(Of ALE.ETLBox.TableColumn))
  nameWithType: CreateTableTask.Create(String, List<TableColumn>)
  nameWithType.vb: CreateTableTask.Create(String, List(Of TableColumn))
- uid: ALE.ETLBox.ControlFlow.CreateTableTask.Create*
  name: Create
  href: api/ALE.ETLBox.ControlFlow.CreateTableTask.html#ALE_ETLBox_ControlFlow_CreateTableTask_Create_
  commentId: Overload:ALE.ETLBox.ControlFlow.CreateTableTask.Create
  isSpec: "True"
  fullName: ALE.ETLBox.ControlFlow.CreateTableTask.Create
  nameWithType: CreateTableTask.Create
- uid: ALE.ETLBox.ControlFlow.CreateTableTask.Execute
  name: Execute()
  href: api/ALE.ETLBox.ControlFlow.CreateTableTask.html#ALE_ETLBox_ControlFlow_CreateTableTask_Execute
  commentId: M:ALE.ETLBox.ControlFlow.CreateTableTask.Execute
  fullName: ALE.ETLBox.ControlFlow.CreateTableTask.Execute()
  nameWithType: CreateTableTask.Execute()
- uid: ALE.ETLBox.ControlFlow.CreateTableTask.Execute*
  name: Execute
  href: api/ALE.ETLBox.ControlFlow.CreateTableTask.html#ALE_ETLBox_ControlFlow_CreateTableTask_Execute_
  commentId: Overload:ALE.ETLBox.ControlFlow.CreateTableTask.Execute
  isSpec: "True"
  fullName: ALE.ETLBox.ControlFlow.CreateTableTask.Execute
  nameWithType: CreateTableTask.Execute
- uid: ALE.ETLBox.ControlFlow.CreateTableTask.Sql
  name: Sql
  href: api/ALE.ETLBox.ControlFlow.CreateTableTask.html#ALE_ETLBox_ControlFlow_CreateTableTask_Sql
  commentId: P:ALE.ETLBox.ControlFlow.CreateTableTask.Sql
  fullName: ALE.ETLBox.ControlFlow.CreateTableTask.Sql
  nameWithType: CreateTableTask.Sql
- uid: ALE.ETLBox.ControlFlow.CreateTableTask.Sql*
  name: Sql
  href: api/ALE.ETLBox.ControlFlow.CreateTableTask.html#ALE_ETLBox_ControlFlow_CreateTableTask_Sql_
  commentId: Overload:ALE.ETLBox.ControlFlow.CreateTableTask.Sql
  isSpec: "True"
  fullName: ALE.ETLBox.ControlFlow.CreateTableTask.Sql
  nameWithType: CreateTableTask.Sql
- uid: ALE.ETLBox.ControlFlow.CreateTableTask.TableName
  name: TableName
  href: api/ALE.ETLBox.ControlFlow.CreateTableTask.html#ALE_ETLBox_ControlFlow_CreateTableTask_TableName
  commentId: P:ALE.ETLBox.ControlFlow.CreateTableTask.TableName
  fullName: ALE.ETLBox.ControlFlow.CreateTableTask.TableName
  nameWithType: CreateTableTask.TableName
- uid: ALE.ETLBox.ControlFlow.CreateTableTask.TableName*
  name: TableName
  href: api/ALE.ETLBox.ControlFlow.CreateTableTask.html#ALE_ETLBox_ControlFlow_CreateTableTask_TableName_
  commentId: Overload:ALE.ETLBox.ControlFlow.CreateTableTask.TableName
  isSpec: "True"
  fullName: ALE.ETLBox.ControlFlow.CreateTableTask.TableName
  nameWithType: CreateTableTask.TableName
- uid: ALE.ETLBox.ControlFlow.CreateTableTask.TaskName
  name: TaskName
  href: api/ALE.ETLBox.ControlFlow.CreateTableTask.html#ALE_ETLBox_ControlFlow_CreateTableTask_TaskName
  commentId: P:ALE.ETLBox.ControlFlow.CreateTableTask.TaskName
  fullName: ALE.ETLBox.ControlFlow.CreateTableTask.TaskName
  nameWithType: CreateTableTask.TaskName
- uid: ALE.ETLBox.ControlFlow.CreateTableTask.TaskName*
  name: TaskName
  href: api/ALE.ETLBox.ControlFlow.CreateTableTask.html#ALE_ETLBox_ControlFlow_CreateTableTask_TaskName_
  commentId: Overload:ALE.ETLBox.ControlFlow.CreateTableTask.TaskName
  isSpec: "True"
  fullName: ALE.ETLBox.ControlFlow.CreateTableTask.TaskName
  nameWithType: CreateTableTask.TaskName
- uid: ALE.ETLBox.ControlFlow.CreateTableTask.ThrowErrorIfTableExists
  name: ThrowErrorIfTableExists
  href: api/ALE.ETLBox.ControlFlow.CreateTableTask.html#ALE_ETLBox_ControlFlow_CreateTableTask_ThrowErrorIfTableExists
  commentId: P:ALE.ETLBox.ControlFlow.CreateTableTask.ThrowErrorIfTableExists
  fullName: ALE.ETLBox.ControlFlow.CreateTableTask.ThrowErrorIfTableExists
  nameWithType: CreateTableTask.ThrowErrorIfTableExists
- uid: ALE.ETLBox.ControlFlow.CreateTableTask.ThrowErrorIfTableExists*
  name: ThrowErrorIfTableExists
  href: api/ALE.ETLBox.ControlFlow.CreateTableTask.html#ALE_ETLBox_ControlFlow_CreateTableTask_ThrowErrorIfTableExists_
  commentId: Overload:ALE.ETLBox.ControlFlow.CreateTableTask.ThrowErrorIfTableExists
  isSpec: "True"
  fullName: ALE.ETLBox.ControlFlow.CreateTableTask.ThrowErrorIfTableExists
  nameWithType: CreateTableTask.ThrowErrorIfTableExists
- uid: ALE.ETLBox.ControlFlow.CreateTableTask.TN
  name: TN
  href: api/ALE.ETLBox.ControlFlow.CreateTableTask.html#ALE_ETLBox_ControlFlow_CreateTableTask_TN
  commentId: P:ALE.ETLBox.ControlFlow.CreateTableTask.TN
  fullName: ALE.ETLBox.ControlFlow.CreateTableTask.TN
  nameWithType: CreateTableTask.TN
- uid: ALE.ETLBox.ControlFlow.CreateTableTask.TN*
  name: TN
  href: api/ALE.ETLBox.ControlFlow.CreateTableTask.html#ALE_ETLBox_ControlFlow_CreateTableTask_TN_
  commentId: Overload:ALE.ETLBox.ControlFlow.CreateTableTask.TN
  isSpec: "True"
  fullName: ALE.ETLBox.ControlFlow.CreateTableTask.TN
  nameWithType: CreateTableTask.TN
- uid: ALE.ETLBox.ControlFlow.CreateViewTask
  name: CreateViewTask
  href: api/ALE.ETLBox.ControlFlow.CreateViewTask.html
  commentId: T:ALE.ETLBox.ControlFlow.CreateViewTask
  fullName: ALE.ETLBox.ControlFlow.CreateViewTask
  nameWithType: CreateViewTask
- uid: ALE.ETLBox.ControlFlow.CreateViewTask.#ctor
  name: CreateViewTask()
  href: api/ALE.ETLBox.ControlFlow.CreateViewTask.html#ALE_ETLBox_ControlFlow_CreateViewTask__ctor
  commentId: M:ALE.ETLBox.ControlFlow.CreateViewTask.#ctor
  fullName: ALE.ETLBox.ControlFlow.CreateViewTask.CreateViewTask()
  nameWithType: CreateViewTask.CreateViewTask()
- uid: ALE.ETLBox.ControlFlow.CreateViewTask.#ctor(System.String,System.String)
  name: CreateViewTask(String, String)
  href: api/ALE.ETLBox.ControlFlow.CreateViewTask.html#ALE_ETLBox_ControlFlow_CreateViewTask__ctor_System_String_System_String_
  commentId: M:ALE.ETLBox.ControlFlow.CreateViewTask.#ctor(System.String,System.String)
  fullName: ALE.ETLBox.ControlFlow.CreateViewTask.CreateViewTask(System.String, System.String)
  nameWithType: CreateViewTask.CreateViewTask(String, String)
- uid: ALE.ETLBox.ControlFlow.CreateViewTask.#ctor*
  name: CreateViewTask
  href: api/ALE.ETLBox.ControlFlow.CreateViewTask.html#ALE_ETLBox_ControlFlow_CreateViewTask__ctor_
  commentId: Overload:ALE.ETLBox.ControlFlow.CreateViewTask.#ctor
  isSpec: "True"
  fullName: ALE.ETLBox.ControlFlow.CreateViewTask.CreateViewTask
  nameWithType: CreateViewTask.CreateViewTask
- uid: ALE.ETLBox.ControlFlow.CreateViewTask.CreateOrAlter(ALE.ETLBox.ConnectionManager.IConnectionManager,System.String,System.String)
  name: CreateOrAlter(IConnectionManager, String, String)
  href: api/ALE.ETLBox.ControlFlow.CreateViewTask.html#ALE_ETLBox_ControlFlow_CreateViewTask_CreateOrAlter_ALE_ETLBox_ConnectionManager_IConnectionManager_System_String_System_String_
  commentId: M:ALE.ETLBox.ControlFlow.CreateViewTask.CreateOrAlter(ALE.ETLBox.ConnectionManager.IConnectionManager,System.String,System.String)
  fullName: ALE.ETLBox.ControlFlow.CreateViewTask.CreateOrAlter(ALE.ETLBox.ConnectionManager.IConnectionManager, System.String, System.String)
  nameWithType: CreateViewTask.CreateOrAlter(IConnectionManager, String, String)
- uid: ALE.ETLBox.ControlFlow.CreateViewTask.CreateOrAlter(System.String,System.String)
  name: CreateOrAlter(String, String)
  href: api/ALE.ETLBox.ControlFlow.CreateViewTask.html#ALE_ETLBox_ControlFlow_CreateViewTask_CreateOrAlter_System_String_System_String_
  commentId: M:ALE.ETLBox.ControlFlow.CreateViewTask.CreateOrAlter(System.String,System.String)
  fullName: ALE.ETLBox.ControlFlow.CreateViewTask.CreateOrAlter(System.String, System.String)
  nameWithType: CreateViewTask.CreateOrAlter(String, String)
- uid: ALE.ETLBox.ControlFlow.CreateViewTask.CreateOrAlter*
  name: CreateOrAlter
  href: api/ALE.ETLBox.ControlFlow.CreateViewTask.html#ALE_ETLBox_ControlFlow_CreateViewTask_CreateOrAlter_
  commentId: Overload:ALE.ETLBox.ControlFlow.CreateViewTask.CreateOrAlter
  isSpec: "True"
  fullName: ALE.ETLBox.ControlFlow.CreateViewTask.CreateOrAlter
  nameWithType: CreateViewTask.CreateOrAlter
- uid: ALE.ETLBox.ControlFlow.CreateViewTask.Definition
  name: Definition
  href: api/ALE.ETLBox.ControlFlow.CreateViewTask.html#ALE_ETLBox_ControlFlow_CreateViewTask_Definition
  commentId: P:ALE.ETLBox.ControlFlow.CreateViewTask.Definition
  fullName: ALE.ETLBox.ControlFlow.CreateViewTask.Definition
  nameWithType: CreateViewTask.Definition
- uid: ALE.ETLBox.ControlFlow.CreateViewTask.Definition*
  name: Definition
  href: api/ALE.ETLBox.ControlFlow.CreateViewTask.html#ALE_ETLBox_ControlFlow_CreateViewTask_Definition_
  commentId: Overload:ALE.ETLBox.ControlFlow.CreateViewTask.Definition
  isSpec: "True"
  fullName: ALE.ETLBox.ControlFlow.CreateViewTask.Definition
  nameWithType: CreateViewTask.Definition
- uid: ALE.ETLBox.ControlFlow.CreateViewTask.Execute
  name: Execute()
  href: api/ALE.ETLBox.ControlFlow.CreateViewTask.html#ALE_ETLBox_ControlFlow_CreateViewTask_Execute
  commentId: M:ALE.ETLBox.ControlFlow.CreateViewTask.Execute
  fullName: ALE.ETLBox.ControlFlow.CreateViewTask.Execute()
  nameWithType: CreateViewTask.Execute()
- uid: ALE.ETLBox.ControlFlow.CreateViewTask.Execute*
  name: Execute
  href: api/ALE.ETLBox.ControlFlow.CreateViewTask.html#ALE_ETLBox_ControlFlow_CreateViewTask_Execute_
  commentId: Overload:ALE.ETLBox.ControlFlow.CreateViewTask.Execute
  isSpec: "True"
  fullName: ALE.ETLBox.ControlFlow.CreateViewTask.Execute
  nameWithType: CreateViewTask.Execute
- uid: ALE.ETLBox.ControlFlow.CreateViewTask.Sql
  name: Sql
  href: api/ALE.ETLBox.ControlFlow.CreateViewTask.html#ALE_ETLBox_ControlFlow_CreateViewTask_Sql
  commentId: P:ALE.ETLBox.ControlFlow.CreateViewTask.Sql
  fullName: ALE.ETLBox.ControlFlow.CreateViewTask.Sql
  nameWithType: CreateViewTask.Sql
- uid: ALE.ETLBox.ControlFlow.CreateViewTask.Sql*
  name: Sql
  href: api/ALE.ETLBox.ControlFlow.CreateViewTask.html#ALE_ETLBox_ControlFlow_CreateViewTask_Sql_
  commentId: Overload:ALE.ETLBox.ControlFlow.CreateViewTask.Sql
  isSpec: "True"
  fullName: ALE.ETLBox.ControlFlow.CreateViewTask.Sql
  nameWithType: CreateViewTask.Sql
- uid: ALE.ETLBox.ControlFlow.CreateViewTask.TaskName
  name: TaskName
  href: api/ALE.ETLBox.ControlFlow.CreateViewTask.html#ALE_ETLBox_ControlFlow_CreateViewTask_TaskName
  commentId: P:ALE.ETLBox.ControlFlow.CreateViewTask.TaskName
  fullName: ALE.ETLBox.ControlFlow.CreateViewTask.TaskName
  nameWithType: CreateViewTask.TaskName
- uid: ALE.ETLBox.ControlFlow.CreateViewTask.TaskName*
  name: TaskName
  href: api/ALE.ETLBox.ControlFlow.CreateViewTask.html#ALE_ETLBox_ControlFlow_CreateViewTask_TaskName_
  commentId: Overload:ALE.ETLBox.ControlFlow.CreateViewTask.TaskName
  isSpec: "True"
  fullName: ALE.ETLBox.ControlFlow.CreateViewTask.TaskName
  nameWithType: CreateViewTask.TaskName
- uid: ALE.ETLBox.ControlFlow.CreateViewTask.ViewName
  name: ViewName
  href: api/ALE.ETLBox.ControlFlow.CreateViewTask.html#ALE_ETLBox_ControlFlow_CreateViewTask_ViewName
  commentId: P:ALE.ETLBox.ControlFlow.CreateViewTask.ViewName
  fullName: ALE.ETLBox.ControlFlow.CreateViewTask.ViewName
  nameWithType: CreateViewTask.ViewName
- uid: ALE.ETLBox.ControlFlow.CreateViewTask.ViewName*
  name: ViewName
  href: api/ALE.ETLBox.ControlFlow.CreateViewTask.html#ALE_ETLBox_ControlFlow_CreateViewTask_ViewName_
  commentId: Overload:ALE.ETLBox.ControlFlow.CreateViewTask.ViewName
  isSpec: "True"
  fullName: ALE.ETLBox.ControlFlow.CreateViewTask.ViewName
  nameWithType: CreateViewTask.ViewName
- uid: ALE.ETLBox.ControlFlow.CreateViewTask.VN
  name: VN
  href: api/ALE.ETLBox.ControlFlow.CreateViewTask.html#ALE_ETLBox_ControlFlow_CreateViewTask_VN
  commentId: P:ALE.ETLBox.ControlFlow.CreateViewTask.VN
  fullName: ALE.ETLBox.ControlFlow.CreateViewTask.VN
  nameWithType: CreateViewTask.VN
- uid: ALE.ETLBox.ControlFlow.CreateViewTask.VN*
  name: VN
  href: api/ALE.ETLBox.ControlFlow.CreateViewTask.html#ALE_ETLBox_ControlFlow_CreateViewTask_VN_
  commentId: Overload:ALE.ETLBox.ControlFlow.CreateViewTask.VN
  isSpec: "True"
  fullName: ALE.ETLBox.ControlFlow.CreateViewTask.VN
  nameWithType: CreateViewTask.VN
- uid: ALE.ETLBox.ControlFlow.CustomTask
  name: CustomTask
  href: api/ALE.ETLBox.ControlFlow.CustomTask.html
  commentId: T:ALE.ETLBox.ControlFlow.CustomTask
  fullName: ALE.ETLBox.ControlFlow.CustomTask
  nameWithType: CustomTask
- uid: ALE.ETLBox.ControlFlow.CustomTask.#ctor(System.String)
  name: CustomTask(String)
  href: api/ALE.ETLBox.ControlFlow.CustomTask.html#ALE_ETLBox_ControlFlow_CustomTask__ctor_System_String_
  commentId: M:ALE.ETLBox.ControlFlow.CustomTask.#ctor(System.String)
  fullName: ALE.ETLBox.ControlFlow.CustomTask.CustomTask(System.String)
  nameWithType: CustomTask.CustomTask(String)
- uid: ALE.ETLBox.ControlFlow.CustomTask.#ctor*
  name: CustomTask
  href: api/ALE.ETLBox.ControlFlow.CustomTask.html#ALE_ETLBox_ControlFlow_CustomTask__ctor_
  commentId: Overload:ALE.ETLBox.ControlFlow.CustomTask.#ctor
  isSpec: "True"
  fullName: ALE.ETLBox.ControlFlow.CustomTask.CustomTask
  nameWithType: CustomTask.CustomTask
- uid: ALE.ETLBox.ControlFlow.CustomTask.Execute
  name: Execute()
  href: api/ALE.ETLBox.ControlFlow.CustomTask.html#ALE_ETLBox_ControlFlow_CustomTask_Execute
  commentId: M:ALE.ETLBox.ControlFlow.CustomTask.Execute
  fullName: ALE.ETLBox.ControlFlow.CustomTask.Execute()
  nameWithType: CustomTask.Execute()
- uid: ALE.ETLBox.ControlFlow.CustomTask.Execute(System.Action)
  name: Execute(Action)
  href: api/ALE.ETLBox.ControlFlow.CustomTask.html#ALE_ETLBox_ControlFlow_CustomTask_Execute_System_Action_
  commentId: M:ALE.ETLBox.ControlFlow.CustomTask.Execute(System.Action)
  fullName: ALE.ETLBox.ControlFlow.CustomTask.Execute(System.Action)
  nameWithType: CustomTask.Execute(Action)
- uid: ALE.ETLBox.ControlFlow.CustomTask.Execute(System.String,System.Action)
  name: Execute(String, Action)
  href: api/ALE.ETLBox.ControlFlow.CustomTask.html#ALE_ETLBox_ControlFlow_CustomTask_Execute_System_String_System_Action_
  commentId: M:ALE.ETLBox.ControlFlow.CustomTask.Execute(System.String,System.Action)
  fullName: ALE.ETLBox.ControlFlow.CustomTask.Execute(System.String, System.Action)
  nameWithType: CustomTask.Execute(String, Action)
- uid: ALE.ETLBox.ControlFlow.CustomTask.Execute*
  name: Execute
  href: api/ALE.ETLBox.ControlFlow.CustomTask.html#ALE_ETLBox_ControlFlow_CustomTask_Execute_
  commentId: Overload:ALE.ETLBox.ControlFlow.CustomTask.Execute
  isSpec: "True"
  fullName: ALE.ETLBox.ControlFlow.CustomTask.Execute
  nameWithType: CustomTask.Execute
- uid: ALE.ETLBox.ControlFlow.CustomTask.Execute``1(System.Action{``0},``0)
  name: Execute<t1>(Action<t1>, t1)
  href: api/ALE.ETLBox.ControlFlow.CustomTask.html#ALE_ETLBox_ControlFlow_CustomTask_Execute__1_System_Action___0____0_
  commentId: M:ALE.ETLBox.ControlFlow.CustomTask.Execute``1(System.Action{``0},``0)
  name.vb: Execute(Of t1)(Action(Of t1), t1)
  fullName: ALE.ETLBox.ControlFlow.CustomTask.Execute<t1>(System.Action<t1>, t1)
  fullName.vb: ALE.ETLBox.ControlFlow.CustomTask.Execute(Of t1)(System.Action(Of t1), t1)
  nameWithType: CustomTask.Execute<t1>(Action<t1>, t1)
  nameWithType.vb: CustomTask.Execute(Of t1)(Action(Of t1), t1)
- uid: ALE.ETLBox.ControlFlow.CustomTask.Execute``1(System.String,System.Action{``0},``0)
  name: Execute<t1>(String, Action<t1>, t1)
  href: api/ALE.ETLBox.ControlFlow.CustomTask.html#ALE_ETLBox_ControlFlow_CustomTask_Execute__1_System_String_System_Action___0____0_
  commentId: M:ALE.ETLBox.ControlFlow.CustomTask.Execute``1(System.String,System.Action{``0},``0)
  name.vb: Execute(Of t1)(String, Action(Of t1), t1)
  fullName: ALE.ETLBox.ControlFlow.CustomTask.Execute<t1>(System.String, System.Action<t1>, t1)
  fullName.vb: ALE.ETLBox.ControlFlow.CustomTask.Execute(Of t1)(System.String, System.Action(Of t1), t1)
  nameWithType: CustomTask.Execute<t1>(String, Action<t1>, t1)
  nameWithType.vb: CustomTask.Execute(Of t1)(String, Action(Of t1), t1)
- uid: ALE.ETLBox.ControlFlow.CustomTask.Execute``2(System.Action{``0,``1},``0,``1)
  name: Execute<t1, t2>(Action<t1, t2>, t1, t2)
  href: api/ALE.ETLBox.ControlFlow.CustomTask.html#ALE_ETLBox_ControlFlow_CustomTask_Execute__2_System_Action___0___1____0___1_
  commentId: M:ALE.ETLBox.ControlFlow.CustomTask.Execute``2(System.Action{``0,``1},``0,``1)
  name.vb: Execute(Of t1, t2)(Action(Of t1, t2), t1, t2)
  fullName: ALE.ETLBox.ControlFlow.CustomTask.Execute<t1, t2>(System.Action<t1, t2>, t1, t2)
  fullName.vb: ALE.ETLBox.ControlFlow.CustomTask.Execute(Of t1, t2)(System.Action(Of t1, t2), t1, t2)
  nameWithType: CustomTask.Execute<t1, t2>(Action<t1, t2>, t1, t2)
  nameWithType.vb: CustomTask.Execute(Of t1, t2)(Action(Of t1, t2), t1, t2)
- uid: ALE.ETLBox.ControlFlow.CustomTask.Execute``2(System.String,System.Action{``0,``1},``0,``1)
  name: Execute<t1, t2>(String, Action<t1, t2>, t1, t2)
  href: api/ALE.ETLBox.ControlFlow.CustomTask.html#ALE_ETLBox_ControlFlow_CustomTask_Execute__2_System_String_System_Action___0___1____0___1_
  commentId: M:ALE.ETLBox.ControlFlow.CustomTask.Execute``2(System.String,System.Action{``0,``1},``0,``1)
  name.vb: Execute(Of t1, t2)(String, Action(Of t1, t2), t1, t2)
  fullName: ALE.ETLBox.ControlFlow.CustomTask.Execute<t1, t2>(System.String, System.Action<t1, t2>, t1, t2)
  fullName.vb: ALE.ETLBox.ControlFlow.CustomTask.Execute(Of t1, t2)(System.String, System.Action(Of t1, t2), t1, t2)
  nameWithType: CustomTask.Execute<t1, t2>(String, Action<t1, t2>, t1, t2)
  nameWithType.vb: CustomTask.Execute(Of t1, t2)(String, Action(Of t1, t2), t1, t2)
- uid: ALE.ETLBox.ControlFlow.CustomTask.TaskName
  name: TaskName
  href: api/ALE.ETLBox.ControlFlow.CustomTask.html#ALE_ETLBox_ControlFlow_CustomTask_TaskName
  commentId: P:ALE.ETLBox.ControlFlow.CustomTask.TaskName
  fullName: ALE.ETLBox.ControlFlow.CustomTask.TaskName
  nameWithType: CustomTask.TaskName
- uid: ALE.ETLBox.ControlFlow.CustomTask.TaskName*
  name: TaskName
  href: api/ALE.ETLBox.ControlFlow.CustomTask.html#ALE_ETLBox_ControlFlow_CustomTask_TaskName_
  commentId: Overload:ALE.ETLBox.ControlFlow.CustomTask.TaskName
  isSpec: "True"
  fullName: ALE.ETLBox.ControlFlow.CustomTask.TaskName
  nameWithType: CustomTask.TaskName
- uid: ALE.ETLBox.ControlFlow.DbTask
  name: DbTask
  href: api/ALE.ETLBox.ControlFlow.DbTask.html
  commentId: T:ALE.ETLBox.ControlFlow.DbTask
  fullName: ALE.ETLBox.ControlFlow.DbTask
  nameWithType: DbTask
- uid: ALE.ETLBox.ControlFlow.DbTask.#ctor
  name: DbTask()
  href: api/ALE.ETLBox.ControlFlow.DbTask.html#ALE_ETLBox_ControlFlow_DbTask__ctor
  commentId: M:ALE.ETLBox.ControlFlow.DbTask.#ctor
  fullName: ALE.ETLBox.ControlFlow.DbTask.DbTask()
  nameWithType: DbTask.DbTask()
- uid: ALE.ETLBox.ControlFlow.DbTask.#ctor(ALE.ETLBox.ITask,System.String)
  name: DbTask(ITask, String)
  href: api/ALE.ETLBox.ControlFlow.DbTask.html#ALE_ETLBox_ControlFlow_DbTask__ctor_ALE_ETLBox_ITask_System_String_
  commentId: M:ALE.ETLBox.ControlFlow.DbTask.#ctor(ALE.ETLBox.ITask,System.String)
  fullName: ALE.ETLBox.ControlFlow.DbTask.DbTask(ALE.ETLBox.ITask, System.String)
  nameWithType: DbTask.DbTask(ITask, String)
- uid: ALE.ETLBox.ControlFlow.DbTask.#ctor(System.String)
  name: DbTask(String)
  href: api/ALE.ETLBox.ControlFlow.DbTask.html#ALE_ETLBox_ControlFlow_DbTask__ctor_System_String_
  commentId: M:ALE.ETLBox.ControlFlow.DbTask.#ctor(System.String)
  fullName: ALE.ETLBox.ControlFlow.DbTask.DbTask(System.String)
  nameWithType: DbTask.DbTask(String)
- uid: ALE.ETLBox.ControlFlow.DbTask.#ctor(System.String,System.String)
  name: DbTask(String, String)
  href: api/ALE.ETLBox.ControlFlow.DbTask.html#ALE_ETLBox_ControlFlow_DbTask__ctor_System_String_System_String_
  commentId: M:ALE.ETLBox.ControlFlow.DbTask.#ctor(System.String,System.String)
  fullName: ALE.ETLBox.ControlFlow.DbTask.DbTask(System.String, System.String)
  nameWithType: DbTask.DbTask(String, String)
- uid: ALE.ETLBox.ControlFlow.DbTask.#ctor(System.String,System.String,System.Action,System.Action,System.Action{System.Object}[])
  name: DbTask(String, String, Action, Action, Action<Object>[])
  href: api/ALE.ETLBox.ControlFlow.DbTask.html#ALE_ETLBox_ControlFlow_DbTask__ctor_System_String_System_String_System_Action_System_Action_System_Action_System_Object____
  commentId: M:ALE.ETLBox.ControlFlow.DbTask.#ctor(System.String,System.String,System.Action,System.Action,System.Action{System.Object}[])
  name.vb: DbTask(String, String, Action, Action, Action(Of Object)())
  fullName: ALE.ETLBox.ControlFlow.DbTask.DbTask(System.String, System.String, System.Action, System.Action, System.Action<System.Object>[])
  fullName.vb: ALE.ETLBox.ControlFlow.DbTask.DbTask(System.String, System.String, System.Action, System.Action, System.Action(Of System.Object)())
  nameWithType: DbTask.DbTask(String, String, Action, Action, Action<Object>[])
  nameWithType.vb: DbTask.DbTask(String, String, Action, Action, Action(Of Object)())
- uid: ALE.ETLBox.ControlFlow.DbTask.#ctor(System.String,System.String,System.Action{System.Object}[])
  name: DbTask(String, String, Action<Object>[])
  href: api/ALE.ETLBox.ControlFlow.DbTask.html#ALE_ETLBox_ControlFlow_DbTask__ctor_System_String_System_String_System_Action_System_Object____
  commentId: M:ALE.ETLBox.ControlFlow.DbTask.#ctor(System.String,System.String,System.Action{System.Object}[])
  name.vb: DbTask(String, String, Action(Of Object)())
  fullName: ALE.ETLBox.ControlFlow.DbTask.DbTask(System.String, System.String, System.Action<System.Object>[])
  fullName.vb: ALE.ETLBox.ControlFlow.DbTask.DbTask(System.String, System.String, System.Action(Of System.Object)())
  nameWithType: DbTask.DbTask(String, String, Action<Object>[])
  nameWithType.vb: DbTask.DbTask(String, String, Action(Of Object)())
- uid: ALE.ETLBox.ControlFlow.DbTask.#ctor*
  name: DbTask
  href: api/ALE.ETLBox.ControlFlow.DbTask.html#ALE_ETLBox_ControlFlow_DbTask__ctor_
  commentId: Overload:ALE.ETLBox.ControlFlow.DbTask.#ctor
  isSpec: "True"
  fullName: ALE.ETLBox.ControlFlow.DbTask.DbTask
  nameWithType: DbTask.DbTask
- uid: ALE.ETLBox.ControlFlow.DbTask.Actions
  name: Actions
  href: api/ALE.ETLBox.ControlFlow.DbTask.html#ALE_ETLBox_ControlFlow_DbTask_Actions
  commentId: P:ALE.ETLBox.ControlFlow.DbTask.Actions
  fullName: ALE.ETLBox.ControlFlow.DbTask.Actions
  nameWithType: DbTask.Actions
- uid: ALE.ETLBox.ControlFlow.DbTask.Actions*
  name: Actions
  href: api/ALE.ETLBox.ControlFlow.DbTask.html#ALE_ETLBox_ControlFlow_DbTask_Actions_
  commentId: Overload:ALE.ETLBox.ControlFlow.DbTask.Actions
  isSpec: "True"
  fullName: ALE.ETLBox.ControlFlow.DbTask.Actions
  nameWithType: DbTask.Actions
- uid: ALE.ETLBox.ControlFlow.DbTask.AfterRowReadAction
  name: AfterRowReadAction
  href: api/ALE.ETLBox.ControlFlow.DbTask.html#ALE_ETLBox_ControlFlow_DbTask_AfterRowReadAction
  commentId: P:ALE.ETLBox.ControlFlow.DbTask.AfterRowReadAction
  fullName: ALE.ETLBox.ControlFlow.DbTask.AfterRowReadAction
  nameWithType: DbTask.AfterRowReadAction
- uid: ALE.ETLBox.ControlFlow.DbTask.AfterRowReadAction*
  name: AfterRowReadAction
  href: api/ALE.ETLBox.ControlFlow.DbTask.html#ALE_ETLBox_ControlFlow_DbTask_AfterRowReadAction_
  commentId: Overload:ALE.ETLBox.ControlFlow.DbTask.AfterRowReadAction
  isSpec: "True"
  fullName: ALE.ETLBox.ControlFlow.DbTask.AfterRowReadAction
  nameWithType: DbTask.AfterRowReadAction
- uid: ALE.ETLBox.ControlFlow.DbTask.BeforeRowReadAction
  name: BeforeRowReadAction
  href: api/ALE.ETLBox.ControlFlow.DbTask.html#ALE_ETLBox_ControlFlow_DbTask_BeforeRowReadAction
  commentId: P:ALE.ETLBox.ControlFlow.DbTask.BeforeRowReadAction
  fullName: ALE.ETLBox.ControlFlow.DbTask.BeforeRowReadAction
  nameWithType: DbTask.BeforeRowReadAction
- uid: ALE.ETLBox.ControlFlow.DbTask.BeforeRowReadAction*
  name: BeforeRowReadAction
  href: api/ALE.ETLBox.ControlFlow.DbTask.html#ALE_ETLBox_ControlFlow_DbTask_BeforeRowReadAction_
  commentId: Overload:ALE.ETLBox.ControlFlow.DbTask.BeforeRowReadAction
  isSpec: "True"
  fullName: ALE.ETLBox.ControlFlow.DbTask.BeforeRowReadAction
  nameWithType: DbTask.BeforeRowReadAction
- uid: ALE.ETLBox.ControlFlow.DbTask.BulkInsert(ALE.ETLBox.ITableData,System.String)
  name: BulkInsert(ITableData, String)
  href: api/ALE.ETLBox.ControlFlow.DbTask.html#ALE_ETLBox_ControlFlow_DbTask_BulkInsert_ALE_ETLBox_ITableData_System_String_
  commentId: M:ALE.ETLBox.ControlFlow.DbTask.BulkInsert(ALE.ETLBox.ITableData,System.String)
  fullName: ALE.ETLBox.ControlFlow.DbTask.BulkInsert(ALE.ETLBox.ITableData, System.String)
  nameWithType: DbTask.BulkInsert(ITableData, String)
- uid: ALE.ETLBox.ControlFlow.DbTask.BulkInsert*
  name: BulkInsert
  href: api/ALE.ETLBox.ControlFlow.DbTask.html#ALE_ETLBox_ControlFlow_DbTask_BulkInsert_
  commentId: Overload:ALE.ETLBox.ControlFlow.DbTask.BulkInsert
  isSpec: "True"
  fullName: ALE.ETLBox.ControlFlow.DbTask.BulkInsert
  nameWithType: DbTask.BulkInsert
- uid: ALE.ETLBox.ControlFlow.DbTask.Command
  name: Command
  href: api/ALE.ETLBox.ControlFlow.DbTask.html#ALE_ETLBox_ControlFlow_DbTask_Command
  commentId: P:ALE.ETLBox.ControlFlow.DbTask.Command
  fullName: ALE.ETLBox.ControlFlow.DbTask.Command
  nameWithType: DbTask.Command
- uid: ALE.ETLBox.ControlFlow.DbTask.Command*
  name: Command
  href: api/ALE.ETLBox.ControlFlow.DbTask.html#ALE_ETLBox_ControlFlow_DbTask_Command_
  commentId: Overload:ALE.ETLBox.ControlFlow.DbTask.Command
  isSpec: "True"
  fullName: ALE.ETLBox.ControlFlow.DbTask.Command
  nameWithType: DbTask.Command
- uid: ALE.ETLBox.ControlFlow.DbTask.DoXMLCommentStyle
  name: DoXMLCommentStyle
  href: api/ALE.ETLBox.ControlFlow.DbTask.html#ALE_ETLBox_ControlFlow_DbTask_DoXMLCommentStyle
  commentId: P:ALE.ETLBox.ControlFlow.DbTask.DoXMLCommentStyle
  fullName: ALE.ETLBox.ControlFlow.DbTask.DoXMLCommentStyle
  nameWithType: DbTask.DoXMLCommentStyle
- uid: ALE.ETLBox.ControlFlow.DbTask.DoXMLCommentStyle*
  name: DoXMLCommentStyle
  href: api/ALE.ETLBox.ControlFlow.DbTask.html#ALE_ETLBox_ControlFlow_DbTask_DoXMLCommentStyle_
  commentId: Overload:ALE.ETLBox.ControlFlow.DbTask.DoXMLCommentStyle
  isSpec: "True"
  fullName: ALE.ETLBox.ControlFlow.DbTask.DoXMLCommentStyle
  nameWithType: DbTask.DoXMLCommentStyle
- uid: ALE.ETLBox.ControlFlow.DbTask.ExecuteNonQuery
  name: ExecuteNonQuery()
  href: api/ALE.ETLBox.ControlFlow.DbTask.html#ALE_ETLBox_ControlFlow_DbTask_ExecuteNonQuery
  commentId: M:ALE.ETLBox.ControlFlow.DbTask.ExecuteNonQuery
  fullName: ALE.ETLBox.ControlFlow.DbTask.ExecuteNonQuery()
  nameWithType: DbTask.ExecuteNonQuery()
- uid: ALE.ETLBox.ControlFlow.DbTask.ExecuteNonQuery*
  name: ExecuteNonQuery
  href: api/ALE.ETLBox.ControlFlow.DbTask.html#ALE_ETLBox_ControlFlow_DbTask_ExecuteNonQuery_
  commentId: Overload:ALE.ETLBox.ControlFlow.DbTask.ExecuteNonQuery
  isSpec: "True"
  fullName: ALE.ETLBox.ControlFlow.DbTask.ExecuteNonQuery
  nameWithType: DbTask.ExecuteNonQuery
- uid: ALE.ETLBox.ControlFlow.DbTask.ExecuteReader
  name: ExecuteReader()
  href: api/ALE.ETLBox.ControlFlow.DbTask.html#ALE_ETLBox_ControlFlow_DbTask_ExecuteReader
  commentId: M:ALE.ETLBox.ControlFlow.DbTask.ExecuteReader
  fullName: ALE.ETLBox.ControlFlow.DbTask.ExecuteReader()
  nameWithType: DbTask.ExecuteReader()
- uid: ALE.ETLBox.ControlFlow.DbTask.ExecuteReader*
  name: ExecuteReader
  href: api/ALE.ETLBox.ControlFlow.DbTask.html#ALE_ETLBox_ControlFlow_DbTask_ExecuteReader_
  commentId: Overload:ALE.ETLBox.ControlFlow.DbTask.ExecuteReader
  isSpec: "True"
  fullName: ALE.ETLBox.ControlFlow.DbTask.ExecuteReader
  nameWithType: DbTask.ExecuteReader
- uid: ALE.ETLBox.ControlFlow.DbTask.ExecuteScalar
  name: ExecuteScalar()
  href: api/ALE.ETLBox.ControlFlow.DbTask.html#ALE_ETLBox_ControlFlow_DbTask_ExecuteScalar
  commentId: M:ALE.ETLBox.ControlFlow.DbTask.ExecuteScalar
  fullName: ALE.ETLBox.ControlFlow.DbTask.ExecuteScalar()
  nameWithType: DbTask.ExecuteScalar()
- uid: ALE.ETLBox.ControlFlow.DbTask.ExecuteScalar*
  name: ExecuteScalar
  href: api/ALE.ETLBox.ControlFlow.DbTask.html#ALE_ETLBox_ControlFlow_DbTask_ExecuteScalar_
  commentId: Overload:ALE.ETLBox.ControlFlow.DbTask.ExecuteScalar
  isSpec: "True"
  fullName: ALE.ETLBox.ControlFlow.DbTask.ExecuteScalar
  nameWithType: DbTask.ExecuteScalar
- uid: ALE.ETLBox.ControlFlow.DbTask.ExecuteScalar``1
  name: ExecuteScalar<T>()
  href: api/ALE.ETLBox.ControlFlow.DbTask.html#ALE_ETLBox_ControlFlow_DbTask_ExecuteScalar__1
  commentId: M:ALE.ETLBox.ControlFlow.DbTask.ExecuteScalar``1
  name.vb: ExecuteScalar(Of T)()
  fullName: ALE.ETLBox.ControlFlow.DbTask.ExecuteScalar<T>()
  fullName.vb: ALE.ETLBox.ControlFlow.DbTask.ExecuteScalar(Of T)()
  nameWithType: DbTask.ExecuteScalar<T>()
  nameWithType.vb: DbTask.ExecuteScalar(Of T)()
- uid: ALE.ETLBox.ControlFlow.DbTask.ExecuteScalarAsBool
  name: ExecuteScalarAsBool()
  href: api/ALE.ETLBox.ControlFlow.DbTask.html#ALE_ETLBox_ControlFlow_DbTask_ExecuteScalarAsBool
  commentId: M:ALE.ETLBox.ControlFlow.DbTask.ExecuteScalarAsBool
  fullName: ALE.ETLBox.ControlFlow.DbTask.ExecuteScalarAsBool()
  nameWithType: DbTask.ExecuteScalarAsBool()
- uid: ALE.ETLBox.ControlFlow.DbTask.ExecuteScalarAsBool*
  name: ExecuteScalarAsBool
  href: api/ALE.ETLBox.ControlFlow.DbTask.html#ALE_ETLBox_ControlFlow_DbTask_ExecuteScalarAsBool_
  commentId: Overload:ALE.ETLBox.ControlFlow.DbTask.ExecuteScalarAsBool
  isSpec: "True"
  fullName: ALE.ETLBox.ControlFlow.DbTask.ExecuteScalarAsBool
  nameWithType: DbTask.ExecuteScalarAsBool
- uid: ALE.ETLBox.ControlFlow.DbTask.IsOdbcConnection
  name: IsOdbcConnection
  href: api/ALE.ETLBox.ControlFlow.DbTask.html#ALE_ETLBox_ControlFlow_DbTask_IsOdbcConnection
  commentId: P:ALE.ETLBox.ControlFlow.DbTask.IsOdbcConnection
  fullName: ALE.ETLBox.ControlFlow.DbTask.IsOdbcConnection
  nameWithType: DbTask.IsOdbcConnection
- uid: ALE.ETLBox.ControlFlow.DbTask.IsOdbcConnection*
  name: IsOdbcConnection
  href: api/ALE.ETLBox.ControlFlow.DbTask.html#ALE_ETLBox_ControlFlow_DbTask_IsOdbcConnection_
  commentId: Overload:ALE.ETLBox.ControlFlow.DbTask.IsOdbcConnection
  isSpec: "True"
  fullName: ALE.ETLBox.ControlFlow.DbTask.IsOdbcConnection
  nameWithType: DbTask.IsOdbcConnection
- uid: ALE.ETLBox.ControlFlow.DbTask.Limit
  name: Limit
  href: api/ALE.ETLBox.ControlFlow.DbTask.html#ALE_ETLBox_ControlFlow_DbTask_Limit
  commentId: P:ALE.ETLBox.ControlFlow.DbTask.Limit
  fullName: ALE.ETLBox.ControlFlow.DbTask.Limit
  nameWithType: DbTask.Limit
- uid: ALE.ETLBox.ControlFlow.DbTask.Limit*
  name: Limit
  href: api/ALE.ETLBox.ControlFlow.DbTask.html#ALE_ETLBox_ControlFlow_DbTask_Limit_
  commentId: Overload:ALE.ETLBox.ControlFlow.DbTask.Limit
  isSpec: "True"
  fullName: ALE.ETLBox.ControlFlow.DbTask.Limit
  nameWithType: DbTask.Limit
- uid: ALE.ETLBox.ControlFlow.DbTask.Parameter
  name: Parameter
  href: api/ALE.ETLBox.ControlFlow.DbTask.html#ALE_ETLBox_ControlFlow_DbTask_Parameter
  commentId: P:ALE.ETLBox.ControlFlow.DbTask.Parameter
  fullName: ALE.ETLBox.ControlFlow.DbTask.Parameter
  nameWithType: DbTask.Parameter
- uid: ALE.ETLBox.ControlFlow.DbTask.Parameter*
  name: Parameter
  href: api/ALE.ETLBox.ControlFlow.DbTask.html#ALE_ETLBox_ControlFlow_DbTask_Parameter_
  commentId: Overload:ALE.ETLBox.ControlFlow.DbTask.Parameter
  isSpec: "True"
  fullName: ALE.ETLBox.ControlFlow.DbTask.Parameter
  nameWithType: DbTask.Parameter
- uid: ALE.ETLBox.ControlFlow.DbTask.RowsAffected
  name: RowsAffected
  href: api/ALE.ETLBox.ControlFlow.DbTask.html#ALE_ETLBox_ControlFlow_DbTask_RowsAffected
  commentId: P:ALE.ETLBox.ControlFlow.DbTask.RowsAffected
  fullName: ALE.ETLBox.ControlFlow.DbTask.RowsAffected
  nameWithType: DbTask.RowsAffected
- uid: ALE.ETLBox.ControlFlow.DbTask.RowsAffected*
  name: RowsAffected
  href: api/ALE.ETLBox.ControlFlow.DbTask.html#ALE_ETLBox_ControlFlow_DbTask_RowsAffected_
  commentId: Overload:ALE.ETLBox.ControlFlow.DbTask.RowsAffected
  isSpec: "True"
  fullName: ALE.ETLBox.ControlFlow.DbTask.RowsAffected
  nameWithType: DbTask.RowsAffected
- uid: ALE.ETLBox.ControlFlow.DbTask.Sql
  name: Sql
  href: api/ALE.ETLBox.ControlFlow.DbTask.html#ALE_ETLBox_ControlFlow_DbTask_Sql
  commentId: P:ALE.ETLBox.ControlFlow.DbTask.Sql
  fullName: ALE.ETLBox.ControlFlow.DbTask.Sql
  nameWithType: DbTask.Sql
- uid: ALE.ETLBox.ControlFlow.DbTask.Sql*
  name: Sql
  href: api/ALE.ETLBox.ControlFlow.DbTask.html#ALE_ETLBox_ControlFlow_DbTask_Sql_
  commentId: Overload:ALE.ETLBox.ControlFlow.DbTask.Sql
  isSpec: "True"
  fullName: ALE.ETLBox.ControlFlow.DbTask.Sql
  nameWithType: DbTask.Sql
- uid: ALE.ETLBox.ControlFlow.DropDatabaseTask
  name: DropDatabaseTask
  href: api/ALE.ETLBox.ControlFlow.DropDatabaseTask.html
  commentId: T:ALE.ETLBox.ControlFlow.DropDatabaseTask
  fullName: ALE.ETLBox.ControlFlow.DropDatabaseTask
  nameWithType: DropDatabaseTask
- uid: ALE.ETLBox.ControlFlow.DropDatabaseTask.#ctor
  name: DropDatabaseTask()
  href: api/ALE.ETLBox.ControlFlow.DropDatabaseTask.html#ALE_ETLBox_ControlFlow_DropDatabaseTask__ctor
  commentId: M:ALE.ETLBox.ControlFlow.DropDatabaseTask.#ctor
  fullName: ALE.ETLBox.ControlFlow.DropDatabaseTask.DropDatabaseTask()
  nameWithType: DropDatabaseTask.DropDatabaseTask()
- uid: ALE.ETLBox.ControlFlow.DropDatabaseTask.#ctor(System.String)
  name: DropDatabaseTask(String)
  href: api/ALE.ETLBox.ControlFlow.DropDatabaseTask.html#ALE_ETLBox_ControlFlow_DropDatabaseTask__ctor_System_String_
  commentId: M:ALE.ETLBox.ControlFlow.DropDatabaseTask.#ctor(System.String)
  fullName: ALE.ETLBox.ControlFlow.DropDatabaseTask.DropDatabaseTask(System.String)
  nameWithType: DropDatabaseTask.DropDatabaseTask(String)
- uid: ALE.ETLBox.ControlFlow.DropDatabaseTask.#ctor*
  name: DropDatabaseTask
  href: api/ALE.ETLBox.ControlFlow.DropDatabaseTask.html#ALE_ETLBox_ControlFlow_DropDatabaseTask__ctor_
  commentId: Overload:ALE.ETLBox.ControlFlow.DropDatabaseTask.#ctor
  isSpec: "True"
  fullName: ALE.ETLBox.ControlFlow.DropDatabaseTask.DropDatabaseTask
  nameWithType: DropDatabaseTask.DropDatabaseTask
- uid: ALE.ETLBox.ControlFlow.DropDatabaseTask.Drop(ALE.ETLBox.ConnectionManager.IConnectionManager,System.String)
  name: Drop(IConnectionManager, String)
  href: api/ALE.ETLBox.ControlFlow.DropDatabaseTask.html#ALE_ETLBox_ControlFlow_DropDatabaseTask_Drop_ALE_ETLBox_ConnectionManager_IConnectionManager_System_String_
  commentId: M:ALE.ETLBox.ControlFlow.DropDatabaseTask.Drop(ALE.ETLBox.ConnectionManager.IConnectionManager,System.String)
  fullName: ALE.ETLBox.ControlFlow.DropDatabaseTask.Drop(ALE.ETLBox.ConnectionManager.IConnectionManager, System.String)
  nameWithType: DropDatabaseTask.Drop(IConnectionManager, String)
- uid: ALE.ETLBox.ControlFlow.DropDatabaseTask.Drop(System.String)
  name: Drop(String)
  href: api/ALE.ETLBox.ControlFlow.DropDatabaseTask.html#ALE_ETLBox_ControlFlow_DropDatabaseTask_Drop_System_String_
  commentId: M:ALE.ETLBox.ControlFlow.DropDatabaseTask.Drop(System.String)
  fullName: ALE.ETLBox.ControlFlow.DropDatabaseTask.Drop(System.String)
  nameWithType: DropDatabaseTask.Drop(String)
- uid: ALE.ETLBox.ControlFlow.DropDatabaseTask.Drop*
  name: Drop
  href: api/ALE.ETLBox.ControlFlow.DropDatabaseTask.html#ALE_ETLBox_ControlFlow_DropDatabaseTask_Drop_
  commentId: Overload:ALE.ETLBox.ControlFlow.DropDatabaseTask.Drop
  isSpec: "True"
  fullName: ALE.ETLBox.ControlFlow.DropDatabaseTask.Drop
  nameWithType: DropDatabaseTask.Drop
- uid: ALE.ETLBox.ControlFlow.DropDatabaseTask.DropIfExists(ALE.ETLBox.ConnectionManager.IConnectionManager,System.String)
  name: DropIfExists(IConnectionManager, String)
  href: api/ALE.ETLBox.ControlFlow.DropDatabaseTask.html#ALE_ETLBox_ControlFlow_DropDatabaseTask_DropIfExists_ALE_ETLBox_ConnectionManager_IConnectionManager_System_String_
  commentId: M:ALE.ETLBox.ControlFlow.DropDatabaseTask.DropIfExists(ALE.ETLBox.ConnectionManager.IConnectionManager,System.String)
  fullName: ALE.ETLBox.ControlFlow.DropDatabaseTask.DropIfExists(ALE.ETLBox.ConnectionManager.IConnectionManager, System.String)
  nameWithType: DropDatabaseTask.DropIfExists(IConnectionManager, String)
- uid: ALE.ETLBox.ControlFlow.DropDatabaseTask.DropIfExists(System.String)
  name: DropIfExists(String)
  href: api/ALE.ETLBox.ControlFlow.DropDatabaseTask.html#ALE_ETLBox_ControlFlow_DropDatabaseTask_DropIfExists_System_String_
  commentId: M:ALE.ETLBox.ControlFlow.DropDatabaseTask.DropIfExists(System.String)
  fullName: ALE.ETLBox.ControlFlow.DropDatabaseTask.DropIfExists(System.String)
  nameWithType: DropDatabaseTask.DropIfExists(String)
- uid: ALE.ETLBox.ControlFlow.DropDatabaseTask.DropIfExists*
  name: DropIfExists
  href: api/ALE.ETLBox.ControlFlow.DropDatabaseTask.html#ALE_ETLBox_ControlFlow_DropDatabaseTask_DropIfExists_
  commentId: Overload:ALE.ETLBox.ControlFlow.DropDatabaseTask.DropIfExists
  isSpec: "True"
  fullName: ALE.ETLBox.ControlFlow.DropDatabaseTask.DropIfExists
  nameWithType: DropDatabaseTask.DropIfExists
- uid: ALE.ETLBox.ControlFlow.DropIndexTask
  name: DropIndexTask
  href: api/ALE.ETLBox.ControlFlow.DropIndexTask.html
  commentId: T:ALE.ETLBox.ControlFlow.DropIndexTask
  fullName: ALE.ETLBox.ControlFlow.DropIndexTask
  nameWithType: DropIndexTask
- uid: ALE.ETLBox.ControlFlow.DropIndexTask.#ctor
  name: DropIndexTask()
  href: api/ALE.ETLBox.ControlFlow.DropIndexTask.html#ALE_ETLBox_ControlFlow_DropIndexTask__ctor
  commentId: M:ALE.ETLBox.ControlFlow.DropIndexTask.#ctor
  fullName: ALE.ETLBox.ControlFlow.DropIndexTask.DropIndexTask()
  nameWithType: DropIndexTask.DropIndexTask()
- uid: ALE.ETLBox.ControlFlow.DropIndexTask.#ctor(System.String,System.String)
  name: DropIndexTask(String, String)
  href: api/ALE.ETLBox.ControlFlow.DropIndexTask.html#ALE_ETLBox_ControlFlow_DropIndexTask__ctor_System_String_System_String_
  commentId: M:ALE.ETLBox.ControlFlow.DropIndexTask.#ctor(System.String,System.String)
  fullName: ALE.ETLBox.ControlFlow.DropIndexTask.DropIndexTask(System.String, System.String)
  nameWithType: DropIndexTask.DropIndexTask(String, String)
- uid: ALE.ETLBox.ControlFlow.DropIndexTask.#ctor*
  name: DropIndexTask
  href: api/ALE.ETLBox.ControlFlow.DropIndexTask.html#ALE_ETLBox_ControlFlow_DropIndexTask__ctor_
  commentId: Overload:ALE.ETLBox.ControlFlow.DropIndexTask.#ctor
  isSpec: "True"
  fullName: ALE.ETLBox.ControlFlow.DropIndexTask.DropIndexTask
  nameWithType: DropIndexTask.DropIndexTask
- uid: ALE.ETLBox.ControlFlow.DropIndexTask.Drop(ALE.ETLBox.ConnectionManager.IConnectionManager,System.String,System.String)
  name: Drop(IConnectionManager, String, String)
  href: api/ALE.ETLBox.ControlFlow.DropIndexTask.html#ALE_ETLBox_ControlFlow_DropIndexTask_Drop_ALE_ETLBox_ConnectionManager_IConnectionManager_System_String_System_String_
  commentId: M:ALE.ETLBox.ControlFlow.DropIndexTask.Drop(ALE.ETLBox.ConnectionManager.IConnectionManager,System.String,System.String)
  fullName: ALE.ETLBox.ControlFlow.DropIndexTask.Drop(ALE.ETLBox.ConnectionManager.IConnectionManager, System.String, System.String)
  nameWithType: DropIndexTask.Drop(IConnectionManager, String, String)
- uid: ALE.ETLBox.ControlFlow.DropIndexTask.Drop(System.String,System.String)
  name: Drop(String, String)
  href: api/ALE.ETLBox.ControlFlow.DropIndexTask.html#ALE_ETLBox_ControlFlow_DropIndexTask_Drop_System_String_System_String_
  commentId: M:ALE.ETLBox.ControlFlow.DropIndexTask.Drop(System.String,System.String)
  fullName: ALE.ETLBox.ControlFlow.DropIndexTask.Drop(System.String, System.String)
  nameWithType: DropIndexTask.Drop(String, String)
- uid: ALE.ETLBox.ControlFlow.DropIndexTask.Drop*
  name: Drop
  href: api/ALE.ETLBox.ControlFlow.DropIndexTask.html#ALE_ETLBox_ControlFlow_DropIndexTask_Drop_
  commentId: Overload:ALE.ETLBox.ControlFlow.DropIndexTask.Drop
  isSpec: "True"
  fullName: ALE.ETLBox.ControlFlow.DropIndexTask.Drop
  nameWithType: DropIndexTask.Drop
- uid: ALE.ETLBox.ControlFlow.DropIndexTask.DropIfExists(ALE.ETLBox.ConnectionManager.IConnectionManager,System.String,System.String)
  name: DropIfExists(IConnectionManager, String, String)
  href: api/ALE.ETLBox.ControlFlow.DropIndexTask.html#ALE_ETLBox_ControlFlow_DropIndexTask_DropIfExists_ALE_ETLBox_ConnectionManager_IConnectionManager_System_String_System_String_
  commentId: M:ALE.ETLBox.ControlFlow.DropIndexTask.DropIfExists(ALE.ETLBox.ConnectionManager.IConnectionManager,System.String,System.String)
  fullName: ALE.ETLBox.ControlFlow.DropIndexTask.DropIfExists(ALE.ETLBox.ConnectionManager.IConnectionManager, System.String, System.String)
  nameWithType: DropIndexTask.DropIfExists(IConnectionManager, String, String)
- uid: ALE.ETLBox.ControlFlow.DropIndexTask.DropIfExists(System.String,System.String)
  name: DropIfExists(String, String)
  href: api/ALE.ETLBox.ControlFlow.DropIndexTask.html#ALE_ETLBox_ControlFlow_DropIndexTask_DropIfExists_System_String_System_String_
  commentId: M:ALE.ETLBox.ControlFlow.DropIndexTask.DropIfExists(System.String,System.String)
  fullName: ALE.ETLBox.ControlFlow.DropIndexTask.DropIfExists(System.String, System.String)
  nameWithType: DropIndexTask.DropIfExists(String, String)
- uid: ALE.ETLBox.ControlFlow.DropIndexTask.DropIfExists*
  name: DropIfExists
  href: api/ALE.ETLBox.ControlFlow.DropIndexTask.html#ALE_ETLBox_ControlFlow_DropIndexTask_DropIfExists_
  commentId: Overload:ALE.ETLBox.ControlFlow.DropIndexTask.DropIfExists
  isSpec: "True"
  fullName: ALE.ETLBox.ControlFlow.DropIndexTask.DropIfExists
  nameWithType: DropIndexTask.DropIfExists
- uid: ALE.ETLBox.ControlFlow.DropIndexTask.TableName
  name: TableName
  href: api/ALE.ETLBox.ControlFlow.DropIndexTask.html#ALE_ETLBox_ControlFlow_DropIndexTask_TableName
  commentId: P:ALE.ETLBox.ControlFlow.DropIndexTask.TableName
  fullName: ALE.ETLBox.ControlFlow.DropIndexTask.TableName
  nameWithType: DropIndexTask.TableName
- uid: ALE.ETLBox.ControlFlow.DropIndexTask.TableName*
  name: TableName
  href: api/ALE.ETLBox.ControlFlow.DropIndexTask.html#ALE_ETLBox_ControlFlow_DropIndexTask_TableName_
  commentId: Overload:ALE.ETLBox.ControlFlow.DropIndexTask.TableName
  isSpec: "True"
  fullName: ALE.ETLBox.ControlFlow.DropIndexTask.TableName
  nameWithType: DropIndexTask.TableName
- uid: ALE.ETLBox.ControlFlow.DropIndexTask.TN
  name: TN
  href: api/ALE.ETLBox.ControlFlow.DropIndexTask.html#ALE_ETLBox_ControlFlow_DropIndexTask_TN
  commentId: P:ALE.ETLBox.ControlFlow.DropIndexTask.TN
  fullName: ALE.ETLBox.ControlFlow.DropIndexTask.TN
  nameWithType: DropIndexTask.TN
- uid: ALE.ETLBox.ControlFlow.DropIndexTask.TN*
  name: TN
  href: api/ALE.ETLBox.ControlFlow.DropIndexTask.html#ALE_ETLBox_ControlFlow_DropIndexTask_TN_
  commentId: Overload:ALE.ETLBox.ControlFlow.DropIndexTask.TN
  isSpec: "True"
  fullName: ALE.ETLBox.ControlFlow.DropIndexTask.TN
  nameWithType: DropIndexTask.TN
- uid: ALE.ETLBox.ControlFlow.DropProcedureTask
  name: DropProcedureTask
  href: api/ALE.ETLBox.ControlFlow.DropProcedureTask.html
  commentId: T:ALE.ETLBox.ControlFlow.DropProcedureTask
  fullName: ALE.ETLBox.ControlFlow.DropProcedureTask
  nameWithType: DropProcedureTask
- uid: ALE.ETLBox.ControlFlow.DropProcedureTask.#ctor
  name: DropProcedureTask()
  href: api/ALE.ETLBox.ControlFlow.DropProcedureTask.html#ALE_ETLBox_ControlFlow_DropProcedureTask__ctor
  commentId: M:ALE.ETLBox.ControlFlow.DropProcedureTask.#ctor
  fullName: ALE.ETLBox.ControlFlow.DropProcedureTask.DropProcedureTask()
  nameWithType: DropProcedureTask.DropProcedureTask()
- uid: ALE.ETLBox.ControlFlow.DropProcedureTask.#ctor(System.String)
  name: DropProcedureTask(String)
  href: api/ALE.ETLBox.ControlFlow.DropProcedureTask.html#ALE_ETLBox_ControlFlow_DropProcedureTask__ctor_System_String_
  commentId: M:ALE.ETLBox.ControlFlow.DropProcedureTask.#ctor(System.String)
  fullName: ALE.ETLBox.ControlFlow.DropProcedureTask.DropProcedureTask(System.String)
  nameWithType: DropProcedureTask.DropProcedureTask(String)
- uid: ALE.ETLBox.ControlFlow.DropProcedureTask.#ctor*
  name: DropProcedureTask
  href: api/ALE.ETLBox.ControlFlow.DropProcedureTask.html#ALE_ETLBox_ControlFlow_DropProcedureTask__ctor_
  commentId: Overload:ALE.ETLBox.ControlFlow.DropProcedureTask.#ctor
  isSpec: "True"
  fullName: ALE.ETLBox.ControlFlow.DropProcedureTask.DropProcedureTask
  nameWithType: DropProcedureTask.DropProcedureTask
- uid: ALE.ETLBox.ControlFlow.DropProcedureTask.Drop(ALE.ETLBox.ConnectionManager.IConnectionManager,System.String)
  name: Drop(IConnectionManager, String)
  href: api/ALE.ETLBox.ControlFlow.DropProcedureTask.html#ALE_ETLBox_ControlFlow_DropProcedureTask_Drop_ALE_ETLBox_ConnectionManager_IConnectionManager_System_String_
  commentId: M:ALE.ETLBox.ControlFlow.DropProcedureTask.Drop(ALE.ETLBox.ConnectionManager.IConnectionManager,System.String)
  fullName: ALE.ETLBox.ControlFlow.DropProcedureTask.Drop(ALE.ETLBox.ConnectionManager.IConnectionManager, System.String)
  nameWithType: DropProcedureTask.Drop(IConnectionManager, String)
- uid: ALE.ETLBox.ControlFlow.DropProcedureTask.Drop(System.String)
  name: Drop(String)
  href: api/ALE.ETLBox.ControlFlow.DropProcedureTask.html#ALE_ETLBox_ControlFlow_DropProcedureTask_Drop_System_String_
  commentId: M:ALE.ETLBox.ControlFlow.DropProcedureTask.Drop(System.String)
  fullName: ALE.ETLBox.ControlFlow.DropProcedureTask.Drop(System.String)
  nameWithType: DropProcedureTask.Drop(String)
- uid: ALE.ETLBox.ControlFlow.DropProcedureTask.Drop*
  name: Drop
  href: api/ALE.ETLBox.ControlFlow.DropProcedureTask.html#ALE_ETLBox_ControlFlow_DropProcedureTask_Drop_
  commentId: Overload:ALE.ETLBox.ControlFlow.DropProcedureTask.Drop
  isSpec: "True"
  fullName: ALE.ETLBox.ControlFlow.DropProcedureTask.Drop
  nameWithType: DropProcedureTask.Drop
- uid: ALE.ETLBox.ControlFlow.DropProcedureTask.DropIfExists(ALE.ETLBox.ConnectionManager.IConnectionManager,System.String)
  name: DropIfExists(IConnectionManager, String)
  href: api/ALE.ETLBox.ControlFlow.DropProcedureTask.html#ALE_ETLBox_ControlFlow_DropProcedureTask_DropIfExists_ALE_ETLBox_ConnectionManager_IConnectionManager_System_String_
  commentId: M:ALE.ETLBox.ControlFlow.DropProcedureTask.DropIfExists(ALE.ETLBox.ConnectionManager.IConnectionManager,System.String)
  fullName: ALE.ETLBox.ControlFlow.DropProcedureTask.DropIfExists(ALE.ETLBox.ConnectionManager.IConnectionManager, System.String)
  nameWithType: DropProcedureTask.DropIfExists(IConnectionManager, String)
- uid: ALE.ETLBox.ControlFlow.DropProcedureTask.DropIfExists(System.String)
  name: DropIfExists(String)
  href: api/ALE.ETLBox.ControlFlow.DropProcedureTask.html#ALE_ETLBox_ControlFlow_DropProcedureTask_DropIfExists_System_String_
  commentId: M:ALE.ETLBox.ControlFlow.DropProcedureTask.DropIfExists(System.String)
  fullName: ALE.ETLBox.ControlFlow.DropProcedureTask.DropIfExists(System.String)
  nameWithType: DropProcedureTask.DropIfExists(String)
- uid: ALE.ETLBox.ControlFlow.DropProcedureTask.DropIfExists*
  name: DropIfExists
  href: api/ALE.ETLBox.ControlFlow.DropProcedureTask.html#ALE_ETLBox_ControlFlow_DropProcedureTask_DropIfExists_
  commentId: Overload:ALE.ETLBox.ControlFlow.DropProcedureTask.DropIfExists
  isSpec: "True"
  fullName: ALE.ETLBox.ControlFlow.DropProcedureTask.DropIfExists
  nameWithType: DropProcedureTask.DropIfExists
- uid: ALE.ETLBox.ControlFlow.DropSchemaTask
  name: DropSchemaTask
  href: api/ALE.ETLBox.ControlFlow.DropSchemaTask.html
  commentId: T:ALE.ETLBox.ControlFlow.DropSchemaTask
  fullName: ALE.ETLBox.ControlFlow.DropSchemaTask
  nameWithType: DropSchemaTask
- uid: ALE.ETLBox.ControlFlow.DropSchemaTask.#ctor
  name: DropSchemaTask()
  href: api/ALE.ETLBox.ControlFlow.DropSchemaTask.html#ALE_ETLBox_ControlFlow_DropSchemaTask__ctor
  commentId: M:ALE.ETLBox.ControlFlow.DropSchemaTask.#ctor
  fullName: ALE.ETLBox.ControlFlow.DropSchemaTask.DropSchemaTask()
  nameWithType: DropSchemaTask.DropSchemaTask()
- uid: ALE.ETLBox.ControlFlow.DropSchemaTask.#ctor(System.String)
  name: DropSchemaTask(String)
  href: api/ALE.ETLBox.ControlFlow.DropSchemaTask.html#ALE_ETLBox_ControlFlow_DropSchemaTask__ctor_System_String_
  commentId: M:ALE.ETLBox.ControlFlow.DropSchemaTask.#ctor(System.String)
  fullName: ALE.ETLBox.ControlFlow.DropSchemaTask.DropSchemaTask(System.String)
  nameWithType: DropSchemaTask.DropSchemaTask(String)
- uid: ALE.ETLBox.ControlFlow.DropSchemaTask.#ctor*
  name: DropSchemaTask
  href: api/ALE.ETLBox.ControlFlow.DropSchemaTask.html#ALE_ETLBox_ControlFlow_DropSchemaTask__ctor_
  commentId: Overload:ALE.ETLBox.ControlFlow.DropSchemaTask.#ctor
  isSpec: "True"
  fullName: ALE.ETLBox.ControlFlow.DropSchemaTask.DropSchemaTask
  nameWithType: DropSchemaTask.DropSchemaTask
- uid: ALE.ETLBox.ControlFlow.DropSchemaTask.Drop(ALE.ETLBox.ConnectionManager.IConnectionManager,System.String)
  name: Drop(IConnectionManager, String)
  href: api/ALE.ETLBox.ControlFlow.DropSchemaTask.html#ALE_ETLBox_ControlFlow_DropSchemaTask_Drop_ALE_ETLBox_ConnectionManager_IConnectionManager_System_String_
  commentId: M:ALE.ETLBox.ControlFlow.DropSchemaTask.Drop(ALE.ETLBox.ConnectionManager.IConnectionManager,System.String)
  fullName: ALE.ETLBox.ControlFlow.DropSchemaTask.Drop(ALE.ETLBox.ConnectionManager.IConnectionManager, System.String)
  nameWithType: DropSchemaTask.Drop(IConnectionManager, String)
- uid: ALE.ETLBox.ControlFlow.DropSchemaTask.Drop(System.String)
  name: Drop(String)
  href: api/ALE.ETLBox.ControlFlow.DropSchemaTask.html#ALE_ETLBox_ControlFlow_DropSchemaTask_Drop_System_String_
  commentId: M:ALE.ETLBox.ControlFlow.DropSchemaTask.Drop(System.String)
  fullName: ALE.ETLBox.ControlFlow.DropSchemaTask.Drop(System.String)
  nameWithType: DropSchemaTask.Drop(String)
- uid: ALE.ETLBox.ControlFlow.DropSchemaTask.Drop*
  name: Drop
  href: api/ALE.ETLBox.ControlFlow.DropSchemaTask.html#ALE_ETLBox_ControlFlow_DropSchemaTask_Drop_
  commentId: Overload:ALE.ETLBox.ControlFlow.DropSchemaTask.Drop
  isSpec: "True"
  fullName: ALE.ETLBox.ControlFlow.DropSchemaTask.Drop
  nameWithType: DropSchemaTask.Drop
- uid: ALE.ETLBox.ControlFlow.DropSchemaTask.DropIfExists(ALE.ETLBox.ConnectionManager.IConnectionManager,System.String)
  name: DropIfExists(IConnectionManager, String)
  href: api/ALE.ETLBox.ControlFlow.DropSchemaTask.html#ALE_ETLBox_ControlFlow_DropSchemaTask_DropIfExists_ALE_ETLBox_ConnectionManager_IConnectionManager_System_String_
  commentId: M:ALE.ETLBox.ControlFlow.DropSchemaTask.DropIfExists(ALE.ETLBox.ConnectionManager.IConnectionManager,System.String)
  fullName: ALE.ETLBox.ControlFlow.DropSchemaTask.DropIfExists(ALE.ETLBox.ConnectionManager.IConnectionManager, System.String)
  nameWithType: DropSchemaTask.DropIfExists(IConnectionManager, String)
- uid: ALE.ETLBox.ControlFlow.DropSchemaTask.DropIfExists(System.String)
  name: DropIfExists(String)
  href: api/ALE.ETLBox.ControlFlow.DropSchemaTask.html#ALE_ETLBox_ControlFlow_DropSchemaTask_DropIfExists_System_String_
  commentId: M:ALE.ETLBox.ControlFlow.DropSchemaTask.DropIfExists(System.String)
  fullName: ALE.ETLBox.ControlFlow.DropSchemaTask.DropIfExists(System.String)
  nameWithType: DropSchemaTask.DropIfExists(String)
- uid: ALE.ETLBox.ControlFlow.DropSchemaTask.DropIfExists*
  name: DropIfExists
  href: api/ALE.ETLBox.ControlFlow.DropSchemaTask.html#ALE_ETLBox_ControlFlow_DropSchemaTask_DropIfExists_
  commentId: Overload:ALE.ETLBox.ControlFlow.DropSchemaTask.DropIfExists
  isSpec: "True"
  fullName: ALE.ETLBox.ControlFlow.DropSchemaTask.DropIfExists
  nameWithType: DropSchemaTask.DropIfExists
- uid: ALE.ETLBox.ControlFlow.DropTableTask
  name: DropTableTask
  href: api/ALE.ETLBox.ControlFlow.DropTableTask.html
  commentId: T:ALE.ETLBox.ControlFlow.DropTableTask
  fullName: ALE.ETLBox.ControlFlow.DropTableTask
  nameWithType: DropTableTask
- uid: ALE.ETLBox.ControlFlow.DropTableTask.#ctor
  name: DropTableTask()
  href: api/ALE.ETLBox.ControlFlow.DropTableTask.html#ALE_ETLBox_ControlFlow_DropTableTask__ctor
  commentId: M:ALE.ETLBox.ControlFlow.DropTableTask.#ctor
  fullName: ALE.ETLBox.ControlFlow.DropTableTask.DropTableTask()
  nameWithType: DropTableTask.DropTableTask()
- uid: ALE.ETLBox.ControlFlow.DropTableTask.#ctor(System.String)
  name: DropTableTask(String)
  href: api/ALE.ETLBox.ControlFlow.DropTableTask.html#ALE_ETLBox_ControlFlow_DropTableTask__ctor_System_String_
  commentId: M:ALE.ETLBox.ControlFlow.DropTableTask.#ctor(System.String)
  fullName: ALE.ETLBox.ControlFlow.DropTableTask.DropTableTask(System.String)
  nameWithType: DropTableTask.DropTableTask(String)
- uid: ALE.ETLBox.ControlFlow.DropTableTask.#ctor*
  name: DropTableTask
  href: api/ALE.ETLBox.ControlFlow.DropTableTask.html#ALE_ETLBox_ControlFlow_DropTableTask__ctor_
  commentId: Overload:ALE.ETLBox.ControlFlow.DropTableTask.#ctor
  isSpec: "True"
  fullName: ALE.ETLBox.ControlFlow.DropTableTask.DropTableTask
  nameWithType: DropTableTask.DropTableTask
- uid: ALE.ETLBox.ControlFlow.DropTableTask.Drop(ALE.ETLBox.ConnectionManager.IConnectionManager,System.String)
  name: Drop(IConnectionManager, String)
  href: api/ALE.ETLBox.ControlFlow.DropTableTask.html#ALE_ETLBox_ControlFlow_DropTableTask_Drop_ALE_ETLBox_ConnectionManager_IConnectionManager_System_String_
  commentId: M:ALE.ETLBox.ControlFlow.DropTableTask.Drop(ALE.ETLBox.ConnectionManager.IConnectionManager,System.String)
  fullName: ALE.ETLBox.ControlFlow.DropTableTask.Drop(ALE.ETLBox.ConnectionManager.IConnectionManager, System.String)
  nameWithType: DropTableTask.Drop(IConnectionManager, String)
- uid: ALE.ETLBox.ControlFlow.DropTableTask.Drop(System.String)
  name: Drop(String)
  href: api/ALE.ETLBox.ControlFlow.DropTableTask.html#ALE_ETLBox_ControlFlow_DropTableTask_Drop_System_String_
  commentId: M:ALE.ETLBox.ControlFlow.DropTableTask.Drop(System.String)
  fullName: ALE.ETLBox.ControlFlow.DropTableTask.Drop(System.String)
  nameWithType: DropTableTask.Drop(String)
- uid: ALE.ETLBox.ControlFlow.DropTableTask.Drop*
  name: Drop
  href: api/ALE.ETLBox.ControlFlow.DropTableTask.html#ALE_ETLBox_ControlFlow_DropTableTask_Drop_
  commentId: Overload:ALE.ETLBox.ControlFlow.DropTableTask.Drop
  isSpec: "True"
  fullName: ALE.ETLBox.ControlFlow.DropTableTask.Drop
  nameWithType: DropTableTask.Drop
- uid: ALE.ETLBox.ControlFlow.DropTableTask.DropIfExists(ALE.ETLBox.ConnectionManager.IConnectionManager,System.String)
  name: DropIfExists(IConnectionManager, String)
  href: api/ALE.ETLBox.ControlFlow.DropTableTask.html#ALE_ETLBox_ControlFlow_DropTableTask_DropIfExists_ALE_ETLBox_ConnectionManager_IConnectionManager_System_String_
  commentId: M:ALE.ETLBox.ControlFlow.DropTableTask.DropIfExists(ALE.ETLBox.ConnectionManager.IConnectionManager,System.String)
  fullName: ALE.ETLBox.ControlFlow.DropTableTask.DropIfExists(ALE.ETLBox.ConnectionManager.IConnectionManager, System.String)
  nameWithType: DropTableTask.DropIfExists(IConnectionManager, String)
- uid: ALE.ETLBox.ControlFlow.DropTableTask.DropIfExists(System.String)
  name: DropIfExists(String)
  href: api/ALE.ETLBox.ControlFlow.DropTableTask.html#ALE_ETLBox_ControlFlow_DropTableTask_DropIfExists_System_String_
  commentId: M:ALE.ETLBox.ControlFlow.DropTableTask.DropIfExists(System.String)
  fullName: ALE.ETLBox.ControlFlow.DropTableTask.DropIfExists(System.String)
  nameWithType: DropTableTask.DropIfExists(String)
- uid: ALE.ETLBox.ControlFlow.DropTableTask.DropIfExists*
  name: DropIfExists
  href: api/ALE.ETLBox.ControlFlow.DropTableTask.html#ALE_ETLBox_ControlFlow_DropTableTask_DropIfExists_
  commentId: Overload:ALE.ETLBox.ControlFlow.DropTableTask.DropIfExists
  isSpec: "True"
  fullName: ALE.ETLBox.ControlFlow.DropTableTask.DropIfExists
  nameWithType: DropTableTask.DropIfExists
- uid: ALE.ETLBox.ControlFlow.DropTask`1
  name: DropTask<T>
  href: api/ALE.ETLBox.ControlFlow.DropTask-1.html
  commentId: T:ALE.ETLBox.ControlFlow.DropTask`1
  name.vb: DropTask(Of T)
  fullName: ALE.ETLBox.ControlFlow.DropTask<T>
  fullName.vb: ALE.ETLBox.ControlFlow.DropTask(Of T)
  nameWithType: DropTask<T>
  nameWithType.vb: DropTask(Of T)
- uid: ALE.ETLBox.ControlFlow.DropTask`1.Drop
  name: Drop()
  href: api/ALE.ETLBox.ControlFlow.DropTask-1.html#ALE_ETLBox_ControlFlow_DropTask_1_Drop
  commentId: M:ALE.ETLBox.ControlFlow.DropTask`1.Drop
  fullName: ALE.ETLBox.ControlFlow.DropTask<T>.Drop()
  fullName.vb: ALE.ETLBox.ControlFlow.DropTask(Of T).Drop()
  nameWithType: DropTask<T>.Drop()
  nameWithType.vb: DropTask(Of T).Drop()
- uid: ALE.ETLBox.ControlFlow.DropTask`1.Drop*
  name: Drop
  href: api/ALE.ETLBox.ControlFlow.DropTask-1.html#ALE_ETLBox_ControlFlow_DropTask_1_Drop_
  commentId: Overload:ALE.ETLBox.ControlFlow.DropTask`1.Drop
  isSpec: "True"
  fullName: ALE.ETLBox.ControlFlow.DropTask<T>.Drop
  fullName.vb: ALE.ETLBox.ControlFlow.DropTask(Of T).Drop
  nameWithType: DropTask<T>.Drop
  nameWithType.vb: DropTask(Of T).Drop
- uid: ALE.ETLBox.ControlFlow.DropTask`1.DropIfExists
  name: DropIfExists()
  href: api/ALE.ETLBox.ControlFlow.DropTask-1.html#ALE_ETLBox_ControlFlow_DropTask_1_DropIfExists
  commentId: M:ALE.ETLBox.ControlFlow.DropTask`1.DropIfExists
  fullName: ALE.ETLBox.ControlFlow.DropTask<T>.DropIfExists()
  fullName.vb: ALE.ETLBox.ControlFlow.DropTask(Of T).DropIfExists()
  nameWithType: DropTask<T>.DropIfExists()
  nameWithType.vb: DropTask(Of T).DropIfExists()
- uid: ALE.ETLBox.ControlFlow.DropTask`1.DropIfExists*
  name: DropIfExists
  href: api/ALE.ETLBox.ControlFlow.DropTask-1.html#ALE_ETLBox_ControlFlow_DropTask_1_DropIfExists_
  commentId: Overload:ALE.ETLBox.ControlFlow.DropTask`1.DropIfExists
  isSpec: "True"
  fullName: ALE.ETLBox.ControlFlow.DropTask<T>.DropIfExists
  fullName.vb: ALE.ETLBox.ControlFlow.DropTask(Of T).DropIfExists
  nameWithType: DropTask<T>.DropIfExists
  nameWithType.vb: DropTask(Of T).DropIfExists
- uid: ALE.ETLBox.ControlFlow.DropTask`1.Execute
  name: Execute()
  href: api/ALE.ETLBox.ControlFlow.DropTask-1.html#ALE_ETLBox_ControlFlow_DropTask_1_Execute
  commentId: M:ALE.ETLBox.ControlFlow.DropTask`1.Execute
  fullName: ALE.ETLBox.ControlFlow.DropTask<T>.Execute()
  fullName.vb: ALE.ETLBox.ControlFlow.DropTask(Of T).Execute()
  nameWithType: DropTask<T>.Execute()
  nameWithType.vb: DropTask(Of T).Execute()
- uid: ALE.ETLBox.ControlFlow.DropTask`1.Execute*
  name: Execute
  href: api/ALE.ETLBox.ControlFlow.DropTask-1.html#ALE_ETLBox_ControlFlow_DropTask_1_Execute_
  commentId: Overload:ALE.ETLBox.ControlFlow.DropTask`1.Execute
  isSpec: "True"
  fullName: ALE.ETLBox.ControlFlow.DropTask<T>.Execute
  fullName.vb: ALE.ETLBox.ControlFlow.DropTask(Of T).Execute
  nameWithType: DropTask<T>.Execute
  nameWithType.vb: DropTask(Of T).Execute
- uid: ALE.ETLBox.ControlFlow.DropTask`1.ObjectName
  name: ObjectName
  href: api/ALE.ETLBox.ControlFlow.DropTask-1.html#ALE_ETLBox_ControlFlow_DropTask_1_ObjectName
  commentId: P:ALE.ETLBox.ControlFlow.DropTask`1.ObjectName
  fullName: ALE.ETLBox.ControlFlow.DropTask<T>.ObjectName
  fullName.vb: ALE.ETLBox.ControlFlow.DropTask(Of T).ObjectName
  nameWithType: DropTask<T>.ObjectName
  nameWithType.vb: DropTask(Of T).ObjectName
- uid: ALE.ETLBox.ControlFlow.DropTask`1.ObjectName*
  name: ObjectName
  href: api/ALE.ETLBox.ControlFlow.DropTask-1.html#ALE_ETLBox_ControlFlow_DropTask_1_ObjectName_
  commentId: Overload:ALE.ETLBox.ControlFlow.DropTask`1.ObjectName
  isSpec: "True"
  fullName: ALE.ETLBox.ControlFlow.DropTask<T>.ObjectName
  fullName.vb: ALE.ETLBox.ControlFlow.DropTask(Of T).ObjectName
  nameWithType: DropTask<T>.ObjectName
  nameWithType.vb: DropTask(Of T).ObjectName
- uid: ALE.ETLBox.ControlFlow.DropTask`1.ON
  name: ON
  href: api/ALE.ETLBox.ControlFlow.DropTask-1.html#ALE_ETLBox_ControlFlow_DropTask_1_ON
  commentId: P:ALE.ETLBox.ControlFlow.DropTask`1.ON
  fullName: ALE.ETLBox.ControlFlow.DropTask<T>.ON
  fullName.vb: ALE.ETLBox.ControlFlow.DropTask(Of T).ON
  nameWithType: DropTask<T>.ON
  nameWithType.vb: DropTask(Of T).ON
- uid: ALE.ETLBox.ControlFlow.DropTask`1.ON*
  name: ON
  href: api/ALE.ETLBox.ControlFlow.DropTask-1.html#ALE_ETLBox_ControlFlow_DropTask_1_ON_
  commentId: Overload:ALE.ETLBox.ControlFlow.DropTask`1.ON
  isSpec: "True"
  fullName: ALE.ETLBox.ControlFlow.DropTask<T>.ON
  fullName.vb: ALE.ETLBox.ControlFlow.DropTask(Of T).ON
  nameWithType: DropTask<T>.ON
  nameWithType.vb: DropTask(Of T).ON
- uid: ALE.ETLBox.ControlFlow.DropTask`1.Sql
  name: Sql
  href: api/ALE.ETLBox.ControlFlow.DropTask-1.html#ALE_ETLBox_ControlFlow_DropTask_1_Sql
  commentId: P:ALE.ETLBox.ControlFlow.DropTask`1.Sql
  fullName: ALE.ETLBox.ControlFlow.DropTask<T>.Sql
  fullName.vb: ALE.ETLBox.ControlFlow.DropTask(Of T).Sql
  nameWithType: DropTask<T>.Sql
  nameWithType.vb: DropTask(Of T).Sql
- uid: ALE.ETLBox.ControlFlow.DropTask`1.Sql*
  name: Sql
  href: api/ALE.ETLBox.ControlFlow.DropTask-1.html#ALE_ETLBox_ControlFlow_DropTask_1_Sql_
  commentId: Overload:ALE.ETLBox.ControlFlow.DropTask`1.Sql
  isSpec: "True"
  fullName: ALE.ETLBox.ControlFlow.DropTask<T>.Sql
  fullName.vb: ALE.ETLBox.ControlFlow.DropTask(Of T).Sql
  nameWithType: DropTask<T>.Sql
  nameWithType.vb: DropTask(Of T).Sql
- uid: ALE.ETLBox.ControlFlow.DropTask`1.TaskName
  name: TaskName
  href: api/ALE.ETLBox.ControlFlow.DropTask-1.html#ALE_ETLBox_ControlFlow_DropTask_1_TaskName
  commentId: P:ALE.ETLBox.ControlFlow.DropTask`1.TaskName
  fullName: ALE.ETLBox.ControlFlow.DropTask<T>.TaskName
  fullName.vb: ALE.ETLBox.ControlFlow.DropTask(Of T).TaskName
  nameWithType: DropTask<T>.TaskName
  nameWithType.vb: DropTask(Of T).TaskName
- uid: ALE.ETLBox.ControlFlow.DropTask`1.TaskName*
  name: TaskName
  href: api/ALE.ETLBox.ControlFlow.DropTask-1.html#ALE_ETLBox_ControlFlow_DropTask_1_TaskName_
  commentId: Overload:ALE.ETLBox.ControlFlow.DropTask`1.TaskName
  isSpec: "True"
  fullName: ALE.ETLBox.ControlFlow.DropTask<T>.TaskName
  fullName.vb: ALE.ETLBox.ControlFlow.DropTask(Of T).TaskName
  nameWithType: DropTask<T>.TaskName
  nameWithType.vb: DropTask(Of T).TaskName
- uid: ALE.ETLBox.ControlFlow.DropViewTask
  name: DropViewTask
  href: api/ALE.ETLBox.ControlFlow.DropViewTask.html
  commentId: T:ALE.ETLBox.ControlFlow.DropViewTask
  fullName: ALE.ETLBox.ControlFlow.DropViewTask
  nameWithType: DropViewTask
- uid: ALE.ETLBox.ControlFlow.DropViewTask.#ctor
  name: DropViewTask()
  href: api/ALE.ETLBox.ControlFlow.DropViewTask.html#ALE_ETLBox_ControlFlow_DropViewTask__ctor
  commentId: M:ALE.ETLBox.ControlFlow.DropViewTask.#ctor
  fullName: ALE.ETLBox.ControlFlow.DropViewTask.DropViewTask()
  nameWithType: DropViewTask.DropViewTask()
- uid: ALE.ETLBox.ControlFlow.DropViewTask.#ctor(System.String)
  name: DropViewTask(String)
  href: api/ALE.ETLBox.ControlFlow.DropViewTask.html#ALE_ETLBox_ControlFlow_DropViewTask__ctor_System_String_
  commentId: M:ALE.ETLBox.ControlFlow.DropViewTask.#ctor(System.String)
  fullName: ALE.ETLBox.ControlFlow.DropViewTask.DropViewTask(System.String)
  nameWithType: DropViewTask.DropViewTask(String)
- uid: ALE.ETLBox.ControlFlow.DropViewTask.#ctor*
  name: DropViewTask
  href: api/ALE.ETLBox.ControlFlow.DropViewTask.html#ALE_ETLBox_ControlFlow_DropViewTask__ctor_
  commentId: Overload:ALE.ETLBox.ControlFlow.DropViewTask.#ctor
  isSpec: "True"
  fullName: ALE.ETLBox.ControlFlow.DropViewTask.DropViewTask
  nameWithType: DropViewTask.DropViewTask
- uid: ALE.ETLBox.ControlFlow.DropViewTask.Drop(ALE.ETLBox.ConnectionManager.IConnectionManager,System.String)
  name: Drop(IConnectionManager, String)
  href: api/ALE.ETLBox.ControlFlow.DropViewTask.html#ALE_ETLBox_ControlFlow_DropViewTask_Drop_ALE_ETLBox_ConnectionManager_IConnectionManager_System_String_
  commentId: M:ALE.ETLBox.ControlFlow.DropViewTask.Drop(ALE.ETLBox.ConnectionManager.IConnectionManager,System.String)
  fullName: ALE.ETLBox.ControlFlow.DropViewTask.Drop(ALE.ETLBox.ConnectionManager.IConnectionManager, System.String)
  nameWithType: DropViewTask.Drop(IConnectionManager, String)
- uid: ALE.ETLBox.ControlFlow.DropViewTask.Drop(System.String)
  name: Drop(String)
  href: api/ALE.ETLBox.ControlFlow.DropViewTask.html#ALE_ETLBox_ControlFlow_DropViewTask_Drop_System_String_
  commentId: M:ALE.ETLBox.ControlFlow.DropViewTask.Drop(System.String)
  fullName: ALE.ETLBox.ControlFlow.DropViewTask.Drop(System.String)
  nameWithType: DropViewTask.Drop(String)
- uid: ALE.ETLBox.ControlFlow.DropViewTask.Drop*
  name: Drop
  href: api/ALE.ETLBox.ControlFlow.DropViewTask.html#ALE_ETLBox_ControlFlow_DropViewTask_Drop_
  commentId: Overload:ALE.ETLBox.ControlFlow.DropViewTask.Drop
  isSpec: "True"
  fullName: ALE.ETLBox.ControlFlow.DropViewTask.Drop
  nameWithType: DropViewTask.Drop
- uid: ALE.ETLBox.ControlFlow.DropViewTask.DropIfExists(ALE.ETLBox.ConnectionManager.IConnectionManager,System.String)
  name: DropIfExists(IConnectionManager, String)
  href: api/ALE.ETLBox.ControlFlow.DropViewTask.html#ALE_ETLBox_ControlFlow_DropViewTask_DropIfExists_ALE_ETLBox_ConnectionManager_IConnectionManager_System_String_
  commentId: M:ALE.ETLBox.ControlFlow.DropViewTask.DropIfExists(ALE.ETLBox.ConnectionManager.IConnectionManager,System.String)
  fullName: ALE.ETLBox.ControlFlow.DropViewTask.DropIfExists(ALE.ETLBox.ConnectionManager.IConnectionManager, System.String)
  nameWithType: DropViewTask.DropIfExists(IConnectionManager, String)
- uid: ALE.ETLBox.ControlFlow.DropViewTask.DropIfExists(System.String)
  name: DropIfExists(String)
  href: api/ALE.ETLBox.ControlFlow.DropViewTask.html#ALE_ETLBox_ControlFlow_DropViewTask_DropIfExists_System_String_
  commentId: M:ALE.ETLBox.ControlFlow.DropViewTask.DropIfExists(System.String)
  fullName: ALE.ETLBox.ControlFlow.DropViewTask.DropIfExists(System.String)
  nameWithType: DropViewTask.DropIfExists(String)
- uid: ALE.ETLBox.ControlFlow.DropViewTask.DropIfExists*
  name: DropIfExists
  href: api/ALE.ETLBox.ControlFlow.DropViewTask.html#ALE_ETLBox_ControlFlow_DropViewTask_DropIfExists_
  commentId: Overload:ALE.ETLBox.ControlFlow.DropViewTask.DropIfExists
  isSpec: "True"
  fullName: ALE.ETLBox.ControlFlow.DropViewTask.DropIfExists
  nameWithType: DropViewTask.DropIfExists
- uid: ALE.ETLBox.ControlFlow.GetDatabaseListTask
  name: GetDatabaseListTask
  href: api/ALE.ETLBox.ControlFlow.GetDatabaseListTask.html
  commentId: T:ALE.ETLBox.ControlFlow.GetDatabaseListTask
  fullName: ALE.ETLBox.ControlFlow.GetDatabaseListTask
  nameWithType: GetDatabaseListTask
- uid: ALE.ETLBox.ControlFlow.GetDatabaseListTask.#ctor
  name: GetDatabaseListTask()
  href: api/ALE.ETLBox.ControlFlow.GetDatabaseListTask.html#ALE_ETLBox_ControlFlow_GetDatabaseListTask__ctor
  commentId: M:ALE.ETLBox.ControlFlow.GetDatabaseListTask.#ctor
  fullName: ALE.ETLBox.ControlFlow.GetDatabaseListTask.GetDatabaseListTask()
  nameWithType: GetDatabaseListTask.GetDatabaseListTask()
- uid: ALE.ETLBox.ControlFlow.GetDatabaseListTask.#ctor*
  name: GetDatabaseListTask
  href: api/ALE.ETLBox.ControlFlow.GetDatabaseListTask.html#ALE_ETLBox_ControlFlow_GetDatabaseListTask__ctor_
  commentId: Overload:ALE.ETLBox.ControlFlow.GetDatabaseListTask.#ctor
  isSpec: "True"
  fullName: ALE.ETLBox.ControlFlow.GetDatabaseListTask.GetDatabaseListTask
  nameWithType: GetDatabaseListTask.GetDatabaseListTask
- uid: ALE.ETLBox.ControlFlow.GetDatabaseListTask.DatabaseNames
  name: DatabaseNames
  href: api/ALE.ETLBox.ControlFlow.GetDatabaseListTask.html#ALE_ETLBox_ControlFlow_GetDatabaseListTask_DatabaseNames
  commentId: P:ALE.ETLBox.ControlFlow.GetDatabaseListTask.DatabaseNames
  fullName: ALE.ETLBox.ControlFlow.GetDatabaseListTask.DatabaseNames
  nameWithType: GetDatabaseListTask.DatabaseNames
- uid: ALE.ETLBox.ControlFlow.GetDatabaseListTask.DatabaseNames*
  name: DatabaseNames
  href: api/ALE.ETLBox.ControlFlow.GetDatabaseListTask.html#ALE_ETLBox_ControlFlow_GetDatabaseListTask_DatabaseNames_
  commentId: Overload:ALE.ETLBox.ControlFlow.GetDatabaseListTask.DatabaseNames
  isSpec: "True"
  fullName: ALE.ETLBox.ControlFlow.GetDatabaseListTask.DatabaseNames
  nameWithType: GetDatabaseListTask.DatabaseNames
- uid: ALE.ETLBox.ControlFlow.GetDatabaseListTask.Execute
  name: Execute()
  href: api/ALE.ETLBox.ControlFlow.GetDatabaseListTask.html#ALE_ETLBox_ControlFlow_GetDatabaseListTask_Execute
  commentId: M:ALE.ETLBox.ControlFlow.GetDatabaseListTask.Execute
  fullName: ALE.ETLBox.ControlFlow.GetDatabaseListTask.Execute()
  nameWithType: GetDatabaseListTask.Execute()
- uid: ALE.ETLBox.ControlFlow.GetDatabaseListTask.Execute*
  name: Execute
  href: api/ALE.ETLBox.ControlFlow.GetDatabaseListTask.html#ALE_ETLBox_ControlFlow_GetDatabaseListTask_Execute_
  commentId: Overload:ALE.ETLBox.ControlFlow.GetDatabaseListTask.Execute
  isSpec: "True"
  fullName: ALE.ETLBox.ControlFlow.GetDatabaseListTask.Execute
  nameWithType: GetDatabaseListTask.Execute
- uid: ALE.ETLBox.ControlFlow.GetDatabaseListTask.GetList
  name: GetList()
  href: api/ALE.ETLBox.ControlFlow.GetDatabaseListTask.html#ALE_ETLBox_ControlFlow_GetDatabaseListTask_GetList
  commentId: M:ALE.ETLBox.ControlFlow.GetDatabaseListTask.GetList
  fullName: ALE.ETLBox.ControlFlow.GetDatabaseListTask.GetList()
  nameWithType: GetDatabaseListTask.GetList()
- uid: ALE.ETLBox.ControlFlow.GetDatabaseListTask.GetList*
  name: GetList
  href: api/ALE.ETLBox.ControlFlow.GetDatabaseListTask.html#ALE_ETLBox_ControlFlow_GetDatabaseListTask_GetList_
  commentId: Overload:ALE.ETLBox.ControlFlow.GetDatabaseListTask.GetList
  isSpec: "True"
  fullName: ALE.ETLBox.ControlFlow.GetDatabaseListTask.GetList
  nameWithType: GetDatabaseListTask.GetList
- uid: ALE.ETLBox.ControlFlow.GetDatabaseListTask.List
  name: List()
  href: api/ALE.ETLBox.ControlFlow.GetDatabaseListTask.html#ALE_ETLBox_ControlFlow_GetDatabaseListTask_List
  commentId: M:ALE.ETLBox.ControlFlow.GetDatabaseListTask.List
  fullName: ALE.ETLBox.ControlFlow.GetDatabaseListTask.List()
  nameWithType: GetDatabaseListTask.List()
- uid: ALE.ETLBox.ControlFlow.GetDatabaseListTask.List(ALE.ETLBox.ConnectionManager.IConnectionManager)
  name: List(IConnectionManager)
  href: api/ALE.ETLBox.ControlFlow.GetDatabaseListTask.html#ALE_ETLBox_ControlFlow_GetDatabaseListTask_List_ALE_ETLBox_ConnectionManager_IConnectionManager_
  commentId: M:ALE.ETLBox.ControlFlow.GetDatabaseListTask.List(ALE.ETLBox.ConnectionManager.IConnectionManager)
  fullName: ALE.ETLBox.ControlFlow.GetDatabaseListTask.List(ALE.ETLBox.ConnectionManager.IConnectionManager)
  nameWithType: GetDatabaseListTask.List(IConnectionManager)
- uid: ALE.ETLBox.ControlFlow.GetDatabaseListTask.List*
  name: List
  href: api/ALE.ETLBox.ControlFlow.GetDatabaseListTask.html#ALE_ETLBox_ControlFlow_GetDatabaseListTask_List_
  commentId: Overload:ALE.ETLBox.ControlFlow.GetDatabaseListTask.List
  isSpec: "True"
  fullName: ALE.ETLBox.ControlFlow.GetDatabaseListTask.List
  nameWithType: GetDatabaseListTask.List
- uid: ALE.ETLBox.ControlFlow.GetDatabaseListTask.Sql
  name: Sql
  href: api/ALE.ETLBox.ControlFlow.GetDatabaseListTask.html#ALE_ETLBox_ControlFlow_GetDatabaseListTask_Sql
  commentId: P:ALE.ETLBox.ControlFlow.GetDatabaseListTask.Sql
  fullName: ALE.ETLBox.ControlFlow.GetDatabaseListTask.Sql
  nameWithType: GetDatabaseListTask.Sql
- uid: ALE.ETLBox.ControlFlow.GetDatabaseListTask.Sql*
  name: Sql
  href: api/ALE.ETLBox.ControlFlow.GetDatabaseListTask.html#ALE_ETLBox_ControlFlow_GetDatabaseListTask_Sql_
  commentId: Overload:ALE.ETLBox.ControlFlow.GetDatabaseListTask.Sql
  isSpec: "True"
  fullName: ALE.ETLBox.ControlFlow.GetDatabaseListTask.Sql
  nameWithType: GetDatabaseListTask.Sql
- uid: ALE.ETLBox.ControlFlow.GetDatabaseListTask.TaskName
  name: TaskName
  href: api/ALE.ETLBox.ControlFlow.GetDatabaseListTask.html#ALE_ETLBox_ControlFlow_GetDatabaseListTask_TaskName
  commentId: P:ALE.ETLBox.ControlFlow.GetDatabaseListTask.TaskName
  fullName: ALE.ETLBox.ControlFlow.GetDatabaseListTask.TaskName
  nameWithType: GetDatabaseListTask.TaskName
- uid: ALE.ETLBox.ControlFlow.GetDatabaseListTask.TaskName*
  name: TaskName
  href: api/ALE.ETLBox.ControlFlow.GetDatabaseListTask.html#ALE_ETLBox_ControlFlow_GetDatabaseListTask_TaskName_
  commentId: Overload:ALE.ETLBox.ControlFlow.GetDatabaseListTask.TaskName
  isSpec: "True"
  fullName: ALE.ETLBox.ControlFlow.GetDatabaseListTask.TaskName
  nameWithType: GetDatabaseListTask.TaskName
- uid: ALE.ETLBox.ControlFlow.IfDatabaseExistsTask
  name: IfDatabaseExistsTask
  href: api/ALE.ETLBox.ControlFlow.IfDatabaseExistsTask.html
  commentId: T:ALE.ETLBox.ControlFlow.IfDatabaseExistsTask
  fullName: ALE.ETLBox.ControlFlow.IfDatabaseExistsTask
  nameWithType: IfDatabaseExistsTask
- uid: ALE.ETLBox.ControlFlow.IfDatabaseExistsTask.#ctor
  name: IfDatabaseExistsTask()
  href: api/ALE.ETLBox.ControlFlow.IfDatabaseExistsTask.html#ALE_ETLBox_ControlFlow_IfDatabaseExistsTask__ctor
  commentId: M:ALE.ETLBox.ControlFlow.IfDatabaseExistsTask.#ctor
  fullName: ALE.ETLBox.ControlFlow.IfDatabaseExistsTask.IfDatabaseExistsTask()
  nameWithType: IfDatabaseExistsTask.IfDatabaseExistsTask()
- uid: ALE.ETLBox.ControlFlow.IfDatabaseExistsTask.#ctor(System.String)
  name: IfDatabaseExistsTask(String)
  href: api/ALE.ETLBox.ControlFlow.IfDatabaseExistsTask.html#ALE_ETLBox_ControlFlow_IfDatabaseExistsTask__ctor_System_String_
  commentId: M:ALE.ETLBox.ControlFlow.IfDatabaseExistsTask.#ctor(System.String)
  fullName: ALE.ETLBox.ControlFlow.IfDatabaseExistsTask.IfDatabaseExistsTask(System.String)
  nameWithType: IfDatabaseExistsTask.IfDatabaseExistsTask(String)
- uid: ALE.ETLBox.ControlFlow.IfDatabaseExistsTask.#ctor*
  name: IfDatabaseExistsTask
  href: api/ALE.ETLBox.ControlFlow.IfDatabaseExistsTask.html#ALE_ETLBox_ControlFlow_IfDatabaseExistsTask__ctor_
  commentId: Overload:ALE.ETLBox.ControlFlow.IfDatabaseExistsTask.#ctor
  isSpec: "True"
  fullName: ALE.ETLBox.ControlFlow.IfDatabaseExistsTask.IfDatabaseExistsTask
  nameWithType: IfDatabaseExistsTask.IfDatabaseExistsTask
- uid: ALE.ETLBox.ControlFlow.IfDatabaseExistsTask.IsExisting(ALE.ETLBox.ConnectionManager.IConnectionManager,System.String)
  name: IsExisting(IConnectionManager, String)
  href: api/ALE.ETLBox.ControlFlow.IfDatabaseExistsTask.html#ALE_ETLBox_ControlFlow_IfDatabaseExistsTask_IsExisting_ALE_ETLBox_ConnectionManager_IConnectionManager_System_String_
  commentId: M:ALE.ETLBox.ControlFlow.IfDatabaseExistsTask.IsExisting(ALE.ETLBox.ConnectionManager.IConnectionManager,System.String)
  fullName: ALE.ETLBox.ControlFlow.IfDatabaseExistsTask.IsExisting(ALE.ETLBox.ConnectionManager.IConnectionManager, System.String)
  nameWithType: IfDatabaseExistsTask.IsExisting(IConnectionManager, String)
- uid: ALE.ETLBox.ControlFlow.IfDatabaseExistsTask.IsExisting(System.String)
  name: IsExisting(String)
  href: api/ALE.ETLBox.ControlFlow.IfDatabaseExistsTask.html#ALE_ETLBox_ControlFlow_IfDatabaseExistsTask_IsExisting_System_String_
  commentId: M:ALE.ETLBox.ControlFlow.IfDatabaseExistsTask.IsExisting(System.String)
  fullName: ALE.ETLBox.ControlFlow.IfDatabaseExistsTask.IsExisting(System.String)
  nameWithType: IfDatabaseExistsTask.IsExisting(String)
- uid: ALE.ETLBox.ControlFlow.IfDatabaseExistsTask.IsExisting*
  name: IsExisting
  href: api/ALE.ETLBox.ControlFlow.IfDatabaseExistsTask.html#ALE_ETLBox_ControlFlow_IfDatabaseExistsTask_IsExisting_
  commentId: Overload:ALE.ETLBox.ControlFlow.IfDatabaseExistsTask.IsExisting
  isSpec: "True"
  fullName: ALE.ETLBox.ControlFlow.IfDatabaseExistsTask.IsExisting
  nameWithType: IfDatabaseExistsTask.IsExisting
- uid: ALE.ETLBox.ControlFlow.IfExistsTask
  name: IfExistsTask
  href: api/ALE.ETLBox.ControlFlow.IfExistsTask.html
  commentId: T:ALE.ETLBox.ControlFlow.IfExistsTask
  fullName: ALE.ETLBox.ControlFlow.IfExistsTask
  nameWithType: IfExistsTask
- uid: ALE.ETLBox.ControlFlow.IfExistsTask.DoesExist
  name: DoesExist
  href: api/ALE.ETLBox.ControlFlow.IfExistsTask.html#ALE_ETLBox_ControlFlow_IfExistsTask_DoesExist
  commentId: P:ALE.ETLBox.ControlFlow.IfExistsTask.DoesExist
  fullName: ALE.ETLBox.ControlFlow.IfExistsTask.DoesExist
  nameWithType: IfExistsTask.DoesExist
- uid: ALE.ETLBox.ControlFlow.IfExistsTask.DoesExist*
  name: DoesExist
  href: api/ALE.ETLBox.ControlFlow.IfExistsTask.html#ALE_ETLBox_ControlFlow_IfExistsTask_DoesExist_
  commentId: Overload:ALE.ETLBox.ControlFlow.IfExistsTask.DoesExist
  isSpec: "True"
  fullName: ALE.ETLBox.ControlFlow.IfExistsTask.DoesExist
  nameWithType: IfExistsTask.DoesExist
- uid: ALE.ETLBox.ControlFlow.IfExistsTask.Execute
  name: Execute()
  href: api/ALE.ETLBox.ControlFlow.IfExistsTask.html#ALE_ETLBox_ControlFlow_IfExistsTask_Execute
  commentId: M:ALE.ETLBox.ControlFlow.IfExistsTask.Execute
  fullName: ALE.ETLBox.ControlFlow.IfExistsTask.Execute()
  nameWithType: IfExistsTask.Execute()
- uid: ALE.ETLBox.ControlFlow.IfExistsTask.Execute*
  name: Execute
  href: api/ALE.ETLBox.ControlFlow.IfExistsTask.html#ALE_ETLBox_ControlFlow_IfExistsTask_Execute_
  commentId: Overload:ALE.ETLBox.ControlFlow.IfExistsTask.Execute
  isSpec: "True"
  fullName: ALE.ETLBox.ControlFlow.IfExistsTask.Execute
  nameWithType: IfExistsTask.Execute
- uid: ALE.ETLBox.ControlFlow.IfExistsTask.Exists
  name: Exists()
  href: api/ALE.ETLBox.ControlFlow.IfExistsTask.html#ALE_ETLBox_ControlFlow_IfExistsTask_Exists
  commentId: M:ALE.ETLBox.ControlFlow.IfExistsTask.Exists
  fullName: ALE.ETLBox.ControlFlow.IfExistsTask.Exists()
  nameWithType: IfExistsTask.Exists()
- uid: ALE.ETLBox.ControlFlow.IfExistsTask.Exists*
  name: Exists
  href: api/ALE.ETLBox.ControlFlow.IfExistsTask.html#ALE_ETLBox_ControlFlow_IfExistsTask_Exists_
  commentId: Overload:ALE.ETLBox.ControlFlow.IfExistsTask.Exists
  isSpec: "True"
  fullName: ALE.ETLBox.ControlFlow.IfExistsTask.Exists
  nameWithType: IfExistsTask.Exists
- uid: ALE.ETLBox.ControlFlow.IfExistsTask.ObjectName
  name: ObjectName
  href: api/ALE.ETLBox.ControlFlow.IfExistsTask.html#ALE_ETLBox_ControlFlow_IfExistsTask_ObjectName
  commentId: P:ALE.ETLBox.ControlFlow.IfExistsTask.ObjectName
  fullName: ALE.ETLBox.ControlFlow.IfExistsTask.ObjectName
  nameWithType: IfExistsTask.ObjectName
- uid: ALE.ETLBox.ControlFlow.IfExistsTask.ObjectName*
  name: ObjectName
  href: api/ALE.ETLBox.ControlFlow.IfExistsTask.html#ALE_ETLBox_ControlFlow_IfExistsTask_ObjectName_
  commentId: Overload:ALE.ETLBox.ControlFlow.IfExistsTask.ObjectName
  isSpec: "True"
  fullName: ALE.ETLBox.ControlFlow.IfExistsTask.ObjectName
  nameWithType: IfExistsTask.ObjectName
- uid: ALE.ETLBox.ControlFlow.IfExistsTask.ON
  name: ON
  href: api/ALE.ETLBox.ControlFlow.IfExistsTask.html#ALE_ETLBox_ControlFlow_IfExistsTask_ON
  commentId: P:ALE.ETLBox.ControlFlow.IfExistsTask.ON
  fullName: ALE.ETLBox.ControlFlow.IfExistsTask.ON
  nameWithType: IfExistsTask.ON
- uid: ALE.ETLBox.ControlFlow.IfExistsTask.ON*
  name: ON
  href: api/ALE.ETLBox.ControlFlow.IfExistsTask.html#ALE_ETLBox_ControlFlow_IfExistsTask_ON_
  commentId: Overload:ALE.ETLBox.ControlFlow.IfExistsTask.ON
  isSpec: "True"
  fullName: ALE.ETLBox.ControlFlow.IfExistsTask.ON
  nameWithType: IfExistsTask.ON
- uid: ALE.ETLBox.ControlFlow.IfExistsTask.OON
  name: OON
  href: api/ALE.ETLBox.ControlFlow.IfExistsTask.html#ALE_ETLBox_ControlFlow_IfExistsTask_OON
  commentId: P:ALE.ETLBox.ControlFlow.IfExistsTask.OON
  fullName: ALE.ETLBox.ControlFlow.IfExistsTask.OON
  nameWithType: IfExistsTask.OON
- uid: ALE.ETLBox.ControlFlow.IfExistsTask.OON*
  name: OON
  href: api/ALE.ETLBox.ControlFlow.IfExistsTask.html#ALE_ETLBox_ControlFlow_IfExistsTask_OON_
  commentId: Overload:ALE.ETLBox.ControlFlow.IfExistsTask.OON
  isSpec: "True"
  fullName: ALE.ETLBox.ControlFlow.IfExistsTask.OON
  nameWithType: IfExistsTask.OON
- uid: ALE.ETLBox.ControlFlow.IfExistsTask.Sql
  name: Sql
  href: api/ALE.ETLBox.ControlFlow.IfExistsTask.html#ALE_ETLBox_ControlFlow_IfExistsTask_Sql
  commentId: P:ALE.ETLBox.ControlFlow.IfExistsTask.Sql
  fullName: ALE.ETLBox.ControlFlow.IfExistsTask.Sql
  nameWithType: IfExistsTask.Sql
- uid: ALE.ETLBox.ControlFlow.IfExistsTask.Sql*
  name: Sql
  href: api/ALE.ETLBox.ControlFlow.IfExistsTask.html#ALE_ETLBox_ControlFlow_IfExistsTask_Sql_
  commentId: Overload:ALE.ETLBox.ControlFlow.IfExistsTask.Sql
  isSpec: "True"
  fullName: ALE.ETLBox.ControlFlow.IfExistsTask.Sql
  nameWithType: IfExistsTask.Sql
- uid: ALE.ETLBox.ControlFlow.IfExistsTask.TaskName
  name: TaskName
  href: api/ALE.ETLBox.ControlFlow.IfExistsTask.html#ALE_ETLBox_ControlFlow_IfExistsTask_TaskName
  commentId: P:ALE.ETLBox.ControlFlow.IfExistsTask.TaskName
  fullName: ALE.ETLBox.ControlFlow.IfExistsTask.TaskName
  nameWithType: IfExistsTask.TaskName
- uid: ALE.ETLBox.ControlFlow.IfExistsTask.TaskName*
  name: TaskName
  href: api/ALE.ETLBox.ControlFlow.IfExistsTask.html#ALE_ETLBox_ControlFlow_IfExistsTask_TaskName_
  commentId: Overload:ALE.ETLBox.ControlFlow.IfExistsTask.TaskName
  isSpec: "True"
  fullName: ALE.ETLBox.ControlFlow.IfExistsTask.TaskName
  nameWithType: IfExistsTask.TaskName
- uid: ALE.ETLBox.ControlFlow.IfIndexExistsTask
  name: IfIndexExistsTask
  href: api/ALE.ETLBox.ControlFlow.IfIndexExistsTask.html
  commentId: T:ALE.ETLBox.ControlFlow.IfIndexExistsTask
  fullName: ALE.ETLBox.ControlFlow.IfIndexExistsTask
  nameWithType: IfIndexExistsTask
- uid: ALE.ETLBox.ControlFlow.IfIndexExistsTask.#ctor
  name: IfIndexExistsTask()
  href: api/ALE.ETLBox.ControlFlow.IfIndexExistsTask.html#ALE_ETLBox_ControlFlow_IfIndexExistsTask__ctor
  commentId: M:ALE.ETLBox.ControlFlow.IfIndexExistsTask.#ctor
  fullName: ALE.ETLBox.ControlFlow.IfIndexExistsTask.IfIndexExistsTask()
  nameWithType: IfIndexExistsTask.IfIndexExistsTask()
- uid: ALE.ETLBox.ControlFlow.IfIndexExistsTask.#ctor(System.String,System.String)
  name: IfIndexExistsTask(String, String)
  href: api/ALE.ETLBox.ControlFlow.IfIndexExistsTask.html#ALE_ETLBox_ControlFlow_IfIndexExistsTask__ctor_System_String_System_String_
  commentId: M:ALE.ETLBox.ControlFlow.IfIndexExistsTask.#ctor(System.String,System.String)
  fullName: ALE.ETLBox.ControlFlow.IfIndexExistsTask.IfIndexExistsTask(System.String, System.String)
  nameWithType: IfIndexExistsTask.IfIndexExistsTask(String, String)
- uid: ALE.ETLBox.ControlFlow.IfIndexExistsTask.#ctor*
  name: IfIndexExistsTask
  href: api/ALE.ETLBox.ControlFlow.IfIndexExistsTask.html#ALE_ETLBox_ControlFlow_IfIndexExistsTask__ctor_
  commentId: Overload:ALE.ETLBox.ControlFlow.IfIndexExistsTask.#ctor
  isSpec: "True"
  fullName: ALE.ETLBox.ControlFlow.IfIndexExistsTask.IfIndexExistsTask
  nameWithType: IfIndexExistsTask.IfIndexExistsTask
- uid: ALE.ETLBox.ControlFlow.IfIndexExistsTask.IsExisting(ALE.ETLBox.ConnectionManager.IConnectionManager,System.String,System.String)
  name: IsExisting(IConnectionManager, String, String)
  href: api/ALE.ETLBox.ControlFlow.IfIndexExistsTask.html#ALE_ETLBox_ControlFlow_IfIndexExistsTask_IsExisting_ALE_ETLBox_ConnectionManager_IConnectionManager_System_String_System_String_
  commentId: M:ALE.ETLBox.ControlFlow.IfIndexExistsTask.IsExisting(ALE.ETLBox.ConnectionManager.IConnectionManager,System.String,System.String)
  fullName: ALE.ETLBox.ControlFlow.IfIndexExistsTask.IsExisting(ALE.ETLBox.ConnectionManager.IConnectionManager, System.String, System.String)
  nameWithType: IfIndexExistsTask.IsExisting(IConnectionManager, String, String)
- uid: ALE.ETLBox.ControlFlow.IfIndexExistsTask.IsExisting(System.String,System.String)
  name: IsExisting(String, String)
  href: api/ALE.ETLBox.ControlFlow.IfIndexExistsTask.html#ALE_ETLBox_ControlFlow_IfIndexExistsTask_IsExisting_System_String_System_String_
  commentId: M:ALE.ETLBox.ControlFlow.IfIndexExistsTask.IsExisting(System.String,System.String)
  fullName: ALE.ETLBox.ControlFlow.IfIndexExistsTask.IsExisting(System.String, System.String)
  nameWithType: IfIndexExistsTask.IsExisting(String, String)
- uid: ALE.ETLBox.ControlFlow.IfIndexExistsTask.IsExisting*
  name: IsExisting
  href: api/ALE.ETLBox.ControlFlow.IfIndexExistsTask.html#ALE_ETLBox_ControlFlow_IfIndexExistsTask_IsExisting_
  commentId: Overload:ALE.ETLBox.ControlFlow.IfIndexExistsTask.IsExisting
  isSpec: "True"
  fullName: ALE.ETLBox.ControlFlow.IfIndexExistsTask.IsExisting
  nameWithType: IfIndexExistsTask.IsExisting
- uid: ALE.ETLBox.ControlFlow.IfProcedureExistsTask
  name: IfProcedureExistsTask
  href: api/ALE.ETLBox.ControlFlow.IfProcedureExistsTask.html
  commentId: T:ALE.ETLBox.ControlFlow.IfProcedureExistsTask
  fullName: ALE.ETLBox.ControlFlow.IfProcedureExistsTask
  nameWithType: IfProcedureExistsTask
- uid: ALE.ETLBox.ControlFlow.IfProcedureExistsTask.#ctor
  name: IfProcedureExistsTask()
  href: api/ALE.ETLBox.ControlFlow.IfProcedureExistsTask.html#ALE_ETLBox_ControlFlow_IfProcedureExistsTask__ctor
  commentId: M:ALE.ETLBox.ControlFlow.IfProcedureExistsTask.#ctor
  fullName: ALE.ETLBox.ControlFlow.IfProcedureExistsTask.IfProcedureExistsTask()
  nameWithType: IfProcedureExistsTask.IfProcedureExistsTask()
- uid: ALE.ETLBox.ControlFlow.IfProcedureExistsTask.#ctor(System.String)
  name: IfProcedureExistsTask(String)
  href: api/ALE.ETLBox.ControlFlow.IfProcedureExistsTask.html#ALE_ETLBox_ControlFlow_IfProcedureExistsTask__ctor_System_String_
  commentId: M:ALE.ETLBox.ControlFlow.IfProcedureExistsTask.#ctor(System.String)
  fullName: ALE.ETLBox.ControlFlow.IfProcedureExistsTask.IfProcedureExistsTask(System.String)
  nameWithType: IfProcedureExistsTask.IfProcedureExistsTask(String)
- uid: ALE.ETLBox.ControlFlow.IfProcedureExistsTask.#ctor*
  name: IfProcedureExistsTask
  href: api/ALE.ETLBox.ControlFlow.IfProcedureExistsTask.html#ALE_ETLBox_ControlFlow_IfProcedureExistsTask__ctor_
  commentId: Overload:ALE.ETLBox.ControlFlow.IfProcedureExistsTask.#ctor
  isSpec: "True"
  fullName: ALE.ETLBox.ControlFlow.IfProcedureExistsTask.IfProcedureExistsTask
  nameWithType: IfProcedureExistsTask.IfProcedureExistsTask
- uid: ALE.ETLBox.ControlFlow.IfProcedureExistsTask.IsExisting(ALE.ETLBox.ConnectionManager.IConnectionManager,System.String)
  name: IsExisting(IConnectionManager, String)
  href: api/ALE.ETLBox.ControlFlow.IfProcedureExistsTask.html#ALE_ETLBox_ControlFlow_IfProcedureExistsTask_IsExisting_ALE_ETLBox_ConnectionManager_IConnectionManager_System_String_
  commentId: M:ALE.ETLBox.ControlFlow.IfProcedureExistsTask.IsExisting(ALE.ETLBox.ConnectionManager.IConnectionManager,System.String)
  fullName: ALE.ETLBox.ControlFlow.IfProcedureExistsTask.IsExisting(ALE.ETLBox.ConnectionManager.IConnectionManager, System.String)
  nameWithType: IfProcedureExistsTask.IsExisting(IConnectionManager, String)
- uid: ALE.ETLBox.ControlFlow.IfProcedureExistsTask.IsExisting(System.String)
  name: IsExisting(String)
  href: api/ALE.ETLBox.ControlFlow.IfProcedureExistsTask.html#ALE_ETLBox_ControlFlow_IfProcedureExistsTask_IsExisting_System_String_
  commentId: M:ALE.ETLBox.ControlFlow.IfProcedureExistsTask.IsExisting(System.String)
  fullName: ALE.ETLBox.ControlFlow.IfProcedureExistsTask.IsExisting(System.String)
  nameWithType: IfProcedureExistsTask.IsExisting(String)
- uid: ALE.ETLBox.ControlFlow.IfProcedureExistsTask.IsExisting*
  name: IsExisting
  href: api/ALE.ETLBox.ControlFlow.IfProcedureExistsTask.html#ALE_ETLBox_ControlFlow_IfProcedureExistsTask_IsExisting_
  commentId: Overload:ALE.ETLBox.ControlFlow.IfProcedureExistsTask.IsExisting
  isSpec: "True"
  fullName: ALE.ETLBox.ControlFlow.IfProcedureExistsTask.IsExisting
  nameWithType: IfProcedureExistsTask.IsExisting
- uid: ALE.ETLBox.ControlFlow.IfSchemaExistsTask
  name: IfSchemaExistsTask
  href: api/ALE.ETLBox.ControlFlow.IfSchemaExistsTask.html
  commentId: T:ALE.ETLBox.ControlFlow.IfSchemaExistsTask
  fullName: ALE.ETLBox.ControlFlow.IfSchemaExistsTask
  nameWithType: IfSchemaExistsTask
- uid: ALE.ETLBox.ControlFlow.IfSchemaExistsTask.#ctor
  name: IfSchemaExistsTask()
  href: api/ALE.ETLBox.ControlFlow.IfSchemaExistsTask.html#ALE_ETLBox_ControlFlow_IfSchemaExistsTask__ctor
  commentId: M:ALE.ETLBox.ControlFlow.IfSchemaExistsTask.#ctor
  fullName: ALE.ETLBox.ControlFlow.IfSchemaExistsTask.IfSchemaExistsTask()
  nameWithType: IfSchemaExistsTask.IfSchemaExistsTask()
- uid: ALE.ETLBox.ControlFlow.IfSchemaExistsTask.#ctor(System.String)
  name: IfSchemaExistsTask(String)
  href: api/ALE.ETLBox.ControlFlow.IfSchemaExistsTask.html#ALE_ETLBox_ControlFlow_IfSchemaExistsTask__ctor_System_String_
  commentId: M:ALE.ETLBox.ControlFlow.IfSchemaExistsTask.#ctor(System.String)
  fullName: ALE.ETLBox.ControlFlow.IfSchemaExistsTask.IfSchemaExistsTask(System.String)
  nameWithType: IfSchemaExistsTask.IfSchemaExistsTask(String)
- uid: ALE.ETLBox.ControlFlow.IfSchemaExistsTask.#ctor*
  name: IfSchemaExistsTask
  href: api/ALE.ETLBox.ControlFlow.IfSchemaExistsTask.html#ALE_ETLBox_ControlFlow_IfSchemaExistsTask__ctor_
  commentId: Overload:ALE.ETLBox.ControlFlow.IfSchemaExistsTask.#ctor
  isSpec: "True"
  fullName: ALE.ETLBox.ControlFlow.IfSchemaExistsTask.IfSchemaExistsTask
  nameWithType: IfSchemaExistsTask.IfSchemaExistsTask
- uid: ALE.ETLBox.ControlFlow.IfSchemaExistsTask.IsExisting(ALE.ETLBox.ConnectionManager.IConnectionManager,System.String)
  name: IsExisting(IConnectionManager, String)
  href: api/ALE.ETLBox.ControlFlow.IfSchemaExistsTask.html#ALE_ETLBox_ControlFlow_IfSchemaExistsTask_IsExisting_ALE_ETLBox_ConnectionManager_IConnectionManager_System_String_
  commentId: M:ALE.ETLBox.ControlFlow.IfSchemaExistsTask.IsExisting(ALE.ETLBox.ConnectionManager.IConnectionManager,System.String)
  fullName: ALE.ETLBox.ControlFlow.IfSchemaExistsTask.IsExisting(ALE.ETLBox.ConnectionManager.IConnectionManager, System.String)
  nameWithType: IfSchemaExistsTask.IsExisting(IConnectionManager, String)
- uid: ALE.ETLBox.ControlFlow.IfSchemaExistsTask.IsExisting(System.String)
  name: IsExisting(String)
  href: api/ALE.ETLBox.ControlFlow.IfSchemaExistsTask.html#ALE_ETLBox_ControlFlow_IfSchemaExistsTask_IsExisting_System_String_
  commentId: M:ALE.ETLBox.ControlFlow.IfSchemaExistsTask.IsExisting(System.String)
  fullName: ALE.ETLBox.ControlFlow.IfSchemaExistsTask.IsExisting(System.String)
  nameWithType: IfSchemaExistsTask.IsExisting(String)
- uid: ALE.ETLBox.ControlFlow.IfSchemaExistsTask.IsExisting*
  name: IsExisting
  href: api/ALE.ETLBox.ControlFlow.IfSchemaExistsTask.html#ALE_ETLBox_ControlFlow_IfSchemaExistsTask_IsExisting_
  commentId: Overload:ALE.ETLBox.ControlFlow.IfSchemaExistsTask.IsExisting
  isSpec: "True"
  fullName: ALE.ETLBox.ControlFlow.IfSchemaExistsTask.IsExisting
  nameWithType: IfSchemaExistsTask.IsExisting
- uid: ALE.ETLBox.ControlFlow.IfTableOrViewExistsTask
  name: IfTableOrViewExistsTask
  href: api/ALE.ETLBox.ControlFlow.IfTableOrViewExistsTask.html
  commentId: T:ALE.ETLBox.ControlFlow.IfTableOrViewExistsTask
  fullName: ALE.ETLBox.ControlFlow.IfTableOrViewExistsTask
  nameWithType: IfTableOrViewExistsTask
- uid: ALE.ETLBox.ControlFlow.IfTableOrViewExistsTask.#ctor
  name: IfTableOrViewExistsTask()
  href: api/ALE.ETLBox.ControlFlow.IfTableOrViewExistsTask.html#ALE_ETLBox_ControlFlow_IfTableOrViewExistsTask__ctor
  commentId: M:ALE.ETLBox.ControlFlow.IfTableOrViewExistsTask.#ctor
  fullName: ALE.ETLBox.ControlFlow.IfTableOrViewExistsTask.IfTableOrViewExistsTask()
  nameWithType: IfTableOrViewExistsTask.IfTableOrViewExistsTask()
- uid: ALE.ETLBox.ControlFlow.IfTableOrViewExistsTask.#ctor(ALE.ETLBox.ConnectionManager.IConnectionManager,System.String)
  name: IfTableOrViewExistsTask(IConnectionManager, String)
  href: api/ALE.ETLBox.ControlFlow.IfTableOrViewExistsTask.html#ALE_ETLBox_ControlFlow_IfTableOrViewExistsTask__ctor_ALE_ETLBox_ConnectionManager_IConnectionManager_System_String_
  commentId: M:ALE.ETLBox.ControlFlow.IfTableOrViewExistsTask.#ctor(ALE.ETLBox.ConnectionManager.IConnectionManager,System.String)
  fullName: ALE.ETLBox.ControlFlow.IfTableOrViewExistsTask.IfTableOrViewExistsTask(ALE.ETLBox.ConnectionManager.IConnectionManager, System.String)
  nameWithType: IfTableOrViewExistsTask.IfTableOrViewExistsTask(IConnectionManager, String)
- uid: ALE.ETLBox.ControlFlow.IfTableOrViewExistsTask.#ctor(System.String)
  name: IfTableOrViewExistsTask(String)
  href: api/ALE.ETLBox.ControlFlow.IfTableOrViewExistsTask.html#ALE_ETLBox_ControlFlow_IfTableOrViewExistsTask__ctor_System_String_
  commentId: M:ALE.ETLBox.ControlFlow.IfTableOrViewExistsTask.#ctor(System.String)
  fullName: ALE.ETLBox.ControlFlow.IfTableOrViewExistsTask.IfTableOrViewExistsTask(System.String)
  nameWithType: IfTableOrViewExistsTask.IfTableOrViewExistsTask(String)
- uid: ALE.ETLBox.ControlFlow.IfTableOrViewExistsTask.#ctor*
  name: IfTableOrViewExistsTask
  href: api/ALE.ETLBox.ControlFlow.IfTableOrViewExistsTask.html#ALE_ETLBox_ControlFlow_IfTableOrViewExistsTask__ctor_
  commentId: Overload:ALE.ETLBox.ControlFlow.IfTableOrViewExistsTask.#ctor
  isSpec: "True"
  fullName: ALE.ETLBox.ControlFlow.IfTableOrViewExistsTask.IfTableOrViewExistsTask
  nameWithType: IfTableOrViewExistsTask.IfTableOrViewExistsTask
- uid: ALE.ETLBox.ControlFlow.IfTableOrViewExistsTask.IsExisting(ALE.ETLBox.ConnectionManager.IConnectionManager,System.String)
  name: IsExisting(IConnectionManager, String)
  href: api/ALE.ETLBox.ControlFlow.IfTableOrViewExistsTask.html#ALE_ETLBox_ControlFlow_IfTableOrViewExistsTask_IsExisting_ALE_ETLBox_ConnectionManager_IConnectionManager_System_String_
  commentId: M:ALE.ETLBox.ControlFlow.IfTableOrViewExistsTask.IsExisting(ALE.ETLBox.ConnectionManager.IConnectionManager,System.String)
  fullName: ALE.ETLBox.ControlFlow.IfTableOrViewExistsTask.IsExisting(ALE.ETLBox.ConnectionManager.IConnectionManager, System.String)
  nameWithType: IfTableOrViewExistsTask.IsExisting(IConnectionManager, String)
- uid: ALE.ETLBox.ControlFlow.IfTableOrViewExistsTask.IsExisting(System.String)
  name: IsExisting(String)
  href: api/ALE.ETLBox.ControlFlow.IfTableOrViewExistsTask.html#ALE_ETLBox_ControlFlow_IfTableOrViewExistsTask_IsExisting_System_String_
  commentId: M:ALE.ETLBox.ControlFlow.IfTableOrViewExistsTask.IsExisting(System.String)
  fullName: ALE.ETLBox.ControlFlow.IfTableOrViewExistsTask.IsExisting(System.String)
  nameWithType: IfTableOrViewExistsTask.IsExisting(String)
- uid: ALE.ETLBox.ControlFlow.IfTableOrViewExistsTask.IsExisting*
  name: IsExisting
  href: api/ALE.ETLBox.ControlFlow.IfTableOrViewExistsTask.html#ALE_ETLBox_ControlFlow_IfTableOrViewExistsTask_IsExisting_
  commentId: Overload:ALE.ETLBox.ControlFlow.IfTableOrViewExistsTask.IsExisting
  isSpec: "True"
  fullName: ALE.ETLBox.ControlFlow.IfTableOrViewExistsTask.IsExisting
  nameWithType: IfTableOrViewExistsTask.IsExisting
- uid: ALE.ETLBox.ControlFlow.IfTableOrViewExistsTask.ThrowExceptionIfNotExists(ALE.ETLBox.ConnectionManager.IConnectionManager,System.String)
  name: ThrowExceptionIfNotExists(IConnectionManager, String)
  href: api/ALE.ETLBox.ControlFlow.IfTableOrViewExistsTask.html#ALE_ETLBox_ControlFlow_IfTableOrViewExistsTask_ThrowExceptionIfNotExists_ALE_ETLBox_ConnectionManager_IConnectionManager_System_String_
  commentId: M:ALE.ETLBox.ControlFlow.IfTableOrViewExistsTask.ThrowExceptionIfNotExists(ALE.ETLBox.ConnectionManager.IConnectionManager,System.String)
  fullName: ALE.ETLBox.ControlFlow.IfTableOrViewExistsTask.ThrowExceptionIfNotExists(ALE.ETLBox.ConnectionManager.IConnectionManager, System.String)
  nameWithType: IfTableOrViewExistsTask.ThrowExceptionIfNotExists(IConnectionManager, String)
- uid: ALE.ETLBox.ControlFlow.IfTableOrViewExistsTask.ThrowExceptionIfNotExists*
  name: ThrowExceptionIfNotExists
  href: api/ALE.ETLBox.ControlFlow.IfTableOrViewExistsTask.html#ALE_ETLBox_ControlFlow_IfTableOrViewExistsTask_ThrowExceptionIfNotExists_
  commentId: Overload:ALE.ETLBox.ControlFlow.IfTableOrViewExistsTask.ThrowExceptionIfNotExists
  isSpec: "True"
  fullName: ALE.ETLBox.ControlFlow.IfTableOrViewExistsTask.ThrowExceptionIfNotExists
  nameWithType: IfTableOrViewExistsTask.ThrowExceptionIfNotExists
- uid: ALE.ETLBox.ControlFlow.Package
  name: Package
  href: api/ALE.ETLBox.ControlFlow.Package.html
  commentId: T:ALE.ETLBox.ControlFlow.Package
  fullName: ALE.ETLBox.ControlFlow.Package
  nameWithType: Package
- uid: ALE.ETLBox.ControlFlow.Package.#ctor
  name: Package()
  href: api/ALE.ETLBox.ControlFlow.Package.html#ALE_ETLBox_ControlFlow_Package__ctor
  commentId: M:ALE.ETLBox.ControlFlow.Package.#ctor
  fullName: ALE.ETLBox.ControlFlow.Package.Package()
  nameWithType: Package.Package()
- uid: ALE.ETLBox.ControlFlow.Package.#ctor(System.String)
  name: Package(String)
  href: api/ALE.ETLBox.ControlFlow.Package.html#ALE_ETLBox_ControlFlow_Package__ctor_System_String_
  commentId: M:ALE.ETLBox.ControlFlow.Package.#ctor(System.String)
  fullName: ALE.ETLBox.ControlFlow.Package.Package(System.String)
  nameWithType: Package.Package(String)
- uid: ALE.ETLBox.ControlFlow.Package.#ctor(System.String,System.Action)
  name: Package(String, Action)
  href: api/ALE.ETLBox.ControlFlow.Package.html#ALE_ETLBox_ControlFlow_Package__ctor_System_String_System_Action_
  commentId: M:ALE.ETLBox.ControlFlow.Package.#ctor(System.String,System.Action)
  fullName: ALE.ETLBox.ControlFlow.Package.Package(System.String, System.Action)
  nameWithType: Package.Package(String, Action)
- uid: ALE.ETLBox.ControlFlow.Package.#ctor*
  name: Package
  href: api/ALE.ETLBox.ControlFlow.Package.html#ALE_ETLBox_ControlFlow_Package__ctor_
  commentId: Overload:ALE.ETLBox.ControlFlow.Package.#ctor
  isSpec: "True"
  fullName: ALE.ETLBox.ControlFlow.Package.Package
  nameWithType: Package.Package
- uid: ALE.ETLBox.ControlFlow.Package.Execute
  name: Execute()
  href: api/ALE.ETLBox.ControlFlow.Package.html#ALE_ETLBox_ControlFlow_Package_Execute
  commentId: M:ALE.ETLBox.ControlFlow.Package.Execute
  fullName: ALE.ETLBox.ControlFlow.Package.Execute()
  nameWithType: Package.Execute()
- uid: ALE.ETLBox.ControlFlow.Package.Execute(System.String,System.Action)
  name: Execute(String, Action)
  href: api/ALE.ETLBox.ControlFlow.Package.html#ALE_ETLBox_ControlFlow_Package_Execute_System_String_System_Action_
  commentId: M:ALE.ETLBox.ControlFlow.Package.Execute(System.String,System.Action)
  fullName: ALE.ETLBox.ControlFlow.Package.Execute(System.String, System.Action)
  nameWithType: Package.Execute(String, Action)
- uid: ALE.ETLBox.ControlFlow.Package.Execute*
  name: Execute
  href: api/ALE.ETLBox.ControlFlow.Package.html#ALE_ETLBox_ControlFlow_Package_Execute_
  commentId: Overload:ALE.ETLBox.ControlFlow.Package.Execute
  isSpec: "True"
  fullName: ALE.ETLBox.ControlFlow.Package.Execute
  nameWithType: Package.Execute
- uid: ALE.ETLBox.ControlFlow.Package.TaskName
  name: TaskName
  href: api/ALE.ETLBox.ControlFlow.Package.html#ALE_ETLBox_ControlFlow_Package_TaskName
  commentId: P:ALE.ETLBox.ControlFlow.Package.TaskName
  fullName: ALE.ETLBox.ControlFlow.Package.TaskName
  nameWithType: Package.TaskName
- uid: ALE.ETLBox.ControlFlow.Package.TaskName*
  name: TaskName
  href: api/ALE.ETLBox.ControlFlow.Package.html#ALE_ETLBox_ControlFlow_Package_TaskName_
  commentId: Overload:ALE.ETLBox.ControlFlow.Package.TaskName
  isSpec: "True"
  fullName: ALE.ETLBox.ControlFlow.Package.TaskName
  nameWithType: Package.TaskName
- uid: ALE.ETLBox.ControlFlow.Package.Tasks
  name: Tasks
  href: api/ALE.ETLBox.ControlFlow.Package.html#ALE_ETLBox_ControlFlow_Package_Tasks
  commentId: P:ALE.ETLBox.ControlFlow.Package.Tasks
  fullName: ALE.ETLBox.ControlFlow.Package.Tasks
  nameWithType: Package.Tasks
- uid: ALE.ETLBox.ControlFlow.Package.Tasks*
  name: Tasks
  href: api/ALE.ETLBox.ControlFlow.Package.html#ALE_ETLBox_ControlFlow_Package_Tasks_
  commentId: Overload:ALE.ETLBox.ControlFlow.Package.Tasks
  isSpec: "True"
  fullName: ALE.ETLBox.ControlFlow.Package.Tasks
  nameWithType: Package.Tasks
- uid: ALE.ETLBox.ControlFlow.RecoveryModel
  name: RecoveryModel
  href: api/ALE.ETLBox.ControlFlow.RecoveryModel.html
  commentId: T:ALE.ETLBox.ControlFlow.RecoveryModel
  fullName: ALE.ETLBox.ControlFlow.RecoveryModel
  nameWithType: RecoveryModel
- uid: ALE.ETLBox.ControlFlow.RecoveryModel.BulkLogged
  name: BulkLogged
  href: api/ALE.ETLBox.ControlFlow.RecoveryModel.html#ALE_ETLBox_ControlFlow_RecoveryModel_BulkLogged
  commentId: F:ALE.ETLBox.ControlFlow.RecoveryModel.BulkLogged
  fullName: ALE.ETLBox.ControlFlow.RecoveryModel.BulkLogged
  nameWithType: RecoveryModel.BulkLogged
- uid: ALE.ETLBox.ControlFlow.RecoveryModel.Default
  name: Default
  href: api/ALE.ETLBox.ControlFlow.RecoveryModel.html#ALE_ETLBox_ControlFlow_RecoveryModel_Default
  commentId: F:ALE.ETLBox.ControlFlow.RecoveryModel.Default
  fullName: ALE.ETLBox.ControlFlow.RecoveryModel.Default
  nameWithType: RecoveryModel.Default
- uid: ALE.ETLBox.ControlFlow.RecoveryModel.Full
  name: Full
  href: api/ALE.ETLBox.ControlFlow.RecoveryModel.html#ALE_ETLBox_ControlFlow_RecoveryModel_Full
  commentId: F:ALE.ETLBox.ControlFlow.RecoveryModel.Full
  fullName: ALE.ETLBox.ControlFlow.RecoveryModel.Full
  nameWithType: RecoveryModel.Full
- uid: ALE.ETLBox.ControlFlow.RecoveryModel.Simple
  name: Simple
  href: api/ALE.ETLBox.ControlFlow.RecoveryModel.html#ALE_ETLBox_ControlFlow_RecoveryModel_Simple
  commentId: F:ALE.ETLBox.ControlFlow.RecoveryModel.Simple
  fullName: ALE.ETLBox.ControlFlow.RecoveryModel.Simple
  nameWithType: RecoveryModel.Simple
- uid: ALE.ETLBox.ControlFlow.RowCountOptions
  name: RowCountOptions
  href: api/ALE.ETLBox.ControlFlow.RowCountOptions.html
  commentId: T:ALE.ETLBox.ControlFlow.RowCountOptions
  fullName: ALE.ETLBox.ControlFlow.RowCountOptions
  nameWithType: RowCountOptions
- uid: ALE.ETLBox.ControlFlow.RowCountOptions.NoLock
  name: NoLock
  href: api/ALE.ETLBox.ControlFlow.RowCountOptions.html#ALE_ETLBox_ControlFlow_RowCountOptions_NoLock
  commentId: F:ALE.ETLBox.ControlFlow.RowCountOptions.NoLock
  fullName: ALE.ETLBox.ControlFlow.RowCountOptions.NoLock
  nameWithType: RowCountOptions.NoLock
- uid: ALE.ETLBox.ControlFlow.RowCountOptions.None
  name: None
  href: api/ALE.ETLBox.ControlFlow.RowCountOptions.html#ALE_ETLBox_ControlFlow_RowCountOptions_None
  commentId: F:ALE.ETLBox.ControlFlow.RowCountOptions.None
  fullName: ALE.ETLBox.ControlFlow.RowCountOptions.None
  nameWithType: RowCountOptions.None
- uid: ALE.ETLBox.ControlFlow.RowCountOptions.QuickQueryMode
  name: QuickQueryMode
  href: api/ALE.ETLBox.ControlFlow.RowCountOptions.html#ALE_ETLBox_ControlFlow_RowCountOptions_QuickQueryMode
  commentId: F:ALE.ETLBox.ControlFlow.RowCountOptions.QuickQueryMode
  fullName: ALE.ETLBox.ControlFlow.RowCountOptions.QuickQueryMode
  nameWithType: RowCountOptions.QuickQueryMode
- uid: ALE.ETLBox.ControlFlow.RowCountTask
  name: RowCountTask
  href: api/ALE.ETLBox.ControlFlow.RowCountTask.html
  commentId: T:ALE.ETLBox.ControlFlow.RowCountTask
  fullName: ALE.ETLBox.ControlFlow.RowCountTask
  nameWithType: RowCountTask
- uid: ALE.ETLBox.ControlFlow.RowCountTask.#ctor
  name: RowCountTask()
  href: api/ALE.ETLBox.ControlFlow.RowCountTask.html#ALE_ETLBox_ControlFlow_RowCountTask__ctor
  commentId: M:ALE.ETLBox.ControlFlow.RowCountTask.#ctor
  fullName: ALE.ETLBox.ControlFlow.RowCountTask.RowCountTask()
  nameWithType: RowCountTask.RowCountTask()
- uid: ALE.ETLBox.ControlFlow.RowCountTask.#ctor(System.String)
  name: RowCountTask(String)
  href: api/ALE.ETLBox.ControlFlow.RowCountTask.html#ALE_ETLBox_ControlFlow_RowCountTask__ctor_System_String_
  commentId: M:ALE.ETLBox.ControlFlow.RowCountTask.#ctor(System.String)
  fullName: ALE.ETLBox.ControlFlow.RowCountTask.RowCountTask(System.String)
  nameWithType: RowCountTask.RowCountTask(String)
- uid: ALE.ETLBox.ControlFlow.RowCountTask.#ctor(System.String,ALE.ETLBox.ControlFlow.RowCountOptions)
  name: RowCountTask(String, RowCountOptions)
  href: api/ALE.ETLBox.ControlFlow.RowCountTask.html#ALE_ETLBox_ControlFlow_RowCountTask__ctor_System_String_ALE_ETLBox_ControlFlow_RowCountOptions_
  commentId: M:ALE.ETLBox.ControlFlow.RowCountTask.#ctor(System.String,ALE.ETLBox.ControlFlow.RowCountOptions)
  fullName: ALE.ETLBox.ControlFlow.RowCountTask.RowCountTask(System.String, ALE.ETLBox.ControlFlow.RowCountOptions)
  nameWithType: RowCountTask.RowCountTask(String, RowCountOptions)
- uid: ALE.ETLBox.ControlFlow.RowCountTask.#ctor(System.String,System.String)
  name: RowCountTask(String, String)
  href: api/ALE.ETLBox.ControlFlow.RowCountTask.html#ALE_ETLBox_ControlFlow_RowCountTask__ctor_System_String_System_String_
  commentId: M:ALE.ETLBox.ControlFlow.RowCountTask.#ctor(System.String,System.String)
  fullName: ALE.ETLBox.ControlFlow.RowCountTask.RowCountTask(System.String, System.String)
  nameWithType: RowCountTask.RowCountTask(String, String)
- uid: ALE.ETLBox.ControlFlow.RowCountTask.#ctor(System.String,System.String,ALE.ETLBox.ControlFlow.RowCountOptions)
  name: RowCountTask(String, String, RowCountOptions)
  href: api/ALE.ETLBox.ControlFlow.RowCountTask.html#ALE_ETLBox_ControlFlow_RowCountTask__ctor_System_String_System_String_ALE_ETLBox_ControlFlow_RowCountOptions_
  commentId: M:ALE.ETLBox.ControlFlow.RowCountTask.#ctor(System.String,System.String,ALE.ETLBox.ControlFlow.RowCountOptions)
  fullName: ALE.ETLBox.ControlFlow.RowCountTask.RowCountTask(System.String, System.String, ALE.ETLBox.ControlFlow.RowCountOptions)
  nameWithType: RowCountTask.RowCountTask(String, String, RowCountOptions)
- uid: ALE.ETLBox.ControlFlow.RowCountTask.#ctor*
  name: RowCountTask
  href: api/ALE.ETLBox.ControlFlow.RowCountTask.html#ALE_ETLBox_ControlFlow_RowCountTask__ctor_
  commentId: Overload:ALE.ETLBox.ControlFlow.RowCountTask.#ctor
  isSpec: "True"
  fullName: ALE.ETLBox.ControlFlow.RowCountTask.RowCountTask
  nameWithType: RowCountTask.RowCountTask
- uid: ALE.ETLBox.ControlFlow.RowCountTask.Condition
  name: Condition
  href: api/ALE.ETLBox.ControlFlow.RowCountTask.html#ALE_ETLBox_ControlFlow_RowCountTask_Condition
  commentId: P:ALE.ETLBox.ControlFlow.RowCountTask.Condition
  fullName: ALE.ETLBox.ControlFlow.RowCountTask.Condition
  nameWithType: RowCountTask.Condition
- uid: ALE.ETLBox.ControlFlow.RowCountTask.Condition*
  name: Condition
  href: api/ALE.ETLBox.ControlFlow.RowCountTask.html#ALE_ETLBox_ControlFlow_RowCountTask_Condition_
  commentId: Overload:ALE.ETLBox.ControlFlow.RowCountTask.Condition
  isSpec: "True"
  fullName: ALE.ETLBox.ControlFlow.RowCountTask.Condition
  nameWithType: RowCountTask.Condition
- uid: ALE.ETLBox.ControlFlow.RowCountTask.Count
  name: Count()
  href: api/ALE.ETLBox.ControlFlow.RowCountTask.html#ALE_ETLBox_ControlFlow_RowCountTask_Count
  commentId: M:ALE.ETLBox.ControlFlow.RowCountTask.Count
  fullName: ALE.ETLBox.ControlFlow.RowCountTask.Count()
  nameWithType: RowCountTask.Count()
- uid: ALE.ETLBox.ControlFlow.RowCountTask.Count(ALE.ETLBox.ConnectionManager.IConnectionManager,System.String)
  name: Count(IConnectionManager, String)
  href: api/ALE.ETLBox.ControlFlow.RowCountTask.html#ALE_ETLBox_ControlFlow_RowCountTask_Count_ALE_ETLBox_ConnectionManager_IConnectionManager_System_String_
  commentId: M:ALE.ETLBox.ControlFlow.RowCountTask.Count(ALE.ETLBox.ConnectionManager.IConnectionManager,System.String)
  fullName: ALE.ETLBox.ControlFlow.RowCountTask.Count(ALE.ETLBox.ConnectionManager.IConnectionManager, System.String)
  nameWithType: RowCountTask.Count(IConnectionManager, String)
- uid: ALE.ETLBox.ControlFlow.RowCountTask.Count(ALE.ETLBox.ConnectionManager.IConnectionManager,System.String,ALE.ETLBox.ControlFlow.RowCountOptions)
  name: Count(IConnectionManager, String, RowCountOptions)
  href: api/ALE.ETLBox.ControlFlow.RowCountTask.html#ALE_ETLBox_ControlFlow_RowCountTask_Count_ALE_ETLBox_ConnectionManager_IConnectionManager_System_String_ALE_ETLBox_ControlFlow_RowCountOptions_
  commentId: M:ALE.ETLBox.ControlFlow.RowCountTask.Count(ALE.ETLBox.ConnectionManager.IConnectionManager,System.String,ALE.ETLBox.ControlFlow.RowCountOptions)
  fullName: ALE.ETLBox.ControlFlow.RowCountTask.Count(ALE.ETLBox.ConnectionManager.IConnectionManager, System.String, ALE.ETLBox.ControlFlow.RowCountOptions)
  nameWithType: RowCountTask.Count(IConnectionManager, String, RowCountOptions)
- uid: ALE.ETLBox.ControlFlow.RowCountTask.Count(ALE.ETLBox.ConnectionManager.IConnectionManager,System.String,System.String)
  name: Count(IConnectionManager, String, String)
  href: api/ALE.ETLBox.ControlFlow.RowCountTask.html#ALE_ETLBox_ControlFlow_RowCountTask_Count_ALE_ETLBox_ConnectionManager_IConnectionManager_System_String_System_String_
  commentId: M:ALE.ETLBox.ControlFlow.RowCountTask.Count(ALE.ETLBox.ConnectionManager.IConnectionManager,System.String,System.String)
  fullName: ALE.ETLBox.ControlFlow.RowCountTask.Count(ALE.ETLBox.ConnectionManager.IConnectionManager, System.String, System.String)
  nameWithType: RowCountTask.Count(IConnectionManager, String, String)
- uid: ALE.ETLBox.ControlFlow.RowCountTask.Count(ALE.ETLBox.ConnectionManager.IConnectionManager,System.String,System.String,ALE.ETLBox.ControlFlow.RowCountOptions)
  name: Count(IConnectionManager, String, String, RowCountOptions)
  href: api/ALE.ETLBox.ControlFlow.RowCountTask.html#ALE_ETLBox_ControlFlow_RowCountTask_Count_ALE_ETLBox_ConnectionManager_IConnectionManager_System_String_System_String_ALE_ETLBox_ControlFlow_RowCountOptions_
  commentId: M:ALE.ETLBox.ControlFlow.RowCountTask.Count(ALE.ETLBox.ConnectionManager.IConnectionManager,System.String,System.String,ALE.ETLBox.ControlFlow.RowCountOptions)
  fullName: ALE.ETLBox.ControlFlow.RowCountTask.Count(ALE.ETLBox.ConnectionManager.IConnectionManager, System.String, System.String, ALE.ETLBox.ControlFlow.RowCountOptions)
  nameWithType: RowCountTask.Count(IConnectionManager, String, String, RowCountOptions)
- uid: ALE.ETLBox.ControlFlow.RowCountTask.Count(System.String)
  name: Count(String)
  href: api/ALE.ETLBox.ControlFlow.RowCountTask.html#ALE_ETLBox_ControlFlow_RowCountTask_Count_System_String_
  commentId: M:ALE.ETLBox.ControlFlow.RowCountTask.Count(System.String)
  fullName: ALE.ETLBox.ControlFlow.RowCountTask.Count(System.String)
  nameWithType: RowCountTask.Count(String)
- uid: ALE.ETLBox.ControlFlow.RowCountTask.Count(System.String,ALE.ETLBox.ControlFlow.RowCountOptions)
  name: Count(String, RowCountOptions)
  href: api/ALE.ETLBox.ControlFlow.RowCountTask.html#ALE_ETLBox_ControlFlow_RowCountTask_Count_System_String_ALE_ETLBox_ControlFlow_RowCountOptions_
  commentId: M:ALE.ETLBox.ControlFlow.RowCountTask.Count(System.String,ALE.ETLBox.ControlFlow.RowCountOptions)
  fullName: ALE.ETLBox.ControlFlow.RowCountTask.Count(System.String, ALE.ETLBox.ControlFlow.RowCountOptions)
  nameWithType: RowCountTask.Count(String, RowCountOptions)
- uid: ALE.ETLBox.ControlFlow.RowCountTask.Count(System.String,System.String)
  name: Count(String, String)
  href: api/ALE.ETLBox.ControlFlow.RowCountTask.html#ALE_ETLBox_ControlFlow_RowCountTask_Count_System_String_System_String_
  commentId: M:ALE.ETLBox.ControlFlow.RowCountTask.Count(System.String,System.String)
  fullName: ALE.ETLBox.ControlFlow.RowCountTask.Count(System.String, System.String)
  nameWithType: RowCountTask.Count(String, String)
- uid: ALE.ETLBox.ControlFlow.RowCountTask.Count(System.String,System.String,ALE.ETLBox.ControlFlow.RowCountOptions)
  name: Count(String, String, RowCountOptions)
  href: api/ALE.ETLBox.ControlFlow.RowCountTask.html#ALE_ETLBox_ControlFlow_RowCountTask_Count_System_String_System_String_ALE_ETLBox_ControlFlow_RowCountOptions_
  commentId: M:ALE.ETLBox.ControlFlow.RowCountTask.Count(System.String,System.String,ALE.ETLBox.ControlFlow.RowCountOptions)
  fullName: ALE.ETLBox.ControlFlow.RowCountTask.Count(System.String, System.String, ALE.ETLBox.ControlFlow.RowCountOptions)
  nameWithType: RowCountTask.Count(String, String, RowCountOptions)
- uid: ALE.ETLBox.ControlFlow.RowCountTask.Count*
  name: Count
  href: api/ALE.ETLBox.ControlFlow.RowCountTask.html#ALE_ETLBox_ControlFlow_RowCountTask_Count_
  commentId: Overload:ALE.ETLBox.ControlFlow.RowCountTask.Count
  isSpec: "True"
  fullName: ALE.ETLBox.ControlFlow.RowCountTask.Count
  nameWithType: RowCountTask.Count
- uid: ALE.ETLBox.ControlFlow.RowCountTask.Execute
  name: Execute()
  href: api/ALE.ETLBox.ControlFlow.RowCountTask.html#ALE_ETLBox_ControlFlow_RowCountTask_Execute
  commentId: M:ALE.ETLBox.ControlFlow.RowCountTask.Execute
  fullName: ALE.ETLBox.ControlFlow.RowCountTask.Execute()
  nameWithType: RowCountTask.Execute()
- uid: ALE.ETLBox.ControlFlow.RowCountTask.Execute*
  name: Execute
  href: api/ALE.ETLBox.ControlFlow.RowCountTask.html#ALE_ETLBox_ControlFlow_RowCountTask_Execute_
  commentId: Overload:ALE.ETLBox.ControlFlow.RowCountTask.Execute
  isSpec: "True"
  fullName: ALE.ETLBox.ControlFlow.RowCountTask.Execute
  nameWithType: RowCountTask.Execute
- uid: ALE.ETLBox.ControlFlow.RowCountTask.HasCondition
  name: HasCondition
  href: api/ALE.ETLBox.ControlFlow.RowCountTask.html#ALE_ETLBox_ControlFlow_RowCountTask_HasCondition
  commentId: P:ALE.ETLBox.ControlFlow.RowCountTask.HasCondition
  fullName: ALE.ETLBox.ControlFlow.RowCountTask.HasCondition
  nameWithType: RowCountTask.HasCondition
- uid: ALE.ETLBox.ControlFlow.RowCountTask.HasCondition*
  name: HasCondition
  href: api/ALE.ETLBox.ControlFlow.RowCountTask.html#ALE_ETLBox_ControlFlow_RowCountTask_HasCondition_
  commentId: Overload:ALE.ETLBox.ControlFlow.RowCountTask.HasCondition
  isSpec: "True"
  fullName: ALE.ETLBox.ControlFlow.RowCountTask.HasCondition
  nameWithType: RowCountTask.HasCondition
- uid: ALE.ETLBox.ControlFlow.RowCountTask.HasRows
  name: HasRows
  href: api/ALE.ETLBox.ControlFlow.RowCountTask.html#ALE_ETLBox_ControlFlow_RowCountTask_HasRows
  commentId: P:ALE.ETLBox.ControlFlow.RowCountTask.HasRows
  fullName: ALE.ETLBox.ControlFlow.RowCountTask.HasRows
  nameWithType: RowCountTask.HasRows
- uid: ALE.ETLBox.ControlFlow.RowCountTask.HasRows*
  name: HasRows
  href: api/ALE.ETLBox.ControlFlow.RowCountTask.html#ALE_ETLBox_ControlFlow_RowCountTask_HasRows_
  commentId: Overload:ALE.ETLBox.ControlFlow.RowCountTask.HasRows
  isSpec: "True"
  fullName: ALE.ETLBox.ControlFlow.RowCountTask.HasRows
  nameWithType: RowCountTask.HasRows
- uid: ALE.ETLBox.ControlFlow.RowCountTask.NoLock
  name: NoLock
  href: api/ALE.ETLBox.ControlFlow.RowCountTask.html#ALE_ETLBox_ControlFlow_RowCountTask_NoLock
  commentId: P:ALE.ETLBox.ControlFlow.RowCountTask.NoLock
  fullName: ALE.ETLBox.ControlFlow.RowCountTask.NoLock
  nameWithType: RowCountTask.NoLock
- uid: ALE.ETLBox.ControlFlow.RowCountTask.NoLock*
  name: NoLock
  href: api/ALE.ETLBox.ControlFlow.RowCountTask.html#ALE_ETLBox_ControlFlow_RowCountTask_NoLock_
  commentId: Overload:ALE.ETLBox.ControlFlow.RowCountTask.NoLock
  isSpec: "True"
  fullName: ALE.ETLBox.ControlFlow.RowCountTask.NoLock
  nameWithType: RowCountTask.NoLock
- uid: ALE.ETLBox.ControlFlow.RowCountTask.QuickQueryMode
  name: QuickQueryMode
  href: api/ALE.ETLBox.ControlFlow.RowCountTask.html#ALE_ETLBox_ControlFlow_RowCountTask_QuickQueryMode
  commentId: P:ALE.ETLBox.ControlFlow.RowCountTask.QuickQueryMode
  fullName: ALE.ETLBox.ControlFlow.RowCountTask.QuickQueryMode
  nameWithType: RowCountTask.QuickQueryMode
- uid: ALE.ETLBox.ControlFlow.RowCountTask.QuickQueryMode*
  name: QuickQueryMode
  href: api/ALE.ETLBox.ControlFlow.RowCountTask.html#ALE_ETLBox_ControlFlow_RowCountTask_QuickQueryMode_
  commentId: Overload:ALE.ETLBox.ControlFlow.RowCountTask.QuickQueryMode
  isSpec: "True"
  fullName: ALE.ETLBox.ControlFlow.RowCountTask.QuickQueryMode
  nameWithType: RowCountTask.QuickQueryMode
- uid: ALE.ETLBox.ControlFlow.RowCountTask.Rows
  name: Rows
  href: api/ALE.ETLBox.ControlFlow.RowCountTask.html#ALE_ETLBox_ControlFlow_RowCountTask_Rows
  commentId: P:ALE.ETLBox.ControlFlow.RowCountTask.Rows
  fullName: ALE.ETLBox.ControlFlow.RowCountTask.Rows
  nameWithType: RowCountTask.Rows
- uid: ALE.ETLBox.ControlFlow.RowCountTask.Rows*
  name: Rows
  href: api/ALE.ETLBox.ControlFlow.RowCountTask.html#ALE_ETLBox_ControlFlow_RowCountTask_Rows_
  commentId: Overload:ALE.ETLBox.ControlFlow.RowCountTask.Rows
  isSpec: "True"
  fullName: ALE.ETLBox.ControlFlow.RowCountTask.Rows
  nameWithType: RowCountTask.Rows
- uid: ALE.ETLBox.ControlFlow.RowCountTask.Sql
  name: Sql
  href: api/ALE.ETLBox.ControlFlow.RowCountTask.html#ALE_ETLBox_ControlFlow_RowCountTask_Sql
  commentId: P:ALE.ETLBox.ControlFlow.RowCountTask.Sql
  fullName: ALE.ETLBox.ControlFlow.RowCountTask.Sql
  nameWithType: RowCountTask.Sql
- uid: ALE.ETLBox.ControlFlow.RowCountTask.Sql*
  name: Sql
  href: api/ALE.ETLBox.ControlFlow.RowCountTask.html#ALE_ETLBox_ControlFlow_RowCountTask_Sql_
  commentId: Overload:ALE.ETLBox.ControlFlow.RowCountTask.Sql
  isSpec: "True"
  fullName: ALE.ETLBox.ControlFlow.RowCountTask.Sql
  nameWithType: RowCountTask.Sql
- uid: ALE.ETLBox.ControlFlow.RowCountTask.TableName
  name: TableName
  href: api/ALE.ETLBox.ControlFlow.RowCountTask.html#ALE_ETLBox_ControlFlow_RowCountTask_TableName
  commentId: P:ALE.ETLBox.ControlFlow.RowCountTask.TableName
  fullName: ALE.ETLBox.ControlFlow.RowCountTask.TableName
  nameWithType: RowCountTask.TableName
- uid: ALE.ETLBox.ControlFlow.RowCountTask.TableName*
  name: TableName
  href: api/ALE.ETLBox.ControlFlow.RowCountTask.html#ALE_ETLBox_ControlFlow_RowCountTask_TableName_
  commentId: Overload:ALE.ETLBox.ControlFlow.RowCountTask.TableName
  isSpec: "True"
  fullName: ALE.ETLBox.ControlFlow.RowCountTask.TableName
  nameWithType: RowCountTask.TableName
- uid: ALE.ETLBox.ControlFlow.RowCountTask.TaskName
  name: TaskName
  href: api/ALE.ETLBox.ControlFlow.RowCountTask.html#ALE_ETLBox_ControlFlow_RowCountTask_TaskName
  commentId: P:ALE.ETLBox.ControlFlow.RowCountTask.TaskName
  fullName: ALE.ETLBox.ControlFlow.RowCountTask.TaskName
  nameWithType: RowCountTask.TaskName
- uid: ALE.ETLBox.ControlFlow.RowCountTask.TaskName*
  name: TaskName
  href: api/ALE.ETLBox.ControlFlow.RowCountTask.html#ALE_ETLBox_ControlFlow_RowCountTask_TaskName_
  commentId: Overload:ALE.ETLBox.ControlFlow.RowCountTask.TaskName
  isSpec: "True"
  fullName: ALE.ETLBox.ControlFlow.RowCountTask.TaskName
  nameWithType: RowCountTask.TaskName
- uid: ALE.ETLBox.ControlFlow.RowCountTask.TN
  name: TN
  href: api/ALE.ETLBox.ControlFlow.RowCountTask.html#ALE_ETLBox_ControlFlow_RowCountTask_TN
  commentId: P:ALE.ETLBox.ControlFlow.RowCountTask.TN
  fullName: ALE.ETLBox.ControlFlow.RowCountTask.TN
  nameWithType: RowCountTask.TN
- uid: ALE.ETLBox.ControlFlow.RowCountTask.TN*
  name: TN
  href: api/ALE.ETLBox.ControlFlow.RowCountTask.html#ALE_ETLBox_ControlFlow_RowCountTask_TN_
  commentId: Overload:ALE.ETLBox.ControlFlow.RowCountTask.TN
  isSpec: "True"
  fullName: ALE.ETLBox.ControlFlow.RowCountTask.TN
  nameWithType: RowCountTask.TN
- uid: ALE.ETLBox.ControlFlow.Sequence
  name: Sequence
  href: api/ALE.ETLBox.ControlFlow.Sequence.html
  commentId: T:ALE.ETLBox.ControlFlow.Sequence
  fullName: ALE.ETLBox.ControlFlow.Sequence
  nameWithType: Sequence
- uid: ALE.ETLBox.ControlFlow.Sequence.#ctor
  name: Sequence()
  href: api/ALE.ETLBox.ControlFlow.Sequence.html#ALE_ETLBox_ControlFlow_Sequence__ctor
  commentId: M:ALE.ETLBox.ControlFlow.Sequence.#ctor
  fullName: ALE.ETLBox.ControlFlow.Sequence.Sequence()
  nameWithType: Sequence.Sequence()
- uid: ALE.ETLBox.ControlFlow.Sequence.#ctor(System.String)
  name: Sequence(String)
  href: api/ALE.ETLBox.ControlFlow.Sequence.html#ALE_ETLBox_ControlFlow_Sequence__ctor_System_String_
  commentId: M:ALE.ETLBox.ControlFlow.Sequence.#ctor(System.String)
  fullName: ALE.ETLBox.ControlFlow.Sequence.Sequence(System.String)
  nameWithType: Sequence.Sequence(String)
- uid: ALE.ETLBox.ControlFlow.Sequence.#ctor(System.String,System.Action)
  name: Sequence(String, Action)
  href: api/ALE.ETLBox.ControlFlow.Sequence.html#ALE_ETLBox_ControlFlow_Sequence__ctor_System_String_System_Action_
  commentId: M:ALE.ETLBox.ControlFlow.Sequence.#ctor(System.String,System.Action)
  fullName: ALE.ETLBox.ControlFlow.Sequence.Sequence(System.String, System.Action)
  nameWithType: Sequence.Sequence(String, Action)
- uid: ALE.ETLBox.ControlFlow.Sequence.#ctor*
  name: Sequence
  href: api/ALE.ETLBox.ControlFlow.Sequence.html#ALE_ETLBox_ControlFlow_Sequence__ctor_
  commentId: Overload:ALE.ETLBox.ControlFlow.Sequence.#ctor
  isSpec: "True"
  fullName: ALE.ETLBox.ControlFlow.Sequence.Sequence
  nameWithType: Sequence.Sequence
- uid: ALE.ETLBox.ControlFlow.Sequence.Execute
  name: Execute()
  href: api/ALE.ETLBox.ControlFlow.Sequence.html#ALE_ETLBox_ControlFlow_Sequence_Execute
  commentId: M:ALE.ETLBox.ControlFlow.Sequence.Execute
  fullName: ALE.ETLBox.ControlFlow.Sequence.Execute()
  nameWithType: Sequence.Execute()
- uid: ALE.ETLBox.ControlFlow.Sequence.Execute(System.String,System.Action)
  name: Execute(String, Action)
  href: api/ALE.ETLBox.ControlFlow.Sequence.html#ALE_ETLBox_ControlFlow_Sequence_Execute_System_String_System_Action_
  commentId: M:ALE.ETLBox.ControlFlow.Sequence.Execute(System.String,System.Action)
  fullName: ALE.ETLBox.ControlFlow.Sequence.Execute(System.String, System.Action)
  nameWithType: Sequence.Execute(String, Action)
- uid: ALE.ETLBox.ControlFlow.Sequence.Execute*
  name: Execute
  href: api/ALE.ETLBox.ControlFlow.Sequence.html#ALE_ETLBox_ControlFlow_Sequence_Execute_
  commentId: Overload:ALE.ETLBox.ControlFlow.Sequence.Execute
  isSpec: "True"
  fullName: ALE.ETLBox.ControlFlow.Sequence.Execute
  nameWithType: Sequence.Execute
- uid: ALE.ETLBox.ControlFlow.Sequence.TaskName
  name: TaskName
  href: api/ALE.ETLBox.ControlFlow.Sequence.html#ALE_ETLBox_ControlFlow_Sequence_TaskName
  commentId: P:ALE.ETLBox.ControlFlow.Sequence.TaskName
  fullName: ALE.ETLBox.ControlFlow.Sequence.TaskName
  nameWithType: Sequence.TaskName
- uid: ALE.ETLBox.ControlFlow.Sequence.TaskName*
  name: TaskName
  href: api/ALE.ETLBox.ControlFlow.Sequence.html#ALE_ETLBox_ControlFlow_Sequence_TaskName_
  commentId: Overload:ALE.ETLBox.ControlFlow.Sequence.TaskName
  isSpec: "True"
  fullName: ALE.ETLBox.ControlFlow.Sequence.TaskName
  nameWithType: Sequence.TaskName
- uid: ALE.ETLBox.ControlFlow.Sequence.Tasks
  name: Tasks
  href: api/ALE.ETLBox.ControlFlow.Sequence.html#ALE_ETLBox_ControlFlow_Sequence_Tasks
  commentId: P:ALE.ETLBox.ControlFlow.Sequence.Tasks
  fullName: ALE.ETLBox.ControlFlow.Sequence.Tasks
  nameWithType: Sequence.Tasks
- uid: ALE.ETLBox.ControlFlow.Sequence.Tasks*
  name: Tasks
  href: api/ALE.ETLBox.ControlFlow.Sequence.html#ALE_ETLBox_ControlFlow_Sequence_Tasks_
  commentId: Overload:ALE.ETLBox.ControlFlow.Sequence.Tasks
  isSpec: "True"
  fullName: ALE.ETLBox.ControlFlow.Sequence.Tasks
  nameWithType: Sequence.Tasks
- uid: ALE.ETLBox.ControlFlow.Sequence`1
  name: Sequence<T>
  href: api/ALE.ETLBox.ControlFlow.Sequence-1.html
  commentId: T:ALE.ETLBox.ControlFlow.Sequence`1
  name.vb: Sequence(Of T)
  fullName: ALE.ETLBox.ControlFlow.Sequence<T>
  fullName.vb: ALE.ETLBox.ControlFlow.Sequence(Of T)
  nameWithType: Sequence<T>
  nameWithType.vb: Sequence(Of T)
- uid: ALE.ETLBox.ControlFlow.Sequence`1.#ctor
  name: Sequence()
  href: api/ALE.ETLBox.ControlFlow.Sequence-1.html#ALE_ETLBox_ControlFlow_Sequence_1__ctor
  commentId: M:ALE.ETLBox.ControlFlow.Sequence`1.#ctor
  fullName: ALE.ETLBox.ControlFlow.Sequence<T>.Sequence()
  fullName.vb: ALE.ETLBox.ControlFlow.Sequence(Of T).Sequence()
  nameWithType: Sequence<T>.Sequence()
  nameWithType.vb: Sequence(Of T).Sequence()
- uid: ALE.ETLBox.ControlFlow.Sequence`1.#ctor(System.String)
  name: Sequence(String)
  href: api/ALE.ETLBox.ControlFlow.Sequence-1.html#ALE_ETLBox_ControlFlow_Sequence_1__ctor_System_String_
  commentId: M:ALE.ETLBox.ControlFlow.Sequence`1.#ctor(System.String)
  fullName: ALE.ETLBox.ControlFlow.Sequence<T>.Sequence(System.String)
  fullName.vb: ALE.ETLBox.ControlFlow.Sequence(Of T).Sequence(System.String)
  nameWithType: Sequence<T>.Sequence(String)
  nameWithType.vb: Sequence(Of T).Sequence(String)
- uid: ALE.ETLBox.ControlFlow.Sequence`1.#ctor(System.String,System.Action{`0},`0)
  name: Sequence(String, Action<T>, T)
  href: api/ALE.ETLBox.ControlFlow.Sequence-1.html#ALE_ETLBox_ControlFlow_Sequence_1__ctor_System_String_System_Action__0___0_
  commentId: M:ALE.ETLBox.ControlFlow.Sequence`1.#ctor(System.String,System.Action{`0},`0)
  name.vb: Sequence(String, Action(Of T), T)
  fullName: ALE.ETLBox.ControlFlow.Sequence<T>.Sequence(System.String, System.Action<T>, T)
  fullName.vb: ALE.ETLBox.ControlFlow.Sequence(Of T).Sequence(System.String, System.Action(Of T), T)
  nameWithType: Sequence<T>.Sequence(String, Action<T>, T)
  nameWithType.vb: Sequence(Of T).Sequence(String, Action(Of T), T)
- uid: ALE.ETLBox.ControlFlow.Sequence`1.#ctor*
  name: Sequence
  href: api/ALE.ETLBox.ControlFlow.Sequence-1.html#ALE_ETLBox_ControlFlow_Sequence_1__ctor_
  commentId: Overload:ALE.ETLBox.ControlFlow.Sequence`1.#ctor
  isSpec: "True"
  fullName: ALE.ETLBox.ControlFlow.Sequence<T>.Sequence
  fullName.vb: ALE.ETLBox.ControlFlow.Sequence(Of T).Sequence
  nameWithType: Sequence<T>.Sequence
  nameWithType.vb: Sequence(Of T).Sequence
- uid: ALE.ETLBox.ControlFlow.Sequence`1.Execute
  name: Execute()
  href: api/ALE.ETLBox.ControlFlow.Sequence-1.html#ALE_ETLBox_ControlFlow_Sequence_1_Execute
  commentId: M:ALE.ETLBox.ControlFlow.Sequence`1.Execute
  fullName: ALE.ETLBox.ControlFlow.Sequence<T>.Execute()
  fullName.vb: ALE.ETLBox.ControlFlow.Sequence(Of T).Execute()
  nameWithType: Sequence<T>.Execute()
  nameWithType.vb: Sequence(Of T).Execute()
- uid: ALE.ETLBox.ControlFlow.Sequence`1.Execute(System.String,System.Action{`0},`0)
  name: Execute(String, Action<T>, T)
  href: api/ALE.ETLBox.ControlFlow.Sequence-1.html#ALE_ETLBox_ControlFlow_Sequence_1_Execute_System_String_System_Action__0___0_
  commentId: M:ALE.ETLBox.ControlFlow.Sequence`1.Execute(System.String,System.Action{`0},`0)
  name.vb: Execute(String, Action(Of T), T)
  fullName: ALE.ETLBox.ControlFlow.Sequence<T>.Execute(System.String, System.Action<T>, T)
  fullName.vb: ALE.ETLBox.ControlFlow.Sequence(Of T).Execute(System.String, System.Action(Of T), T)
  nameWithType: Sequence<T>.Execute(String, Action<T>, T)
  nameWithType.vb: Sequence(Of T).Execute(String, Action(Of T), T)
- uid: ALE.ETLBox.ControlFlow.Sequence`1.Execute*
  name: Execute
  href: api/ALE.ETLBox.ControlFlow.Sequence-1.html#ALE_ETLBox_ControlFlow_Sequence_1_Execute_
  commentId: Overload:ALE.ETLBox.ControlFlow.Sequence`1.Execute
  isSpec: "True"
  fullName: ALE.ETLBox.ControlFlow.Sequence<T>.Execute
  fullName.vb: ALE.ETLBox.ControlFlow.Sequence(Of T).Execute
  nameWithType: Sequence<T>.Execute
  nameWithType.vb: Sequence(Of T).Execute
- uid: ALE.ETLBox.ControlFlow.Sequence`1.Parent
  name: Parent
  href: api/ALE.ETLBox.ControlFlow.Sequence-1.html#ALE_ETLBox_ControlFlow_Sequence_1_Parent
  commentId: P:ALE.ETLBox.ControlFlow.Sequence`1.Parent
  fullName: ALE.ETLBox.ControlFlow.Sequence<T>.Parent
  fullName.vb: ALE.ETLBox.ControlFlow.Sequence(Of T).Parent
  nameWithType: Sequence<T>.Parent
  nameWithType.vb: Sequence(Of T).Parent
- uid: ALE.ETLBox.ControlFlow.Sequence`1.Parent*
  name: Parent
  href: api/ALE.ETLBox.ControlFlow.Sequence-1.html#ALE_ETLBox_ControlFlow_Sequence_1_Parent_
  commentId: Overload:ALE.ETLBox.ControlFlow.Sequence`1.Parent
  isSpec: "True"
  fullName: ALE.ETLBox.ControlFlow.Sequence<T>.Parent
  fullName.vb: ALE.ETLBox.ControlFlow.Sequence(Of T).Parent
  nameWithType: Sequence<T>.Parent
  nameWithType.vb: Sequence(Of T).Parent
- uid: ALE.ETLBox.ControlFlow.Sequence`1.Tasks
  name: Tasks
  href: api/ALE.ETLBox.ControlFlow.Sequence-1.html#ALE_ETLBox_ControlFlow_Sequence_1_Tasks
  commentId: P:ALE.ETLBox.ControlFlow.Sequence`1.Tasks
  fullName: ALE.ETLBox.ControlFlow.Sequence<T>.Tasks
  fullName.vb: ALE.ETLBox.ControlFlow.Sequence(Of T).Tasks
  nameWithType: Sequence<T>.Tasks
  nameWithType.vb: Sequence(Of T).Tasks
- uid: ALE.ETLBox.ControlFlow.Sequence`1.Tasks*
  name: Tasks
  href: api/ALE.ETLBox.ControlFlow.Sequence-1.html#ALE_ETLBox_ControlFlow_Sequence_1_Tasks_
  commentId: Overload:ALE.ETLBox.ControlFlow.Sequence`1.Tasks
  isSpec: "True"
  fullName: ALE.ETLBox.ControlFlow.Sequence<T>.Tasks
  fullName.vb: ALE.ETLBox.ControlFlow.Sequence(Of T).Tasks
  nameWithType: Sequence<T>.Tasks
  nameWithType.vb: Sequence(Of T).Tasks
- uid: ALE.ETLBox.ControlFlow.SqlServer
  name: ALE.ETLBox.ControlFlow.SqlServer
  href: api/ALE.ETLBox.ControlFlow.SqlServer.html
  commentId: N:ALE.ETLBox.ControlFlow.SqlServer
  fullName: ALE.ETLBox.ControlFlow.SqlServer
  nameWithType: ALE.ETLBox.ControlFlow.SqlServer
- uid: ALE.ETLBox.ControlFlow.SqlServer.AddFileGroupTask
  name: AddFileGroupTask
  href: api/ALE.ETLBox.ControlFlow.SqlServer.AddFileGroupTask.html
  commentId: T:ALE.ETLBox.ControlFlow.SqlServer.AddFileGroupTask
  fullName: ALE.ETLBox.ControlFlow.SqlServer.AddFileGroupTask
  nameWithType: AddFileGroupTask
- uid: ALE.ETLBox.ControlFlow.SqlServer.AddFileGroupTask.#ctor
  name: AddFileGroupTask()
  href: api/ALE.ETLBox.ControlFlow.SqlServer.AddFileGroupTask.html#ALE_ETLBox_ControlFlow_SqlServer_AddFileGroupTask__ctor
  commentId: M:ALE.ETLBox.ControlFlow.SqlServer.AddFileGroupTask.#ctor
  fullName: ALE.ETLBox.ControlFlow.SqlServer.AddFileGroupTask.AddFileGroupTask()
  nameWithType: AddFileGroupTask.AddFileGroupTask()
- uid: ALE.ETLBox.ControlFlow.SqlServer.AddFileGroupTask.#ctor(System.String,System.String)
  name: AddFileGroupTask(String, String)
  href: api/ALE.ETLBox.ControlFlow.SqlServer.AddFileGroupTask.html#ALE_ETLBox_ControlFlow_SqlServer_AddFileGroupTask__ctor_System_String_System_String_
  commentId: M:ALE.ETLBox.ControlFlow.SqlServer.AddFileGroupTask.#ctor(System.String,System.String)
  fullName: ALE.ETLBox.ControlFlow.SqlServer.AddFileGroupTask.AddFileGroupTask(System.String, System.String)
  nameWithType: AddFileGroupTask.AddFileGroupTask(String, String)
- uid: ALE.ETLBox.ControlFlow.SqlServer.AddFileGroupTask.#ctor(System.String,System.String,System.String,System.String,System.Boolean)
  name: AddFileGroupTask(String, String, String, String, Boolean)
  href: api/ALE.ETLBox.ControlFlow.SqlServer.AddFileGroupTask.html#ALE_ETLBox_ControlFlow_SqlServer_AddFileGroupTask__ctor_System_String_System_String_System_String_System_String_System_Boolean_
  commentId: M:ALE.ETLBox.ControlFlow.SqlServer.AddFileGroupTask.#ctor(System.String,System.String,System.String,System.String,System.Boolean)
  fullName: ALE.ETLBox.ControlFlow.SqlServer.AddFileGroupTask.AddFileGroupTask(System.String, System.String, System.String, System.String, System.Boolean)
  nameWithType: AddFileGroupTask.AddFileGroupTask(String, String, String, String, Boolean)
- uid: ALE.ETLBox.ControlFlow.SqlServer.AddFileGroupTask.#ctor*
  name: AddFileGroupTask
  href: api/ALE.ETLBox.ControlFlow.SqlServer.AddFileGroupTask.html#ALE_ETLBox_ControlFlow_SqlServer_AddFileGroupTask__ctor_
  commentId: Overload:ALE.ETLBox.ControlFlow.SqlServer.AddFileGroupTask.#ctor
  isSpec: "True"
  fullName: ALE.ETLBox.ControlFlow.SqlServer.AddFileGroupTask.AddFileGroupTask
  nameWithType: AddFileGroupTask.AddFileGroupTask
- uid: ALE.ETLBox.ControlFlow.SqlServer.AddFileGroupTask.AddFileGroup(ALE.ETLBox.ConnectionManager.IConnectionManager,System.String,System.String)
  name: AddFileGroup(IConnectionManager, String, String)
  href: api/ALE.ETLBox.ControlFlow.SqlServer.AddFileGroupTask.html#ALE_ETLBox_ControlFlow_SqlServer_AddFileGroupTask_AddFileGroup_ALE_ETLBox_ConnectionManager_IConnectionManager_System_String_System_String_
  commentId: M:ALE.ETLBox.ControlFlow.SqlServer.AddFileGroupTask.AddFileGroup(ALE.ETLBox.ConnectionManager.IConnectionManager,System.String,System.String)
  fullName: ALE.ETLBox.ControlFlow.SqlServer.AddFileGroupTask.AddFileGroup(ALE.ETLBox.ConnectionManager.IConnectionManager, System.String, System.String)
  nameWithType: AddFileGroupTask.AddFileGroup(IConnectionManager, String, String)
- uid: ALE.ETLBox.ControlFlow.SqlServer.AddFileGroupTask.AddFileGroup(ALE.ETLBox.ConnectionManager.IConnectionManager,System.String,System.String,System.String,System.String,System.Boolean)
  name: AddFileGroup(IConnectionManager, String, String, String, String, Boolean)
  href: api/ALE.ETLBox.ControlFlow.SqlServer.AddFileGroupTask.html#ALE_ETLBox_ControlFlow_SqlServer_AddFileGroupTask_AddFileGroup_ALE_ETLBox_ConnectionManager_IConnectionManager_System_String_System_String_System_String_System_String_System_Boolean_
  commentId: M:ALE.ETLBox.ControlFlow.SqlServer.AddFileGroupTask.AddFileGroup(ALE.ETLBox.ConnectionManager.IConnectionManager,System.String,System.String,System.String,System.String,System.Boolean)
  fullName: ALE.ETLBox.ControlFlow.SqlServer.AddFileGroupTask.AddFileGroup(ALE.ETLBox.ConnectionManager.IConnectionManager, System.String, System.String, System.String, System.String, System.Boolean)
  nameWithType: AddFileGroupTask.AddFileGroup(IConnectionManager, String, String, String, String, Boolean)
- uid: ALE.ETLBox.ControlFlow.SqlServer.AddFileGroupTask.AddFileGroup(System.String,System.String)
  name: AddFileGroup(String, String)
  href: api/ALE.ETLBox.ControlFlow.SqlServer.AddFileGroupTask.html#ALE_ETLBox_ControlFlow_SqlServer_AddFileGroupTask_AddFileGroup_System_String_System_String_
  commentId: M:ALE.ETLBox.ControlFlow.SqlServer.AddFileGroupTask.AddFileGroup(System.String,System.String)
  fullName: ALE.ETLBox.ControlFlow.SqlServer.AddFileGroupTask.AddFileGroup(System.String, System.String)
  nameWithType: AddFileGroupTask.AddFileGroup(String, String)
- uid: ALE.ETLBox.ControlFlow.SqlServer.AddFileGroupTask.AddFileGroup(System.String,System.String,System.String,System.String,System.Boolean)
  name: AddFileGroup(String, String, String, String, Boolean)
  href: api/ALE.ETLBox.ControlFlow.SqlServer.AddFileGroupTask.html#ALE_ETLBox_ControlFlow_SqlServer_AddFileGroupTask_AddFileGroup_System_String_System_String_System_String_System_String_System_Boolean_
  commentId: M:ALE.ETLBox.ControlFlow.SqlServer.AddFileGroupTask.AddFileGroup(System.String,System.String,System.String,System.String,System.Boolean)
  fullName: ALE.ETLBox.ControlFlow.SqlServer.AddFileGroupTask.AddFileGroup(System.String, System.String, System.String, System.String, System.Boolean)
  nameWithType: AddFileGroupTask.AddFileGroup(String, String, String, String, Boolean)
- uid: ALE.ETLBox.ControlFlow.SqlServer.AddFileGroupTask.AddFileGroup*
  name: AddFileGroup
  href: api/ALE.ETLBox.ControlFlow.SqlServer.AddFileGroupTask.html#ALE_ETLBox_ControlFlow_SqlServer_AddFileGroupTask_AddFileGroup_
  commentId: Overload:ALE.ETLBox.ControlFlow.SqlServer.AddFileGroupTask.AddFileGroup
  isSpec: "True"
  fullName: ALE.ETLBox.ControlFlow.SqlServer.AddFileGroupTask.AddFileGroup
  nameWithType: AddFileGroupTask.AddFileGroup
- uid: ALE.ETLBox.ControlFlow.SqlServer.AddFileGroupTask.DatabaseName
  name: DatabaseName
  href: api/ALE.ETLBox.ControlFlow.SqlServer.AddFileGroupTask.html#ALE_ETLBox_ControlFlow_SqlServer_AddFileGroupTask_DatabaseName
  commentId: P:ALE.ETLBox.ControlFlow.SqlServer.AddFileGroupTask.DatabaseName
  fullName: ALE.ETLBox.ControlFlow.SqlServer.AddFileGroupTask.DatabaseName
  nameWithType: AddFileGroupTask.DatabaseName
- uid: ALE.ETLBox.ControlFlow.SqlServer.AddFileGroupTask.DatabaseName*
  name: DatabaseName
  href: api/ALE.ETLBox.ControlFlow.SqlServer.AddFileGroupTask.html#ALE_ETLBox_ControlFlow_SqlServer_AddFileGroupTask_DatabaseName_
  commentId: Overload:ALE.ETLBox.ControlFlow.SqlServer.AddFileGroupTask.DatabaseName
  isSpec: "True"
  fullName: ALE.ETLBox.ControlFlow.SqlServer.AddFileGroupTask.DatabaseName
  nameWithType: AddFileGroupTask.DatabaseName
- uid: ALE.ETLBox.ControlFlow.SqlServer.AddFileGroupTask.Execute
  name: Execute()
  href: api/ALE.ETLBox.ControlFlow.SqlServer.AddFileGroupTask.html#ALE_ETLBox_ControlFlow_SqlServer_AddFileGroupTask_Execute
  commentId: M:ALE.ETLBox.ControlFlow.SqlServer.AddFileGroupTask.Execute
  fullName: ALE.ETLBox.ControlFlow.SqlServer.AddFileGroupTask.Execute()
  nameWithType: AddFileGroupTask.Execute()
- uid: ALE.ETLBox.ControlFlow.SqlServer.AddFileGroupTask.Execute*
  name: Execute
  href: api/ALE.ETLBox.ControlFlow.SqlServer.AddFileGroupTask.html#ALE_ETLBox_ControlFlow_SqlServer_AddFileGroupTask_Execute_
  commentId: Overload:ALE.ETLBox.ControlFlow.SqlServer.AddFileGroupTask.Execute
  isSpec: "True"
  fullName: ALE.ETLBox.ControlFlow.SqlServer.AddFileGroupTask.Execute
  nameWithType: AddFileGroupTask.Execute
- uid: ALE.ETLBox.ControlFlow.SqlServer.AddFileGroupTask.FileGroupName
  name: FileGroupName
  href: api/ALE.ETLBox.ControlFlow.SqlServer.AddFileGroupTask.html#ALE_ETLBox_ControlFlow_SqlServer_AddFileGroupTask_FileGroupName
  commentId: P:ALE.ETLBox.ControlFlow.SqlServer.AddFileGroupTask.FileGroupName
  fullName: ALE.ETLBox.ControlFlow.SqlServer.AddFileGroupTask.FileGroupName
  nameWithType: AddFileGroupTask.FileGroupName
- uid: ALE.ETLBox.ControlFlow.SqlServer.AddFileGroupTask.FileGroupName*
  name: FileGroupName
  href: api/ALE.ETLBox.ControlFlow.SqlServer.AddFileGroupTask.html#ALE_ETLBox_ControlFlow_SqlServer_AddFileGroupTask_FileGroupName_
  commentId: Overload:ALE.ETLBox.ControlFlow.SqlServer.AddFileGroupTask.FileGroupName
  isSpec: "True"
  fullName: ALE.ETLBox.ControlFlow.SqlServer.AddFileGroupTask.FileGroupName
  nameWithType: AddFileGroupTask.FileGroupName
- uid: ALE.ETLBox.ControlFlow.SqlServer.AddFileGroupTask.Filegrowth
  name: Filegrowth
  href: api/ALE.ETLBox.ControlFlow.SqlServer.AddFileGroupTask.html#ALE_ETLBox_ControlFlow_SqlServer_AddFileGroupTask_Filegrowth
  commentId: P:ALE.ETLBox.ControlFlow.SqlServer.AddFileGroupTask.Filegrowth
  fullName: ALE.ETLBox.ControlFlow.SqlServer.AddFileGroupTask.Filegrowth
  nameWithType: AddFileGroupTask.Filegrowth
- uid: ALE.ETLBox.ControlFlow.SqlServer.AddFileGroupTask.Filegrowth*
  name: Filegrowth
  href: api/ALE.ETLBox.ControlFlow.SqlServer.AddFileGroupTask.html#ALE_ETLBox_ControlFlow_SqlServer_AddFileGroupTask_Filegrowth_
  commentId: Overload:ALE.ETLBox.ControlFlow.SqlServer.AddFileGroupTask.Filegrowth
  isSpec: "True"
  fullName: ALE.ETLBox.ControlFlow.SqlServer.AddFileGroupTask.Filegrowth
  nameWithType: AddFileGroupTask.Filegrowth
- uid: ALE.ETLBox.ControlFlow.SqlServer.AddFileGroupTask.IsDefaultFileGroup
  name: IsDefaultFileGroup
  href: api/ALE.ETLBox.ControlFlow.SqlServer.AddFileGroupTask.html#ALE_ETLBox_ControlFlow_SqlServer_AddFileGroupTask_IsDefaultFileGroup
  commentId: P:ALE.ETLBox.ControlFlow.SqlServer.AddFileGroupTask.IsDefaultFileGroup
  fullName: ALE.ETLBox.ControlFlow.SqlServer.AddFileGroupTask.IsDefaultFileGroup
  nameWithType: AddFileGroupTask.IsDefaultFileGroup
- uid: ALE.ETLBox.ControlFlow.SqlServer.AddFileGroupTask.IsDefaultFileGroup*
  name: IsDefaultFileGroup
  href: api/ALE.ETLBox.ControlFlow.SqlServer.AddFileGroupTask.html#ALE_ETLBox_ControlFlow_SqlServer_AddFileGroupTask_IsDefaultFileGroup_
  commentId: Overload:ALE.ETLBox.ControlFlow.SqlServer.AddFileGroupTask.IsDefaultFileGroup
  isSpec: "True"
  fullName: ALE.ETLBox.ControlFlow.SqlServer.AddFileGroupTask.IsDefaultFileGroup
  nameWithType: AddFileGroupTask.IsDefaultFileGroup
- uid: ALE.ETLBox.ControlFlow.SqlServer.AddFileGroupTask.Size
  name: Size
  href: api/ALE.ETLBox.ControlFlow.SqlServer.AddFileGroupTask.html#ALE_ETLBox_ControlFlow_SqlServer_AddFileGroupTask_Size
  commentId: P:ALE.ETLBox.ControlFlow.SqlServer.AddFileGroupTask.Size
  fullName: ALE.ETLBox.ControlFlow.SqlServer.AddFileGroupTask.Size
  nameWithType: AddFileGroupTask.Size
- uid: ALE.ETLBox.ControlFlow.SqlServer.AddFileGroupTask.Size*
  name: Size
  href: api/ALE.ETLBox.ControlFlow.SqlServer.AddFileGroupTask.html#ALE_ETLBox_ControlFlow_SqlServer_AddFileGroupTask_Size_
  commentId: Overload:ALE.ETLBox.ControlFlow.SqlServer.AddFileGroupTask.Size
  isSpec: "True"
  fullName: ALE.ETLBox.ControlFlow.SqlServer.AddFileGroupTask.Size
  nameWithType: AddFileGroupTask.Size
- uid: ALE.ETLBox.ControlFlow.SqlServer.AddFileGroupTask.Sql
  name: Sql
  href: api/ALE.ETLBox.ControlFlow.SqlServer.AddFileGroupTask.html#ALE_ETLBox_ControlFlow_SqlServer_AddFileGroupTask_Sql
  commentId: P:ALE.ETLBox.ControlFlow.SqlServer.AddFileGroupTask.Sql
  fullName: ALE.ETLBox.ControlFlow.SqlServer.AddFileGroupTask.Sql
  nameWithType: AddFileGroupTask.Sql
- uid: ALE.ETLBox.ControlFlow.SqlServer.AddFileGroupTask.Sql*
  name: Sql
  href: api/ALE.ETLBox.ControlFlow.SqlServer.AddFileGroupTask.html#ALE_ETLBox_ControlFlow_SqlServer_AddFileGroupTask_Sql_
  commentId: Overload:ALE.ETLBox.ControlFlow.SqlServer.AddFileGroupTask.Sql
  isSpec: "True"
  fullName: ALE.ETLBox.ControlFlow.SqlServer.AddFileGroupTask.Sql
  nameWithType: AddFileGroupTask.Sql
- uid: ALE.ETLBox.ControlFlow.SqlServer.AddFileGroupTask.TaskName
  name: TaskName
  href: api/ALE.ETLBox.ControlFlow.SqlServer.AddFileGroupTask.html#ALE_ETLBox_ControlFlow_SqlServer_AddFileGroupTask_TaskName
  commentId: P:ALE.ETLBox.ControlFlow.SqlServer.AddFileGroupTask.TaskName
  fullName: ALE.ETLBox.ControlFlow.SqlServer.AddFileGroupTask.TaskName
  nameWithType: AddFileGroupTask.TaskName
- uid: ALE.ETLBox.ControlFlow.SqlServer.AddFileGroupTask.TaskName*
  name: TaskName
  href: api/ALE.ETLBox.ControlFlow.SqlServer.AddFileGroupTask.html#ALE_ETLBox_ControlFlow_SqlServer_AddFileGroupTask_TaskName_
  commentId: Overload:ALE.ETLBox.ControlFlow.SqlServer.AddFileGroupTask.TaskName
  isSpec: "True"
  fullName: ALE.ETLBox.ControlFlow.SqlServer.AddFileGroupTask.TaskName
  nameWithType: AddFileGroupTask.TaskName
- uid: ALE.ETLBox.ControlFlow.SqlServer.CalculateDatabaseHashTask
  name: CalculateDatabaseHashTask
  href: api/ALE.ETLBox.ControlFlow.SqlServer.CalculateDatabaseHashTask.html
  commentId: T:ALE.ETLBox.ControlFlow.SqlServer.CalculateDatabaseHashTask
  fullName: ALE.ETLBox.ControlFlow.SqlServer.CalculateDatabaseHashTask
  nameWithType: CalculateDatabaseHashTask
- uid: ALE.ETLBox.ControlFlow.SqlServer.CalculateDatabaseHashTask.#ctor
  name: CalculateDatabaseHashTask()
  href: api/ALE.ETLBox.ControlFlow.SqlServer.CalculateDatabaseHashTask.html#ALE_ETLBox_ControlFlow_SqlServer_CalculateDatabaseHashTask__ctor
  commentId: M:ALE.ETLBox.ControlFlow.SqlServer.CalculateDatabaseHashTask.#ctor
  fullName: ALE.ETLBox.ControlFlow.SqlServer.CalculateDatabaseHashTask.CalculateDatabaseHashTask()
  nameWithType: CalculateDatabaseHashTask.CalculateDatabaseHashTask()
- uid: ALE.ETLBox.ControlFlow.SqlServer.CalculateDatabaseHashTask.#ctor(System.Collections.Generic.List{System.String})
  name: CalculateDatabaseHashTask(List<String>)
  href: api/ALE.ETLBox.ControlFlow.SqlServer.CalculateDatabaseHashTask.html#ALE_ETLBox_ControlFlow_SqlServer_CalculateDatabaseHashTask__ctor_System_Collections_Generic_List_System_String__
  commentId: M:ALE.ETLBox.ControlFlow.SqlServer.CalculateDatabaseHashTask.#ctor(System.Collections.Generic.List{System.String})
  name.vb: CalculateDatabaseHashTask(List(Of String))
  fullName: ALE.ETLBox.ControlFlow.SqlServer.CalculateDatabaseHashTask.CalculateDatabaseHashTask(System.Collections.Generic.List<System.String>)
  fullName.vb: ALE.ETLBox.ControlFlow.SqlServer.CalculateDatabaseHashTask.CalculateDatabaseHashTask(System.Collections.Generic.List(Of System.String))
  nameWithType: CalculateDatabaseHashTask.CalculateDatabaseHashTask(List<String>)
  nameWithType.vb: CalculateDatabaseHashTask.CalculateDatabaseHashTask(List(Of String))
- uid: ALE.ETLBox.ControlFlow.SqlServer.CalculateDatabaseHashTask.#ctor*
  name: CalculateDatabaseHashTask
  href: api/ALE.ETLBox.ControlFlow.SqlServer.CalculateDatabaseHashTask.html#ALE_ETLBox_ControlFlow_SqlServer_CalculateDatabaseHashTask__ctor_
  commentId: Overload:ALE.ETLBox.ControlFlow.SqlServer.CalculateDatabaseHashTask.#ctor
  isSpec: "True"
  fullName: ALE.ETLBox.ControlFlow.SqlServer.CalculateDatabaseHashTask.CalculateDatabaseHashTask
  nameWithType: CalculateDatabaseHashTask.CalculateDatabaseHashTask
- uid: ALE.ETLBox.ControlFlow.SqlServer.CalculateDatabaseHashTask.Calculate
  name: Calculate()
  href: api/ALE.ETLBox.ControlFlow.SqlServer.CalculateDatabaseHashTask.html#ALE_ETLBox_ControlFlow_SqlServer_CalculateDatabaseHashTask_Calculate
  commentId: M:ALE.ETLBox.ControlFlow.SqlServer.CalculateDatabaseHashTask.Calculate
  fullName: ALE.ETLBox.ControlFlow.SqlServer.CalculateDatabaseHashTask.Calculate()
  nameWithType: CalculateDatabaseHashTask.Calculate()
- uid: ALE.ETLBox.ControlFlow.SqlServer.CalculateDatabaseHashTask.Calculate(ALE.ETLBox.ConnectionManager.IConnectionManager,System.Collections.Generic.List{System.String})
  name: Calculate(IConnectionManager, List<String>)
  href: api/ALE.ETLBox.ControlFlow.SqlServer.CalculateDatabaseHashTask.html#ALE_ETLBox_ControlFlow_SqlServer_CalculateDatabaseHashTask_Calculate_ALE_ETLBox_ConnectionManager_IConnectionManager_System_Collections_Generic_List_System_String__
  commentId: M:ALE.ETLBox.ControlFlow.SqlServer.CalculateDatabaseHashTask.Calculate(ALE.ETLBox.ConnectionManager.IConnectionManager,System.Collections.Generic.List{System.String})
  name.vb: Calculate(IConnectionManager, List(Of String))
  fullName: ALE.ETLBox.ControlFlow.SqlServer.CalculateDatabaseHashTask.Calculate(ALE.ETLBox.ConnectionManager.IConnectionManager, System.Collections.Generic.List<System.String>)
  fullName.vb: ALE.ETLBox.ControlFlow.SqlServer.CalculateDatabaseHashTask.Calculate(ALE.ETLBox.ConnectionManager.IConnectionManager, System.Collections.Generic.List(Of System.String))
  nameWithType: CalculateDatabaseHashTask.Calculate(IConnectionManager, List<String>)
  nameWithType.vb: CalculateDatabaseHashTask.Calculate(IConnectionManager, List(Of String))
- uid: ALE.ETLBox.ControlFlow.SqlServer.CalculateDatabaseHashTask.Calculate(System.Collections.Generic.List{System.String})
  name: Calculate(List<String>)
  href: api/ALE.ETLBox.ControlFlow.SqlServer.CalculateDatabaseHashTask.html#ALE_ETLBox_ControlFlow_SqlServer_CalculateDatabaseHashTask_Calculate_System_Collections_Generic_List_System_String__
  commentId: M:ALE.ETLBox.ControlFlow.SqlServer.CalculateDatabaseHashTask.Calculate(System.Collections.Generic.List{System.String})
  name.vb: Calculate(List(Of String))
  fullName: ALE.ETLBox.ControlFlow.SqlServer.CalculateDatabaseHashTask.Calculate(System.Collections.Generic.List<System.String>)
  fullName.vb: ALE.ETLBox.ControlFlow.SqlServer.CalculateDatabaseHashTask.Calculate(System.Collections.Generic.List(Of System.String))
  nameWithType: CalculateDatabaseHashTask.Calculate(List<String>)
  nameWithType.vb: CalculateDatabaseHashTask.Calculate(List(Of String))
- uid: ALE.ETLBox.ControlFlow.SqlServer.CalculateDatabaseHashTask.Calculate*
  name: Calculate
  href: api/ALE.ETLBox.ControlFlow.SqlServer.CalculateDatabaseHashTask.html#ALE_ETLBox_ControlFlow_SqlServer_CalculateDatabaseHashTask_Calculate_
  commentId: Overload:ALE.ETLBox.ControlFlow.SqlServer.CalculateDatabaseHashTask.Calculate
  isSpec: "True"
  fullName: ALE.ETLBox.ControlFlow.SqlServer.CalculateDatabaseHashTask.Calculate
  nameWithType: CalculateDatabaseHashTask.Calculate
- uid: ALE.ETLBox.ControlFlow.SqlServer.CalculateDatabaseHashTask.DatabaseHash
  name: DatabaseHash
  href: api/ALE.ETLBox.ControlFlow.SqlServer.CalculateDatabaseHashTask.html#ALE_ETLBox_ControlFlow_SqlServer_CalculateDatabaseHashTask_DatabaseHash
  commentId: P:ALE.ETLBox.ControlFlow.SqlServer.CalculateDatabaseHashTask.DatabaseHash
  fullName: ALE.ETLBox.ControlFlow.SqlServer.CalculateDatabaseHashTask.DatabaseHash
  nameWithType: CalculateDatabaseHashTask.DatabaseHash
- uid: ALE.ETLBox.ControlFlow.SqlServer.CalculateDatabaseHashTask.DatabaseHash*
  name: DatabaseHash
  href: api/ALE.ETLBox.ControlFlow.SqlServer.CalculateDatabaseHashTask.html#ALE_ETLBox_ControlFlow_SqlServer_CalculateDatabaseHashTask_DatabaseHash_
  commentId: Overload:ALE.ETLBox.ControlFlow.SqlServer.CalculateDatabaseHashTask.DatabaseHash
  isSpec: "True"
  fullName: ALE.ETLBox.ControlFlow.SqlServer.CalculateDatabaseHashTask.DatabaseHash
  nameWithType: CalculateDatabaseHashTask.DatabaseHash
- uid: ALE.ETLBox.ControlFlow.SqlServer.CalculateDatabaseHashTask.Execute
  name: Execute()
  href: api/ALE.ETLBox.ControlFlow.SqlServer.CalculateDatabaseHashTask.html#ALE_ETLBox_ControlFlow_SqlServer_CalculateDatabaseHashTask_Execute
  commentId: M:ALE.ETLBox.ControlFlow.SqlServer.CalculateDatabaseHashTask.Execute
  fullName: ALE.ETLBox.ControlFlow.SqlServer.CalculateDatabaseHashTask.Execute()
  nameWithType: CalculateDatabaseHashTask.Execute()
- uid: ALE.ETLBox.ControlFlow.SqlServer.CalculateDatabaseHashTask.Execute*
  name: Execute
  href: api/ALE.ETLBox.ControlFlow.SqlServer.CalculateDatabaseHashTask.html#ALE_ETLBox_ControlFlow_SqlServer_CalculateDatabaseHashTask_Execute_
  commentId: Overload:ALE.ETLBox.ControlFlow.SqlServer.CalculateDatabaseHashTask.Execute
  isSpec: "True"
  fullName: ALE.ETLBox.ControlFlow.SqlServer.CalculateDatabaseHashTask.Execute
  nameWithType: CalculateDatabaseHashTask.Execute
- uid: ALE.ETLBox.ControlFlow.SqlServer.CalculateDatabaseHashTask.SchemaNames
  name: SchemaNames
  href: api/ALE.ETLBox.ControlFlow.SqlServer.CalculateDatabaseHashTask.html#ALE_ETLBox_ControlFlow_SqlServer_CalculateDatabaseHashTask_SchemaNames
  commentId: P:ALE.ETLBox.ControlFlow.SqlServer.CalculateDatabaseHashTask.SchemaNames
  fullName: ALE.ETLBox.ControlFlow.SqlServer.CalculateDatabaseHashTask.SchemaNames
  nameWithType: CalculateDatabaseHashTask.SchemaNames
- uid: ALE.ETLBox.ControlFlow.SqlServer.CalculateDatabaseHashTask.SchemaNames*
  name: SchemaNames
  href: api/ALE.ETLBox.ControlFlow.SqlServer.CalculateDatabaseHashTask.html#ALE_ETLBox_ControlFlow_SqlServer_CalculateDatabaseHashTask_SchemaNames_
  commentId: Overload:ALE.ETLBox.ControlFlow.SqlServer.CalculateDatabaseHashTask.SchemaNames
  isSpec: "True"
  fullName: ALE.ETLBox.ControlFlow.SqlServer.CalculateDatabaseHashTask.SchemaNames
  nameWithType: CalculateDatabaseHashTask.SchemaNames
- uid: ALE.ETLBox.ControlFlow.SqlServer.CalculateDatabaseHashTask.Sql
  name: Sql
  href: api/ALE.ETLBox.ControlFlow.SqlServer.CalculateDatabaseHashTask.html#ALE_ETLBox_ControlFlow_SqlServer_CalculateDatabaseHashTask_Sql
  commentId: P:ALE.ETLBox.ControlFlow.SqlServer.CalculateDatabaseHashTask.Sql
  fullName: ALE.ETLBox.ControlFlow.SqlServer.CalculateDatabaseHashTask.Sql
  nameWithType: CalculateDatabaseHashTask.Sql
- uid: ALE.ETLBox.ControlFlow.SqlServer.CalculateDatabaseHashTask.Sql*
  name: Sql
  href: api/ALE.ETLBox.ControlFlow.SqlServer.CalculateDatabaseHashTask.html#ALE_ETLBox_ControlFlow_SqlServer_CalculateDatabaseHashTask_Sql_
  commentId: Overload:ALE.ETLBox.ControlFlow.SqlServer.CalculateDatabaseHashTask.Sql
  isSpec: "True"
  fullName: ALE.ETLBox.ControlFlow.SqlServer.CalculateDatabaseHashTask.Sql
  nameWithType: CalculateDatabaseHashTask.Sql
- uid: ALE.ETLBox.ControlFlow.SqlServer.CalculateDatabaseHashTask.TaskName
  name: TaskName
  href: api/ALE.ETLBox.ControlFlow.SqlServer.CalculateDatabaseHashTask.html#ALE_ETLBox_ControlFlow_SqlServer_CalculateDatabaseHashTask_TaskName
  commentId: P:ALE.ETLBox.ControlFlow.SqlServer.CalculateDatabaseHashTask.TaskName
  fullName: ALE.ETLBox.ControlFlow.SqlServer.CalculateDatabaseHashTask.TaskName
  nameWithType: CalculateDatabaseHashTask.TaskName
- uid: ALE.ETLBox.ControlFlow.SqlServer.CalculateDatabaseHashTask.TaskName*
  name: TaskName
  href: api/ALE.ETLBox.ControlFlow.SqlServer.CalculateDatabaseHashTask.html#ALE_ETLBox_ControlFlow_SqlServer_CalculateDatabaseHashTask_TaskName_
  commentId: Overload:ALE.ETLBox.ControlFlow.SqlServer.CalculateDatabaseHashTask.TaskName
  isSpec: "True"
  fullName: ALE.ETLBox.ControlFlow.SqlServer.CalculateDatabaseHashTask.TaskName
  nameWithType: CalculateDatabaseHashTask.TaskName
- uid: ALE.ETLBox.ControlFlow.SqlServer.CleanUpSchemaTask
  name: CleanUpSchemaTask
  href: api/ALE.ETLBox.ControlFlow.SqlServer.CleanUpSchemaTask.html
  commentId: T:ALE.ETLBox.ControlFlow.SqlServer.CleanUpSchemaTask
  fullName: ALE.ETLBox.ControlFlow.SqlServer.CleanUpSchemaTask
  nameWithType: CleanUpSchemaTask
- uid: ALE.ETLBox.ControlFlow.SqlServer.CleanUpSchemaTask.#ctor
  name: CleanUpSchemaTask()
  href: api/ALE.ETLBox.ControlFlow.SqlServer.CleanUpSchemaTask.html#ALE_ETLBox_ControlFlow_SqlServer_CleanUpSchemaTask__ctor
  commentId: M:ALE.ETLBox.ControlFlow.SqlServer.CleanUpSchemaTask.#ctor
  fullName: ALE.ETLBox.ControlFlow.SqlServer.CleanUpSchemaTask.CleanUpSchemaTask()
  nameWithType: CleanUpSchemaTask.CleanUpSchemaTask()
- uid: ALE.ETLBox.ControlFlow.SqlServer.CleanUpSchemaTask.#ctor(System.String)
  name: CleanUpSchemaTask(String)
  href: api/ALE.ETLBox.ControlFlow.SqlServer.CleanUpSchemaTask.html#ALE_ETLBox_ControlFlow_SqlServer_CleanUpSchemaTask__ctor_System_String_
  commentId: M:ALE.ETLBox.ControlFlow.SqlServer.CleanUpSchemaTask.#ctor(System.String)
  fullName: ALE.ETLBox.ControlFlow.SqlServer.CleanUpSchemaTask.CleanUpSchemaTask(System.String)
  nameWithType: CleanUpSchemaTask.CleanUpSchemaTask(String)
- uid: ALE.ETLBox.ControlFlow.SqlServer.CleanUpSchemaTask.#ctor*
  name: CleanUpSchemaTask
  href: api/ALE.ETLBox.ControlFlow.SqlServer.CleanUpSchemaTask.html#ALE_ETLBox_ControlFlow_SqlServer_CleanUpSchemaTask__ctor_
  commentId: Overload:ALE.ETLBox.ControlFlow.SqlServer.CleanUpSchemaTask.#ctor
  isSpec: "True"
  fullName: ALE.ETLBox.ControlFlow.SqlServer.CleanUpSchemaTask.CleanUpSchemaTask
  nameWithType: CleanUpSchemaTask.CleanUpSchemaTask
- uid: ALE.ETLBox.ControlFlow.SqlServer.CleanUpSchemaTask.CleanUp(ALE.ETLBox.ConnectionManager.IConnectionManager,System.String)
  name: CleanUp(IConnectionManager, String)
  href: api/ALE.ETLBox.ControlFlow.SqlServer.CleanUpSchemaTask.html#ALE_ETLBox_ControlFlow_SqlServer_CleanUpSchemaTask_CleanUp_ALE_ETLBox_ConnectionManager_IConnectionManager_System_String_
  commentId: M:ALE.ETLBox.ControlFlow.SqlServer.CleanUpSchemaTask.CleanUp(ALE.ETLBox.ConnectionManager.IConnectionManager,System.String)
  fullName: ALE.ETLBox.ControlFlow.SqlServer.CleanUpSchemaTask.CleanUp(ALE.ETLBox.ConnectionManager.IConnectionManager, System.String)
  nameWithType: CleanUpSchemaTask.CleanUp(IConnectionManager, String)
- uid: ALE.ETLBox.ControlFlow.SqlServer.CleanUpSchemaTask.CleanUp(System.String)
  name: CleanUp(String)
  href: api/ALE.ETLBox.ControlFlow.SqlServer.CleanUpSchemaTask.html#ALE_ETLBox_ControlFlow_SqlServer_CleanUpSchemaTask_CleanUp_System_String_
  commentId: M:ALE.ETLBox.ControlFlow.SqlServer.CleanUpSchemaTask.CleanUp(System.String)
  fullName: ALE.ETLBox.ControlFlow.SqlServer.CleanUpSchemaTask.CleanUp(System.String)
  nameWithType: CleanUpSchemaTask.CleanUp(String)
- uid: ALE.ETLBox.ControlFlow.SqlServer.CleanUpSchemaTask.CleanUp*
  name: CleanUp
  href: api/ALE.ETLBox.ControlFlow.SqlServer.CleanUpSchemaTask.html#ALE_ETLBox_ControlFlow_SqlServer_CleanUpSchemaTask_CleanUp_
  commentId: Overload:ALE.ETLBox.ControlFlow.SqlServer.CleanUpSchemaTask.CleanUp
  isSpec: "True"
  fullName: ALE.ETLBox.ControlFlow.SqlServer.CleanUpSchemaTask.CleanUp
  nameWithType: CleanUpSchemaTask.CleanUp
- uid: ALE.ETLBox.ControlFlow.SqlServer.CleanUpSchemaTask.Execute
  name: Execute()
  href: api/ALE.ETLBox.ControlFlow.SqlServer.CleanUpSchemaTask.html#ALE_ETLBox_ControlFlow_SqlServer_CleanUpSchemaTask_Execute
  commentId: M:ALE.ETLBox.ControlFlow.SqlServer.CleanUpSchemaTask.Execute
  fullName: ALE.ETLBox.ControlFlow.SqlServer.CleanUpSchemaTask.Execute()
  nameWithType: CleanUpSchemaTask.Execute()
- uid: ALE.ETLBox.ControlFlow.SqlServer.CleanUpSchemaTask.Execute*
  name: Execute
  href: api/ALE.ETLBox.ControlFlow.SqlServer.CleanUpSchemaTask.html#ALE_ETLBox_ControlFlow_SqlServer_CleanUpSchemaTask_Execute_
  commentId: Overload:ALE.ETLBox.ControlFlow.SqlServer.CleanUpSchemaTask.Execute
  isSpec: "True"
  fullName: ALE.ETLBox.ControlFlow.SqlServer.CleanUpSchemaTask.Execute
  nameWithType: CleanUpSchemaTask.Execute
- uid: ALE.ETLBox.ControlFlow.SqlServer.CleanUpSchemaTask.SchemaName
  name: SchemaName
  href: api/ALE.ETLBox.ControlFlow.SqlServer.CleanUpSchemaTask.html#ALE_ETLBox_ControlFlow_SqlServer_CleanUpSchemaTask_SchemaName
  commentId: P:ALE.ETLBox.ControlFlow.SqlServer.CleanUpSchemaTask.SchemaName
  fullName: ALE.ETLBox.ControlFlow.SqlServer.CleanUpSchemaTask.SchemaName
  nameWithType: CleanUpSchemaTask.SchemaName
- uid: ALE.ETLBox.ControlFlow.SqlServer.CleanUpSchemaTask.SchemaName*
  name: SchemaName
  href: api/ALE.ETLBox.ControlFlow.SqlServer.CleanUpSchemaTask.html#ALE_ETLBox_ControlFlow_SqlServer_CleanUpSchemaTask_SchemaName_
  commentId: Overload:ALE.ETLBox.ControlFlow.SqlServer.CleanUpSchemaTask.SchemaName
  isSpec: "True"
  fullName: ALE.ETLBox.ControlFlow.SqlServer.CleanUpSchemaTask.SchemaName
  nameWithType: CleanUpSchemaTask.SchemaName
- uid: ALE.ETLBox.ControlFlow.SqlServer.CleanUpSchemaTask.Sql
  name: Sql
  href: api/ALE.ETLBox.ControlFlow.SqlServer.CleanUpSchemaTask.html#ALE_ETLBox_ControlFlow_SqlServer_CleanUpSchemaTask_Sql
  commentId: P:ALE.ETLBox.ControlFlow.SqlServer.CleanUpSchemaTask.Sql
  fullName: ALE.ETLBox.ControlFlow.SqlServer.CleanUpSchemaTask.Sql
  nameWithType: CleanUpSchemaTask.Sql
- uid: ALE.ETLBox.ControlFlow.SqlServer.CleanUpSchemaTask.Sql*
  name: Sql
  href: api/ALE.ETLBox.ControlFlow.SqlServer.CleanUpSchemaTask.html#ALE_ETLBox_ControlFlow_SqlServer_CleanUpSchemaTask_Sql_
  commentId: Overload:ALE.ETLBox.ControlFlow.SqlServer.CleanUpSchemaTask.Sql
  isSpec: "True"
  fullName: ALE.ETLBox.ControlFlow.SqlServer.CleanUpSchemaTask.Sql
  nameWithType: CleanUpSchemaTask.Sql
- uid: ALE.ETLBox.ControlFlow.SqlServer.CleanUpSchemaTask.TaskName
  name: TaskName
  href: api/ALE.ETLBox.ControlFlow.SqlServer.CleanUpSchemaTask.html#ALE_ETLBox_ControlFlow_SqlServer_CleanUpSchemaTask_TaskName
  commentId: P:ALE.ETLBox.ControlFlow.SqlServer.CleanUpSchemaTask.TaskName
  fullName: ALE.ETLBox.ControlFlow.SqlServer.CleanUpSchemaTask.TaskName
  nameWithType: CleanUpSchemaTask.TaskName
- uid: ALE.ETLBox.ControlFlow.SqlServer.CleanUpSchemaTask.TaskName*
  name: TaskName
  href: api/ALE.ETLBox.ControlFlow.SqlServer.CleanUpSchemaTask.html#ALE_ETLBox_ControlFlow_SqlServer_CleanUpSchemaTask_TaskName_
  commentId: Overload:ALE.ETLBox.ControlFlow.SqlServer.CleanUpSchemaTask.TaskName
  isSpec: "True"
  fullName: ALE.ETLBox.ControlFlow.SqlServer.CleanUpSchemaTask.TaskName
  nameWithType: CleanUpSchemaTask.TaskName
- uid: ALE.ETLBox.ControlFlow.SqlServer.RestoreDatabaseTask
  name: RestoreDatabaseTask
  href: api/ALE.ETLBox.ControlFlow.SqlServer.RestoreDatabaseTask.html
  commentId: T:ALE.ETLBox.ControlFlow.SqlServer.RestoreDatabaseTask
  fullName: ALE.ETLBox.ControlFlow.SqlServer.RestoreDatabaseTask
  nameWithType: RestoreDatabaseTask
- uid: ALE.ETLBox.ControlFlow.SqlServer.RestoreDatabaseTask.#ctor
  name: RestoreDatabaseTask()
  href: api/ALE.ETLBox.ControlFlow.SqlServer.RestoreDatabaseTask.html#ALE_ETLBox_ControlFlow_SqlServer_RestoreDatabaseTask__ctor
  commentId: M:ALE.ETLBox.ControlFlow.SqlServer.RestoreDatabaseTask.#ctor
  fullName: ALE.ETLBox.ControlFlow.SqlServer.RestoreDatabaseTask.RestoreDatabaseTask()
  nameWithType: RestoreDatabaseTask.RestoreDatabaseTask()
- uid: ALE.ETLBox.ControlFlow.SqlServer.RestoreDatabaseTask.#ctor(System.String,System.String)
  name: RestoreDatabaseTask(String, String)
  href: api/ALE.ETLBox.ControlFlow.SqlServer.RestoreDatabaseTask.html#ALE_ETLBox_ControlFlow_SqlServer_RestoreDatabaseTask__ctor_System_String_System_String_
  commentId: M:ALE.ETLBox.ControlFlow.SqlServer.RestoreDatabaseTask.#ctor(System.String,System.String)
  fullName: ALE.ETLBox.ControlFlow.SqlServer.RestoreDatabaseTask.RestoreDatabaseTask(System.String, System.String)
  nameWithType: RestoreDatabaseTask.RestoreDatabaseTask(String, String)
- uid: ALE.ETLBox.ControlFlow.SqlServer.RestoreDatabaseTask.#ctor*
  name: RestoreDatabaseTask
  href: api/ALE.ETLBox.ControlFlow.SqlServer.RestoreDatabaseTask.html#ALE_ETLBox_ControlFlow_SqlServer_RestoreDatabaseTask__ctor_
  commentId: Overload:ALE.ETLBox.ControlFlow.SqlServer.RestoreDatabaseTask.#ctor
  isSpec: "True"
  fullName: ALE.ETLBox.ControlFlow.SqlServer.RestoreDatabaseTask.RestoreDatabaseTask
  nameWithType: RestoreDatabaseTask.RestoreDatabaseTask
- uid: ALE.ETLBox.ControlFlow.SqlServer.RestoreDatabaseTask.DatabaseName
  name: DatabaseName
  href: api/ALE.ETLBox.ControlFlow.SqlServer.RestoreDatabaseTask.html#ALE_ETLBox_ControlFlow_SqlServer_RestoreDatabaseTask_DatabaseName
  commentId: P:ALE.ETLBox.ControlFlow.SqlServer.RestoreDatabaseTask.DatabaseName
  fullName: ALE.ETLBox.ControlFlow.SqlServer.RestoreDatabaseTask.DatabaseName
  nameWithType: RestoreDatabaseTask.DatabaseName
- uid: ALE.ETLBox.ControlFlow.SqlServer.RestoreDatabaseTask.DatabaseName*
  name: DatabaseName
  href: api/ALE.ETLBox.ControlFlow.SqlServer.RestoreDatabaseTask.html#ALE_ETLBox_ControlFlow_SqlServer_RestoreDatabaseTask_DatabaseName_
  commentId: Overload:ALE.ETLBox.ControlFlow.SqlServer.RestoreDatabaseTask.DatabaseName
  isSpec: "True"
  fullName: ALE.ETLBox.ControlFlow.SqlServer.RestoreDatabaseTask.DatabaseName
  nameWithType: RestoreDatabaseTask.DatabaseName
- uid: ALE.ETLBox.ControlFlow.SqlServer.RestoreDatabaseTask.Execute
  name: Execute()
  href: api/ALE.ETLBox.ControlFlow.SqlServer.RestoreDatabaseTask.html#ALE_ETLBox_ControlFlow_SqlServer_RestoreDatabaseTask_Execute
  commentId: M:ALE.ETLBox.ControlFlow.SqlServer.RestoreDatabaseTask.Execute
  fullName: ALE.ETLBox.ControlFlow.SqlServer.RestoreDatabaseTask.Execute()
  nameWithType: RestoreDatabaseTask.Execute()
- uid: ALE.ETLBox.ControlFlow.SqlServer.RestoreDatabaseTask.Execute*
  name: Execute
  href: api/ALE.ETLBox.ControlFlow.SqlServer.RestoreDatabaseTask.html#ALE_ETLBox_ControlFlow_SqlServer_RestoreDatabaseTask_Execute_
  commentId: Overload:ALE.ETLBox.ControlFlow.SqlServer.RestoreDatabaseTask.Execute
  isSpec: "True"
  fullName: ALE.ETLBox.ControlFlow.SqlServer.RestoreDatabaseTask.Execute
  nameWithType: RestoreDatabaseTask.Execute
- uid: ALE.ETLBox.ControlFlow.SqlServer.RestoreDatabaseTask.FileName
  name: FileName
  href: api/ALE.ETLBox.ControlFlow.SqlServer.RestoreDatabaseTask.html#ALE_ETLBox_ControlFlow_SqlServer_RestoreDatabaseTask_FileName
  commentId: P:ALE.ETLBox.ControlFlow.SqlServer.RestoreDatabaseTask.FileName
  fullName: ALE.ETLBox.ControlFlow.SqlServer.RestoreDatabaseTask.FileName
  nameWithType: RestoreDatabaseTask.FileName
- uid: ALE.ETLBox.ControlFlow.SqlServer.RestoreDatabaseTask.FileName*
  name: FileName
  href: api/ALE.ETLBox.ControlFlow.SqlServer.RestoreDatabaseTask.html#ALE_ETLBox_ControlFlow_SqlServer_RestoreDatabaseTask_FileName_
  commentId: Overload:ALE.ETLBox.ControlFlow.SqlServer.RestoreDatabaseTask.FileName
  isSpec: "True"
  fullName: ALE.ETLBox.ControlFlow.SqlServer.RestoreDatabaseTask.FileName
  nameWithType: RestoreDatabaseTask.FileName
- uid: ALE.ETLBox.ControlFlow.SqlServer.RestoreDatabaseTask.Restore(System.String,System.String)
  name: Restore(String, String)
  href: api/ALE.ETLBox.ControlFlow.SqlServer.RestoreDatabaseTask.html#ALE_ETLBox_ControlFlow_SqlServer_RestoreDatabaseTask_Restore_System_String_System_String_
  commentId: M:ALE.ETLBox.ControlFlow.SqlServer.RestoreDatabaseTask.Restore(System.String,System.String)
  fullName: ALE.ETLBox.ControlFlow.SqlServer.RestoreDatabaseTask.Restore(System.String, System.String)
  nameWithType: RestoreDatabaseTask.Restore(String, String)
- uid: ALE.ETLBox.ControlFlow.SqlServer.RestoreDatabaseTask.Restore*
  name: Restore
  href: api/ALE.ETLBox.ControlFlow.SqlServer.RestoreDatabaseTask.html#ALE_ETLBox_ControlFlow_SqlServer_RestoreDatabaseTask_Restore_
  commentId: Overload:ALE.ETLBox.ControlFlow.SqlServer.RestoreDatabaseTask.Restore
  isSpec: "True"
  fullName: ALE.ETLBox.ControlFlow.SqlServer.RestoreDatabaseTask.Restore
  nameWithType: RestoreDatabaseTask.Restore
- uid: ALE.ETLBox.ControlFlow.SqlServer.RestoreDatabaseTask.Sql
  name: Sql
  href: api/ALE.ETLBox.ControlFlow.SqlServer.RestoreDatabaseTask.html#ALE_ETLBox_ControlFlow_SqlServer_RestoreDatabaseTask_Sql
  commentId: P:ALE.ETLBox.ControlFlow.SqlServer.RestoreDatabaseTask.Sql
  fullName: ALE.ETLBox.ControlFlow.SqlServer.RestoreDatabaseTask.Sql
  nameWithType: RestoreDatabaseTask.Sql
- uid: ALE.ETLBox.ControlFlow.SqlServer.RestoreDatabaseTask.Sql*
  name: Sql
  href: api/ALE.ETLBox.ControlFlow.SqlServer.RestoreDatabaseTask.html#ALE_ETLBox_ControlFlow_SqlServer_RestoreDatabaseTask_Sql_
  commentId: Overload:ALE.ETLBox.ControlFlow.SqlServer.RestoreDatabaseTask.Sql
  isSpec: "True"
  fullName: ALE.ETLBox.ControlFlow.SqlServer.RestoreDatabaseTask.Sql
  nameWithType: RestoreDatabaseTask.Sql
- uid: ALE.ETLBox.ControlFlow.SqlServer.RestoreDatabaseTask.TaskName
  name: TaskName
  href: api/ALE.ETLBox.ControlFlow.SqlServer.RestoreDatabaseTask.html#ALE_ETLBox_ControlFlow_SqlServer_RestoreDatabaseTask_TaskName
  commentId: P:ALE.ETLBox.ControlFlow.SqlServer.RestoreDatabaseTask.TaskName
  fullName: ALE.ETLBox.ControlFlow.SqlServer.RestoreDatabaseTask.TaskName
  nameWithType: RestoreDatabaseTask.TaskName
- uid: ALE.ETLBox.ControlFlow.SqlServer.RestoreDatabaseTask.TaskName*
  name: TaskName
  href: api/ALE.ETLBox.ControlFlow.SqlServer.RestoreDatabaseTask.html#ALE_ETLBox_ControlFlow_SqlServer_RestoreDatabaseTask_TaskName_
  commentId: Overload:ALE.ETLBox.ControlFlow.SqlServer.RestoreDatabaseTask.TaskName
  isSpec: "True"
  fullName: ALE.ETLBox.ControlFlow.SqlServer.RestoreDatabaseTask.TaskName
  nameWithType: RestoreDatabaseTask.TaskName
- uid: ALE.ETLBox.ControlFlow.SqlServer.XmlaTask
  name: XmlaTask
  href: api/ALE.ETLBox.ControlFlow.SqlServer.XmlaTask.html
  commentId: T:ALE.ETLBox.ControlFlow.SqlServer.XmlaTask
  fullName: ALE.ETLBox.ControlFlow.SqlServer.XmlaTask
  nameWithType: XmlaTask
- uid: ALE.ETLBox.ControlFlow.SqlServer.XmlaTask.#ctor
  name: XmlaTask()
  href: api/ALE.ETLBox.ControlFlow.SqlServer.XmlaTask.html#ALE_ETLBox_ControlFlow_SqlServer_XmlaTask__ctor
  commentId: M:ALE.ETLBox.ControlFlow.SqlServer.XmlaTask.#ctor
  fullName: ALE.ETLBox.ControlFlow.SqlServer.XmlaTask.XmlaTask()
  nameWithType: XmlaTask.XmlaTask()
- uid: ALE.ETLBox.ControlFlow.SqlServer.XmlaTask.#ctor(System.String)
  name: XmlaTask(String)
  href: api/ALE.ETLBox.ControlFlow.SqlServer.XmlaTask.html#ALE_ETLBox_ControlFlow_SqlServer_XmlaTask__ctor_System_String_
  commentId: M:ALE.ETLBox.ControlFlow.SqlServer.XmlaTask.#ctor(System.String)
  fullName: ALE.ETLBox.ControlFlow.SqlServer.XmlaTask.XmlaTask(System.String)
  nameWithType: XmlaTask.XmlaTask(String)
- uid: ALE.ETLBox.ControlFlow.SqlServer.XmlaTask.#ctor(System.String,System.String)
  name: XmlaTask(String, String)
  href: api/ALE.ETLBox.ControlFlow.SqlServer.XmlaTask.html#ALE_ETLBox_ControlFlow_SqlServer_XmlaTask__ctor_System_String_System_String_
  commentId: M:ALE.ETLBox.ControlFlow.SqlServer.XmlaTask.#ctor(System.String,System.String)
  fullName: ALE.ETLBox.ControlFlow.SqlServer.XmlaTask.XmlaTask(System.String, System.String)
  nameWithType: XmlaTask.XmlaTask(String, String)
- uid: ALE.ETLBox.ControlFlow.SqlServer.XmlaTask.#ctor(System.String,System.String,System.Action,System.Action,System.Action{System.Object}[])
  name: XmlaTask(String, String, Action, Action, Action<Object>[])
  href: api/ALE.ETLBox.ControlFlow.SqlServer.XmlaTask.html#ALE_ETLBox_ControlFlow_SqlServer_XmlaTask__ctor_System_String_System_String_System_Action_System_Action_System_Action_System_Object____
  commentId: M:ALE.ETLBox.ControlFlow.SqlServer.XmlaTask.#ctor(System.String,System.String,System.Action,System.Action,System.Action{System.Object}[])
  name.vb: XmlaTask(String, String, Action, Action, Action(Of Object)())
  fullName: ALE.ETLBox.ControlFlow.SqlServer.XmlaTask.XmlaTask(System.String, System.String, System.Action, System.Action, System.Action<System.Object>[])
  fullName.vb: ALE.ETLBox.ControlFlow.SqlServer.XmlaTask.XmlaTask(System.String, System.String, System.Action, System.Action, System.Action(Of System.Object)())
  nameWithType: XmlaTask.XmlaTask(String, String, Action, Action, Action<Object>[])
  nameWithType.vb: XmlaTask.XmlaTask(String, String, Action, Action, Action(Of Object)())
- uid: ALE.ETLBox.ControlFlow.SqlServer.XmlaTask.#ctor(System.String,System.String,System.Action{System.Object}[])
  name: XmlaTask(String, String, Action<Object>[])
  href: api/ALE.ETLBox.ControlFlow.SqlServer.XmlaTask.html#ALE_ETLBox_ControlFlow_SqlServer_XmlaTask__ctor_System_String_System_String_System_Action_System_Object____
  commentId: M:ALE.ETLBox.ControlFlow.SqlServer.XmlaTask.#ctor(System.String,System.String,System.Action{System.Object}[])
  name.vb: XmlaTask(String, String, Action(Of Object)())
  fullName: ALE.ETLBox.ControlFlow.SqlServer.XmlaTask.XmlaTask(System.String, System.String, System.Action<System.Object>[])
  fullName.vb: ALE.ETLBox.ControlFlow.SqlServer.XmlaTask.XmlaTask(System.String, System.String, System.Action(Of System.Object)())
  nameWithType: XmlaTask.XmlaTask(String, String, Action<Object>[])
  nameWithType.vb: XmlaTask.XmlaTask(String, String, Action(Of Object)())
- uid: ALE.ETLBox.ControlFlow.SqlServer.XmlaTask.#ctor*
  name: XmlaTask
  href: api/ALE.ETLBox.ControlFlow.SqlServer.XmlaTask.html#ALE_ETLBox_ControlFlow_SqlServer_XmlaTask__ctor_
  commentId: Overload:ALE.ETLBox.ControlFlow.SqlServer.XmlaTask.#ctor
  isSpec: "True"
  fullName: ALE.ETLBox.ControlFlow.SqlServer.XmlaTask.XmlaTask
  nameWithType: XmlaTask.XmlaTask
- uid: ALE.ETLBox.ControlFlow.SqlServer.XmlaTask.ExecuteNonQuery(ALE.ETLBox.ConnectionManager.IConnectionManager,System.String,System.String)
  name: ExecuteNonQuery(IConnectionManager, String, String)
  href: api/ALE.ETLBox.ControlFlow.SqlServer.XmlaTask.html#ALE_ETLBox_ControlFlow_SqlServer_XmlaTask_ExecuteNonQuery_ALE_ETLBox_ConnectionManager_IConnectionManager_System_String_System_String_
  commentId: M:ALE.ETLBox.ControlFlow.SqlServer.XmlaTask.ExecuteNonQuery(ALE.ETLBox.ConnectionManager.IConnectionManager,System.String,System.String)
  fullName: ALE.ETLBox.ControlFlow.SqlServer.XmlaTask.ExecuteNonQuery(ALE.ETLBox.ConnectionManager.IConnectionManager, System.String, System.String)
  nameWithType: XmlaTask.ExecuteNonQuery(IConnectionManager, String, String)
- uid: ALE.ETLBox.ControlFlow.SqlServer.XmlaTask.ExecuteNonQuery(System.String,System.String)
  name: ExecuteNonQuery(String, String)
  href: api/ALE.ETLBox.ControlFlow.SqlServer.XmlaTask.html#ALE_ETLBox_ControlFlow_SqlServer_XmlaTask_ExecuteNonQuery_System_String_System_String_
  commentId: M:ALE.ETLBox.ControlFlow.SqlServer.XmlaTask.ExecuteNonQuery(System.String,System.String)
  fullName: ALE.ETLBox.ControlFlow.SqlServer.XmlaTask.ExecuteNonQuery(System.String, System.String)
  nameWithType: XmlaTask.ExecuteNonQuery(String, String)
- uid: ALE.ETLBox.ControlFlow.SqlServer.XmlaTask.ExecuteNonQuery*
  name: ExecuteNonQuery
  href: api/ALE.ETLBox.ControlFlow.SqlServer.XmlaTask.html#ALE_ETLBox_ControlFlow_SqlServer_XmlaTask_ExecuteNonQuery_
  commentId: Overload:ALE.ETLBox.ControlFlow.SqlServer.XmlaTask.ExecuteNonQuery
  isSpec: "True"
  fullName: ALE.ETLBox.ControlFlow.SqlServer.XmlaTask.ExecuteNonQuery
  nameWithType: XmlaTask.ExecuteNonQuery
- uid: ALE.ETLBox.ControlFlow.SqlServer.XmlaTask.ExecuteReader(ALE.ETLBox.ConnectionManager.IConnectionManager,System.String,System.String,System.Action,System.Action,System.Action{System.Object}[])
  name: ExecuteReader(IConnectionManager, String, String, Action, Action, Action<Object>[])
  href: api/ALE.ETLBox.ControlFlow.SqlServer.XmlaTask.html#ALE_ETLBox_ControlFlow_SqlServer_XmlaTask_ExecuteReader_ALE_ETLBox_ConnectionManager_IConnectionManager_System_String_System_String_System_Action_System_Action_System_Action_System_Object____
  commentId: M:ALE.ETLBox.ControlFlow.SqlServer.XmlaTask.ExecuteReader(ALE.ETLBox.ConnectionManager.IConnectionManager,System.String,System.String,System.Action,System.Action,System.Action{System.Object}[])
  name.vb: ExecuteReader(IConnectionManager, String, String, Action, Action, Action(Of Object)())
  fullName: ALE.ETLBox.ControlFlow.SqlServer.XmlaTask.ExecuteReader(ALE.ETLBox.ConnectionManager.IConnectionManager, System.String, System.String, System.Action, System.Action, System.Action<System.Object>[])
  fullName.vb: ALE.ETLBox.ControlFlow.SqlServer.XmlaTask.ExecuteReader(ALE.ETLBox.ConnectionManager.IConnectionManager, System.String, System.String, System.Action, System.Action, System.Action(Of System.Object)())
  nameWithType: XmlaTask.ExecuteReader(IConnectionManager, String, String, Action, Action, Action<Object>[])
  nameWithType.vb: XmlaTask.ExecuteReader(IConnectionManager, String, String, Action, Action, Action(Of Object)())
- uid: ALE.ETLBox.ControlFlow.SqlServer.XmlaTask.ExecuteReader(ALE.ETLBox.ConnectionManager.IConnectionManager,System.String,System.String,System.Action{System.Object}[])
  name: ExecuteReader(IConnectionManager, String, String, Action<Object>[])
  href: api/ALE.ETLBox.ControlFlow.SqlServer.XmlaTask.html#ALE_ETLBox_ControlFlow_SqlServer_XmlaTask_ExecuteReader_ALE_ETLBox_ConnectionManager_IConnectionManager_System_String_System_String_System_Action_System_Object____
  commentId: M:ALE.ETLBox.ControlFlow.SqlServer.XmlaTask.ExecuteReader(ALE.ETLBox.ConnectionManager.IConnectionManager,System.String,System.String,System.Action{System.Object}[])
  name.vb: ExecuteReader(IConnectionManager, String, String, Action(Of Object)())
  fullName: ALE.ETLBox.ControlFlow.SqlServer.XmlaTask.ExecuteReader(ALE.ETLBox.ConnectionManager.IConnectionManager, System.String, System.String, System.Action<System.Object>[])
  fullName.vb: ALE.ETLBox.ControlFlow.SqlServer.XmlaTask.ExecuteReader(ALE.ETLBox.ConnectionManager.IConnectionManager, System.String, System.String, System.Action(Of System.Object)())
  nameWithType: XmlaTask.ExecuteReader(IConnectionManager, String, String, Action<Object>[])
  nameWithType.vb: XmlaTask.ExecuteReader(IConnectionManager, String, String, Action(Of Object)())
- uid: ALE.ETLBox.ControlFlow.SqlServer.XmlaTask.ExecuteReader(System.String,System.String,System.Action,System.Action,System.Action{System.Object}[])
  name: ExecuteReader(String, String, Action, Action, Action<Object>[])
  href: api/ALE.ETLBox.ControlFlow.SqlServer.XmlaTask.html#ALE_ETLBox_ControlFlow_SqlServer_XmlaTask_ExecuteReader_System_String_System_String_System_Action_System_Action_System_Action_System_Object____
  commentId: M:ALE.ETLBox.ControlFlow.SqlServer.XmlaTask.ExecuteReader(System.String,System.String,System.Action,System.Action,System.Action{System.Object}[])
  name.vb: ExecuteReader(String, String, Action, Action, Action(Of Object)())
  fullName: ALE.ETLBox.ControlFlow.SqlServer.XmlaTask.ExecuteReader(System.String, System.String, System.Action, System.Action, System.Action<System.Object>[])
  fullName.vb: ALE.ETLBox.ControlFlow.SqlServer.XmlaTask.ExecuteReader(System.String, System.String, System.Action, System.Action, System.Action(Of System.Object)())
  nameWithType: XmlaTask.ExecuteReader(String, String, Action, Action, Action<Object>[])
  nameWithType.vb: XmlaTask.ExecuteReader(String, String, Action, Action, Action(Of Object)())
- uid: ALE.ETLBox.ControlFlow.SqlServer.XmlaTask.ExecuteReader(System.String,System.String,System.Action{System.Object}[])
  name: ExecuteReader(String, String, Action<Object>[])
  href: api/ALE.ETLBox.ControlFlow.SqlServer.XmlaTask.html#ALE_ETLBox_ControlFlow_SqlServer_XmlaTask_ExecuteReader_System_String_System_String_System_Action_System_Object____
  commentId: M:ALE.ETLBox.ControlFlow.SqlServer.XmlaTask.ExecuteReader(System.String,System.String,System.Action{System.Object}[])
  name.vb: ExecuteReader(String, String, Action(Of Object)())
  fullName: ALE.ETLBox.ControlFlow.SqlServer.XmlaTask.ExecuteReader(System.String, System.String, System.Action<System.Object>[])
  fullName.vb: ALE.ETLBox.ControlFlow.SqlServer.XmlaTask.ExecuteReader(System.String, System.String, System.Action(Of System.Object)())
  nameWithType: XmlaTask.ExecuteReader(String, String, Action<Object>[])
  nameWithType.vb: XmlaTask.ExecuteReader(String, String, Action(Of Object)())
- uid: ALE.ETLBox.ControlFlow.SqlServer.XmlaTask.ExecuteReader*
  name: ExecuteReader
  href: api/ALE.ETLBox.ControlFlow.SqlServer.XmlaTask.html#ALE_ETLBox_ControlFlow_SqlServer_XmlaTask_ExecuteReader_
  commentId: Overload:ALE.ETLBox.ControlFlow.SqlServer.XmlaTask.ExecuteReader
  isSpec: "True"
  fullName: ALE.ETLBox.ControlFlow.SqlServer.XmlaTask.ExecuteReader
  nameWithType: XmlaTask.ExecuteReader
- uid: ALE.ETLBox.ControlFlow.SqlServer.XmlaTask.ExecuteReaderSingleLine(System.String,System.String,System.Action{System.Object}[])
  name: ExecuteReaderSingleLine(String, String, Action<Object>[])
  href: api/ALE.ETLBox.ControlFlow.SqlServer.XmlaTask.html#ALE_ETLBox_ControlFlow_SqlServer_XmlaTask_ExecuteReaderSingleLine_System_String_System_String_System_Action_System_Object____
  commentId: M:ALE.ETLBox.ControlFlow.SqlServer.XmlaTask.ExecuteReaderSingleLine(System.String,System.String,System.Action{System.Object}[])
  name.vb: ExecuteReaderSingleLine(String, String, Action(Of Object)())
  fullName: ALE.ETLBox.ControlFlow.SqlServer.XmlaTask.ExecuteReaderSingleLine(System.String, System.String, System.Action<System.Object>[])
  fullName.vb: ALE.ETLBox.ControlFlow.SqlServer.XmlaTask.ExecuteReaderSingleLine(System.String, System.String, System.Action(Of System.Object)())
  nameWithType: XmlaTask.ExecuteReaderSingleLine(String, String, Action<Object>[])
  nameWithType.vb: XmlaTask.ExecuteReaderSingleLine(String, String, Action(Of Object)())
- uid: ALE.ETLBox.ControlFlow.SqlServer.XmlaTask.ExecuteReaderSingleLine*
  name: ExecuteReaderSingleLine
  href: api/ALE.ETLBox.ControlFlow.SqlServer.XmlaTask.html#ALE_ETLBox_ControlFlow_SqlServer_XmlaTask_ExecuteReaderSingleLine_
  commentId: Overload:ALE.ETLBox.ControlFlow.SqlServer.XmlaTask.ExecuteReaderSingleLine
  isSpec: "True"
  fullName: ALE.ETLBox.ControlFlow.SqlServer.XmlaTask.ExecuteReaderSingleLine
  nameWithType: XmlaTask.ExecuteReaderSingleLine
- uid: ALE.ETLBox.ControlFlow.SqlServer.XmlaTask.ExecuteScalar(ALE.ETLBox.ConnectionManager.IConnectionManager,System.String,System.String)
  name: ExecuteScalar(IConnectionManager, String, String)
  href: api/ALE.ETLBox.ControlFlow.SqlServer.XmlaTask.html#ALE_ETLBox_ControlFlow_SqlServer_XmlaTask_ExecuteScalar_ALE_ETLBox_ConnectionManager_IConnectionManager_System_String_System_String_
  commentId: M:ALE.ETLBox.ControlFlow.SqlServer.XmlaTask.ExecuteScalar(ALE.ETLBox.ConnectionManager.IConnectionManager,System.String,System.String)
  fullName: ALE.ETLBox.ControlFlow.SqlServer.XmlaTask.ExecuteScalar(ALE.ETLBox.ConnectionManager.IConnectionManager, System.String, System.String)
  nameWithType: XmlaTask.ExecuteScalar(IConnectionManager, String, String)
- uid: ALE.ETLBox.ControlFlow.SqlServer.XmlaTask.ExecuteScalar(System.String,System.String)
  name: ExecuteScalar(String, String)
  href: api/ALE.ETLBox.ControlFlow.SqlServer.XmlaTask.html#ALE_ETLBox_ControlFlow_SqlServer_XmlaTask_ExecuteScalar_System_String_System_String_
  commentId: M:ALE.ETLBox.ControlFlow.SqlServer.XmlaTask.ExecuteScalar(System.String,System.String)
  fullName: ALE.ETLBox.ControlFlow.SqlServer.XmlaTask.ExecuteScalar(System.String, System.String)
  nameWithType: XmlaTask.ExecuteScalar(String, String)
- uid: ALE.ETLBox.ControlFlow.SqlServer.XmlaTask.ExecuteScalar*
  name: ExecuteScalar
  href: api/ALE.ETLBox.ControlFlow.SqlServer.XmlaTask.html#ALE_ETLBox_ControlFlow_SqlServer_XmlaTask_ExecuteScalar_
  commentId: Overload:ALE.ETLBox.ControlFlow.SqlServer.XmlaTask.ExecuteScalar
  isSpec: "True"
  fullName: ALE.ETLBox.ControlFlow.SqlServer.XmlaTask.ExecuteScalar
  nameWithType: XmlaTask.ExecuteScalar
- uid: ALE.ETLBox.ControlFlow.SqlServer.XmlaTask.ExecuteScalar``1(ALE.ETLBox.ConnectionManager.IConnectionManager,System.String,System.String)
  name: ExecuteScalar<T>(IConnectionManager, String, String)
  href: api/ALE.ETLBox.ControlFlow.SqlServer.XmlaTask.html#ALE_ETLBox_ControlFlow_SqlServer_XmlaTask_ExecuteScalar__1_ALE_ETLBox_ConnectionManager_IConnectionManager_System_String_System_String_
  commentId: M:ALE.ETLBox.ControlFlow.SqlServer.XmlaTask.ExecuteScalar``1(ALE.ETLBox.ConnectionManager.IConnectionManager,System.String,System.String)
  name.vb: ExecuteScalar(Of T)(IConnectionManager, String, String)
  fullName: ALE.ETLBox.ControlFlow.SqlServer.XmlaTask.ExecuteScalar<T>(ALE.ETLBox.ConnectionManager.IConnectionManager, System.String, System.String)
  fullName.vb: ALE.ETLBox.ControlFlow.SqlServer.XmlaTask.ExecuteScalar(Of T)(ALE.ETLBox.ConnectionManager.IConnectionManager, System.String, System.String)
  nameWithType: XmlaTask.ExecuteScalar<T>(IConnectionManager, String, String)
  nameWithType.vb: XmlaTask.ExecuteScalar(Of T)(IConnectionManager, String, String)
- uid: ALE.ETLBox.ControlFlow.SqlServer.XmlaTask.ExecuteScalar``1(System.String,System.String)
  name: ExecuteScalar<T>(String, String)
  href: api/ALE.ETLBox.ControlFlow.SqlServer.XmlaTask.html#ALE_ETLBox_ControlFlow_SqlServer_XmlaTask_ExecuteScalar__1_System_String_System_String_
  commentId: M:ALE.ETLBox.ControlFlow.SqlServer.XmlaTask.ExecuteScalar``1(System.String,System.String)
  name.vb: ExecuteScalar(Of T)(String, String)
  fullName: ALE.ETLBox.ControlFlow.SqlServer.XmlaTask.ExecuteScalar<T>(System.String, System.String)
  fullName.vb: ALE.ETLBox.ControlFlow.SqlServer.XmlaTask.ExecuteScalar(Of T)(System.String, System.String)
  nameWithType: XmlaTask.ExecuteScalar<T>(String, String)
  nameWithType.vb: XmlaTask.ExecuteScalar(Of T)(String, String)
- uid: ALE.ETLBox.ControlFlow.SqlServer.XmlaTask.ExecuteScalarAsBool(ALE.ETLBox.ConnectionManager.IConnectionManager,System.String,System.String)
  name: ExecuteScalarAsBool(IConnectionManager, String, String)
  href: api/ALE.ETLBox.ControlFlow.SqlServer.XmlaTask.html#ALE_ETLBox_ControlFlow_SqlServer_XmlaTask_ExecuteScalarAsBool_ALE_ETLBox_ConnectionManager_IConnectionManager_System_String_System_String_
  commentId: M:ALE.ETLBox.ControlFlow.SqlServer.XmlaTask.ExecuteScalarAsBool(ALE.ETLBox.ConnectionManager.IConnectionManager,System.String,System.String)
  fullName: ALE.ETLBox.ControlFlow.SqlServer.XmlaTask.ExecuteScalarAsBool(ALE.ETLBox.ConnectionManager.IConnectionManager, System.String, System.String)
  nameWithType: XmlaTask.ExecuteScalarAsBool(IConnectionManager, String, String)
- uid: ALE.ETLBox.ControlFlow.SqlServer.XmlaTask.ExecuteScalarAsBool(System.String,System.String)
  name: ExecuteScalarAsBool(String, String)
  href: api/ALE.ETLBox.ControlFlow.SqlServer.XmlaTask.html#ALE_ETLBox_ControlFlow_SqlServer_XmlaTask_ExecuteScalarAsBool_System_String_System_String_
  commentId: M:ALE.ETLBox.ControlFlow.SqlServer.XmlaTask.ExecuteScalarAsBool(System.String,System.String)
  fullName: ALE.ETLBox.ControlFlow.SqlServer.XmlaTask.ExecuteScalarAsBool(System.String, System.String)
  nameWithType: XmlaTask.ExecuteScalarAsBool(String, String)
- uid: ALE.ETLBox.ControlFlow.SqlServer.XmlaTask.ExecuteScalarAsBool*
  name: ExecuteScalarAsBool
  href: api/ALE.ETLBox.ControlFlow.SqlServer.XmlaTask.html#ALE_ETLBox_ControlFlow_SqlServer_XmlaTask_ExecuteScalarAsBool_
  commentId: Overload:ALE.ETLBox.ControlFlow.SqlServer.XmlaTask.ExecuteScalarAsBool
  isSpec: "True"
  fullName: ALE.ETLBox.ControlFlow.SqlServer.XmlaTask.ExecuteScalarAsBool
  nameWithType: XmlaTask.ExecuteScalarAsBool
- uid: ALE.ETLBox.ControlFlow.SqlServer.XmlaTask.TaskName
  name: TaskName
  href: api/ALE.ETLBox.ControlFlow.SqlServer.XmlaTask.html#ALE_ETLBox_ControlFlow_SqlServer_XmlaTask_TaskName
  commentId: P:ALE.ETLBox.ControlFlow.SqlServer.XmlaTask.TaskName
  fullName: ALE.ETLBox.ControlFlow.SqlServer.XmlaTask.TaskName
  nameWithType: XmlaTask.TaskName
- uid: ALE.ETLBox.ControlFlow.SqlServer.XmlaTask.TaskName*
  name: TaskName
  href: api/ALE.ETLBox.ControlFlow.SqlServer.XmlaTask.html#ALE_ETLBox_ControlFlow_SqlServer_XmlaTask_TaskName_
  commentId: Overload:ALE.ETLBox.ControlFlow.SqlServer.XmlaTask.TaskName
  isSpec: "True"
  fullName: ALE.ETLBox.ControlFlow.SqlServer.XmlaTask.TaskName
  nameWithType: XmlaTask.TaskName
- uid: ALE.ETLBox.ControlFlow.SqlTask
  name: SqlTask
  href: api/ALE.ETLBox.ControlFlow.SqlTask.html
  commentId: T:ALE.ETLBox.ControlFlow.SqlTask
  fullName: ALE.ETLBox.ControlFlow.SqlTask
  nameWithType: SqlTask
- uid: ALE.ETLBox.ControlFlow.SqlTask.#ctor
  name: SqlTask()
  href: api/ALE.ETLBox.ControlFlow.SqlTask.html#ALE_ETLBox_ControlFlow_SqlTask__ctor
  commentId: M:ALE.ETLBox.ControlFlow.SqlTask.#ctor
  fullName: ALE.ETLBox.ControlFlow.SqlTask.SqlTask()
  nameWithType: SqlTask.SqlTask()
- uid: ALE.ETLBox.ControlFlow.SqlTask.#ctor(System.String)
  name: SqlTask(String)
  href: api/ALE.ETLBox.ControlFlow.SqlTask.html#ALE_ETLBox_ControlFlow_SqlTask__ctor_System_String_
  commentId: M:ALE.ETLBox.ControlFlow.SqlTask.#ctor(System.String)
  fullName: ALE.ETLBox.ControlFlow.SqlTask.SqlTask(System.String)
  nameWithType: SqlTask.SqlTask(String)
- uid: ALE.ETLBox.ControlFlow.SqlTask.#ctor(System.String,System.String)
  name: SqlTask(String, String)
  href: api/ALE.ETLBox.ControlFlow.SqlTask.html#ALE_ETLBox_ControlFlow_SqlTask__ctor_System_String_System_String_
  commentId: M:ALE.ETLBox.ControlFlow.SqlTask.#ctor(System.String,System.String)
  fullName: ALE.ETLBox.ControlFlow.SqlTask.SqlTask(System.String, System.String)
  nameWithType: SqlTask.SqlTask(String, String)
- uid: ALE.ETLBox.ControlFlow.SqlTask.#ctor(System.String,System.String,System.Action,System.Action,System.Action{System.Object}[])
  name: SqlTask(String, String, Action, Action, Action<Object>[])
  href: api/ALE.ETLBox.ControlFlow.SqlTask.html#ALE_ETLBox_ControlFlow_SqlTask__ctor_System_String_System_String_System_Action_System_Action_System_Action_System_Object____
  commentId: M:ALE.ETLBox.ControlFlow.SqlTask.#ctor(System.String,System.String,System.Action,System.Action,System.Action{System.Object}[])
  name.vb: SqlTask(String, String, Action, Action, Action(Of Object)())
  fullName: ALE.ETLBox.ControlFlow.SqlTask.SqlTask(System.String, System.String, System.Action, System.Action, System.Action<System.Object>[])
  fullName.vb: ALE.ETLBox.ControlFlow.SqlTask.SqlTask(System.String, System.String, System.Action, System.Action, System.Action(Of System.Object)())
  nameWithType: SqlTask.SqlTask(String, String, Action, Action, Action<Object>[])
  nameWithType.vb: SqlTask.SqlTask(String, String, Action, Action, Action(Of Object)())
- uid: ALE.ETLBox.ControlFlow.SqlTask.#ctor(System.String,System.String,System.Action{System.Object}[])
  name: SqlTask(String, String, Action<Object>[])
  href: api/ALE.ETLBox.ControlFlow.SqlTask.html#ALE_ETLBox_ControlFlow_SqlTask__ctor_System_String_System_String_System_Action_System_Object____
  commentId: M:ALE.ETLBox.ControlFlow.SqlTask.#ctor(System.String,System.String,System.Action{System.Object}[])
  name.vb: SqlTask(String, String, Action(Of Object)())
  fullName: ALE.ETLBox.ControlFlow.SqlTask.SqlTask(System.String, System.String, System.Action<System.Object>[])
  fullName.vb: ALE.ETLBox.ControlFlow.SqlTask.SqlTask(System.String, System.String, System.Action(Of System.Object)())
  nameWithType: SqlTask.SqlTask(String, String, Action<Object>[])
  nameWithType.vb: SqlTask.SqlTask(String, String, Action(Of Object)())
- uid: ALE.ETLBox.ControlFlow.SqlTask.#ctor(System.String,System.String,System.Collections.Generic.IEnumerable{ALE.ETLBox.QueryParameter})
  name: SqlTask(String, String, IEnumerable<QueryParameter>)
  href: api/ALE.ETLBox.ControlFlow.SqlTask.html#ALE_ETLBox_ControlFlow_SqlTask__ctor_System_String_System_String_System_Collections_Generic_IEnumerable_ALE_ETLBox_QueryParameter__
  commentId: M:ALE.ETLBox.ControlFlow.SqlTask.#ctor(System.String,System.String,System.Collections.Generic.IEnumerable{ALE.ETLBox.QueryParameter})
  name.vb: SqlTask(String, String, IEnumerable(Of QueryParameter))
  fullName: ALE.ETLBox.ControlFlow.SqlTask.SqlTask(System.String, System.String, System.Collections.Generic.IEnumerable<ALE.ETLBox.QueryParameter>)
  fullName.vb: ALE.ETLBox.ControlFlow.SqlTask.SqlTask(System.String, System.String, System.Collections.Generic.IEnumerable(Of ALE.ETLBox.QueryParameter))
  nameWithType: SqlTask.SqlTask(String, String, IEnumerable<QueryParameter>)
  nameWithType.vb: SqlTask.SqlTask(String, String, IEnumerable(Of QueryParameter))
- uid: ALE.ETLBox.ControlFlow.SqlTask.#ctor(System.String,System.String,System.Collections.Generic.IEnumerable{ALE.ETLBox.QueryParameter},System.Action,System.Action,System.Action{System.Object}[])
  name: SqlTask(String, String, IEnumerable<QueryParameter>, Action, Action, Action<Object>[])
  href: api/ALE.ETLBox.ControlFlow.SqlTask.html#ALE_ETLBox_ControlFlow_SqlTask__ctor_System_String_System_String_System_Collections_Generic_IEnumerable_ALE_ETLBox_QueryParameter__System_Action_System_Action_System_Action_System_Object____
  commentId: M:ALE.ETLBox.ControlFlow.SqlTask.#ctor(System.String,System.String,System.Collections.Generic.IEnumerable{ALE.ETLBox.QueryParameter},System.Action,System.Action,System.Action{System.Object}[])
  name.vb: SqlTask(String, String, IEnumerable(Of QueryParameter), Action, Action, Action(Of Object)())
  fullName: ALE.ETLBox.ControlFlow.SqlTask.SqlTask(System.String, System.String, System.Collections.Generic.IEnumerable<ALE.ETLBox.QueryParameter>, System.Action, System.Action, System.Action<System.Object>[])
  fullName.vb: ALE.ETLBox.ControlFlow.SqlTask.SqlTask(System.String, System.String, System.Collections.Generic.IEnumerable(Of ALE.ETLBox.QueryParameter), System.Action, System.Action, System.Action(Of System.Object)())
  nameWithType: SqlTask.SqlTask(String, String, IEnumerable<QueryParameter>, Action, Action, Action<Object>[])
  nameWithType.vb: SqlTask.SqlTask(String, String, IEnumerable(Of QueryParameter), Action, Action, Action(Of Object)())
- uid: ALE.ETLBox.ControlFlow.SqlTask.#ctor(System.String,System.String,System.Collections.Generic.IEnumerable{ALE.ETLBox.QueryParameter},System.Action{System.Object}[])
  name: SqlTask(String, String, IEnumerable<QueryParameter>, Action<Object>[])
  href: api/ALE.ETLBox.ControlFlow.SqlTask.html#ALE_ETLBox_ControlFlow_SqlTask__ctor_System_String_System_String_System_Collections_Generic_IEnumerable_ALE_ETLBox_QueryParameter__System_Action_System_Object____
  commentId: M:ALE.ETLBox.ControlFlow.SqlTask.#ctor(System.String,System.String,System.Collections.Generic.IEnumerable{ALE.ETLBox.QueryParameter},System.Action{System.Object}[])
  name.vb: SqlTask(String, String, IEnumerable(Of QueryParameter), Action(Of Object)())
  fullName: ALE.ETLBox.ControlFlow.SqlTask.SqlTask(System.String, System.String, System.Collections.Generic.IEnumerable<ALE.ETLBox.QueryParameter>, System.Action<System.Object>[])
  fullName.vb: ALE.ETLBox.ControlFlow.SqlTask.SqlTask(System.String, System.String, System.Collections.Generic.IEnumerable(Of ALE.ETLBox.QueryParameter), System.Action(Of System.Object)())
  nameWithType: SqlTask.SqlTask(String, String, IEnumerable<QueryParameter>, Action<Object>[])
  nameWithType.vb: SqlTask.SqlTask(String, String, IEnumerable(Of QueryParameter), Action(Of Object)())
- uid: ALE.ETLBox.ControlFlow.SqlTask.#ctor*
  name: SqlTask
  href: api/ALE.ETLBox.ControlFlow.SqlTask.html#ALE_ETLBox_ControlFlow_SqlTask__ctor_
  commentId: Overload:ALE.ETLBox.ControlFlow.SqlTask.#ctor
  isSpec: "True"
  fullName: ALE.ETLBox.ControlFlow.SqlTask.SqlTask
  nameWithType: SqlTask.SqlTask
- uid: ALE.ETLBox.ControlFlow.SqlTask.BulkInsert(ALE.ETLBox.ConnectionManager.IConnectionManager,System.String,ALE.ETLBox.ITableData,System.String)
  name: BulkInsert(IConnectionManager, String, ITableData, String)
  href: api/ALE.ETLBox.ControlFlow.SqlTask.html#ALE_ETLBox_ControlFlow_SqlTask_BulkInsert_ALE_ETLBox_ConnectionManager_IConnectionManager_System_String_ALE_ETLBox_ITableData_System_String_
  commentId: M:ALE.ETLBox.ControlFlow.SqlTask.BulkInsert(ALE.ETLBox.ConnectionManager.IConnectionManager,System.String,ALE.ETLBox.ITableData,System.String)
  fullName: ALE.ETLBox.ControlFlow.SqlTask.BulkInsert(ALE.ETLBox.ConnectionManager.IConnectionManager, System.String, ALE.ETLBox.ITableData, System.String)
  nameWithType: SqlTask.BulkInsert(IConnectionManager, String, ITableData, String)
- uid: ALE.ETLBox.ControlFlow.SqlTask.BulkInsert(System.String,ALE.ETLBox.ITableData,System.String)
  name: BulkInsert(String, ITableData, String)
  href: api/ALE.ETLBox.ControlFlow.SqlTask.html#ALE_ETLBox_ControlFlow_SqlTask_BulkInsert_System_String_ALE_ETLBox_ITableData_System_String_
  commentId: M:ALE.ETLBox.ControlFlow.SqlTask.BulkInsert(System.String,ALE.ETLBox.ITableData,System.String)
  fullName: ALE.ETLBox.ControlFlow.SqlTask.BulkInsert(System.String, ALE.ETLBox.ITableData, System.String)
  nameWithType: SqlTask.BulkInsert(String, ITableData, String)
- uid: ALE.ETLBox.ControlFlow.SqlTask.BulkInsert*
  name: BulkInsert
  href: api/ALE.ETLBox.ControlFlow.SqlTask.html#ALE_ETLBox_ControlFlow_SqlTask_BulkInsert_
  commentId: Overload:ALE.ETLBox.ControlFlow.SqlTask.BulkInsert
  isSpec: "True"
  fullName: ALE.ETLBox.ControlFlow.SqlTask.BulkInsert
  nameWithType: SqlTask.BulkInsert
- uid: ALE.ETLBox.ControlFlow.SqlTask.Execute
  name: Execute()
  href: api/ALE.ETLBox.ControlFlow.SqlTask.html#ALE_ETLBox_ControlFlow_SqlTask_Execute
  commentId: M:ALE.ETLBox.ControlFlow.SqlTask.Execute
  fullName: ALE.ETLBox.ControlFlow.SqlTask.Execute()
  nameWithType: SqlTask.Execute()
- uid: ALE.ETLBox.ControlFlow.SqlTask.Execute*
  name: Execute
  href: api/ALE.ETLBox.ControlFlow.SqlTask.html#ALE_ETLBox_ControlFlow_SqlTask_Execute_
  commentId: Overload:ALE.ETLBox.ControlFlow.SqlTask.Execute
  isSpec: "True"
  fullName: ALE.ETLBox.ControlFlow.SqlTask.Execute
  nameWithType: SqlTask.Execute
- uid: ALE.ETLBox.ControlFlow.SqlTask.ExecuteNonQuery(ALE.ETLBox.ConnectionManager.IConnectionManager,System.String,System.String)
  name: ExecuteNonQuery(IConnectionManager, String, String)
  href: api/ALE.ETLBox.ControlFlow.SqlTask.html#ALE_ETLBox_ControlFlow_SqlTask_ExecuteNonQuery_ALE_ETLBox_ConnectionManager_IConnectionManager_System_String_System_String_
  commentId: M:ALE.ETLBox.ControlFlow.SqlTask.ExecuteNonQuery(ALE.ETLBox.ConnectionManager.IConnectionManager,System.String,System.String)
  fullName: ALE.ETLBox.ControlFlow.SqlTask.ExecuteNonQuery(ALE.ETLBox.ConnectionManager.IConnectionManager, System.String, System.String)
  nameWithType: SqlTask.ExecuteNonQuery(IConnectionManager, String, String)
- uid: ALE.ETLBox.ControlFlow.SqlTask.ExecuteNonQuery(ALE.ETLBox.ConnectionManager.IConnectionManager,System.String,System.String,System.Collections.Generic.IEnumerable{ALE.ETLBox.QueryParameter})
  name: ExecuteNonQuery(IConnectionManager, String, String, IEnumerable<QueryParameter>)
  href: api/ALE.ETLBox.ControlFlow.SqlTask.html#ALE_ETLBox_ControlFlow_SqlTask_ExecuteNonQuery_ALE_ETLBox_ConnectionManager_IConnectionManager_System_String_System_String_System_Collections_Generic_IEnumerable_ALE_ETLBox_QueryParameter__
  commentId: M:ALE.ETLBox.ControlFlow.SqlTask.ExecuteNonQuery(ALE.ETLBox.ConnectionManager.IConnectionManager,System.String,System.String,System.Collections.Generic.IEnumerable{ALE.ETLBox.QueryParameter})
  name.vb: ExecuteNonQuery(IConnectionManager, String, String, IEnumerable(Of QueryParameter))
  fullName: ALE.ETLBox.ControlFlow.SqlTask.ExecuteNonQuery(ALE.ETLBox.ConnectionManager.IConnectionManager, System.String, System.String, System.Collections.Generic.IEnumerable<ALE.ETLBox.QueryParameter>)
  fullName.vb: ALE.ETLBox.ControlFlow.SqlTask.ExecuteNonQuery(ALE.ETLBox.ConnectionManager.IConnectionManager, System.String, System.String, System.Collections.Generic.IEnumerable(Of ALE.ETLBox.QueryParameter))
  nameWithType: SqlTask.ExecuteNonQuery(IConnectionManager, String, String, IEnumerable<QueryParameter>)
  nameWithType.vb: SqlTask.ExecuteNonQuery(IConnectionManager, String, String, IEnumerable(Of QueryParameter))
- uid: ALE.ETLBox.ControlFlow.SqlTask.ExecuteNonQuery(System.String,System.String)
  name: ExecuteNonQuery(String, String)
  href: api/ALE.ETLBox.ControlFlow.SqlTask.html#ALE_ETLBox_ControlFlow_SqlTask_ExecuteNonQuery_System_String_System_String_
  commentId: M:ALE.ETLBox.ControlFlow.SqlTask.ExecuteNonQuery(System.String,System.String)
  fullName: ALE.ETLBox.ControlFlow.SqlTask.ExecuteNonQuery(System.String, System.String)
  nameWithType: SqlTask.ExecuteNonQuery(String, String)
- uid: ALE.ETLBox.ControlFlow.SqlTask.ExecuteNonQuery(System.String,System.String,System.Collections.Generic.IEnumerable{ALE.ETLBox.QueryParameter})
  name: ExecuteNonQuery(String, String, IEnumerable<QueryParameter>)
  href: api/ALE.ETLBox.ControlFlow.SqlTask.html#ALE_ETLBox_ControlFlow_SqlTask_ExecuteNonQuery_System_String_System_String_System_Collections_Generic_IEnumerable_ALE_ETLBox_QueryParameter__
  commentId: M:ALE.ETLBox.ControlFlow.SqlTask.ExecuteNonQuery(System.String,System.String,System.Collections.Generic.IEnumerable{ALE.ETLBox.QueryParameter})
  name.vb: ExecuteNonQuery(String, String, IEnumerable(Of QueryParameter))
  fullName: ALE.ETLBox.ControlFlow.SqlTask.ExecuteNonQuery(System.String, System.String, System.Collections.Generic.IEnumerable<ALE.ETLBox.QueryParameter>)
  fullName.vb: ALE.ETLBox.ControlFlow.SqlTask.ExecuteNonQuery(System.String, System.String, System.Collections.Generic.IEnumerable(Of ALE.ETLBox.QueryParameter))
  nameWithType: SqlTask.ExecuteNonQuery(String, String, IEnumerable<QueryParameter>)
  nameWithType.vb: SqlTask.ExecuteNonQuery(String, String, IEnumerable(Of QueryParameter))
- uid: ALE.ETLBox.ControlFlow.SqlTask.ExecuteNonQuery*
  name: ExecuteNonQuery
  href: api/ALE.ETLBox.ControlFlow.SqlTask.html#ALE_ETLBox_ControlFlow_SqlTask_ExecuteNonQuery_
  commentId: Overload:ALE.ETLBox.ControlFlow.SqlTask.ExecuteNonQuery
  isSpec: "True"
  fullName: ALE.ETLBox.ControlFlow.SqlTask.ExecuteNonQuery
  nameWithType: SqlTask.ExecuteNonQuery
- uid: ALE.ETLBox.ControlFlow.SqlTask.ExecuteReader(ALE.ETLBox.ConnectionManager.IConnectionManager,System.String,System.String,System.Action,System.Action,System.Action{System.Object}[])
  name: ExecuteReader(IConnectionManager, String, String, Action, Action, Action<Object>[])
  href: api/ALE.ETLBox.ControlFlow.SqlTask.html#ALE_ETLBox_ControlFlow_SqlTask_ExecuteReader_ALE_ETLBox_ConnectionManager_IConnectionManager_System_String_System_String_System_Action_System_Action_System_Action_System_Object____
  commentId: M:ALE.ETLBox.ControlFlow.SqlTask.ExecuteReader(ALE.ETLBox.ConnectionManager.IConnectionManager,System.String,System.String,System.Action,System.Action,System.Action{System.Object}[])
  name.vb: ExecuteReader(IConnectionManager, String, String, Action, Action, Action(Of Object)())
  fullName: ALE.ETLBox.ControlFlow.SqlTask.ExecuteReader(ALE.ETLBox.ConnectionManager.IConnectionManager, System.String, System.String, System.Action, System.Action, System.Action<System.Object>[])
  fullName.vb: ALE.ETLBox.ControlFlow.SqlTask.ExecuteReader(ALE.ETLBox.ConnectionManager.IConnectionManager, System.String, System.String, System.Action, System.Action, System.Action(Of System.Object)())
  nameWithType: SqlTask.ExecuteReader(IConnectionManager, String, String, Action, Action, Action<Object>[])
  nameWithType.vb: SqlTask.ExecuteReader(IConnectionManager, String, String, Action, Action, Action(Of Object)())
- uid: ALE.ETLBox.ControlFlow.SqlTask.ExecuteReader(ALE.ETLBox.ConnectionManager.IConnectionManager,System.String,System.String,System.Action{System.Object}[])
  name: ExecuteReader(IConnectionManager, String, String, Action<Object>[])
  href: api/ALE.ETLBox.ControlFlow.SqlTask.html#ALE_ETLBox_ControlFlow_SqlTask_ExecuteReader_ALE_ETLBox_ConnectionManager_IConnectionManager_System_String_System_String_System_Action_System_Object____
  commentId: M:ALE.ETLBox.ControlFlow.SqlTask.ExecuteReader(ALE.ETLBox.ConnectionManager.IConnectionManager,System.String,System.String,System.Action{System.Object}[])
  name.vb: ExecuteReader(IConnectionManager, String, String, Action(Of Object)())
  fullName: ALE.ETLBox.ControlFlow.SqlTask.ExecuteReader(ALE.ETLBox.ConnectionManager.IConnectionManager, System.String, System.String, System.Action<System.Object>[])
  fullName.vb: ALE.ETLBox.ControlFlow.SqlTask.ExecuteReader(ALE.ETLBox.ConnectionManager.IConnectionManager, System.String, System.String, System.Action(Of System.Object)())
  nameWithType: SqlTask.ExecuteReader(IConnectionManager, String, String, Action<Object>[])
  nameWithType.vb: SqlTask.ExecuteReader(IConnectionManager, String, String, Action(Of Object)())
- uid: ALE.ETLBox.ControlFlow.SqlTask.ExecuteReader(ALE.ETLBox.ConnectionManager.IConnectionManager,System.String,System.String,System.Collections.Generic.IEnumerable{ALE.ETLBox.QueryParameter},System.Action{System.Object}[])
  name: ExecuteReader(IConnectionManager, String, String, IEnumerable<QueryParameter>, Action<Object>[])
  href: api/ALE.ETLBox.ControlFlow.SqlTask.html#ALE_ETLBox_ControlFlow_SqlTask_ExecuteReader_ALE_ETLBox_ConnectionManager_IConnectionManager_System_String_System_String_System_Collections_Generic_IEnumerable_ALE_ETLBox_QueryParameter__System_Action_System_Object____
  commentId: M:ALE.ETLBox.ControlFlow.SqlTask.ExecuteReader(ALE.ETLBox.ConnectionManager.IConnectionManager,System.String,System.String,System.Collections.Generic.IEnumerable{ALE.ETLBox.QueryParameter},System.Action{System.Object}[])
  name.vb: ExecuteReader(IConnectionManager, String, String, IEnumerable(Of QueryParameter), Action(Of Object)())
  fullName: ALE.ETLBox.ControlFlow.SqlTask.ExecuteReader(ALE.ETLBox.ConnectionManager.IConnectionManager, System.String, System.String, System.Collections.Generic.IEnumerable<ALE.ETLBox.QueryParameter>, System.Action<System.Object>[])
  fullName.vb: ALE.ETLBox.ControlFlow.SqlTask.ExecuteReader(ALE.ETLBox.ConnectionManager.IConnectionManager, System.String, System.String, System.Collections.Generic.IEnumerable(Of ALE.ETLBox.QueryParameter), System.Action(Of System.Object)())
  nameWithType: SqlTask.ExecuteReader(IConnectionManager, String, String, IEnumerable<QueryParameter>, Action<Object>[])
  nameWithType.vb: SqlTask.ExecuteReader(IConnectionManager, String, String, IEnumerable(Of QueryParameter), Action(Of Object)())
- uid: ALE.ETLBox.ControlFlow.SqlTask.ExecuteReader(System.String,System.String,System.Action,System.Action,System.Action{System.Object}[])
  name: ExecuteReader(String, String, Action, Action, Action<Object>[])
  href: api/ALE.ETLBox.ControlFlow.SqlTask.html#ALE_ETLBox_ControlFlow_SqlTask_ExecuteReader_System_String_System_String_System_Action_System_Action_System_Action_System_Object____
  commentId: M:ALE.ETLBox.ControlFlow.SqlTask.ExecuteReader(System.String,System.String,System.Action,System.Action,System.Action{System.Object}[])
  name.vb: ExecuteReader(String, String, Action, Action, Action(Of Object)())
  fullName: ALE.ETLBox.ControlFlow.SqlTask.ExecuteReader(System.String, System.String, System.Action, System.Action, System.Action<System.Object>[])
  fullName.vb: ALE.ETLBox.ControlFlow.SqlTask.ExecuteReader(System.String, System.String, System.Action, System.Action, System.Action(Of System.Object)())
  nameWithType: SqlTask.ExecuteReader(String, String, Action, Action, Action<Object>[])
  nameWithType.vb: SqlTask.ExecuteReader(String, String, Action, Action, Action(Of Object)())
- uid: ALE.ETLBox.ControlFlow.SqlTask.ExecuteReader(System.String,System.String,System.Action{System.Object}[])
  name: ExecuteReader(String, String, Action<Object>[])
  href: api/ALE.ETLBox.ControlFlow.SqlTask.html#ALE_ETLBox_ControlFlow_SqlTask_ExecuteReader_System_String_System_String_System_Action_System_Object____
  commentId: M:ALE.ETLBox.ControlFlow.SqlTask.ExecuteReader(System.String,System.String,System.Action{System.Object}[])
  name.vb: ExecuteReader(String, String, Action(Of Object)())
  fullName: ALE.ETLBox.ControlFlow.SqlTask.ExecuteReader(System.String, System.String, System.Action<System.Object>[])
  fullName.vb: ALE.ETLBox.ControlFlow.SqlTask.ExecuteReader(System.String, System.String, System.Action(Of System.Object)())
  nameWithType: SqlTask.ExecuteReader(String, String, Action<Object>[])
  nameWithType.vb: SqlTask.ExecuteReader(String, String, Action(Of Object)())
- uid: ALE.ETLBox.ControlFlow.SqlTask.ExecuteReader(System.String,System.String,System.Collections.Generic.IEnumerable{ALE.ETLBox.QueryParameter},System.Action,System.Action,System.Action{System.Object}[])
  name: ExecuteReader(String, String, IEnumerable<QueryParameter>, Action, Action, Action<Object>[])
  href: api/ALE.ETLBox.ControlFlow.SqlTask.html#ALE_ETLBox_ControlFlow_SqlTask_ExecuteReader_System_String_System_String_System_Collections_Generic_IEnumerable_ALE_ETLBox_QueryParameter__System_Action_System_Action_System_Action_System_Object____
  commentId: M:ALE.ETLBox.ControlFlow.SqlTask.ExecuteReader(System.String,System.String,System.Collections.Generic.IEnumerable{ALE.ETLBox.QueryParameter},System.Action,System.Action,System.Action{System.Object}[])
  name.vb: ExecuteReader(String, String, IEnumerable(Of QueryParameter), Action, Action, Action(Of Object)())
  fullName: ALE.ETLBox.ControlFlow.SqlTask.ExecuteReader(System.String, System.String, System.Collections.Generic.IEnumerable<ALE.ETLBox.QueryParameter>, System.Action, System.Action, System.Action<System.Object>[])
  fullName.vb: ALE.ETLBox.ControlFlow.SqlTask.ExecuteReader(System.String, System.String, System.Collections.Generic.IEnumerable(Of ALE.ETLBox.QueryParameter), System.Action, System.Action, System.Action(Of System.Object)())
  nameWithType: SqlTask.ExecuteReader(String, String, IEnumerable<QueryParameter>, Action, Action, Action<Object>[])
  nameWithType.vb: SqlTask.ExecuteReader(String, String, IEnumerable(Of QueryParameter), Action, Action, Action(Of Object)())
- uid: ALE.ETLBox.ControlFlow.SqlTask.ExecuteReader(System.String,System.String,System.Collections.Generic.IEnumerable{ALE.ETLBox.QueryParameter},System.Action{System.Object}[])
  name: ExecuteReader(String, String, IEnumerable<QueryParameter>, Action<Object>[])
  href: api/ALE.ETLBox.ControlFlow.SqlTask.html#ALE_ETLBox_ControlFlow_SqlTask_ExecuteReader_System_String_System_String_System_Collections_Generic_IEnumerable_ALE_ETLBox_QueryParameter__System_Action_System_Object____
  commentId: M:ALE.ETLBox.ControlFlow.SqlTask.ExecuteReader(System.String,System.String,System.Collections.Generic.IEnumerable{ALE.ETLBox.QueryParameter},System.Action{System.Object}[])
  name.vb: ExecuteReader(String, String, IEnumerable(Of QueryParameter), Action(Of Object)())
  fullName: ALE.ETLBox.ControlFlow.SqlTask.ExecuteReader(System.String, System.String, System.Collections.Generic.IEnumerable<ALE.ETLBox.QueryParameter>, System.Action<System.Object>[])
  fullName.vb: ALE.ETLBox.ControlFlow.SqlTask.ExecuteReader(System.String, System.String, System.Collections.Generic.IEnumerable(Of ALE.ETLBox.QueryParameter), System.Action(Of System.Object)())
  nameWithType: SqlTask.ExecuteReader(String, String, IEnumerable<QueryParameter>, Action<Object>[])
  nameWithType.vb: SqlTask.ExecuteReader(String, String, IEnumerable(Of QueryParameter), Action(Of Object)())
- uid: ALE.ETLBox.ControlFlow.SqlTask.ExecuteReader*
  name: ExecuteReader
  href: api/ALE.ETLBox.ControlFlow.SqlTask.html#ALE_ETLBox_ControlFlow_SqlTask_ExecuteReader_
  commentId: Overload:ALE.ETLBox.ControlFlow.SqlTask.ExecuteReader
  isSpec: "True"
  fullName: ALE.ETLBox.ControlFlow.SqlTask.ExecuteReader
  nameWithType: SqlTask.ExecuteReader
- uid: ALE.ETLBox.ControlFlow.SqlTask.ExecuteReaderSingleLine(ALE.ETLBox.ConnectionManager.IConnectionManager,System.String,System.String,System.Action{System.Object}[])
  name: ExecuteReaderSingleLine(IConnectionManager, String, String, Action<Object>[])
  href: api/ALE.ETLBox.ControlFlow.SqlTask.html#ALE_ETLBox_ControlFlow_SqlTask_ExecuteReaderSingleLine_ALE_ETLBox_ConnectionManager_IConnectionManager_System_String_System_String_System_Action_System_Object____
  commentId: M:ALE.ETLBox.ControlFlow.SqlTask.ExecuteReaderSingleLine(ALE.ETLBox.ConnectionManager.IConnectionManager,System.String,System.String,System.Action{System.Object}[])
  name.vb: ExecuteReaderSingleLine(IConnectionManager, String, String, Action(Of Object)())
  fullName: ALE.ETLBox.ControlFlow.SqlTask.ExecuteReaderSingleLine(ALE.ETLBox.ConnectionManager.IConnectionManager, System.String, System.String, System.Action<System.Object>[])
  fullName.vb: ALE.ETLBox.ControlFlow.SqlTask.ExecuteReaderSingleLine(ALE.ETLBox.ConnectionManager.IConnectionManager, System.String, System.String, System.Action(Of System.Object)())
  nameWithType: SqlTask.ExecuteReaderSingleLine(IConnectionManager, String, String, Action<Object>[])
  nameWithType.vb: SqlTask.ExecuteReaderSingleLine(IConnectionManager, String, String, Action(Of Object)())
- uid: ALE.ETLBox.ControlFlow.SqlTask.ExecuteReaderSingleLine(ALE.ETLBox.ConnectionManager.IConnectionManager,System.String,System.String,System.Collections.Generic.IEnumerable{ALE.ETLBox.QueryParameter},System.Action{System.Object}[])
  name: ExecuteReaderSingleLine(IConnectionManager, String, String, IEnumerable<QueryParameter>, Action<Object>[])
  href: api/ALE.ETLBox.ControlFlow.SqlTask.html#ALE_ETLBox_ControlFlow_SqlTask_ExecuteReaderSingleLine_ALE_ETLBox_ConnectionManager_IConnectionManager_System_String_System_String_System_Collections_Generic_IEnumerable_ALE_ETLBox_QueryParameter__System_Action_System_Object____
  commentId: M:ALE.ETLBox.ControlFlow.SqlTask.ExecuteReaderSingleLine(ALE.ETLBox.ConnectionManager.IConnectionManager,System.String,System.String,System.Collections.Generic.IEnumerable{ALE.ETLBox.QueryParameter},System.Action{System.Object}[])
  name.vb: ExecuteReaderSingleLine(IConnectionManager, String, String, IEnumerable(Of QueryParameter), Action(Of Object)())
  fullName: ALE.ETLBox.ControlFlow.SqlTask.ExecuteReaderSingleLine(ALE.ETLBox.ConnectionManager.IConnectionManager, System.String, System.String, System.Collections.Generic.IEnumerable<ALE.ETLBox.QueryParameter>, System.Action<System.Object>[])
  fullName.vb: ALE.ETLBox.ControlFlow.SqlTask.ExecuteReaderSingleLine(ALE.ETLBox.ConnectionManager.IConnectionManager, System.String, System.String, System.Collections.Generic.IEnumerable(Of ALE.ETLBox.QueryParameter), System.Action(Of System.Object)())
  nameWithType: SqlTask.ExecuteReaderSingleLine(IConnectionManager, String, String, IEnumerable<QueryParameter>, Action<Object>[])
  nameWithType.vb: SqlTask.ExecuteReaderSingleLine(IConnectionManager, String, String, IEnumerable(Of QueryParameter), Action(Of Object)())
- uid: ALE.ETLBox.ControlFlow.SqlTask.ExecuteReaderSingleLine(System.String,System.String,System.Action{System.Object}[])
  name: ExecuteReaderSingleLine(String, String, Action<Object>[])
  href: api/ALE.ETLBox.ControlFlow.SqlTask.html#ALE_ETLBox_ControlFlow_SqlTask_ExecuteReaderSingleLine_System_String_System_String_System_Action_System_Object____
  commentId: M:ALE.ETLBox.ControlFlow.SqlTask.ExecuteReaderSingleLine(System.String,System.String,System.Action{System.Object}[])
  name.vb: ExecuteReaderSingleLine(String, String, Action(Of Object)())
  fullName: ALE.ETLBox.ControlFlow.SqlTask.ExecuteReaderSingleLine(System.String, System.String, System.Action<System.Object>[])
  fullName.vb: ALE.ETLBox.ControlFlow.SqlTask.ExecuteReaderSingleLine(System.String, System.String, System.Action(Of System.Object)())
  nameWithType: SqlTask.ExecuteReaderSingleLine(String, String, Action<Object>[])
  nameWithType.vb: SqlTask.ExecuteReaderSingleLine(String, String, Action(Of Object)())
- uid: ALE.ETLBox.ControlFlow.SqlTask.ExecuteReaderSingleLine(System.String,System.String,System.Collections.Generic.IEnumerable{ALE.ETLBox.QueryParameter},System.Action{System.Object}[])
  name: ExecuteReaderSingleLine(String, String, IEnumerable<QueryParameter>, Action<Object>[])
  href: api/ALE.ETLBox.ControlFlow.SqlTask.html#ALE_ETLBox_ControlFlow_SqlTask_ExecuteReaderSingleLine_System_String_System_String_System_Collections_Generic_IEnumerable_ALE_ETLBox_QueryParameter__System_Action_System_Object____
  commentId: M:ALE.ETLBox.ControlFlow.SqlTask.ExecuteReaderSingleLine(System.String,System.String,System.Collections.Generic.IEnumerable{ALE.ETLBox.QueryParameter},System.Action{System.Object}[])
  name.vb: ExecuteReaderSingleLine(String, String, IEnumerable(Of QueryParameter), Action(Of Object)())
  fullName: ALE.ETLBox.ControlFlow.SqlTask.ExecuteReaderSingleLine(System.String, System.String, System.Collections.Generic.IEnumerable<ALE.ETLBox.QueryParameter>, System.Action<System.Object>[])
  fullName.vb: ALE.ETLBox.ControlFlow.SqlTask.ExecuteReaderSingleLine(System.String, System.String, System.Collections.Generic.IEnumerable(Of ALE.ETLBox.QueryParameter), System.Action(Of System.Object)())
  nameWithType: SqlTask.ExecuteReaderSingleLine(String, String, IEnumerable<QueryParameter>, Action<Object>[])
  nameWithType.vb: SqlTask.ExecuteReaderSingleLine(String, String, IEnumerable(Of QueryParameter), Action(Of Object)())
- uid: ALE.ETLBox.ControlFlow.SqlTask.ExecuteReaderSingleLine*
  name: ExecuteReaderSingleLine
  href: api/ALE.ETLBox.ControlFlow.SqlTask.html#ALE_ETLBox_ControlFlow_SqlTask_ExecuteReaderSingleLine_
  commentId: Overload:ALE.ETLBox.ControlFlow.SqlTask.ExecuteReaderSingleLine
  isSpec: "True"
  fullName: ALE.ETLBox.ControlFlow.SqlTask.ExecuteReaderSingleLine
  nameWithType: SqlTask.ExecuteReaderSingleLine
- uid: ALE.ETLBox.ControlFlow.SqlTask.ExecuteScalar(ALE.ETLBox.ConnectionManager.IConnectionManager,System.String,System.String)
  name: ExecuteScalar(IConnectionManager, String, String)
  href: api/ALE.ETLBox.ControlFlow.SqlTask.html#ALE_ETLBox_ControlFlow_SqlTask_ExecuteScalar_ALE_ETLBox_ConnectionManager_IConnectionManager_System_String_System_String_
  commentId: M:ALE.ETLBox.ControlFlow.SqlTask.ExecuteScalar(ALE.ETLBox.ConnectionManager.IConnectionManager,System.String,System.String)
  fullName: ALE.ETLBox.ControlFlow.SqlTask.ExecuteScalar(ALE.ETLBox.ConnectionManager.IConnectionManager, System.String, System.String)
  nameWithType: SqlTask.ExecuteScalar(IConnectionManager, String, String)
- uid: ALE.ETLBox.ControlFlow.SqlTask.ExecuteScalar(ALE.ETLBox.ConnectionManager.IConnectionManager,System.String,System.String,System.Collections.Generic.IEnumerable{ALE.ETLBox.QueryParameter})
  name: ExecuteScalar(IConnectionManager, String, String, IEnumerable<QueryParameter>)
  href: api/ALE.ETLBox.ControlFlow.SqlTask.html#ALE_ETLBox_ControlFlow_SqlTask_ExecuteScalar_ALE_ETLBox_ConnectionManager_IConnectionManager_System_String_System_String_System_Collections_Generic_IEnumerable_ALE_ETLBox_QueryParameter__
  commentId: M:ALE.ETLBox.ControlFlow.SqlTask.ExecuteScalar(ALE.ETLBox.ConnectionManager.IConnectionManager,System.String,System.String,System.Collections.Generic.IEnumerable{ALE.ETLBox.QueryParameter})
  name.vb: ExecuteScalar(IConnectionManager, String, String, IEnumerable(Of QueryParameter))
  fullName: ALE.ETLBox.ControlFlow.SqlTask.ExecuteScalar(ALE.ETLBox.ConnectionManager.IConnectionManager, System.String, System.String, System.Collections.Generic.IEnumerable<ALE.ETLBox.QueryParameter>)
  fullName.vb: ALE.ETLBox.ControlFlow.SqlTask.ExecuteScalar(ALE.ETLBox.ConnectionManager.IConnectionManager, System.String, System.String, System.Collections.Generic.IEnumerable(Of ALE.ETLBox.QueryParameter))
  nameWithType: SqlTask.ExecuteScalar(IConnectionManager, String, String, IEnumerable<QueryParameter>)
  nameWithType.vb: SqlTask.ExecuteScalar(IConnectionManager, String, String, IEnumerable(Of QueryParameter))
- uid: ALE.ETLBox.ControlFlow.SqlTask.ExecuteScalar(System.String,System.String)
  name: ExecuteScalar(String, String)
  href: api/ALE.ETLBox.ControlFlow.SqlTask.html#ALE_ETLBox_ControlFlow_SqlTask_ExecuteScalar_System_String_System_String_
  commentId: M:ALE.ETLBox.ControlFlow.SqlTask.ExecuteScalar(System.String,System.String)
  fullName: ALE.ETLBox.ControlFlow.SqlTask.ExecuteScalar(System.String, System.String)
  nameWithType: SqlTask.ExecuteScalar(String, String)
- uid: ALE.ETLBox.ControlFlow.SqlTask.ExecuteScalar(System.String,System.String,System.Collections.Generic.IEnumerable{ALE.ETLBox.QueryParameter})
  name: ExecuteScalar(String, String, IEnumerable<QueryParameter>)
  href: api/ALE.ETLBox.ControlFlow.SqlTask.html#ALE_ETLBox_ControlFlow_SqlTask_ExecuteScalar_System_String_System_String_System_Collections_Generic_IEnumerable_ALE_ETLBox_QueryParameter__
  commentId: M:ALE.ETLBox.ControlFlow.SqlTask.ExecuteScalar(System.String,System.String,System.Collections.Generic.IEnumerable{ALE.ETLBox.QueryParameter})
  name.vb: ExecuteScalar(String, String, IEnumerable(Of QueryParameter))
  fullName: ALE.ETLBox.ControlFlow.SqlTask.ExecuteScalar(System.String, System.String, System.Collections.Generic.IEnumerable<ALE.ETLBox.QueryParameter>)
  fullName.vb: ALE.ETLBox.ControlFlow.SqlTask.ExecuteScalar(System.String, System.String, System.Collections.Generic.IEnumerable(Of ALE.ETLBox.QueryParameter))
  nameWithType: SqlTask.ExecuteScalar(String, String, IEnumerable<QueryParameter>)
  nameWithType.vb: SqlTask.ExecuteScalar(String, String, IEnumerable(Of QueryParameter))
- uid: ALE.ETLBox.ControlFlow.SqlTask.ExecuteScalar*
  name: ExecuteScalar
  href: api/ALE.ETLBox.ControlFlow.SqlTask.html#ALE_ETLBox_ControlFlow_SqlTask_ExecuteScalar_
  commentId: Overload:ALE.ETLBox.ControlFlow.SqlTask.ExecuteScalar
  isSpec: "True"
  fullName: ALE.ETLBox.ControlFlow.SqlTask.ExecuteScalar
  nameWithType: SqlTask.ExecuteScalar
- uid: ALE.ETLBox.ControlFlow.SqlTask.ExecuteScalar``1(ALE.ETLBox.ConnectionManager.IConnectionManager,System.String,System.String)
  name: ExecuteScalar<T>(IConnectionManager, String, String)
  href: api/ALE.ETLBox.ControlFlow.SqlTask.html#ALE_ETLBox_ControlFlow_SqlTask_ExecuteScalar__1_ALE_ETLBox_ConnectionManager_IConnectionManager_System_String_System_String_
  commentId: M:ALE.ETLBox.ControlFlow.SqlTask.ExecuteScalar``1(ALE.ETLBox.ConnectionManager.IConnectionManager,System.String,System.String)
  name.vb: ExecuteScalar(Of T)(IConnectionManager, String, String)
  fullName: ALE.ETLBox.ControlFlow.SqlTask.ExecuteScalar<T>(ALE.ETLBox.ConnectionManager.IConnectionManager, System.String, System.String)
  fullName.vb: ALE.ETLBox.ControlFlow.SqlTask.ExecuteScalar(Of T)(ALE.ETLBox.ConnectionManager.IConnectionManager, System.String, System.String)
  nameWithType: SqlTask.ExecuteScalar<T>(IConnectionManager, String, String)
  nameWithType.vb: SqlTask.ExecuteScalar(Of T)(IConnectionManager, String, String)
- uid: ALE.ETLBox.ControlFlow.SqlTask.ExecuteScalar``1(System.String,System.String)
  name: ExecuteScalar<T>(String, String)
  href: api/ALE.ETLBox.ControlFlow.SqlTask.html#ALE_ETLBox_ControlFlow_SqlTask_ExecuteScalar__1_System_String_System_String_
  commentId: M:ALE.ETLBox.ControlFlow.SqlTask.ExecuteScalar``1(System.String,System.String)
  name.vb: ExecuteScalar(Of T)(String, String)
  fullName: ALE.ETLBox.ControlFlow.SqlTask.ExecuteScalar<T>(System.String, System.String)
  fullName.vb: ALE.ETLBox.ControlFlow.SqlTask.ExecuteScalar(Of T)(System.String, System.String)
  nameWithType: SqlTask.ExecuteScalar<T>(String, String)
  nameWithType.vb: SqlTask.ExecuteScalar(Of T)(String, String)
- uid: ALE.ETLBox.ControlFlow.SqlTask.ExecuteScalar``1(System.String,System.String,System.Collections.Generic.IEnumerable{ALE.ETLBox.QueryParameter})
  name: ExecuteScalar<T>(String, String, IEnumerable<QueryParameter>)
  href: api/ALE.ETLBox.ControlFlow.SqlTask.html#ALE_ETLBox_ControlFlow_SqlTask_ExecuteScalar__1_System_String_System_String_System_Collections_Generic_IEnumerable_ALE_ETLBox_QueryParameter__
  commentId: M:ALE.ETLBox.ControlFlow.SqlTask.ExecuteScalar``1(System.String,System.String,System.Collections.Generic.IEnumerable{ALE.ETLBox.QueryParameter})
  name.vb: ExecuteScalar(Of T)(String, String, IEnumerable(Of QueryParameter))
  fullName: ALE.ETLBox.ControlFlow.SqlTask.ExecuteScalar<T>(System.String, System.String, System.Collections.Generic.IEnumerable<ALE.ETLBox.QueryParameter>)
  fullName.vb: ALE.ETLBox.ControlFlow.SqlTask.ExecuteScalar(Of T)(System.String, System.String, System.Collections.Generic.IEnumerable(Of ALE.ETLBox.QueryParameter))
  nameWithType: SqlTask.ExecuteScalar<T>(String, String, IEnumerable<QueryParameter>)
  nameWithType.vb: SqlTask.ExecuteScalar(Of T)(String, String, IEnumerable(Of QueryParameter))
- uid: ALE.ETLBox.ControlFlow.SqlTask.ExecuteScalarAsBool(ALE.ETLBox.ConnectionManager.IConnectionManager,System.String,System.String)
  name: ExecuteScalarAsBool(IConnectionManager, String, String)
  href: api/ALE.ETLBox.ControlFlow.SqlTask.html#ALE_ETLBox_ControlFlow_SqlTask_ExecuteScalarAsBool_ALE_ETLBox_ConnectionManager_IConnectionManager_System_String_System_String_
  commentId: M:ALE.ETLBox.ControlFlow.SqlTask.ExecuteScalarAsBool(ALE.ETLBox.ConnectionManager.IConnectionManager,System.String,System.String)
  fullName: ALE.ETLBox.ControlFlow.SqlTask.ExecuteScalarAsBool(ALE.ETLBox.ConnectionManager.IConnectionManager, System.String, System.String)
  nameWithType: SqlTask.ExecuteScalarAsBool(IConnectionManager, String, String)
- uid: ALE.ETLBox.ControlFlow.SqlTask.ExecuteScalarAsBool(System.String,System.String)
  name: ExecuteScalarAsBool(String, String)
  href: api/ALE.ETLBox.ControlFlow.SqlTask.html#ALE_ETLBox_ControlFlow_SqlTask_ExecuteScalarAsBool_System_String_System_String_
  commentId: M:ALE.ETLBox.ControlFlow.SqlTask.ExecuteScalarAsBool(System.String,System.String)
  fullName: ALE.ETLBox.ControlFlow.SqlTask.ExecuteScalarAsBool(System.String, System.String)
  nameWithType: SqlTask.ExecuteScalarAsBool(String, String)
- uid: ALE.ETLBox.ControlFlow.SqlTask.ExecuteScalarAsBool(System.String,System.String,System.Collections.Generic.IEnumerable{ALE.ETLBox.QueryParameter})
  name: ExecuteScalarAsBool(String, String, IEnumerable<QueryParameter>)
  href: api/ALE.ETLBox.ControlFlow.SqlTask.html#ALE_ETLBox_ControlFlow_SqlTask_ExecuteScalarAsBool_System_String_System_String_System_Collections_Generic_IEnumerable_ALE_ETLBox_QueryParameter__
  commentId: M:ALE.ETLBox.ControlFlow.SqlTask.ExecuteScalarAsBool(System.String,System.String,System.Collections.Generic.IEnumerable{ALE.ETLBox.QueryParameter})
  name.vb: ExecuteScalarAsBool(String, String, IEnumerable(Of QueryParameter))
  fullName: ALE.ETLBox.ControlFlow.SqlTask.ExecuteScalarAsBool(System.String, System.String, System.Collections.Generic.IEnumerable<ALE.ETLBox.QueryParameter>)
  fullName.vb: ALE.ETLBox.ControlFlow.SqlTask.ExecuteScalarAsBool(System.String, System.String, System.Collections.Generic.IEnumerable(Of ALE.ETLBox.QueryParameter))
  nameWithType: SqlTask.ExecuteScalarAsBool(String, String, IEnumerable<QueryParameter>)
  nameWithType.vb: SqlTask.ExecuteScalarAsBool(String, String, IEnumerable(Of QueryParameter))
- uid: ALE.ETLBox.ControlFlow.SqlTask.ExecuteScalarAsBool*
  name: ExecuteScalarAsBool
  href: api/ALE.ETLBox.ControlFlow.SqlTask.html#ALE_ETLBox_ControlFlow_SqlTask_ExecuteScalarAsBool_
  commentId: Overload:ALE.ETLBox.ControlFlow.SqlTask.ExecuteScalarAsBool
  isSpec: "True"
  fullName: ALE.ETLBox.ControlFlow.SqlTask.ExecuteScalarAsBool
  nameWithType: SqlTask.ExecuteScalarAsBool
- uid: ALE.ETLBox.ControlFlow.SqlTask.TaskName
  name: TaskName
  href: api/ALE.ETLBox.ControlFlow.SqlTask.html#ALE_ETLBox_ControlFlow_SqlTask_TaskName
  commentId: P:ALE.ETLBox.ControlFlow.SqlTask.TaskName
  fullName: ALE.ETLBox.ControlFlow.SqlTask.TaskName
  nameWithType: SqlTask.TaskName
- uid: ALE.ETLBox.ControlFlow.SqlTask.TaskName*
  name: TaskName
  href: api/ALE.ETLBox.ControlFlow.SqlTask.html#ALE_ETLBox_ControlFlow_SqlTask_TaskName_
  commentId: Overload:ALE.ETLBox.ControlFlow.SqlTask.TaskName
  isSpec: "True"
  fullName: ALE.ETLBox.ControlFlow.SqlTask.TaskName
  nameWithType: SqlTask.TaskName
- uid: ALE.ETLBox.ControlFlow.TruncateTableTask
  name: TruncateTableTask
  href: api/ALE.ETLBox.ControlFlow.TruncateTableTask.html
  commentId: T:ALE.ETLBox.ControlFlow.TruncateTableTask
  fullName: ALE.ETLBox.ControlFlow.TruncateTableTask
  nameWithType: TruncateTableTask
- uid: ALE.ETLBox.ControlFlow.TruncateTableTask.#ctor
  name: TruncateTableTask()
  href: api/ALE.ETLBox.ControlFlow.TruncateTableTask.html#ALE_ETLBox_ControlFlow_TruncateTableTask__ctor
  commentId: M:ALE.ETLBox.ControlFlow.TruncateTableTask.#ctor
  fullName: ALE.ETLBox.ControlFlow.TruncateTableTask.TruncateTableTask()
  nameWithType: TruncateTableTask.TruncateTableTask()
- uid: ALE.ETLBox.ControlFlow.TruncateTableTask.#ctor(System.String)
  name: TruncateTableTask(String)
  href: api/ALE.ETLBox.ControlFlow.TruncateTableTask.html#ALE_ETLBox_ControlFlow_TruncateTableTask__ctor_System_String_
  commentId: M:ALE.ETLBox.ControlFlow.TruncateTableTask.#ctor(System.String)
  fullName: ALE.ETLBox.ControlFlow.TruncateTableTask.TruncateTableTask(System.String)
  nameWithType: TruncateTableTask.TruncateTableTask(String)
- uid: ALE.ETLBox.ControlFlow.TruncateTableTask.#ctor*
  name: TruncateTableTask
  href: api/ALE.ETLBox.ControlFlow.TruncateTableTask.html#ALE_ETLBox_ControlFlow_TruncateTableTask__ctor_
  commentId: Overload:ALE.ETLBox.ControlFlow.TruncateTableTask.#ctor
  isSpec: "True"
  fullName: ALE.ETLBox.ControlFlow.TruncateTableTask.TruncateTableTask
  nameWithType: TruncateTableTask.TruncateTableTask
- uid: ALE.ETLBox.ControlFlow.TruncateTableTask.Execute
  name: Execute()
  href: api/ALE.ETLBox.ControlFlow.TruncateTableTask.html#ALE_ETLBox_ControlFlow_TruncateTableTask_Execute
  commentId: M:ALE.ETLBox.ControlFlow.TruncateTableTask.Execute
  fullName: ALE.ETLBox.ControlFlow.TruncateTableTask.Execute()
  nameWithType: TruncateTableTask.Execute()
- uid: ALE.ETLBox.ControlFlow.TruncateTableTask.Execute*
  name: Execute
  href: api/ALE.ETLBox.ControlFlow.TruncateTableTask.html#ALE_ETLBox_ControlFlow_TruncateTableTask_Execute_
  commentId: Overload:ALE.ETLBox.ControlFlow.TruncateTableTask.Execute
  isSpec: "True"
  fullName: ALE.ETLBox.ControlFlow.TruncateTableTask.Execute
  nameWithType: TruncateTableTask.Execute
- uid: ALE.ETLBox.ControlFlow.TruncateTableTask.Sql
  name: Sql
  href: api/ALE.ETLBox.ControlFlow.TruncateTableTask.html#ALE_ETLBox_ControlFlow_TruncateTableTask_Sql
  commentId: P:ALE.ETLBox.ControlFlow.TruncateTableTask.Sql
  fullName: ALE.ETLBox.ControlFlow.TruncateTableTask.Sql
  nameWithType: TruncateTableTask.Sql
- uid: ALE.ETLBox.ControlFlow.TruncateTableTask.Sql*
  name: Sql
  href: api/ALE.ETLBox.ControlFlow.TruncateTableTask.html#ALE_ETLBox_ControlFlow_TruncateTableTask_Sql_
  commentId: Overload:ALE.ETLBox.ControlFlow.TruncateTableTask.Sql
  isSpec: "True"
  fullName: ALE.ETLBox.ControlFlow.TruncateTableTask.Sql
  nameWithType: TruncateTableTask.Sql
- uid: ALE.ETLBox.ControlFlow.TruncateTableTask.TableName
  name: TableName
  href: api/ALE.ETLBox.ControlFlow.TruncateTableTask.html#ALE_ETLBox_ControlFlow_TruncateTableTask_TableName
  commentId: P:ALE.ETLBox.ControlFlow.TruncateTableTask.TableName
  fullName: ALE.ETLBox.ControlFlow.TruncateTableTask.TableName
  nameWithType: TruncateTableTask.TableName
- uid: ALE.ETLBox.ControlFlow.TruncateTableTask.TableName*
  name: TableName
  href: api/ALE.ETLBox.ControlFlow.TruncateTableTask.html#ALE_ETLBox_ControlFlow_TruncateTableTask_TableName_
  commentId: Overload:ALE.ETLBox.ControlFlow.TruncateTableTask.TableName
  isSpec: "True"
  fullName: ALE.ETLBox.ControlFlow.TruncateTableTask.TableName
  nameWithType: TruncateTableTask.TableName
- uid: ALE.ETLBox.ControlFlow.TruncateTableTask.TaskName
  name: TaskName
  href: api/ALE.ETLBox.ControlFlow.TruncateTableTask.html#ALE_ETLBox_ControlFlow_TruncateTableTask_TaskName
  commentId: P:ALE.ETLBox.ControlFlow.TruncateTableTask.TaskName
  fullName: ALE.ETLBox.ControlFlow.TruncateTableTask.TaskName
  nameWithType: TruncateTableTask.TaskName
- uid: ALE.ETLBox.ControlFlow.TruncateTableTask.TaskName*
  name: TaskName
  href: api/ALE.ETLBox.ControlFlow.TruncateTableTask.html#ALE_ETLBox_ControlFlow_TruncateTableTask_TaskName_
  commentId: Overload:ALE.ETLBox.ControlFlow.TruncateTableTask.TaskName
  isSpec: "True"
  fullName: ALE.ETLBox.ControlFlow.TruncateTableTask.TaskName
  nameWithType: TruncateTableTask.TaskName
- uid: ALE.ETLBox.ControlFlow.TruncateTableTask.TN
  name: TN
  href: api/ALE.ETLBox.ControlFlow.TruncateTableTask.html#ALE_ETLBox_ControlFlow_TruncateTableTask_TN
  commentId: P:ALE.ETLBox.ControlFlow.TruncateTableTask.TN
  fullName: ALE.ETLBox.ControlFlow.TruncateTableTask.TN
  nameWithType: TruncateTableTask.TN
- uid: ALE.ETLBox.ControlFlow.TruncateTableTask.TN*
  name: TN
  href: api/ALE.ETLBox.ControlFlow.TruncateTableTask.html#ALE_ETLBox_ControlFlow_TruncateTableTask_TN_
  commentId: Overload:ALE.ETLBox.ControlFlow.TruncateTableTask.TN
  isSpec: "True"
  fullName: ALE.ETLBox.ControlFlow.TruncateTableTask.TN
  nameWithType: TruncateTableTask.TN
- uid: ALE.ETLBox.ControlFlow.TruncateTableTask.Truncate(ALE.ETLBox.ConnectionManager.IConnectionManager,System.String)
  name: Truncate(IConnectionManager, String)
  href: api/ALE.ETLBox.ControlFlow.TruncateTableTask.html#ALE_ETLBox_ControlFlow_TruncateTableTask_Truncate_ALE_ETLBox_ConnectionManager_IConnectionManager_System_String_
  commentId: M:ALE.ETLBox.ControlFlow.TruncateTableTask.Truncate(ALE.ETLBox.ConnectionManager.IConnectionManager,System.String)
  fullName: ALE.ETLBox.ControlFlow.TruncateTableTask.Truncate(ALE.ETLBox.ConnectionManager.IConnectionManager, System.String)
  nameWithType: TruncateTableTask.Truncate(IConnectionManager, String)
- uid: ALE.ETLBox.ControlFlow.TruncateTableTask.Truncate(System.String)
  name: Truncate(String)
  href: api/ALE.ETLBox.ControlFlow.TruncateTableTask.html#ALE_ETLBox_ControlFlow_TruncateTableTask_Truncate_System_String_
  commentId: M:ALE.ETLBox.ControlFlow.TruncateTableTask.Truncate(System.String)
  fullName: ALE.ETLBox.ControlFlow.TruncateTableTask.Truncate(System.String)
  nameWithType: TruncateTableTask.Truncate(String)
- uid: ALE.ETLBox.ControlFlow.TruncateTableTask.Truncate*
  name: Truncate
  href: api/ALE.ETLBox.ControlFlow.TruncateTableTask.html#ALE_ETLBox_ControlFlow_TruncateTableTask_Truncate_
  commentId: Overload:ALE.ETLBox.ControlFlow.TruncateTableTask.Truncate
  isSpec: "True"
  fullName: ALE.ETLBox.ControlFlow.TruncateTableTask.Truncate
  nameWithType: TruncateTableTask.Truncate
- uid: ALE.ETLBox.DataFlow
  name: ALE.ETLBox.DataFlow
  href: api/ALE.ETLBox.DataFlow.html
  commentId: N:ALE.ETLBox.DataFlow
  fullName: ALE.ETLBox.DataFlow
  nameWithType: ALE.ETLBox.DataFlow
- uid: ALE.ETLBox.DataFlow.AggregateColumn
  name: AggregateColumn
  href: api/ALE.ETLBox.DataFlow.AggregateColumn.html
  commentId: T:ALE.ETLBox.DataFlow.AggregateColumn
  fullName: ALE.ETLBox.DataFlow.AggregateColumn
  nameWithType: AggregateColumn
- uid: ALE.ETLBox.DataFlow.AggregateColumn.#ctor(System.String,ALE.ETLBox.DataFlow.AggregationMethod)
  name: AggregateColumn(String, AggregationMethod)
  href: api/ALE.ETLBox.DataFlow.AggregateColumn.html#ALE_ETLBox_DataFlow_AggregateColumn__ctor_System_String_ALE_ETLBox_DataFlow_AggregationMethod_
  commentId: M:ALE.ETLBox.DataFlow.AggregateColumn.#ctor(System.String,ALE.ETLBox.DataFlow.AggregationMethod)
  fullName: ALE.ETLBox.DataFlow.AggregateColumn.AggregateColumn(System.String, ALE.ETLBox.DataFlow.AggregationMethod)
  nameWithType: AggregateColumn.AggregateColumn(String, AggregationMethod)
- uid: ALE.ETLBox.DataFlow.AggregateColumn.#ctor*
  name: AggregateColumn
  href: api/ALE.ETLBox.DataFlow.AggregateColumn.html#ALE_ETLBox_DataFlow_AggregateColumn__ctor_
  commentId: Overload:ALE.ETLBox.DataFlow.AggregateColumn.#ctor
  isSpec: "True"
  fullName: ALE.ETLBox.DataFlow.AggregateColumn.AggregateColumn
  nameWithType: AggregateColumn.AggregateColumn
- uid: ALE.ETLBox.DataFlow.AggregateColumn.AggregationMethod
  name: AggregationMethod
  href: api/ALE.ETLBox.DataFlow.AggregateColumn.html#ALE_ETLBox_DataFlow_AggregateColumn_AggregationMethod
  commentId: P:ALE.ETLBox.DataFlow.AggregateColumn.AggregationMethod
  fullName: ALE.ETLBox.DataFlow.AggregateColumn.AggregationMethod
  nameWithType: AggregateColumn.AggregationMethod
- uid: ALE.ETLBox.DataFlow.AggregateColumn.AggregationMethod*
  name: AggregationMethod
  href: api/ALE.ETLBox.DataFlow.AggregateColumn.html#ALE_ETLBox_DataFlow_AggregateColumn_AggregationMethod_
  commentId: Overload:ALE.ETLBox.DataFlow.AggregateColumn.AggregationMethod
  isSpec: "True"
  fullName: ALE.ETLBox.DataFlow.AggregateColumn.AggregationMethod
  nameWithType: AggregateColumn.AggregationMethod
- uid: ALE.ETLBox.DataFlow.AggregateColumn.AggregationProperty
  name: AggregationProperty
  href: api/ALE.ETLBox.DataFlow.AggregateColumn.html#ALE_ETLBox_DataFlow_AggregateColumn_AggregationProperty
  commentId: P:ALE.ETLBox.DataFlow.AggregateColumn.AggregationProperty
  fullName: ALE.ETLBox.DataFlow.AggregateColumn.AggregationProperty
  nameWithType: AggregateColumn.AggregationProperty
- uid: ALE.ETLBox.DataFlow.AggregateColumn.AggregationProperty*
  name: AggregationProperty
  href: api/ALE.ETLBox.DataFlow.AggregateColumn.html#ALE_ETLBox_DataFlow_AggregateColumn_AggregationProperty_
  commentId: Overload:ALE.ETLBox.DataFlow.AggregateColumn.AggregationProperty
  isSpec: "True"
  fullName: ALE.ETLBox.DataFlow.AggregateColumn.AggregationProperty
  nameWithType: AggregateColumn.AggregationProperty
- uid: ALE.ETLBox.DataFlow.Aggregation
  name: Aggregation
  href: api/ALE.ETLBox.DataFlow.Aggregation.html
  commentId: T:ALE.ETLBox.DataFlow.Aggregation
  fullName: ALE.ETLBox.DataFlow.Aggregation
  nameWithType: Aggregation
- uid: ALE.ETLBox.DataFlow.Aggregation.#ctor(System.Action{System.Dynamic.ExpandoObject,System.Dynamic.ExpandoObject})
  name: Aggregation(Action<ExpandoObject, ExpandoObject>)
  href: api/ALE.ETLBox.DataFlow.Aggregation.html#ALE_ETLBox_DataFlow_Aggregation__ctor_System_Action_System_Dynamic_ExpandoObject_System_Dynamic_ExpandoObject__
  commentId: M:ALE.ETLBox.DataFlow.Aggregation.#ctor(System.Action{System.Dynamic.ExpandoObject,System.Dynamic.ExpandoObject})
  name.vb: Aggregation(Action(Of ExpandoObject, ExpandoObject))
  fullName: ALE.ETLBox.DataFlow.Aggregation.Aggregation(System.Action<System.Dynamic.ExpandoObject, System.Dynamic.ExpandoObject>)
  fullName.vb: ALE.ETLBox.DataFlow.Aggregation.Aggregation(System.Action(Of System.Dynamic.ExpandoObject, System.Dynamic.ExpandoObject))
  nameWithType: Aggregation.Aggregation(Action<ExpandoObject, ExpandoObject>)
  nameWithType.vb: Aggregation.Aggregation(Action(Of ExpandoObject, ExpandoObject))
- uid: ALE.ETLBox.DataFlow.Aggregation.#ctor(System.Action{System.Dynamic.ExpandoObject,System.Dynamic.ExpandoObject},System.Func{System.Dynamic.ExpandoObject,System.Object})
  name: Aggregation(Action<ExpandoObject, ExpandoObject>, Func<ExpandoObject, Object>)
  href: api/ALE.ETLBox.DataFlow.Aggregation.html#ALE_ETLBox_DataFlow_Aggregation__ctor_System_Action_System_Dynamic_ExpandoObject_System_Dynamic_ExpandoObject__System_Func_System_Dynamic_ExpandoObject_System_Object__
  commentId: M:ALE.ETLBox.DataFlow.Aggregation.#ctor(System.Action{System.Dynamic.ExpandoObject,System.Dynamic.ExpandoObject},System.Func{System.Dynamic.ExpandoObject,System.Object})
  name.vb: Aggregation(Action(Of ExpandoObject, ExpandoObject), Func(Of ExpandoObject, Object))
  fullName: ALE.ETLBox.DataFlow.Aggregation.Aggregation(System.Action<System.Dynamic.ExpandoObject, System.Dynamic.ExpandoObject>, System.Func<System.Dynamic.ExpandoObject, System.Object>)
  fullName.vb: ALE.ETLBox.DataFlow.Aggregation.Aggregation(System.Action(Of System.Dynamic.ExpandoObject, System.Dynamic.ExpandoObject), System.Func(Of System.Dynamic.ExpandoObject, System.Object))
  nameWithType: Aggregation.Aggregation(Action<ExpandoObject, ExpandoObject>, Func<ExpandoObject, Object>)
  nameWithType.vb: Aggregation.Aggregation(Action(Of ExpandoObject, ExpandoObject), Func(Of ExpandoObject, Object))
- uid: ALE.ETLBox.DataFlow.Aggregation.#ctor(System.Action{System.Dynamic.ExpandoObject,System.Dynamic.ExpandoObject},System.Func{System.Dynamic.ExpandoObject,System.Object},System.Action{System.Object,System.Dynamic.ExpandoObject})
  name: Aggregation(Action<ExpandoObject, ExpandoObject>, Func<ExpandoObject, Object>, Action<Object, ExpandoObject>)
  href: api/ALE.ETLBox.DataFlow.Aggregation.html#ALE_ETLBox_DataFlow_Aggregation__ctor_System_Action_System_Dynamic_ExpandoObject_System_Dynamic_ExpandoObject__System_Func_System_Dynamic_ExpandoObject_System_Object__System_Action_System_Object_System_Dynamic_ExpandoObject__
  commentId: M:ALE.ETLBox.DataFlow.Aggregation.#ctor(System.Action{System.Dynamic.ExpandoObject,System.Dynamic.ExpandoObject},System.Func{System.Dynamic.ExpandoObject,System.Object},System.Action{System.Object,System.Dynamic.ExpandoObject})
  name.vb: Aggregation(Action(Of ExpandoObject, ExpandoObject), Func(Of ExpandoObject, Object), Action(Of Object, ExpandoObject))
  fullName: ALE.ETLBox.DataFlow.Aggregation.Aggregation(System.Action<System.Dynamic.ExpandoObject, System.Dynamic.ExpandoObject>, System.Func<System.Dynamic.ExpandoObject, System.Object>, System.Action<System.Object, System.Dynamic.ExpandoObject>)
  fullName.vb: ALE.ETLBox.DataFlow.Aggregation.Aggregation(System.Action(Of System.Dynamic.ExpandoObject, System.Dynamic.ExpandoObject), System.Func(Of System.Dynamic.ExpandoObject, System.Object), System.Action(Of System.Object, System.Dynamic.ExpandoObject))
  nameWithType: Aggregation.Aggregation(Action<ExpandoObject, ExpandoObject>, Func<ExpandoObject, Object>, Action<Object, ExpandoObject>)
  nameWithType.vb: Aggregation.Aggregation(Action(Of ExpandoObject, ExpandoObject), Func(Of ExpandoObject, Object), Action(Of Object, ExpandoObject))
- uid: ALE.ETLBox.DataFlow.Aggregation.#ctor*
  name: Aggregation
  href: api/ALE.ETLBox.DataFlow.Aggregation.html#ALE_ETLBox_DataFlow_Aggregation__ctor_
  commentId: Overload:ALE.ETLBox.DataFlow.Aggregation.#ctor
  isSpec: "True"
  fullName: ALE.ETLBox.DataFlow.Aggregation.Aggregation
  nameWithType: Aggregation.Aggregation
- uid: ALE.ETLBox.DataFlow.Aggregation`2
  name: Aggregation<TInput, TOutput>
  href: api/ALE.ETLBox.DataFlow.Aggregation-2.html
  commentId: T:ALE.ETLBox.DataFlow.Aggregation`2
  name.vb: Aggregation(Of TInput, TOutput)
  fullName: ALE.ETLBox.DataFlow.Aggregation<TInput, TOutput>
  fullName.vb: ALE.ETLBox.DataFlow.Aggregation(Of TInput, TOutput)
  nameWithType: Aggregation<TInput, TOutput>
  nameWithType.vb: Aggregation(Of TInput, TOutput)
- uid: ALE.ETLBox.DataFlow.Aggregation`2.#ctor
  name: Aggregation()
  href: api/ALE.ETLBox.DataFlow.Aggregation-2.html#ALE_ETLBox_DataFlow_Aggregation_2__ctor
  commentId: M:ALE.ETLBox.DataFlow.Aggregation`2.#ctor
  fullName: ALE.ETLBox.DataFlow.Aggregation<TInput, TOutput>.Aggregation()
  fullName.vb: ALE.ETLBox.DataFlow.Aggregation(Of TInput, TOutput).Aggregation()
  nameWithType: Aggregation<TInput, TOutput>.Aggregation()
  nameWithType.vb: Aggregation(Of TInput, TOutput).Aggregation()
- uid: ALE.ETLBox.DataFlow.Aggregation`2.#ctor(System.Action{`0,`1})
  name: Aggregation(Action<TInput, TOutput>)
  href: api/ALE.ETLBox.DataFlow.Aggregation-2.html#ALE_ETLBox_DataFlow_Aggregation_2__ctor_System_Action__0__1__
  commentId: M:ALE.ETLBox.DataFlow.Aggregation`2.#ctor(System.Action{`0,`1})
  name.vb: Aggregation(Action(Of TInput, TOutput))
  fullName: ALE.ETLBox.DataFlow.Aggregation<TInput, TOutput>.Aggregation(System.Action<TInput, TOutput>)
  fullName.vb: ALE.ETLBox.DataFlow.Aggregation(Of TInput, TOutput).Aggregation(System.Action(Of TInput, TOutput))
  nameWithType: Aggregation<TInput, TOutput>.Aggregation(Action<TInput, TOutput>)
  nameWithType.vb: Aggregation(Of TInput, TOutput).Aggregation(Action(Of TInput, TOutput))
- uid: ALE.ETLBox.DataFlow.Aggregation`2.#ctor(System.Action{`0,`1},System.Func{`0,System.Object})
  name: Aggregation(Action<TInput, TOutput>, Func<TInput, Object>)
  href: api/ALE.ETLBox.DataFlow.Aggregation-2.html#ALE_ETLBox_DataFlow_Aggregation_2__ctor_System_Action__0__1__System_Func__0_System_Object__
  commentId: M:ALE.ETLBox.DataFlow.Aggregation`2.#ctor(System.Action{`0,`1},System.Func{`0,System.Object})
  name.vb: Aggregation(Action(Of TInput, TOutput), Func(Of TInput, Object))
  fullName: ALE.ETLBox.DataFlow.Aggregation<TInput, TOutput>.Aggregation(System.Action<TInput, TOutput>, System.Func<TInput, System.Object>)
  fullName.vb: ALE.ETLBox.DataFlow.Aggregation(Of TInput, TOutput).Aggregation(System.Action(Of TInput, TOutput), System.Func(Of TInput, System.Object))
  nameWithType: Aggregation<TInput, TOutput>.Aggregation(Action<TInput, TOutput>, Func<TInput, Object>)
  nameWithType.vb: Aggregation(Of TInput, TOutput).Aggregation(Action(Of TInput, TOutput), Func(Of TInput, Object))
- uid: ALE.ETLBox.DataFlow.Aggregation`2.#ctor(System.Action{`0,`1},System.Func{`0,System.Object},System.Action{System.Object,`1})
  name: Aggregation(Action<TInput, TOutput>, Func<TInput, Object>, Action<Object, TOutput>)
  href: api/ALE.ETLBox.DataFlow.Aggregation-2.html#ALE_ETLBox_DataFlow_Aggregation_2__ctor_System_Action__0__1__System_Func__0_System_Object__System_Action_System_Object__1__
  commentId: M:ALE.ETLBox.DataFlow.Aggregation`2.#ctor(System.Action{`0,`1},System.Func{`0,System.Object},System.Action{System.Object,`1})
  name.vb: Aggregation(Action(Of TInput, TOutput), Func(Of TInput, Object), Action(Of Object, TOutput))
  fullName: ALE.ETLBox.DataFlow.Aggregation<TInput, TOutput>.Aggregation(System.Action<TInput, TOutput>, System.Func<TInput, System.Object>, System.Action<System.Object, TOutput>)
  fullName.vb: ALE.ETLBox.DataFlow.Aggregation(Of TInput, TOutput).Aggregation(System.Action(Of TInput, TOutput), System.Func(Of TInput, System.Object), System.Action(Of System.Object, TOutput))
  nameWithType: Aggregation<TInput, TOutput>.Aggregation(Action<TInput, TOutput>, Func<TInput, Object>, Action<Object, TOutput>)
  nameWithType.vb: Aggregation(Of TInput, TOutput).Aggregation(Action(Of TInput, TOutput), Func(Of TInput, Object), Action(Of Object, TOutput))
- uid: ALE.ETLBox.DataFlow.Aggregation`2.#ctor*
  name: Aggregation
  href: api/ALE.ETLBox.DataFlow.Aggregation-2.html#ALE_ETLBox_DataFlow_Aggregation_2__ctor_
  commentId: Overload:ALE.ETLBox.DataFlow.Aggregation`2.#ctor
  isSpec: "True"
  fullName: ALE.ETLBox.DataFlow.Aggregation<TInput, TOutput>.Aggregation
  fullName.vb: ALE.ETLBox.DataFlow.Aggregation(Of TInput, TOutput).Aggregation
  nameWithType: Aggregation<TInput, TOutput>.Aggregation
  nameWithType.vb: Aggregation(Of TInput, TOutput).Aggregation
- uid: ALE.ETLBox.DataFlow.Aggregation`2.AggregationAction
  name: AggregationAction
  href: api/ALE.ETLBox.DataFlow.Aggregation-2.html#ALE_ETLBox_DataFlow_Aggregation_2_AggregationAction
  commentId: P:ALE.ETLBox.DataFlow.Aggregation`2.AggregationAction
  fullName: ALE.ETLBox.DataFlow.Aggregation<TInput, TOutput>.AggregationAction
  fullName.vb: ALE.ETLBox.DataFlow.Aggregation(Of TInput, TOutput).AggregationAction
  nameWithType: Aggregation<TInput, TOutput>.AggregationAction
  nameWithType.vb: Aggregation(Of TInput, TOutput).AggregationAction
- uid: ALE.ETLBox.DataFlow.Aggregation`2.AggregationAction*
  name: AggregationAction
  href: api/ALE.ETLBox.DataFlow.Aggregation-2.html#ALE_ETLBox_DataFlow_Aggregation_2_AggregationAction_
  commentId: Overload:ALE.ETLBox.DataFlow.Aggregation`2.AggregationAction
  isSpec: "True"
  fullName: ALE.ETLBox.DataFlow.Aggregation<TInput, TOutput>.AggregationAction
  fullName.vb: ALE.ETLBox.DataFlow.Aggregation(Of TInput, TOutput).AggregationAction
  nameWithType: Aggregation<TInput, TOutput>.AggregationAction
  nameWithType.vb: Aggregation(Of TInput, TOutput).AggregationAction
- uid: ALE.ETLBox.DataFlow.Aggregation`2.GroupingFunc
  name: GroupingFunc
  href: api/ALE.ETLBox.DataFlow.Aggregation-2.html#ALE_ETLBox_DataFlow_Aggregation_2_GroupingFunc
  commentId: P:ALE.ETLBox.DataFlow.Aggregation`2.GroupingFunc
  fullName: ALE.ETLBox.DataFlow.Aggregation<TInput, TOutput>.GroupingFunc
  fullName.vb: ALE.ETLBox.DataFlow.Aggregation(Of TInput, TOutput).GroupingFunc
  nameWithType: Aggregation<TInput, TOutput>.GroupingFunc
  nameWithType.vb: Aggregation(Of TInput, TOutput).GroupingFunc
- uid: ALE.ETLBox.DataFlow.Aggregation`2.GroupingFunc*
  name: GroupingFunc
  href: api/ALE.ETLBox.DataFlow.Aggregation-2.html#ALE_ETLBox_DataFlow_Aggregation_2_GroupingFunc_
  commentId: Overload:ALE.ETLBox.DataFlow.Aggregation`2.GroupingFunc
  isSpec: "True"
  fullName: ALE.ETLBox.DataFlow.Aggregation<TInput, TOutput>.GroupingFunc
  fullName.vb: ALE.ETLBox.DataFlow.Aggregation(Of TInput, TOutput).GroupingFunc
  nameWithType: Aggregation<TInput, TOutput>.GroupingFunc
  nameWithType.vb: Aggregation(Of TInput, TOutput).GroupingFunc
- uid: ALE.ETLBox.DataFlow.Aggregation`2.SourceBlock
  name: SourceBlock
  href: api/ALE.ETLBox.DataFlow.Aggregation-2.html#ALE_ETLBox_DataFlow_Aggregation_2_SourceBlock
  commentId: P:ALE.ETLBox.DataFlow.Aggregation`2.SourceBlock
  fullName: ALE.ETLBox.DataFlow.Aggregation<TInput, TOutput>.SourceBlock
  fullName.vb: ALE.ETLBox.DataFlow.Aggregation(Of TInput, TOutput).SourceBlock
  nameWithType: Aggregation<TInput, TOutput>.SourceBlock
  nameWithType.vb: Aggregation(Of TInput, TOutput).SourceBlock
- uid: ALE.ETLBox.DataFlow.Aggregation`2.SourceBlock*
  name: SourceBlock
  href: api/ALE.ETLBox.DataFlow.Aggregation-2.html#ALE_ETLBox_DataFlow_Aggregation_2_SourceBlock_
  commentId: Overload:ALE.ETLBox.DataFlow.Aggregation`2.SourceBlock
  isSpec: "True"
  fullName: ALE.ETLBox.DataFlow.Aggregation<TInput, TOutput>.SourceBlock
  fullName.vb: ALE.ETLBox.DataFlow.Aggregation(Of TInput, TOutput).SourceBlock
  nameWithType: Aggregation<TInput, TOutput>.SourceBlock
  nameWithType.vb: Aggregation(Of TInput, TOutput).SourceBlock
- uid: ALE.ETLBox.DataFlow.Aggregation`2.StoreKeyAction
  name: StoreKeyAction
  href: api/ALE.ETLBox.DataFlow.Aggregation-2.html#ALE_ETLBox_DataFlow_Aggregation_2_StoreKeyAction
  commentId: P:ALE.ETLBox.DataFlow.Aggregation`2.StoreKeyAction
  fullName: ALE.ETLBox.DataFlow.Aggregation<TInput, TOutput>.StoreKeyAction
  fullName.vb: ALE.ETLBox.DataFlow.Aggregation(Of TInput, TOutput).StoreKeyAction
  nameWithType: Aggregation<TInput, TOutput>.StoreKeyAction
  nameWithType.vb: Aggregation(Of TInput, TOutput).StoreKeyAction
- uid: ALE.ETLBox.DataFlow.Aggregation`2.StoreKeyAction*
  name: StoreKeyAction
  href: api/ALE.ETLBox.DataFlow.Aggregation-2.html#ALE_ETLBox_DataFlow_Aggregation_2_StoreKeyAction_
  commentId: Overload:ALE.ETLBox.DataFlow.Aggregation`2.StoreKeyAction
  isSpec: "True"
  fullName: ALE.ETLBox.DataFlow.Aggregation<TInput, TOutput>.StoreKeyAction
  fullName.vb: ALE.ETLBox.DataFlow.Aggregation(Of TInput, TOutput).StoreKeyAction
  nameWithType: Aggregation<TInput, TOutput>.StoreKeyAction
  nameWithType.vb: Aggregation(Of TInput, TOutput).StoreKeyAction
- uid: ALE.ETLBox.DataFlow.Aggregation`2.TargetBlock
  name: TargetBlock
  href: api/ALE.ETLBox.DataFlow.Aggregation-2.html#ALE_ETLBox_DataFlow_Aggregation_2_TargetBlock
  commentId: P:ALE.ETLBox.DataFlow.Aggregation`2.TargetBlock
  fullName: ALE.ETLBox.DataFlow.Aggregation<TInput, TOutput>.TargetBlock
  fullName.vb: ALE.ETLBox.DataFlow.Aggregation(Of TInput, TOutput).TargetBlock
  nameWithType: Aggregation<TInput, TOutput>.TargetBlock
  nameWithType.vb: Aggregation(Of TInput, TOutput).TargetBlock
- uid: ALE.ETLBox.DataFlow.Aggregation`2.TargetBlock*
  name: TargetBlock
  href: api/ALE.ETLBox.DataFlow.Aggregation-2.html#ALE_ETLBox_DataFlow_Aggregation_2_TargetBlock_
  commentId: Overload:ALE.ETLBox.DataFlow.Aggregation`2.TargetBlock
  isSpec: "True"
  fullName: ALE.ETLBox.DataFlow.Aggregation<TInput, TOutput>.TargetBlock
  fullName.vb: ALE.ETLBox.DataFlow.Aggregation(Of TInput, TOutput).TargetBlock
  nameWithType: Aggregation<TInput, TOutput>.TargetBlock
  nameWithType.vb: Aggregation(Of TInput, TOutput).TargetBlock
- uid: ALE.ETLBox.DataFlow.Aggregation`2.TaskName
  name: TaskName
  href: api/ALE.ETLBox.DataFlow.Aggregation-2.html#ALE_ETLBox_DataFlow_Aggregation_2_TaskName
  commentId: P:ALE.ETLBox.DataFlow.Aggregation`2.TaskName
  fullName: ALE.ETLBox.DataFlow.Aggregation<TInput, TOutput>.TaskName
  fullName.vb: ALE.ETLBox.DataFlow.Aggregation(Of TInput, TOutput).TaskName
  nameWithType: Aggregation<TInput, TOutput>.TaskName
  nameWithType.vb: Aggregation(Of TInput, TOutput).TaskName
- uid: ALE.ETLBox.DataFlow.Aggregation`2.TaskName*
  name: TaskName
  href: api/ALE.ETLBox.DataFlow.Aggregation-2.html#ALE_ETLBox_DataFlow_Aggregation_2_TaskName_
  commentId: Overload:ALE.ETLBox.DataFlow.Aggregation`2.TaskName
  isSpec: "True"
  fullName: ALE.ETLBox.DataFlow.Aggregation<TInput, TOutput>.TaskName
  fullName.vb: ALE.ETLBox.DataFlow.Aggregation(Of TInput, TOutput).TaskName
  nameWithType: Aggregation<TInput, TOutput>.TaskName
  nameWithType.vb: Aggregation(Of TInput, TOutput).TaskName
- uid: ALE.ETLBox.DataFlow.AggregationMethod
  name: AggregationMethod
  href: api/ALE.ETLBox.DataFlow.AggregationMethod.html
  commentId: T:ALE.ETLBox.DataFlow.AggregationMethod
  fullName: ALE.ETLBox.DataFlow.AggregationMethod
  nameWithType: AggregationMethod
- uid: ALE.ETLBox.DataFlow.AggregationMethod.Count
  name: Count
  href: api/ALE.ETLBox.DataFlow.AggregationMethod.html#ALE_ETLBox_DataFlow_AggregationMethod_Count
  commentId: F:ALE.ETLBox.DataFlow.AggregationMethod.Count
  fullName: ALE.ETLBox.DataFlow.AggregationMethod.Count
  nameWithType: AggregationMethod.Count
- uid: ALE.ETLBox.DataFlow.AggregationMethod.Max
  name: Max
  href: api/ALE.ETLBox.DataFlow.AggregationMethod.html#ALE_ETLBox_DataFlow_AggregationMethod_Max
  commentId: F:ALE.ETLBox.DataFlow.AggregationMethod.Max
  fullName: ALE.ETLBox.DataFlow.AggregationMethod.Max
  nameWithType: AggregationMethod.Max
- uid: ALE.ETLBox.DataFlow.AggregationMethod.Min
  name: Min
  href: api/ALE.ETLBox.DataFlow.AggregationMethod.html#ALE_ETLBox_DataFlow_AggregationMethod_Min
  commentId: F:ALE.ETLBox.DataFlow.AggregationMethod.Min
  fullName: ALE.ETLBox.DataFlow.AggregationMethod.Min
  nameWithType: AggregationMethod.Min
- uid: ALE.ETLBox.DataFlow.AggregationMethod.Sum
  name: Sum
  href: api/ALE.ETLBox.DataFlow.AggregationMethod.html#ALE_ETLBox_DataFlow_AggregationMethod_Sum
  commentId: F:ALE.ETLBox.DataFlow.AggregationMethod.Sum
  fullName: ALE.ETLBox.DataFlow.AggregationMethod.Sum
  nameWithType: AggregationMethod.Sum
- uid: ALE.ETLBox.DataFlow.AttributeProperties
  name: AttributeProperties
  href: api/ALE.ETLBox.DataFlow.AttributeProperties.html
  commentId: T:ALE.ETLBox.DataFlow.AttributeProperties
  fullName: ALE.ETLBox.DataFlow.AttributeProperties
  nameWithType: AttributeProperties
- uid: ALE.ETLBox.DataFlow.AttributeProperties.CompareAttributeProps
  name: CompareAttributeProps
  href: api/ALE.ETLBox.DataFlow.AttributeProperties.html#ALE_ETLBox_DataFlow_AttributeProperties_CompareAttributeProps
  commentId: P:ALE.ETLBox.DataFlow.AttributeProperties.CompareAttributeProps
  fullName: ALE.ETLBox.DataFlow.AttributeProperties.CompareAttributeProps
  nameWithType: AttributeProperties.CompareAttributeProps
- uid: ALE.ETLBox.DataFlow.AttributeProperties.CompareAttributeProps*
  name: CompareAttributeProps
  href: api/ALE.ETLBox.DataFlow.AttributeProperties.html#ALE_ETLBox_DataFlow_AttributeProperties_CompareAttributeProps_
  commentId: Overload:ALE.ETLBox.DataFlow.AttributeProperties.CompareAttributeProps
  isSpec: "True"
  fullName: ALE.ETLBox.DataFlow.AttributeProperties.CompareAttributeProps
  nameWithType: AttributeProperties.CompareAttributeProps
- uid: ALE.ETLBox.DataFlow.AttributeProperties.DeleteAttributeProps
  name: DeleteAttributeProps
  href: api/ALE.ETLBox.DataFlow.AttributeProperties.html#ALE_ETLBox_DataFlow_AttributeProperties_DeleteAttributeProps
  commentId: P:ALE.ETLBox.DataFlow.AttributeProperties.DeleteAttributeProps
  fullName: ALE.ETLBox.DataFlow.AttributeProperties.DeleteAttributeProps
  nameWithType: AttributeProperties.DeleteAttributeProps
- uid: ALE.ETLBox.DataFlow.AttributeProperties.DeleteAttributeProps*
  name: DeleteAttributeProps
  href: api/ALE.ETLBox.DataFlow.AttributeProperties.html#ALE_ETLBox_DataFlow_AttributeProperties_DeleteAttributeProps_
  commentId: Overload:ALE.ETLBox.DataFlow.AttributeProperties.DeleteAttributeProps
  isSpec: "True"
  fullName: ALE.ETLBox.DataFlow.AttributeProperties.DeleteAttributeProps
  nameWithType: AttributeProperties.DeleteAttributeProps
- uid: ALE.ETLBox.DataFlow.AttributeProperties.IdAttributeProps
  name: IdAttributeProps
  href: api/ALE.ETLBox.DataFlow.AttributeProperties.html#ALE_ETLBox_DataFlow_AttributeProperties_IdAttributeProps
  commentId: P:ALE.ETLBox.DataFlow.AttributeProperties.IdAttributeProps
  fullName: ALE.ETLBox.DataFlow.AttributeProperties.IdAttributeProps
  nameWithType: AttributeProperties.IdAttributeProps
- uid: ALE.ETLBox.DataFlow.AttributeProperties.IdAttributeProps*
  name: IdAttributeProps
  href: api/ALE.ETLBox.DataFlow.AttributeProperties.html#ALE_ETLBox_DataFlow_AttributeProperties_IdAttributeProps_
  commentId: Overload:ALE.ETLBox.DataFlow.AttributeProperties.IdAttributeProps
  isSpec: "True"
  fullName: ALE.ETLBox.DataFlow.AttributeProperties.IdAttributeProps
  nameWithType: AttributeProperties.IdAttributeProps
- uid: ALE.ETLBox.DataFlow.BlockTransformation
  name: BlockTransformation
  href: api/ALE.ETLBox.DataFlow.BlockTransformation.html
  commentId: T:ALE.ETLBox.DataFlow.BlockTransformation
  fullName: ALE.ETLBox.DataFlow.BlockTransformation
  nameWithType: BlockTransformation
- uid: ALE.ETLBox.DataFlow.BlockTransformation.#ctor(System.Func{System.Collections.Generic.List{System.Dynamic.ExpandoObject},System.Collections.Generic.List{System.Dynamic.ExpandoObject}})
  name: BlockTransformation(Func<List<ExpandoObject>, List<ExpandoObject>>)
  href: api/ALE.ETLBox.DataFlow.BlockTransformation.html#ALE_ETLBox_DataFlow_BlockTransformation__ctor_System_Func_System_Collections_Generic_List_System_Dynamic_ExpandoObject__System_Collections_Generic_List_System_Dynamic_ExpandoObject___
  commentId: M:ALE.ETLBox.DataFlow.BlockTransformation.#ctor(System.Func{System.Collections.Generic.List{System.Dynamic.ExpandoObject},System.Collections.Generic.List{System.Dynamic.ExpandoObject}})
  name.vb: BlockTransformation(Func(Of List(Of ExpandoObject), List(Of ExpandoObject)))
  fullName: ALE.ETLBox.DataFlow.BlockTransformation.BlockTransformation(System.Func<System.Collections.Generic.List<System.Dynamic.ExpandoObject>, System.Collections.Generic.List<System.Dynamic.ExpandoObject>>)
  fullName.vb: ALE.ETLBox.DataFlow.BlockTransformation.BlockTransformation(System.Func(Of System.Collections.Generic.List(Of System.Dynamic.ExpandoObject), System.Collections.Generic.List(Of System.Dynamic.ExpandoObject)))
  nameWithType: BlockTransformation.BlockTransformation(Func<List<ExpandoObject>, List<ExpandoObject>>)
  nameWithType.vb: BlockTransformation.BlockTransformation(Func(Of List(Of ExpandoObject), List(Of ExpandoObject)))
- uid: ALE.ETLBox.DataFlow.BlockTransformation.#ctor(System.String,System.Func{System.Collections.Generic.List{System.Dynamic.ExpandoObject},System.Collections.Generic.List{System.Dynamic.ExpandoObject}})
  name: BlockTransformation(String, Func<List<ExpandoObject>, List<ExpandoObject>>)
  href: api/ALE.ETLBox.DataFlow.BlockTransformation.html#ALE_ETLBox_DataFlow_BlockTransformation__ctor_System_String_System_Func_System_Collections_Generic_List_System_Dynamic_ExpandoObject__System_Collections_Generic_List_System_Dynamic_ExpandoObject___
  commentId: M:ALE.ETLBox.DataFlow.BlockTransformation.#ctor(System.String,System.Func{System.Collections.Generic.List{System.Dynamic.ExpandoObject},System.Collections.Generic.List{System.Dynamic.ExpandoObject}})
  name.vb: BlockTransformation(String, Func(Of List(Of ExpandoObject), List(Of ExpandoObject)))
  fullName: ALE.ETLBox.DataFlow.BlockTransformation.BlockTransformation(System.String, System.Func<System.Collections.Generic.List<System.Dynamic.ExpandoObject>, System.Collections.Generic.List<System.Dynamic.ExpandoObject>>)
  fullName.vb: ALE.ETLBox.DataFlow.BlockTransformation.BlockTransformation(System.String, System.Func(Of System.Collections.Generic.List(Of System.Dynamic.ExpandoObject), System.Collections.Generic.List(Of System.Dynamic.ExpandoObject)))
  nameWithType: BlockTransformation.BlockTransformation(String, Func<List<ExpandoObject>, List<ExpandoObject>>)
  nameWithType.vb: BlockTransformation.BlockTransformation(String, Func(Of List(Of ExpandoObject), List(Of ExpandoObject)))
- uid: ALE.ETLBox.DataFlow.BlockTransformation.#ctor*
  name: BlockTransformation
  href: api/ALE.ETLBox.DataFlow.BlockTransformation.html#ALE_ETLBox_DataFlow_BlockTransformation__ctor_
  commentId: Overload:ALE.ETLBox.DataFlow.BlockTransformation.#ctor
  isSpec: "True"
  fullName: ALE.ETLBox.DataFlow.BlockTransformation.BlockTransformation
  nameWithType: BlockTransformation.BlockTransformation
- uid: ALE.ETLBox.DataFlow.BlockTransformation`1
  name: BlockTransformation<TInput>
  href: api/ALE.ETLBox.DataFlow.BlockTransformation-1.html
  commentId: T:ALE.ETLBox.DataFlow.BlockTransformation`1
  name.vb: BlockTransformation(Of TInput)
  fullName: ALE.ETLBox.DataFlow.BlockTransformation<TInput>
  fullName.vb: ALE.ETLBox.DataFlow.BlockTransformation(Of TInput)
  nameWithType: BlockTransformation<TInput>
  nameWithType.vb: BlockTransformation(Of TInput)
- uid: ALE.ETLBox.DataFlow.BlockTransformation`1.#ctor(System.Func{System.Collections.Generic.List{`0},System.Collections.Generic.List{`0}})
  name: BlockTransformation(Func<List<TInput>, List<TInput>>)
  href: api/ALE.ETLBox.DataFlow.BlockTransformation-1.html#ALE_ETLBox_DataFlow_BlockTransformation_1__ctor_System_Func_System_Collections_Generic_List__0__System_Collections_Generic_List__0___
  commentId: M:ALE.ETLBox.DataFlow.BlockTransformation`1.#ctor(System.Func{System.Collections.Generic.List{`0},System.Collections.Generic.List{`0}})
  name.vb: BlockTransformation(Func(Of List(Of TInput), List(Of TInput)))
  fullName: ALE.ETLBox.DataFlow.BlockTransformation<TInput>.BlockTransformation(System.Func<System.Collections.Generic.List<TInput>, System.Collections.Generic.List<TInput>>)
  fullName.vb: ALE.ETLBox.DataFlow.BlockTransformation(Of TInput).BlockTransformation(System.Func(Of System.Collections.Generic.List(Of TInput), System.Collections.Generic.List(Of TInput)))
  nameWithType: BlockTransformation<TInput>.BlockTransformation(Func<List<TInput>, List<TInput>>)
  nameWithType.vb: BlockTransformation(Of TInput).BlockTransformation(Func(Of List(Of TInput), List(Of TInput)))
- uid: ALE.ETLBox.DataFlow.BlockTransformation`1.#ctor(System.String,System.Func{System.Collections.Generic.List{`0},System.Collections.Generic.List{`0}})
  name: BlockTransformation(String, Func<List<TInput>, List<TInput>>)
  href: api/ALE.ETLBox.DataFlow.BlockTransformation-1.html#ALE_ETLBox_DataFlow_BlockTransformation_1__ctor_System_String_System_Func_System_Collections_Generic_List__0__System_Collections_Generic_List__0___
  commentId: M:ALE.ETLBox.DataFlow.BlockTransformation`1.#ctor(System.String,System.Func{System.Collections.Generic.List{`0},System.Collections.Generic.List{`0}})
  name.vb: BlockTransformation(String, Func(Of List(Of TInput), List(Of TInput)))
  fullName: ALE.ETLBox.DataFlow.BlockTransformation<TInput>.BlockTransformation(System.String, System.Func<System.Collections.Generic.List<TInput>, System.Collections.Generic.List<TInput>>)
  fullName.vb: ALE.ETLBox.DataFlow.BlockTransformation(Of TInput).BlockTransformation(System.String, System.Func(Of System.Collections.Generic.List(Of TInput), System.Collections.Generic.List(Of TInput)))
  nameWithType: BlockTransformation<TInput>.BlockTransformation(String, Func<List<TInput>, List<TInput>>)
  nameWithType.vb: BlockTransformation(Of TInput).BlockTransformation(String, Func(Of List(Of TInput), List(Of TInput)))
- uid: ALE.ETLBox.DataFlow.BlockTransformation`1.#ctor*
  name: BlockTransformation
  href: api/ALE.ETLBox.DataFlow.BlockTransformation-1.html#ALE_ETLBox_DataFlow_BlockTransformation_1__ctor_
  commentId: Overload:ALE.ETLBox.DataFlow.BlockTransformation`1.#ctor
  isSpec: "True"
  fullName: ALE.ETLBox.DataFlow.BlockTransformation<TInput>.BlockTransformation
  fullName.vb: ALE.ETLBox.DataFlow.BlockTransformation(Of TInput).BlockTransformation
  nameWithType: BlockTransformation<TInput>.BlockTransformation
  nameWithType.vb: BlockTransformation(Of TInput).BlockTransformation
- uid: ALE.ETLBox.DataFlow.BlockTransformation`2
  name: BlockTransformation<TInput, TOutput>
  href: api/ALE.ETLBox.DataFlow.BlockTransformation-2.html
  commentId: T:ALE.ETLBox.DataFlow.BlockTransformation`2
  name.vb: BlockTransformation(Of TInput, TOutput)
  fullName: ALE.ETLBox.DataFlow.BlockTransformation<TInput, TOutput>
  fullName.vb: ALE.ETLBox.DataFlow.BlockTransformation(Of TInput, TOutput)
  nameWithType: BlockTransformation<TInput, TOutput>
  nameWithType.vb: BlockTransformation(Of TInput, TOutput)
- uid: ALE.ETLBox.DataFlow.BlockTransformation`2.#ctor
  name: BlockTransformation()
  href: api/ALE.ETLBox.DataFlow.BlockTransformation-2.html#ALE_ETLBox_DataFlow_BlockTransformation_2__ctor
  commentId: M:ALE.ETLBox.DataFlow.BlockTransformation`2.#ctor
  fullName: ALE.ETLBox.DataFlow.BlockTransformation<TInput, TOutput>.BlockTransformation()
  fullName.vb: ALE.ETLBox.DataFlow.BlockTransformation(Of TInput, TOutput).BlockTransformation()
  nameWithType: BlockTransformation<TInput, TOutput>.BlockTransformation()
  nameWithType.vb: BlockTransformation(Of TInput, TOutput).BlockTransformation()
- uid: ALE.ETLBox.DataFlow.BlockTransformation`2.#ctor(System.Func{System.Collections.Generic.List{`0},System.Collections.Generic.List{`1}})
  name: BlockTransformation(Func<List<TInput>, List<TOutput>>)
  href: api/ALE.ETLBox.DataFlow.BlockTransformation-2.html#ALE_ETLBox_DataFlow_BlockTransformation_2__ctor_System_Func_System_Collections_Generic_List__0__System_Collections_Generic_List__1___
  commentId: M:ALE.ETLBox.DataFlow.BlockTransformation`2.#ctor(System.Func{System.Collections.Generic.List{`0},System.Collections.Generic.List{`1}})
  name.vb: BlockTransformation(Func(Of List(Of TInput), List(Of TOutput)))
  fullName: ALE.ETLBox.DataFlow.BlockTransformation<TInput, TOutput>.BlockTransformation(System.Func<System.Collections.Generic.List<TInput>, System.Collections.Generic.List<TOutput>>)
  fullName.vb: ALE.ETLBox.DataFlow.BlockTransformation(Of TInput, TOutput).BlockTransformation(System.Func(Of System.Collections.Generic.List(Of TInput), System.Collections.Generic.List(Of TOutput)))
  nameWithType: BlockTransformation<TInput, TOutput>.BlockTransformation(Func<List<TInput>, List<TOutput>>)
  nameWithType.vb: BlockTransformation(Of TInput, TOutput).BlockTransformation(Func(Of List(Of TInput), List(Of TOutput)))
- uid: ALE.ETLBox.DataFlow.BlockTransformation`2.#ctor(System.String,System.Func{System.Collections.Generic.List{`0},System.Collections.Generic.List{`1}})
  name: BlockTransformation(String, Func<List<TInput>, List<TOutput>>)
  href: api/ALE.ETLBox.DataFlow.BlockTransformation-2.html#ALE_ETLBox_DataFlow_BlockTransformation_2__ctor_System_String_System_Func_System_Collections_Generic_List__0__System_Collections_Generic_List__1___
  commentId: M:ALE.ETLBox.DataFlow.BlockTransformation`2.#ctor(System.String,System.Func{System.Collections.Generic.List{`0},System.Collections.Generic.List{`1}})
  name.vb: BlockTransformation(String, Func(Of List(Of TInput), List(Of TOutput)))
  fullName: ALE.ETLBox.DataFlow.BlockTransformation<TInput, TOutput>.BlockTransformation(System.String, System.Func<System.Collections.Generic.List<TInput>, System.Collections.Generic.List<TOutput>>)
  fullName.vb: ALE.ETLBox.DataFlow.BlockTransformation(Of TInput, TOutput).BlockTransformation(System.String, System.Func(Of System.Collections.Generic.List(Of TInput), System.Collections.Generic.List(Of TOutput)))
  nameWithType: BlockTransformation<TInput, TOutput>.BlockTransformation(String, Func<List<TInput>, List<TOutput>>)
  nameWithType.vb: BlockTransformation(Of TInput, TOutput).BlockTransformation(String, Func(Of List(Of TInput), List(Of TOutput)))
- uid: ALE.ETLBox.DataFlow.BlockTransformation`2.#ctor*
  name: BlockTransformation
  href: api/ALE.ETLBox.DataFlow.BlockTransformation-2.html#ALE_ETLBox_DataFlow_BlockTransformation_2__ctor_
  commentId: Overload:ALE.ETLBox.DataFlow.BlockTransformation`2.#ctor
  isSpec: "True"
  fullName: ALE.ETLBox.DataFlow.BlockTransformation<TInput, TOutput>.BlockTransformation
  fullName.vb: ALE.ETLBox.DataFlow.BlockTransformation(Of TInput, TOutput).BlockTransformation
  nameWithType: BlockTransformation<TInput, TOutput>.BlockTransformation
  nameWithType.vb: BlockTransformation(Of TInput, TOutput).BlockTransformation
- uid: ALE.ETLBox.DataFlow.BlockTransformation`2.BlockTransformationFunc
  name: BlockTransformationFunc
  href: api/ALE.ETLBox.DataFlow.BlockTransformation-2.html#ALE_ETLBox_DataFlow_BlockTransformation_2_BlockTransformationFunc
  commentId: P:ALE.ETLBox.DataFlow.BlockTransformation`2.BlockTransformationFunc
  fullName: ALE.ETLBox.DataFlow.BlockTransformation<TInput, TOutput>.BlockTransformationFunc
  fullName.vb: ALE.ETLBox.DataFlow.BlockTransformation(Of TInput, TOutput).BlockTransformationFunc
  nameWithType: BlockTransformation<TInput, TOutput>.BlockTransformationFunc
  nameWithType.vb: BlockTransformation(Of TInput, TOutput).BlockTransformationFunc
- uid: ALE.ETLBox.DataFlow.BlockTransformation`2.BlockTransformationFunc*
  name: BlockTransformationFunc
  href: api/ALE.ETLBox.DataFlow.BlockTransformation-2.html#ALE_ETLBox_DataFlow_BlockTransformation_2_BlockTransformationFunc_
  commentId: Overload:ALE.ETLBox.DataFlow.BlockTransformation`2.BlockTransformationFunc
  isSpec: "True"
  fullName: ALE.ETLBox.DataFlow.BlockTransformation<TInput, TOutput>.BlockTransformationFunc
  fullName.vb: ALE.ETLBox.DataFlow.BlockTransformation(Of TInput, TOutput).BlockTransformationFunc
  nameWithType: BlockTransformation<TInput, TOutput>.BlockTransformationFunc
  nameWithType.vb: BlockTransformation(Of TInput, TOutput).BlockTransformationFunc
- uid: ALE.ETLBox.DataFlow.BlockTransformation`2.SourceBlock
  name: SourceBlock
  href: api/ALE.ETLBox.DataFlow.BlockTransformation-2.html#ALE_ETLBox_DataFlow_BlockTransformation_2_SourceBlock
  commentId: P:ALE.ETLBox.DataFlow.BlockTransformation`2.SourceBlock
  fullName: ALE.ETLBox.DataFlow.BlockTransformation<TInput, TOutput>.SourceBlock
  fullName.vb: ALE.ETLBox.DataFlow.BlockTransformation(Of TInput, TOutput).SourceBlock
  nameWithType: BlockTransformation<TInput, TOutput>.SourceBlock
  nameWithType.vb: BlockTransformation(Of TInput, TOutput).SourceBlock
- uid: ALE.ETLBox.DataFlow.BlockTransformation`2.SourceBlock*
  name: SourceBlock
  href: api/ALE.ETLBox.DataFlow.BlockTransformation-2.html#ALE_ETLBox_DataFlow_BlockTransformation_2_SourceBlock_
  commentId: Overload:ALE.ETLBox.DataFlow.BlockTransformation`2.SourceBlock
  isSpec: "True"
  fullName: ALE.ETLBox.DataFlow.BlockTransformation<TInput, TOutput>.SourceBlock
  fullName.vb: ALE.ETLBox.DataFlow.BlockTransformation(Of TInput, TOutput).SourceBlock
  nameWithType: BlockTransformation<TInput, TOutput>.SourceBlock
  nameWithType.vb: BlockTransformation(Of TInput, TOutput).SourceBlock
- uid: ALE.ETLBox.DataFlow.BlockTransformation`2.TargetBlock
  name: TargetBlock
  href: api/ALE.ETLBox.DataFlow.BlockTransformation-2.html#ALE_ETLBox_DataFlow_BlockTransformation_2_TargetBlock
  commentId: P:ALE.ETLBox.DataFlow.BlockTransformation`2.TargetBlock
  fullName: ALE.ETLBox.DataFlow.BlockTransformation<TInput, TOutput>.TargetBlock
  fullName.vb: ALE.ETLBox.DataFlow.BlockTransformation(Of TInput, TOutput).TargetBlock
  nameWithType: BlockTransformation<TInput, TOutput>.TargetBlock
  nameWithType.vb: BlockTransformation(Of TInput, TOutput).TargetBlock
- uid: ALE.ETLBox.DataFlow.BlockTransformation`2.TargetBlock*
  name: TargetBlock
  href: api/ALE.ETLBox.DataFlow.BlockTransformation-2.html#ALE_ETLBox_DataFlow_BlockTransformation_2_TargetBlock_
  commentId: Overload:ALE.ETLBox.DataFlow.BlockTransformation`2.TargetBlock
  isSpec: "True"
  fullName: ALE.ETLBox.DataFlow.BlockTransformation<TInput, TOutput>.TargetBlock
  fullName.vb: ALE.ETLBox.DataFlow.BlockTransformation(Of TInput, TOutput).TargetBlock
  nameWithType: BlockTransformation<TInput, TOutput>.TargetBlock
  nameWithType.vb: BlockTransformation(Of TInput, TOutput).TargetBlock
- uid: ALE.ETLBox.DataFlow.BlockTransformation`2.TaskName
  name: TaskName
  href: api/ALE.ETLBox.DataFlow.BlockTransformation-2.html#ALE_ETLBox_DataFlow_BlockTransformation_2_TaskName
  commentId: P:ALE.ETLBox.DataFlow.BlockTransformation`2.TaskName
  fullName: ALE.ETLBox.DataFlow.BlockTransformation<TInput, TOutput>.TaskName
  fullName.vb: ALE.ETLBox.DataFlow.BlockTransformation(Of TInput, TOutput).TaskName
  nameWithType: BlockTransformation<TInput, TOutput>.TaskName
  nameWithType.vb: BlockTransformation(Of TInput, TOutput).TaskName
- uid: ALE.ETLBox.DataFlow.BlockTransformation`2.TaskName*
  name: TaskName
  href: api/ALE.ETLBox.DataFlow.BlockTransformation-2.html#ALE_ETLBox_DataFlow_BlockTransformation_2_TaskName_
  commentId: Overload:ALE.ETLBox.DataFlow.BlockTransformation`2.TaskName
  isSpec: "True"
  fullName: ALE.ETLBox.DataFlow.BlockTransformation<TInput, TOutput>.TaskName
  fullName.vb: ALE.ETLBox.DataFlow.BlockTransformation(Of TInput, TOutput).TaskName
  nameWithType: BlockTransformation<TInput, TOutput>.TaskName
  nameWithType.vb: BlockTransformation(Of TInput, TOutput).TaskName
- uid: ALE.ETLBox.DataFlow.ColumnMap
  name: ColumnMap
  href: api/ALE.ETLBox.DataFlow.ColumnMap.html
  commentId: T:ALE.ETLBox.DataFlow.ColumnMap
  fullName: ALE.ETLBox.DataFlow.ColumnMap
  nameWithType: ColumnMap
- uid: ALE.ETLBox.DataFlow.ColumnMap.#ctor(System.String)
  name: ColumnMap(String)
  href: api/ALE.ETLBox.DataFlow.ColumnMap.html#ALE_ETLBox_DataFlow_ColumnMap__ctor_System_String_
  commentId: M:ALE.ETLBox.DataFlow.ColumnMap.#ctor(System.String)
  fullName: ALE.ETLBox.DataFlow.ColumnMap.ColumnMap(System.String)
  nameWithType: ColumnMap.ColumnMap(String)
- uid: ALE.ETLBox.DataFlow.ColumnMap.#ctor*
  name: ColumnMap
  href: api/ALE.ETLBox.DataFlow.ColumnMap.html#ALE_ETLBox_DataFlow_ColumnMap__ctor_
  commentId: Overload:ALE.ETLBox.DataFlow.ColumnMap.#ctor
  isSpec: "True"
  fullName: ALE.ETLBox.DataFlow.ColumnMap.ColumnMap
  nameWithType: ColumnMap.ColumnMap
- uid: ALE.ETLBox.DataFlow.ColumnMap.ColumnName
  name: ColumnName
  href: api/ALE.ETLBox.DataFlow.ColumnMap.html#ALE_ETLBox_DataFlow_ColumnMap_ColumnName
  commentId: P:ALE.ETLBox.DataFlow.ColumnMap.ColumnName
  fullName: ALE.ETLBox.DataFlow.ColumnMap.ColumnName
  nameWithType: ColumnMap.ColumnName
- uid: ALE.ETLBox.DataFlow.ColumnMap.ColumnName*
  name: ColumnName
  href: api/ALE.ETLBox.DataFlow.ColumnMap.html#ALE_ETLBox_DataFlow_ColumnMap_ColumnName_
  commentId: Overload:ALE.ETLBox.DataFlow.ColumnMap.ColumnName
  isSpec: "True"
  fullName: ALE.ETLBox.DataFlow.ColumnMap.ColumnName
  nameWithType: ColumnMap.ColumnName
- uid: ALE.ETLBox.DataFlow.CompareColumn
  name: CompareColumn
  href: api/ALE.ETLBox.DataFlow.CompareColumn.html
  commentId: T:ALE.ETLBox.DataFlow.CompareColumn
  fullName: ALE.ETLBox.DataFlow.CompareColumn
  nameWithType: CompareColumn
- uid: ALE.ETLBox.DataFlow.CompareColumn.#ctor
  name: CompareColumn()
  href: api/ALE.ETLBox.DataFlow.CompareColumn.html#ALE_ETLBox_DataFlow_CompareColumn__ctor
  commentId: M:ALE.ETLBox.DataFlow.CompareColumn.#ctor
  fullName: ALE.ETLBox.DataFlow.CompareColumn.CompareColumn()
  nameWithType: CompareColumn.CompareColumn()
- uid: ALE.ETLBox.DataFlow.CompareColumn.#ctor*
  name: CompareColumn
  href: api/ALE.ETLBox.DataFlow.CompareColumn.html#ALE_ETLBox_DataFlow_CompareColumn__ctor_
  commentId: Overload:ALE.ETLBox.DataFlow.CompareColumn.#ctor
  isSpec: "True"
  fullName: ALE.ETLBox.DataFlow.CompareColumn.CompareColumn
  nameWithType: CompareColumn.CompareColumn
- uid: ALE.ETLBox.DataFlow.CrossJoin
  name: CrossJoin
  href: api/ALE.ETLBox.DataFlow.CrossJoin.html
  commentId: T:ALE.ETLBox.DataFlow.CrossJoin
  fullName: ALE.ETLBox.DataFlow.CrossJoin
  nameWithType: CrossJoin
- uid: ALE.ETLBox.DataFlow.CrossJoin.#ctor
  name: CrossJoin()
  href: api/ALE.ETLBox.DataFlow.CrossJoin.html#ALE_ETLBox_DataFlow_CrossJoin__ctor
  commentId: M:ALE.ETLBox.DataFlow.CrossJoin.#ctor
  fullName: ALE.ETLBox.DataFlow.CrossJoin.CrossJoin()
  nameWithType: CrossJoin.CrossJoin()
- uid: ALE.ETLBox.DataFlow.CrossJoin.#ctor(System.Func{System.Dynamic.ExpandoObject,System.Dynamic.ExpandoObject,System.Dynamic.ExpandoObject})
  name: CrossJoin(Func<ExpandoObject, ExpandoObject, ExpandoObject>)
  href: api/ALE.ETLBox.DataFlow.CrossJoin.html#ALE_ETLBox_DataFlow_CrossJoin__ctor_System_Func_System_Dynamic_ExpandoObject_System_Dynamic_ExpandoObject_System_Dynamic_ExpandoObject__
  commentId: M:ALE.ETLBox.DataFlow.CrossJoin.#ctor(System.Func{System.Dynamic.ExpandoObject,System.Dynamic.ExpandoObject,System.Dynamic.ExpandoObject})
  name.vb: CrossJoin(Func(Of ExpandoObject, ExpandoObject, ExpandoObject))
  fullName: ALE.ETLBox.DataFlow.CrossJoin.CrossJoin(System.Func<System.Dynamic.ExpandoObject, System.Dynamic.ExpandoObject, System.Dynamic.ExpandoObject>)
  fullName.vb: ALE.ETLBox.DataFlow.CrossJoin.CrossJoin(System.Func(Of System.Dynamic.ExpandoObject, System.Dynamic.ExpandoObject, System.Dynamic.ExpandoObject))
  nameWithType: CrossJoin.CrossJoin(Func<ExpandoObject, ExpandoObject, ExpandoObject>)
  nameWithType.vb: CrossJoin.CrossJoin(Func(Of ExpandoObject, ExpandoObject, ExpandoObject))
- uid: ALE.ETLBox.DataFlow.CrossJoin.#ctor*
  name: CrossJoin
  href: api/ALE.ETLBox.DataFlow.CrossJoin.html#ALE_ETLBox_DataFlow_CrossJoin__ctor_
  commentId: Overload:ALE.ETLBox.DataFlow.CrossJoin.#ctor
  isSpec: "True"
  fullName: ALE.ETLBox.DataFlow.CrossJoin.CrossJoin
  nameWithType: CrossJoin.CrossJoin
- uid: ALE.ETLBox.DataFlow.CrossJoin`1
  name: CrossJoin<TInput>
  href: api/ALE.ETLBox.DataFlow.CrossJoin-1.html
  commentId: T:ALE.ETLBox.DataFlow.CrossJoin`1
  name.vb: CrossJoin(Of TInput)
  fullName: ALE.ETLBox.DataFlow.CrossJoin<TInput>
  fullName.vb: ALE.ETLBox.DataFlow.CrossJoin(Of TInput)
  nameWithType: CrossJoin<TInput>
  nameWithType.vb: CrossJoin(Of TInput)
- uid: ALE.ETLBox.DataFlow.CrossJoin`1.#ctor
  name: CrossJoin()
  href: api/ALE.ETLBox.DataFlow.CrossJoin-1.html#ALE_ETLBox_DataFlow_CrossJoin_1__ctor
  commentId: M:ALE.ETLBox.DataFlow.CrossJoin`1.#ctor
  fullName: ALE.ETLBox.DataFlow.CrossJoin<TInput>.CrossJoin()
  fullName.vb: ALE.ETLBox.DataFlow.CrossJoin(Of TInput).CrossJoin()
  nameWithType: CrossJoin<TInput>.CrossJoin()
  nameWithType.vb: CrossJoin(Of TInput).CrossJoin()
- uid: ALE.ETLBox.DataFlow.CrossJoin`1.#ctor(System.Func{`0,`0,`0})
  name: CrossJoin(Func<TInput, TInput, TInput>)
  href: api/ALE.ETLBox.DataFlow.CrossJoin-1.html#ALE_ETLBox_DataFlow_CrossJoin_1__ctor_System_Func__0__0__0__
  commentId: M:ALE.ETLBox.DataFlow.CrossJoin`1.#ctor(System.Func{`0,`0,`0})
  name.vb: CrossJoin(Func(Of TInput, TInput, TInput))
  fullName: ALE.ETLBox.DataFlow.CrossJoin<TInput>.CrossJoin(System.Func<TInput, TInput, TInput>)
  fullName.vb: ALE.ETLBox.DataFlow.CrossJoin(Of TInput).CrossJoin(System.Func(Of TInput, TInput, TInput))
  nameWithType: CrossJoin<TInput>.CrossJoin(Func<TInput, TInput, TInput>)
  nameWithType.vb: CrossJoin(Of TInput).CrossJoin(Func(Of TInput, TInput, TInput))
- uid: ALE.ETLBox.DataFlow.CrossJoin`1.#ctor*
  name: CrossJoin
  href: api/ALE.ETLBox.DataFlow.CrossJoin-1.html#ALE_ETLBox_DataFlow_CrossJoin_1__ctor_
  commentId: Overload:ALE.ETLBox.DataFlow.CrossJoin`1.#ctor
  isSpec: "True"
  fullName: ALE.ETLBox.DataFlow.CrossJoin<TInput>.CrossJoin
  fullName.vb: ALE.ETLBox.DataFlow.CrossJoin(Of TInput).CrossJoin
  nameWithType: CrossJoin<TInput>.CrossJoin
  nameWithType.vb: CrossJoin(Of TInput).CrossJoin
- uid: ALE.ETLBox.DataFlow.CrossJoin`3
  name: CrossJoin<TInput1, TInput2, TOutput>
  href: api/ALE.ETLBox.DataFlow.CrossJoin-3.html
  commentId: T:ALE.ETLBox.DataFlow.CrossJoin`3
  name.vb: CrossJoin(Of TInput1, TInput2, TOutput)
  fullName: ALE.ETLBox.DataFlow.CrossJoin<TInput1, TInput2, TOutput>
  fullName.vb: ALE.ETLBox.DataFlow.CrossJoin(Of TInput1, TInput2, TOutput)
  nameWithType: CrossJoin<TInput1, TInput2, TOutput>
  nameWithType.vb: CrossJoin(Of TInput1, TInput2, TOutput)
- uid: ALE.ETLBox.DataFlow.CrossJoin`3.#ctor
  name: CrossJoin()
  href: api/ALE.ETLBox.DataFlow.CrossJoin-3.html#ALE_ETLBox_DataFlow_CrossJoin_3__ctor
  commentId: M:ALE.ETLBox.DataFlow.CrossJoin`3.#ctor
  fullName: ALE.ETLBox.DataFlow.CrossJoin<TInput1, TInput2, TOutput>.CrossJoin()
  fullName.vb: ALE.ETLBox.DataFlow.CrossJoin(Of TInput1, TInput2, TOutput).CrossJoin()
  nameWithType: CrossJoin<TInput1, TInput2, TOutput>.CrossJoin()
  nameWithType.vb: CrossJoin(Of TInput1, TInput2, TOutput).CrossJoin()
- uid: ALE.ETLBox.DataFlow.CrossJoin`3.#ctor(System.Func{`0,`1,`2})
  name: CrossJoin(Func<TInput1, TInput2, TOutput>)
  href: api/ALE.ETLBox.DataFlow.CrossJoin-3.html#ALE_ETLBox_DataFlow_CrossJoin_3__ctor_System_Func__0__1__2__
  commentId: M:ALE.ETLBox.DataFlow.CrossJoin`3.#ctor(System.Func{`0,`1,`2})
  name.vb: CrossJoin(Func(Of TInput1, TInput2, TOutput))
  fullName: ALE.ETLBox.DataFlow.CrossJoin<TInput1, TInput2, TOutput>.CrossJoin(System.Func<TInput1, TInput2, TOutput>)
  fullName.vb: ALE.ETLBox.DataFlow.CrossJoin(Of TInput1, TInput2, TOutput).CrossJoin(System.Func(Of TInput1, TInput2, TOutput))
  nameWithType: CrossJoin<TInput1, TInput2, TOutput>.CrossJoin(Func<TInput1, TInput2, TOutput>)
  nameWithType.vb: CrossJoin(Of TInput1, TInput2, TOutput).CrossJoin(Func(Of TInput1, TInput2, TOutput))
- uid: ALE.ETLBox.DataFlow.CrossJoin`3.#ctor*
  name: CrossJoin
  href: api/ALE.ETLBox.DataFlow.CrossJoin-3.html#ALE_ETLBox_DataFlow_CrossJoin_3__ctor_
  commentId: Overload:ALE.ETLBox.DataFlow.CrossJoin`3.#ctor
  isSpec: "True"
  fullName: ALE.ETLBox.DataFlow.CrossJoin<TInput1, TInput2, TOutput>.CrossJoin
  fullName.vb: ALE.ETLBox.DataFlow.CrossJoin(Of TInput1, TInput2, TOutput).CrossJoin
  nameWithType: CrossJoin<TInput1, TInput2, TOutput>.CrossJoin
  nameWithType.vb: CrossJoin(Of TInput1, TInput2, TOutput).CrossJoin
- uid: ALE.ETLBox.DataFlow.CrossJoin`3.CrossJoinFunc
  name: CrossJoinFunc
  href: api/ALE.ETLBox.DataFlow.CrossJoin-3.html#ALE_ETLBox_DataFlow_CrossJoin_3_CrossJoinFunc
  commentId: P:ALE.ETLBox.DataFlow.CrossJoin`3.CrossJoinFunc
  fullName: ALE.ETLBox.DataFlow.CrossJoin<TInput1, TInput2, TOutput>.CrossJoinFunc
  fullName.vb: ALE.ETLBox.DataFlow.CrossJoin(Of TInput1, TInput2, TOutput).CrossJoinFunc
  nameWithType: CrossJoin<TInput1, TInput2, TOutput>.CrossJoinFunc
  nameWithType.vb: CrossJoin(Of TInput1, TInput2, TOutput).CrossJoinFunc
- uid: ALE.ETLBox.DataFlow.CrossJoin`3.CrossJoinFunc*
  name: CrossJoinFunc
  href: api/ALE.ETLBox.DataFlow.CrossJoin-3.html#ALE_ETLBox_DataFlow_CrossJoin_3_CrossJoinFunc_
  commentId: Overload:ALE.ETLBox.DataFlow.CrossJoin`3.CrossJoinFunc
  isSpec: "True"
  fullName: ALE.ETLBox.DataFlow.CrossJoin<TInput1, TInput2, TOutput>.CrossJoinFunc
  fullName.vb: ALE.ETLBox.DataFlow.CrossJoin(Of TInput1, TInput2, TOutput).CrossJoinFunc
  nameWithType: CrossJoin<TInput1, TInput2, TOutput>.CrossJoinFunc
  nameWithType.vb: CrossJoin(Of TInput1, TInput2, TOutput).CrossJoinFunc
- uid: ALE.ETLBox.DataFlow.CrossJoin`3.Execute
  name: Execute()
  href: api/ALE.ETLBox.DataFlow.CrossJoin-3.html#ALE_ETLBox_DataFlow_CrossJoin_3_Execute
  commentId: M:ALE.ETLBox.DataFlow.CrossJoin`3.Execute
  fullName: ALE.ETLBox.DataFlow.CrossJoin<TInput1, TInput2, TOutput>.Execute()
  fullName.vb: ALE.ETLBox.DataFlow.CrossJoin(Of TInput1, TInput2, TOutput).Execute()
  nameWithType: CrossJoin<TInput1, TInput2, TOutput>.Execute()
  nameWithType.vb: CrossJoin(Of TInput1, TInput2, TOutput).Execute()
- uid: ALE.ETLBox.DataFlow.CrossJoin`3.Execute*
  name: Execute
  href: api/ALE.ETLBox.DataFlow.CrossJoin-3.html#ALE_ETLBox_DataFlow_CrossJoin_3_Execute_
  commentId: Overload:ALE.ETLBox.DataFlow.CrossJoin`3.Execute
  isSpec: "True"
  fullName: ALE.ETLBox.DataFlow.CrossJoin<TInput1, TInput2, TOutput>.Execute
  fullName.vb: ALE.ETLBox.DataFlow.CrossJoin(Of TInput1, TInput2, TOutput).Execute
  nameWithType: CrossJoin<TInput1, TInput2, TOutput>.Execute
  nameWithType.vb: CrossJoin(Of TInput1, TInput2, TOutput).Execute
- uid: ALE.ETLBox.DataFlow.CrossJoin`3.InMemoryData
  name: InMemoryData
  href: api/ALE.ETLBox.DataFlow.CrossJoin-3.html#ALE_ETLBox_DataFlow_CrossJoin_3_InMemoryData
  commentId: P:ALE.ETLBox.DataFlow.CrossJoin`3.InMemoryData
  fullName: ALE.ETLBox.DataFlow.CrossJoin<TInput1, TInput2, TOutput>.InMemoryData
  fullName.vb: ALE.ETLBox.DataFlow.CrossJoin(Of TInput1, TInput2, TOutput).InMemoryData
  nameWithType: CrossJoin<TInput1, TInput2, TOutput>.InMemoryData
  nameWithType.vb: CrossJoin(Of TInput1, TInput2, TOutput).InMemoryData
- uid: ALE.ETLBox.DataFlow.CrossJoin`3.InMemoryData*
  name: InMemoryData
  href: api/ALE.ETLBox.DataFlow.CrossJoin-3.html#ALE_ETLBox_DataFlow_CrossJoin_3_InMemoryData_
  commentId: Overload:ALE.ETLBox.DataFlow.CrossJoin`3.InMemoryData
  isSpec: "True"
  fullName: ALE.ETLBox.DataFlow.CrossJoin<TInput1, TInput2, TOutput>.InMemoryData
  fullName.vb: ALE.ETLBox.DataFlow.CrossJoin(Of TInput1, TInput2, TOutput).InMemoryData
  nameWithType: CrossJoin<TInput1, TInput2, TOutput>.InMemoryData
  nameWithType.vb: CrossJoin(Of TInput1, TInput2, TOutput).InMemoryData
- uid: ALE.ETLBox.DataFlow.CrossJoin`3.InMemoryTarget
  name: InMemoryTarget
  href: api/ALE.ETLBox.DataFlow.CrossJoin-3.html#ALE_ETLBox_DataFlow_CrossJoin_3_InMemoryTarget
  commentId: P:ALE.ETLBox.DataFlow.CrossJoin`3.InMemoryTarget
  fullName: ALE.ETLBox.DataFlow.CrossJoin<TInput1, TInput2, TOutput>.InMemoryTarget
  fullName.vb: ALE.ETLBox.DataFlow.CrossJoin(Of TInput1, TInput2, TOutput).InMemoryTarget
  nameWithType: CrossJoin<TInput1, TInput2, TOutput>.InMemoryTarget
  nameWithType.vb: CrossJoin(Of TInput1, TInput2, TOutput).InMemoryTarget
- uid: ALE.ETLBox.DataFlow.CrossJoin`3.InMemoryTarget*
  name: InMemoryTarget
  href: api/ALE.ETLBox.DataFlow.CrossJoin-3.html#ALE_ETLBox_DataFlow_CrossJoin_3_InMemoryTarget_
  commentId: Overload:ALE.ETLBox.DataFlow.CrossJoin`3.InMemoryTarget
  isSpec: "True"
  fullName: ALE.ETLBox.DataFlow.CrossJoin<TInput1, TInput2, TOutput>.InMemoryTarget
  fullName.vb: ALE.ETLBox.DataFlow.CrossJoin(Of TInput1, TInput2, TOutput).InMemoryTarget
  nameWithType: CrossJoin<TInput1, TInput2, TOutput>.InMemoryTarget
  nameWithType.vb: CrossJoin(Of TInput1, TInput2, TOutput).InMemoryTarget
- uid: ALE.ETLBox.DataFlow.CrossJoin`3.PassingTarget
  name: PassingTarget
  href: api/ALE.ETLBox.DataFlow.CrossJoin-3.html#ALE_ETLBox_DataFlow_CrossJoin_3_PassingTarget
  commentId: P:ALE.ETLBox.DataFlow.CrossJoin`3.PassingTarget
  fullName: ALE.ETLBox.DataFlow.CrossJoin<TInput1, TInput2, TOutput>.PassingTarget
  fullName.vb: ALE.ETLBox.DataFlow.CrossJoin(Of TInput1, TInput2, TOutput).PassingTarget
  nameWithType: CrossJoin<TInput1, TInput2, TOutput>.PassingTarget
  nameWithType.vb: CrossJoin(Of TInput1, TInput2, TOutput).PassingTarget
- uid: ALE.ETLBox.DataFlow.CrossJoin`3.PassingTarget*
  name: PassingTarget
  href: api/ALE.ETLBox.DataFlow.CrossJoin-3.html#ALE_ETLBox_DataFlow_CrossJoin_3_PassingTarget_
  commentId: Overload:ALE.ETLBox.DataFlow.CrossJoin`3.PassingTarget
  isSpec: "True"
  fullName: ALE.ETLBox.DataFlow.CrossJoin<TInput1, TInput2, TOutput>.PassingTarget
  fullName.vb: ALE.ETLBox.DataFlow.CrossJoin(Of TInput1, TInput2, TOutput).PassingTarget
  nameWithType: CrossJoin<TInput1, TInput2, TOutput>.PassingTarget
  nameWithType.vb: CrossJoin(Of TInput1, TInput2, TOutput).PassingTarget
- uid: ALE.ETLBox.DataFlow.CrossJoin`3.TaskName
  name: TaskName
  href: api/ALE.ETLBox.DataFlow.CrossJoin-3.html#ALE_ETLBox_DataFlow_CrossJoin_3_TaskName
  commentId: P:ALE.ETLBox.DataFlow.CrossJoin`3.TaskName
  fullName: ALE.ETLBox.DataFlow.CrossJoin<TInput1, TInput2, TOutput>.TaskName
  fullName.vb: ALE.ETLBox.DataFlow.CrossJoin(Of TInput1, TInput2, TOutput).TaskName
  nameWithType: CrossJoin<TInput1, TInput2, TOutput>.TaskName
  nameWithType.vb: CrossJoin(Of TInput1, TInput2, TOutput).TaskName
- uid: ALE.ETLBox.DataFlow.CrossJoin`3.TaskName*
  name: TaskName
  href: api/ALE.ETLBox.DataFlow.CrossJoin-3.html#ALE_ETLBox_DataFlow_CrossJoin_3_TaskName_
  commentId: Overload:ALE.ETLBox.DataFlow.CrossJoin`3.TaskName
  isSpec: "True"
  fullName: ALE.ETLBox.DataFlow.CrossJoin<TInput1, TInput2, TOutput>.TaskName
  fullName.vb: ALE.ETLBox.DataFlow.CrossJoin(Of TInput1, TInput2, TOutput).TaskName
  nameWithType: CrossJoin<TInput1, TInput2, TOutput>.TaskName
  nameWithType.vb: CrossJoin(Of TInput1, TInput2, TOutput).TaskName
- uid: ALE.ETLBox.DataFlow.CsvDestination
  name: CsvDestination
  href: api/ALE.ETLBox.DataFlow.CsvDestination.html
  commentId: T:ALE.ETLBox.DataFlow.CsvDestination
  fullName: ALE.ETLBox.DataFlow.CsvDestination
  nameWithType: CsvDestination
- uid: ALE.ETLBox.DataFlow.CsvDestination.#ctor
  name: CsvDestination()
  href: api/ALE.ETLBox.DataFlow.CsvDestination.html#ALE_ETLBox_DataFlow_CsvDestination__ctor
  commentId: M:ALE.ETLBox.DataFlow.CsvDestination.#ctor
  fullName: ALE.ETLBox.DataFlow.CsvDestination.CsvDestination()
  nameWithType: CsvDestination.CsvDestination()
- uid: ALE.ETLBox.DataFlow.CsvDestination.#ctor(System.String)
  name: CsvDestination(String)
  href: api/ALE.ETLBox.DataFlow.CsvDestination.html#ALE_ETLBox_DataFlow_CsvDestination__ctor_System_String_
  commentId: M:ALE.ETLBox.DataFlow.CsvDestination.#ctor(System.String)
  fullName: ALE.ETLBox.DataFlow.CsvDestination.CsvDestination(System.String)
  nameWithType: CsvDestination.CsvDestination(String)
- uid: ALE.ETLBox.DataFlow.CsvDestination.#ctor*
  name: CsvDestination
  href: api/ALE.ETLBox.DataFlow.CsvDestination.html#ALE_ETLBox_DataFlow_CsvDestination__ctor_
  commentId: Overload:ALE.ETLBox.DataFlow.CsvDestination.#ctor
  isSpec: "True"
  fullName: ALE.ETLBox.DataFlow.CsvDestination.CsvDestination
  nameWithType: CsvDestination.CsvDestination
- uid: ALE.ETLBox.DataFlow.CsvDestination`1
  name: CsvDestination<TInput>
  href: api/ALE.ETLBox.DataFlow.CsvDestination-1.html
  commentId: T:ALE.ETLBox.DataFlow.CsvDestination`1
  name.vb: CsvDestination(Of TInput)
  fullName: ALE.ETLBox.DataFlow.CsvDestination<TInput>
  fullName.vb: ALE.ETLBox.DataFlow.CsvDestination(Of TInput)
  nameWithType: CsvDestination<TInput>
  nameWithType.vb: CsvDestination(Of TInput)
- uid: ALE.ETLBox.DataFlow.CsvDestination`1.#ctor
  name: CsvDestination()
  href: api/ALE.ETLBox.DataFlow.CsvDestination-1.html#ALE_ETLBox_DataFlow_CsvDestination_1__ctor
  commentId: M:ALE.ETLBox.DataFlow.CsvDestination`1.#ctor
  fullName: ALE.ETLBox.DataFlow.CsvDestination<TInput>.CsvDestination()
  fullName.vb: ALE.ETLBox.DataFlow.CsvDestination(Of TInput).CsvDestination()
  nameWithType: CsvDestination<TInput>.CsvDestination()
  nameWithType.vb: CsvDestination(Of TInput).CsvDestination()
- uid: ALE.ETLBox.DataFlow.CsvDestination`1.#ctor(System.String)
  name: CsvDestination(String)
  href: api/ALE.ETLBox.DataFlow.CsvDestination-1.html#ALE_ETLBox_DataFlow_CsvDestination_1__ctor_System_String_
  commentId: M:ALE.ETLBox.DataFlow.CsvDestination`1.#ctor(System.String)
  fullName: ALE.ETLBox.DataFlow.CsvDestination<TInput>.CsvDestination(System.String)
  fullName.vb: ALE.ETLBox.DataFlow.CsvDestination(Of TInput).CsvDestination(System.String)
  nameWithType: CsvDestination<TInput>.CsvDestination(String)
  nameWithType.vb: CsvDestination(Of TInput).CsvDestination(String)
- uid: ALE.ETLBox.DataFlow.CsvDestination`1.#ctor*
  name: CsvDestination
  href: api/ALE.ETLBox.DataFlow.CsvDestination-1.html#ALE_ETLBox_DataFlow_CsvDestination_1__ctor_
  commentId: Overload:ALE.ETLBox.DataFlow.CsvDestination`1.#ctor
  isSpec: "True"
  fullName: ALE.ETLBox.DataFlow.CsvDestination<TInput>.CsvDestination
  fullName.vb: ALE.ETLBox.DataFlow.CsvDestination(Of TInput).CsvDestination
  nameWithType: CsvDestination<TInput>.CsvDestination
  nameWithType.vb: CsvDestination(Of TInput).CsvDestination
- uid: ALE.ETLBox.DataFlow.CsvDestination`1.CloseStream
  name: CloseStream()
  href: api/ALE.ETLBox.DataFlow.CsvDestination-1.html#ALE_ETLBox_DataFlow_CsvDestination_1_CloseStream
  commentId: M:ALE.ETLBox.DataFlow.CsvDestination`1.CloseStream
  fullName: ALE.ETLBox.DataFlow.CsvDestination<TInput>.CloseStream()
  fullName.vb: ALE.ETLBox.DataFlow.CsvDestination(Of TInput).CloseStream()
  nameWithType: CsvDestination<TInput>.CloseStream()
  nameWithType.vb: CsvDestination(Of TInput).CloseStream()
- uid: ALE.ETLBox.DataFlow.CsvDestination`1.CloseStream*
  name: CloseStream
  href: api/ALE.ETLBox.DataFlow.CsvDestination-1.html#ALE_ETLBox_DataFlow_CsvDestination_1_CloseStream_
  commentId: Overload:ALE.ETLBox.DataFlow.CsvDestination`1.CloseStream
  isSpec: "True"
  fullName: ALE.ETLBox.DataFlow.CsvDestination<TInput>.CloseStream
  fullName.vb: ALE.ETLBox.DataFlow.CsvDestination(Of TInput).CloseStream
  nameWithType: CsvDestination<TInput>.CloseStream
  nameWithType.vb: CsvDestination(Of TInput).CloseStream
- uid: ALE.ETLBox.DataFlow.CsvDestination`1.Configuration
  name: Configuration
  href: api/ALE.ETLBox.DataFlow.CsvDestination-1.html#ALE_ETLBox_DataFlow_CsvDestination_1_Configuration
  commentId: P:ALE.ETLBox.DataFlow.CsvDestination`1.Configuration
  fullName: ALE.ETLBox.DataFlow.CsvDestination<TInput>.Configuration
  fullName.vb: ALE.ETLBox.DataFlow.CsvDestination(Of TInput).Configuration
  nameWithType: CsvDestination<TInput>.Configuration
  nameWithType.vb: CsvDestination(Of TInput).Configuration
- uid: ALE.ETLBox.DataFlow.CsvDestination`1.Configuration*
  name: Configuration
  href: api/ALE.ETLBox.DataFlow.CsvDestination-1.html#ALE_ETLBox_DataFlow_CsvDestination_1_Configuration_
  commentId: Overload:ALE.ETLBox.DataFlow.CsvDestination`1.Configuration
  isSpec: "True"
  fullName: ALE.ETLBox.DataFlow.CsvDestination<TInput>.Configuration
  fullName.vb: ALE.ETLBox.DataFlow.CsvDestination(Of TInput).Configuration
  nameWithType: CsvDestination<TInput>.Configuration
  nameWithType.vb: CsvDestination(Of TInput).Configuration
- uid: ALE.ETLBox.DataFlow.CsvDestination`1.InitStream
  name: InitStream()
  href: api/ALE.ETLBox.DataFlow.CsvDestination-1.html#ALE_ETLBox_DataFlow_CsvDestination_1_InitStream
  commentId: M:ALE.ETLBox.DataFlow.CsvDestination`1.InitStream
  fullName: ALE.ETLBox.DataFlow.CsvDestination<TInput>.InitStream()
  fullName.vb: ALE.ETLBox.DataFlow.CsvDestination(Of TInput).InitStream()
  nameWithType: CsvDestination<TInput>.InitStream()
  nameWithType.vb: CsvDestination(Of TInput).InitStream()
- uid: ALE.ETLBox.DataFlow.CsvDestination`1.InitStream*
  name: InitStream
  href: api/ALE.ETLBox.DataFlow.CsvDestination-1.html#ALE_ETLBox_DataFlow_CsvDestination_1_InitStream_
  commentId: Overload:ALE.ETLBox.DataFlow.CsvDestination`1.InitStream
  isSpec: "True"
  fullName: ALE.ETLBox.DataFlow.CsvDestination<TInput>.InitStream
  fullName.vb: ALE.ETLBox.DataFlow.CsvDestination(Of TInput).InitStream
  nameWithType: CsvDestination<TInput>.InitStream
  nameWithType.vb: CsvDestination(Of TInput).InitStream
- uid: ALE.ETLBox.DataFlow.CsvDestination`1.TaskName
  name: TaskName
  href: api/ALE.ETLBox.DataFlow.CsvDestination-1.html#ALE_ETLBox_DataFlow_CsvDestination_1_TaskName
  commentId: P:ALE.ETLBox.DataFlow.CsvDestination`1.TaskName
  fullName: ALE.ETLBox.DataFlow.CsvDestination<TInput>.TaskName
  fullName.vb: ALE.ETLBox.DataFlow.CsvDestination(Of TInput).TaskName
  nameWithType: CsvDestination<TInput>.TaskName
  nameWithType.vb: CsvDestination(Of TInput).TaskName
- uid: ALE.ETLBox.DataFlow.CsvDestination`1.TaskName*
  name: TaskName
  href: api/ALE.ETLBox.DataFlow.CsvDestination-1.html#ALE_ETLBox_DataFlow_CsvDestination_1_TaskName_
  commentId: Overload:ALE.ETLBox.DataFlow.CsvDestination`1.TaskName
  isSpec: "True"
  fullName: ALE.ETLBox.DataFlow.CsvDestination<TInput>.TaskName
  fullName.vb: ALE.ETLBox.DataFlow.CsvDestination(Of TInput).TaskName
  nameWithType: CsvDestination<TInput>.TaskName
  nameWithType.vb: CsvDestination(Of TInput).TaskName
- uid: ALE.ETLBox.DataFlow.CsvDestination`1.WriteIntoStream(`0)
  name: WriteIntoStream(TInput)
  href: api/ALE.ETLBox.DataFlow.CsvDestination-1.html#ALE_ETLBox_DataFlow_CsvDestination_1_WriteIntoStream__0_
  commentId: M:ALE.ETLBox.DataFlow.CsvDestination`1.WriteIntoStream(`0)
  fullName: ALE.ETLBox.DataFlow.CsvDestination<TInput>.WriteIntoStream(TInput)
  fullName.vb: ALE.ETLBox.DataFlow.CsvDestination(Of TInput).WriteIntoStream(TInput)
  nameWithType: CsvDestination<TInput>.WriteIntoStream(TInput)
  nameWithType.vb: CsvDestination(Of TInput).WriteIntoStream(TInput)
- uid: ALE.ETLBox.DataFlow.CsvDestination`1.WriteIntoStream*
  name: WriteIntoStream
  href: api/ALE.ETLBox.DataFlow.CsvDestination-1.html#ALE_ETLBox_DataFlow_CsvDestination_1_WriteIntoStream_
  commentId: Overload:ALE.ETLBox.DataFlow.CsvDestination`1.WriteIntoStream
  isSpec: "True"
  fullName: ALE.ETLBox.DataFlow.CsvDestination<TInput>.WriteIntoStream
  fullName.vb: ALE.ETLBox.DataFlow.CsvDestination(Of TInput).WriteIntoStream
  nameWithType: CsvDestination<TInput>.WriteIntoStream
  nameWithType.vb: CsvDestination(Of TInput).WriteIntoStream
- uid: ALE.ETLBox.DataFlow.CsvSource
  name: CsvSource
  href: api/ALE.ETLBox.DataFlow.CsvSource.html
  commentId: T:ALE.ETLBox.DataFlow.CsvSource
  fullName: ALE.ETLBox.DataFlow.CsvSource
  nameWithType: CsvSource
- uid: ALE.ETLBox.DataFlow.CsvSource.#ctor
  name: CsvSource()
  href: api/ALE.ETLBox.DataFlow.CsvSource.html#ALE_ETLBox_DataFlow_CsvSource__ctor
  commentId: M:ALE.ETLBox.DataFlow.CsvSource.#ctor
  fullName: ALE.ETLBox.DataFlow.CsvSource.CsvSource()
  nameWithType: CsvSource.CsvSource()
- uid: ALE.ETLBox.DataFlow.CsvSource.#ctor(System.String)
  name: CsvSource(String)
  href: api/ALE.ETLBox.DataFlow.CsvSource.html#ALE_ETLBox_DataFlow_CsvSource__ctor_System_String_
  commentId: M:ALE.ETLBox.DataFlow.CsvSource.#ctor(System.String)
  fullName: ALE.ETLBox.DataFlow.CsvSource.CsvSource(System.String)
  nameWithType: CsvSource.CsvSource(String)
- uid: ALE.ETLBox.DataFlow.CsvSource.#ctor*
  name: CsvSource
  href: api/ALE.ETLBox.DataFlow.CsvSource.html#ALE_ETLBox_DataFlow_CsvSource__ctor_
  commentId: Overload:ALE.ETLBox.DataFlow.CsvSource.#ctor
  isSpec: "True"
  fullName: ALE.ETLBox.DataFlow.CsvSource.CsvSource
  nameWithType: CsvSource.CsvSource
- uid: ALE.ETLBox.DataFlow.CsvSource`1
  name: CsvSource<TOutput>
  href: api/ALE.ETLBox.DataFlow.CsvSource-1.html
  commentId: T:ALE.ETLBox.DataFlow.CsvSource`1
  name.vb: CsvSource(Of TOutput)
  fullName: ALE.ETLBox.DataFlow.CsvSource<TOutput>
  fullName.vb: ALE.ETLBox.DataFlow.CsvSource(Of TOutput)
  nameWithType: CsvSource<TOutput>
  nameWithType.vb: CsvSource(Of TOutput)
- uid: ALE.ETLBox.DataFlow.CsvSource`1.#ctor
  name: CsvSource()
  href: api/ALE.ETLBox.DataFlow.CsvSource-1.html#ALE_ETLBox_DataFlow_CsvSource_1__ctor
  commentId: M:ALE.ETLBox.DataFlow.CsvSource`1.#ctor
  fullName: ALE.ETLBox.DataFlow.CsvSource<TOutput>.CsvSource()
  fullName.vb: ALE.ETLBox.DataFlow.CsvSource(Of TOutput).CsvSource()
  nameWithType: CsvSource<TOutput>.CsvSource()
  nameWithType.vb: CsvSource(Of TOutput).CsvSource()
- uid: ALE.ETLBox.DataFlow.CsvSource`1.#ctor(System.String)
  name: CsvSource(String)
  href: api/ALE.ETLBox.DataFlow.CsvSource-1.html#ALE_ETLBox_DataFlow_CsvSource_1__ctor_System_String_
  commentId: M:ALE.ETLBox.DataFlow.CsvSource`1.#ctor(System.String)
  fullName: ALE.ETLBox.DataFlow.CsvSource<TOutput>.CsvSource(System.String)
  fullName.vb: ALE.ETLBox.DataFlow.CsvSource(Of TOutput).CsvSource(System.String)
  nameWithType: CsvSource<TOutput>.CsvSource(String)
  nameWithType.vb: CsvSource(Of TOutput).CsvSource(String)
- uid: ALE.ETLBox.DataFlow.CsvSource`1.#ctor*
  name: CsvSource
  href: api/ALE.ETLBox.DataFlow.CsvSource-1.html#ALE_ETLBox_DataFlow_CsvSource_1__ctor_
  commentId: Overload:ALE.ETLBox.DataFlow.CsvSource`1.#ctor
  isSpec: "True"
  fullName: ALE.ETLBox.DataFlow.CsvSource<TOutput>.CsvSource
  fullName.vb: ALE.ETLBox.DataFlow.CsvSource(Of TOutput).CsvSource
  nameWithType: CsvSource<TOutput>.CsvSource
  nameWithType.vb: CsvSource(Of TOutput).CsvSource
- uid: ALE.ETLBox.DataFlow.CsvSource`1.CloseReader
  name: CloseReader()
  href: api/ALE.ETLBox.DataFlow.CsvSource-1.html#ALE_ETLBox_DataFlow_CsvSource_1_CloseReader
  commentId: M:ALE.ETLBox.DataFlow.CsvSource`1.CloseReader
  fullName: ALE.ETLBox.DataFlow.CsvSource<TOutput>.CloseReader()
  fullName.vb: ALE.ETLBox.DataFlow.CsvSource(Of TOutput).CloseReader()
  nameWithType: CsvSource<TOutput>.CloseReader()
  nameWithType.vb: CsvSource(Of TOutput).CloseReader()
- uid: ALE.ETLBox.DataFlow.CsvSource`1.CloseReader*
  name: CloseReader
  href: api/ALE.ETLBox.DataFlow.CsvSource-1.html#ALE_ETLBox_DataFlow_CsvSource_1_CloseReader_
  commentId: Overload:ALE.ETLBox.DataFlow.CsvSource`1.CloseReader
  isSpec: "True"
  fullName: ALE.ETLBox.DataFlow.CsvSource<TOutput>.CloseReader
  fullName.vb: ALE.ETLBox.DataFlow.CsvSource(Of TOutput).CloseReader
  nameWithType: CsvSource<TOutput>.CloseReader
  nameWithType.vb: CsvSource(Of TOutput).CloseReader
- uid: ALE.ETLBox.DataFlow.CsvSource`1.Configuration
  name: Configuration
  href: api/ALE.ETLBox.DataFlow.CsvSource-1.html#ALE_ETLBox_DataFlow_CsvSource_1_Configuration
  commentId: P:ALE.ETLBox.DataFlow.CsvSource`1.Configuration
  fullName: ALE.ETLBox.DataFlow.CsvSource<TOutput>.Configuration
  fullName.vb: ALE.ETLBox.DataFlow.CsvSource(Of TOutput).Configuration
  nameWithType: CsvSource<TOutput>.Configuration
  nameWithType.vb: CsvSource(Of TOutput).Configuration
- uid: ALE.ETLBox.DataFlow.CsvSource`1.Configuration*
  name: Configuration
  href: api/ALE.ETLBox.DataFlow.CsvSource-1.html#ALE_ETLBox_DataFlow_CsvSource_1_Configuration_
  commentId: Overload:ALE.ETLBox.DataFlow.CsvSource`1.Configuration
  isSpec: "True"
  fullName: ALE.ETLBox.DataFlow.CsvSource<TOutput>.Configuration
  fullName.vb: ALE.ETLBox.DataFlow.CsvSource(Of TOutput).Configuration
  nameWithType: CsvSource<TOutput>.Configuration
  nameWithType.vb: CsvSource(Of TOutput).Configuration
- uid: ALE.ETLBox.DataFlow.CsvSource`1.FieldHeaders
  name: FieldHeaders
  href: api/ALE.ETLBox.DataFlow.CsvSource-1.html#ALE_ETLBox_DataFlow_CsvSource_1_FieldHeaders
  commentId: P:ALE.ETLBox.DataFlow.CsvSource`1.FieldHeaders
  fullName: ALE.ETLBox.DataFlow.CsvSource<TOutput>.FieldHeaders
  fullName.vb: ALE.ETLBox.DataFlow.CsvSource(Of TOutput).FieldHeaders
  nameWithType: CsvSource<TOutput>.FieldHeaders
  nameWithType.vb: CsvSource(Of TOutput).FieldHeaders
- uid: ALE.ETLBox.DataFlow.CsvSource`1.FieldHeaders*
  name: FieldHeaders
  href: api/ALE.ETLBox.DataFlow.CsvSource-1.html#ALE_ETLBox_DataFlow_CsvSource_1_FieldHeaders_
  commentId: Overload:ALE.ETLBox.DataFlow.CsvSource`1.FieldHeaders
  isSpec: "True"
  fullName: ALE.ETLBox.DataFlow.CsvSource<TOutput>.FieldHeaders
  fullName.vb: ALE.ETLBox.DataFlow.CsvSource(Of TOutput).FieldHeaders
  nameWithType: CsvSource<TOutput>.FieldHeaders
  nameWithType.vb: CsvSource(Of TOutput).FieldHeaders
- uid: ALE.ETLBox.DataFlow.CsvSource`1.InitReader
  name: InitReader()
  href: api/ALE.ETLBox.DataFlow.CsvSource-1.html#ALE_ETLBox_DataFlow_CsvSource_1_InitReader
  commentId: M:ALE.ETLBox.DataFlow.CsvSource`1.InitReader
  fullName: ALE.ETLBox.DataFlow.CsvSource<TOutput>.InitReader()
  fullName.vb: ALE.ETLBox.DataFlow.CsvSource(Of TOutput).InitReader()
  nameWithType: CsvSource<TOutput>.InitReader()
  nameWithType.vb: CsvSource(Of TOutput).InitReader()
- uid: ALE.ETLBox.DataFlow.CsvSource`1.InitReader*
  name: InitReader
  href: api/ALE.ETLBox.DataFlow.CsvSource-1.html#ALE_ETLBox_DataFlow_CsvSource_1_InitReader_
  commentId: Overload:ALE.ETLBox.DataFlow.CsvSource`1.InitReader
  isSpec: "True"
  fullName: ALE.ETLBox.DataFlow.CsvSource<TOutput>.InitReader
  fullName.vb: ALE.ETLBox.DataFlow.CsvSource(Of TOutput).InitReader
  nameWithType: CsvSource<TOutput>.InitReader
  nameWithType.vb: CsvSource(Of TOutput).InitReader
- uid: ALE.ETLBox.DataFlow.CsvSource`1.IsHeaderRead
  name: IsHeaderRead
  href: api/ALE.ETLBox.DataFlow.CsvSource-1.html#ALE_ETLBox_DataFlow_CsvSource_1_IsHeaderRead
  commentId: P:ALE.ETLBox.DataFlow.CsvSource`1.IsHeaderRead
  fullName: ALE.ETLBox.DataFlow.CsvSource<TOutput>.IsHeaderRead
  fullName.vb: ALE.ETLBox.DataFlow.CsvSource(Of TOutput).IsHeaderRead
  nameWithType: CsvSource<TOutput>.IsHeaderRead
  nameWithType.vb: CsvSource(Of TOutput).IsHeaderRead
- uid: ALE.ETLBox.DataFlow.CsvSource`1.IsHeaderRead*
  name: IsHeaderRead
  href: api/ALE.ETLBox.DataFlow.CsvSource-1.html#ALE_ETLBox_DataFlow_CsvSource_1_IsHeaderRead_
  commentId: Overload:ALE.ETLBox.DataFlow.CsvSource`1.IsHeaderRead
  isSpec: "True"
  fullName: ALE.ETLBox.DataFlow.CsvSource<TOutput>.IsHeaderRead
  fullName.vb: ALE.ETLBox.DataFlow.CsvSource(Of TOutput).IsHeaderRead
  nameWithType: CsvSource<TOutput>.IsHeaderRead
  nameWithType.vb: CsvSource(Of TOutput).IsHeaderRead
- uid: ALE.ETLBox.DataFlow.CsvSource`1.ReadAll
  name: ReadAll()
  href: api/ALE.ETLBox.DataFlow.CsvSource-1.html#ALE_ETLBox_DataFlow_CsvSource_1_ReadAll
  commentId: M:ALE.ETLBox.DataFlow.CsvSource`1.ReadAll
  fullName: ALE.ETLBox.DataFlow.CsvSource<TOutput>.ReadAll()
  fullName.vb: ALE.ETLBox.DataFlow.CsvSource(Of TOutput).ReadAll()
  nameWithType: CsvSource<TOutput>.ReadAll()
  nameWithType.vb: CsvSource(Of TOutput).ReadAll()
- uid: ALE.ETLBox.DataFlow.CsvSource`1.ReadAll*
  name: ReadAll
  href: api/ALE.ETLBox.DataFlow.CsvSource-1.html#ALE_ETLBox_DataFlow_CsvSource_1_ReadAll_
  commentId: Overload:ALE.ETLBox.DataFlow.CsvSource`1.ReadAll
  isSpec: "True"
  fullName: ALE.ETLBox.DataFlow.CsvSource<TOutput>.ReadAll
  fullName.vb: ALE.ETLBox.DataFlow.CsvSource(Of TOutput).ReadAll
  nameWithType: CsvSource<TOutput>.ReadAll
  nameWithType.vb: CsvSource(Of TOutput).ReadAll
- uid: ALE.ETLBox.DataFlow.CsvSource`1.SkipRows
  name: SkipRows
  href: api/ALE.ETLBox.DataFlow.CsvSource-1.html#ALE_ETLBox_DataFlow_CsvSource_1_SkipRows
  commentId: P:ALE.ETLBox.DataFlow.CsvSource`1.SkipRows
  fullName: ALE.ETLBox.DataFlow.CsvSource<TOutput>.SkipRows
  fullName.vb: ALE.ETLBox.DataFlow.CsvSource(Of TOutput).SkipRows
  nameWithType: CsvSource<TOutput>.SkipRows
  nameWithType.vb: CsvSource(Of TOutput).SkipRows
- uid: ALE.ETLBox.DataFlow.CsvSource`1.SkipRows*
  name: SkipRows
  href: api/ALE.ETLBox.DataFlow.CsvSource-1.html#ALE_ETLBox_DataFlow_CsvSource_1_SkipRows_
  commentId: Overload:ALE.ETLBox.DataFlow.CsvSource`1.SkipRows
  isSpec: "True"
  fullName: ALE.ETLBox.DataFlow.CsvSource<TOutput>.SkipRows
  fullName.vb: ALE.ETLBox.DataFlow.CsvSource(Of TOutput).SkipRows
  nameWithType: CsvSource<TOutput>.SkipRows
  nameWithType.vb: CsvSource(Of TOutput).SkipRows
- uid: ALE.ETLBox.DataFlow.CsvSource`1.TaskName
  name: TaskName
  href: api/ALE.ETLBox.DataFlow.CsvSource-1.html#ALE_ETLBox_DataFlow_CsvSource_1_TaskName
  commentId: P:ALE.ETLBox.DataFlow.CsvSource`1.TaskName
  fullName: ALE.ETLBox.DataFlow.CsvSource<TOutput>.TaskName
  fullName.vb: ALE.ETLBox.DataFlow.CsvSource(Of TOutput).TaskName
  nameWithType: CsvSource<TOutput>.TaskName
  nameWithType.vb: CsvSource(Of TOutput).TaskName
- uid: ALE.ETLBox.DataFlow.CsvSource`1.TaskName*
  name: TaskName
  href: api/ALE.ETLBox.DataFlow.CsvSource-1.html#ALE_ETLBox_DataFlow_CsvSource_1_TaskName_
  commentId: Overload:ALE.ETLBox.DataFlow.CsvSource`1.TaskName
  isSpec: "True"
  fullName: ALE.ETLBox.DataFlow.CsvSource<TOutput>.TaskName
  fullName.vb: ALE.ETLBox.DataFlow.CsvSource(Of TOutput).TaskName
  nameWithType: CsvSource<TOutput>.TaskName
  nameWithType.vb: CsvSource(Of TOutput).TaskName
- uid: ALE.ETLBox.DataFlow.CustomDestination
  name: CustomDestination
  href: api/ALE.ETLBox.DataFlow.CustomDestination.html
  commentId: T:ALE.ETLBox.DataFlow.CustomDestination
  fullName: ALE.ETLBox.DataFlow.CustomDestination
  nameWithType: CustomDestination
- uid: ALE.ETLBox.DataFlow.CustomDestination.#ctor
  name: CustomDestination()
  href: api/ALE.ETLBox.DataFlow.CustomDestination.html#ALE_ETLBox_DataFlow_CustomDestination__ctor
  commentId: M:ALE.ETLBox.DataFlow.CustomDestination.#ctor
  fullName: ALE.ETLBox.DataFlow.CustomDestination.CustomDestination()
  nameWithType: CustomDestination.CustomDestination()
- uid: ALE.ETLBox.DataFlow.CustomDestination.#ctor(System.Action{System.Dynamic.ExpandoObject})
  name: CustomDestination(Action<ExpandoObject>)
  href: api/ALE.ETLBox.DataFlow.CustomDestination.html#ALE_ETLBox_DataFlow_CustomDestination__ctor_System_Action_System_Dynamic_ExpandoObject__
  commentId: M:ALE.ETLBox.DataFlow.CustomDestination.#ctor(System.Action{System.Dynamic.ExpandoObject})
  name.vb: CustomDestination(Action(Of ExpandoObject))
  fullName: ALE.ETLBox.DataFlow.CustomDestination.CustomDestination(System.Action<System.Dynamic.ExpandoObject>)
  fullName.vb: ALE.ETLBox.DataFlow.CustomDestination.CustomDestination(System.Action(Of System.Dynamic.ExpandoObject))
  nameWithType: CustomDestination.CustomDestination(Action<ExpandoObject>)
  nameWithType.vb: CustomDestination.CustomDestination(Action(Of ExpandoObject))
- uid: ALE.ETLBox.DataFlow.CustomDestination.#ctor*
  name: CustomDestination
  href: api/ALE.ETLBox.DataFlow.CustomDestination.html#ALE_ETLBox_DataFlow_CustomDestination__ctor_
  commentId: Overload:ALE.ETLBox.DataFlow.CustomDestination.#ctor
  isSpec: "True"
  fullName: ALE.ETLBox.DataFlow.CustomDestination.CustomDestination
  nameWithType: CustomDestination.CustomDestination
- uid: ALE.ETLBox.DataFlow.CustomDestination`1
  name: CustomDestination<TInput>
  href: api/ALE.ETLBox.DataFlow.CustomDestination-1.html
  commentId: T:ALE.ETLBox.DataFlow.CustomDestination`1
  name.vb: CustomDestination(Of TInput)
  fullName: ALE.ETLBox.DataFlow.CustomDestination<TInput>
  fullName.vb: ALE.ETLBox.DataFlow.CustomDestination(Of TInput)
  nameWithType: CustomDestination<TInput>
  nameWithType.vb: CustomDestination(Of TInput)
- uid: ALE.ETLBox.DataFlow.CustomDestination`1.#ctor
  name: CustomDestination()
  href: api/ALE.ETLBox.DataFlow.CustomDestination-1.html#ALE_ETLBox_DataFlow_CustomDestination_1__ctor
  commentId: M:ALE.ETLBox.DataFlow.CustomDestination`1.#ctor
  fullName: ALE.ETLBox.DataFlow.CustomDestination<TInput>.CustomDestination()
  fullName.vb: ALE.ETLBox.DataFlow.CustomDestination(Of TInput).CustomDestination()
  nameWithType: CustomDestination<TInput>.CustomDestination()
  nameWithType.vb: CustomDestination(Of TInput).CustomDestination()
- uid: ALE.ETLBox.DataFlow.CustomDestination`1.#ctor(System.Action{`0})
  name: CustomDestination(Action<TInput>)
  href: api/ALE.ETLBox.DataFlow.CustomDestination-1.html#ALE_ETLBox_DataFlow_CustomDestination_1__ctor_System_Action__0__
  commentId: M:ALE.ETLBox.DataFlow.CustomDestination`1.#ctor(System.Action{`0})
  name.vb: CustomDestination(Action(Of TInput))
  fullName: ALE.ETLBox.DataFlow.CustomDestination<TInput>.CustomDestination(System.Action<TInput>)
  fullName.vb: ALE.ETLBox.DataFlow.CustomDestination(Of TInput).CustomDestination(System.Action(Of TInput))
  nameWithType: CustomDestination<TInput>.CustomDestination(Action<TInput>)
  nameWithType.vb: CustomDestination(Of TInput).CustomDestination(Action(Of TInput))
- uid: ALE.ETLBox.DataFlow.CustomDestination`1.#ctor(System.String,System.Action{`0})
  name: CustomDestination(String, Action<TInput>)
  href: api/ALE.ETLBox.DataFlow.CustomDestination-1.html#ALE_ETLBox_DataFlow_CustomDestination_1__ctor_System_String_System_Action__0__
  commentId: M:ALE.ETLBox.DataFlow.CustomDestination`1.#ctor(System.String,System.Action{`0})
  name.vb: CustomDestination(String, Action(Of TInput))
  fullName: ALE.ETLBox.DataFlow.CustomDestination<TInput>.CustomDestination(System.String, System.Action<TInput>)
  fullName.vb: ALE.ETLBox.DataFlow.CustomDestination(Of TInput).CustomDestination(System.String, System.Action(Of TInput))
  nameWithType: CustomDestination<TInput>.CustomDestination(String, Action<TInput>)
  nameWithType.vb: CustomDestination(Of TInput).CustomDestination(String, Action(Of TInput))
- uid: ALE.ETLBox.DataFlow.CustomDestination`1.#ctor*
  name: CustomDestination
  href: api/ALE.ETLBox.DataFlow.CustomDestination-1.html#ALE_ETLBox_DataFlow_CustomDestination_1__ctor_
  commentId: Overload:ALE.ETLBox.DataFlow.CustomDestination`1.#ctor
  isSpec: "True"
  fullName: ALE.ETLBox.DataFlow.CustomDestination<TInput>.CustomDestination
  fullName.vb: ALE.ETLBox.DataFlow.CustomDestination(Of TInput).CustomDestination
  nameWithType: CustomDestination<TInput>.CustomDestination
  nameWithType.vb: CustomDestination(Of TInput).CustomDestination
- uid: ALE.ETLBox.DataFlow.CustomDestination`1.TaskName
  name: TaskName
  href: api/ALE.ETLBox.DataFlow.CustomDestination-1.html#ALE_ETLBox_DataFlow_CustomDestination_1_TaskName
  commentId: P:ALE.ETLBox.DataFlow.CustomDestination`1.TaskName
  fullName: ALE.ETLBox.DataFlow.CustomDestination<TInput>.TaskName
  fullName.vb: ALE.ETLBox.DataFlow.CustomDestination(Of TInput).TaskName
  nameWithType: CustomDestination<TInput>.TaskName
  nameWithType.vb: CustomDestination(Of TInput).TaskName
- uid: ALE.ETLBox.DataFlow.CustomDestination`1.TaskName*
  name: TaskName
  href: api/ALE.ETLBox.DataFlow.CustomDestination-1.html#ALE_ETLBox_DataFlow_CustomDestination_1_TaskName_
  commentId: Overload:ALE.ETLBox.DataFlow.CustomDestination`1.TaskName
  isSpec: "True"
  fullName: ALE.ETLBox.DataFlow.CustomDestination<TInput>.TaskName
  fullName.vb: ALE.ETLBox.DataFlow.CustomDestination(Of TInput).TaskName
  nameWithType: CustomDestination<TInput>.TaskName
  nameWithType.vb: CustomDestination(Of TInput).TaskName
- uid: ALE.ETLBox.DataFlow.CustomDestination`1.WriteAction
  name: WriteAction
  href: api/ALE.ETLBox.DataFlow.CustomDestination-1.html#ALE_ETLBox_DataFlow_CustomDestination_1_WriteAction
  commentId: P:ALE.ETLBox.DataFlow.CustomDestination`1.WriteAction
  fullName: ALE.ETLBox.DataFlow.CustomDestination<TInput>.WriteAction
  fullName.vb: ALE.ETLBox.DataFlow.CustomDestination(Of TInput).WriteAction
  nameWithType: CustomDestination<TInput>.WriteAction
  nameWithType.vb: CustomDestination(Of TInput).WriteAction
- uid: ALE.ETLBox.DataFlow.CustomDestination`1.WriteAction*
  name: WriteAction
  href: api/ALE.ETLBox.DataFlow.CustomDestination-1.html#ALE_ETLBox_DataFlow_CustomDestination_1_WriteAction_
  commentId: Overload:ALE.ETLBox.DataFlow.CustomDestination`1.WriteAction
  isSpec: "True"
  fullName: ALE.ETLBox.DataFlow.CustomDestination<TInput>.WriteAction
  fullName.vb: ALE.ETLBox.DataFlow.CustomDestination(Of TInput).WriteAction
  nameWithType: CustomDestination<TInput>.WriteAction
  nameWithType.vb: CustomDestination(Of TInput).WriteAction
- uid: ALE.ETLBox.DataFlow.CustomSource
  name: CustomSource
  href: api/ALE.ETLBox.DataFlow.CustomSource.html
  commentId: T:ALE.ETLBox.DataFlow.CustomSource
  fullName: ALE.ETLBox.DataFlow.CustomSource
  nameWithType: CustomSource
- uid: ALE.ETLBox.DataFlow.CustomSource.#ctor
  name: CustomSource()
  href: api/ALE.ETLBox.DataFlow.CustomSource.html#ALE_ETLBox_DataFlow_CustomSource__ctor
  commentId: M:ALE.ETLBox.DataFlow.CustomSource.#ctor
  fullName: ALE.ETLBox.DataFlow.CustomSource.CustomSource()
  nameWithType: CustomSource.CustomSource()
- uid: ALE.ETLBox.DataFlow.CustomSource.#ctor(System.Func{System.Dynamic.ExpandoObject},System.Func{System.Boolean})
  name: CustomSource(Func<ExpandoObject>, Func<Boolean>)
  href: api/ALE.ETLBox.DataFlow.CustomSource.html#ALE_ETLBox_DataFlow_CustomSource__ctor_System_Func_System_Dynamic_ExpandoObject__System_Func_System_Boolean__
  commentId: M:ALE.ETLBox.DataFlow.CustomSource.#ctor(System.Func{System.Dynamic.ExpandoObject},System.Func{System.Boolean})
  name.vb: CustomSource(Func(Of ExpandoObject), Func(Of Boolean))
  fullName: ALE.ETLBox.DataFlow.CustomSource.CustomSource(System.Func<System.Dynamic.ExpandoObject>, System.Func<System.Boolean>)
  fullName.vb: ALE.ETLBox.DataFlow.CustomSource.CustomSource(System.Func(Of System.Dynamic.ExpandoObject), System.Func(Of System.Boolean))
  nameWithType: CustomSource.CustomSource(Func<ExpandoObject>, Func<Boolean>)
  nameWithType.vb: CustomSource.CustomSource(Func(Of ExpandoObject), Func(Of Boolean))
- uid: ALE.ETLBox.DataFlow.CustomSource.#ctor(System.String,System.Func{System.Dynamic.ExpandoObject},System.Func{System.Boolean})
  name: CustomSource(String, Func<ExpandoObject>, Func<Boolean>)
  href: api/ALE.ETLBox.DataFlow.CustomSource.html#ALE_ETLBox_DataFlow_CustomSource__ctor_System_String_System_Func_System_Dynamic_ExpandoObject__System_Func_System_Boolean__
  commentId: M:ALE.ETLBox.DataFlow.CustomSource.#ctor(System.String,System.Func{System.Dynamic.ExpandoObject},System.Func{System.Boolean})
  name.vb: CustomSource(String, Func(Of ExpandoObject), Func(Of Boolean))
  fullName: ALE.ETLBox.DataFlow.CustomSource.CustomSource(System.String, System.Func<System.Dynamic.ExpandoObject>, System.Func<System.Boolean>)
  fullName.vb: ALE.ETLBox.DataFlow.CustomSource.CustomSource(System.String, System.Func(Of System.Dynamic.ExpandoObject), System.Func(Of System.Boolean))
  nameWithType: CustomSource.CustomSource(String, Func<ExpandoObject>, Func<Boolean>)
  nameWithType.vb: CustomSource.CustomSource(String, Func(Of ExpandoObject), Func(Of Boolean))
- uid: ALE.ETLBox.DataFlow.CustomSource.#ctor*
  name: CustomSource
  href: api/ALE.ETLBox.DataFlow.CustomSource.html#ALE_ETLBox_DataFlow_CustomSource__ctor_
  commentId: Overload:ALE.ETLBox.DataFlow.CustomSource.#ctor
  isSpec: "True"
  fullName: ALE.ETLBox.DataFlow.CustomSource.CustomSource
  nameWithType: CustomSource.CustomSource
- uid: ALE.ETLBox.DataFlow.CustomSource`1
  name: CustomSource<TOutput>
  href: api/ALE.ETLBox.DataFlow.CustomSource-1.html
  commentId: T:ALE.ETLBox.DataFlow.CustomSource`1
  name.vb: CustomSource(Of TOutput)
  fullName: ALE.ETLBox.DataFlow.CustomSource<TOutput>
  fullName.vb: ALE.ETLBox.DataFlow.CustomSource(Of TOutput)
  nameWithType: CustomSource<TOutput>
  nameWithType.vb: CustomSource(Of TOutput)
- uid: ALE.ETLBox.DataFlow.CustomSource`1.#ctor
  name: CustomSource()
  href: api/ALE.ETLBox.DataFlow.CustomSource-1.html#ALE_ETLBox_DataFlow_CustomSource_1__ctor
  commentId: M:ALE.ETLBox.DataFlow.CustomSource`1.#ctor
  fullName: ALE.ETLBox.DataFlow.CustomSource<TOutput>.CustomSource()
  fullName.vb: ALE.ETLBox.DataFlow.CustomSource(Of TOutput).CustomSource()
  nameWithType: CustomSource<TOutput>.CustomSource()
  nameWithType.vb: CustomSource(Of TOutput).CustomSource()
- uid: ALE.ETLBox.DataFlow.CustomSource`1.#ctor(System.Func{`0},System.Func{System.Boolean})
  name: CustomSource(Func<TOutput>, Func<Boolean>)
  href: api/ALE.ETLBox.DataFlow.CustomSource-1.html#ALE_ETLBox_DataFlow_CustomSource_1__ctor_System_Func__0__System_Func_System_Boolean__
  commentId: M:ALE.ETLBox.DataFlow.CustomSource`1.#ctor(System.Func{`0},System.Func{System.Boolean})
  name.vb: CustomSource(Func(Of TOutput), Func(Of Boolean))
  fullName: ALE.ETLBox.DataFlow.CustomSource<TOutput>.CustomSource(System.Func<TOutput>, System.Func<System.Boolean>)
  fullName.vb: ALE.ETLBox.DataFlow.CustomSource(Of TOutput).CustomSource(System.Func(Of TOutput), System.Func(Of System.Boolean))
  nameWithType: CustomSource<TOutput>.CustomSource(Func<TOutput>, Func<Boolean>)
  nameWithType.vb: CustomSource(Of TOutput).CustomSource(Func(Of TOutput), Func(Of Boolean))
- uid: ALE.ETLBox.DataFlow.CustomSource`1.#ctor(System.String,System.Func{`0},System.Func{System.Boolean})
  name: CustomSource(String, Func<TOutput>, Func<Boolean>)
  href: api/ALE.ETLBox.DataFlow.CustomSource-1.html#ALE_ETLBox_DataFlow_CustomSource_1__ctor_System_String_System_Func__0__System_Func_System_Boolean__
  commentId: M:ALE.ETLBox.DataFlow.CustomSource`1.#ctor(System.String,System.Func{`0},System.Func{System.Boolean})
  name.vb: CustomSource(String, Func(Of TOutput), Func(Of Boolean))
  fullName: ALE.ETLBox.DataFlow.CustomSource<TOutput>.CustomSource(System.String, System.Func<TOutput>, System.Func<System.Boolean>)
  fullName.vb: ALE.ETLBox.DataFlow.CustomSource(Of TOutput).CustomSource(System.String, System.Func(Of TOutput), System.Func(Of System.Boolean))
  nameWithType: CustomSource<TOutput>.CustomSource(String, Func<TOutput>, Func<Boolean>)
  nameWithType.vb: CustomSource(Of TOutput).CustomSource(String, Func(Of TOutput), Func(Of Boolean))
- uid: ALE.ETLBox.DataFlow.CustomSource`1.#ctor*
  name: CustomSource
  href: api/ALE.ETLBox.DataFlow.CustomSource-1.html#ALE_ETLBox_DataFlow_CustomSource_1__ctor_
  commentId: Overload:ALE.ETLBox.DataFlow.CustomSource`1.#ctor
  isSpec: "True"
  fullName: ALE.ETLBox.DataFlow.CustomSource<TOutput>.CustomSource
  fullName.vb: ALE.ETLBox.DataFlow.CustomSource(Of TOutput).CustomSource
  nameWithType: CustomSource<TOutput>.CustomSource
  nameWithType.vb: CustomSource(Of TOutput).CustomSource
- uid: ALE.ETLBox.DataFlow.CustomSource`1.Execute
  name: Execute()
  href: api/ALE.ETLBox.DataFlow.CustomSource-1.html#ALE_ETLBox_DataFlow_CustomSource_1_Execute
  commentId: M:ALE.ETLBox.DataFlow.CustomSource`1.Execute
  fullName: ALE.ETLBox.DataFlow.CustomSource<TOutput>.Execute()
  fullName.vb: ALE.ETLBox.DataFlow.CustomSource(Of TOutput).Execute()
  nameWithType: CustomSource<TOutput>.Execute()
  nameWithType.vb: CustomSource(Of TOutput).Execute()
- uid: ALE.ETLBox.DataFlow.CustomSource`1.Execute*
  name: Execute
  href: api/ALE.ETLBox.DataFlow.CustomSource-1.html#ALE_ETLBox_DataFlow_CustomSource_1_Execute_
  commentId: Overload:ALE.ETLBox.DataFlow.CustomSource`1.Execute
  isSpec: "True"
  fullName: ALE.ETLBox.DataFlow.CustomSource<TOutput>.Execute
  fullName.vb: ALE.ETLBox.DataFlow.CustomSource(Of TOutput).Execute
  nameWithType: CustomSource<TOutput>.Execute
  nameWithType.vb: CustomSource(Of TOutput).Execute
- uid: ALE.ETLBox.DataFlow.CustomSource`1.ReadCompletedFunc
  name: ReadCompletedFunc
  href: api/ALE.ETLBox.DataFlow.CustomSource-1.html#ALE_ETLBox_DataFlow_CustomSource_1_ReadCompletedFunc
  commentId: P:ALE.ETLBox.DataFlow.CustomSource`1.ReadCompletedFunc
  fullName: ALE.ETLBox.DataFlow.CustomSource<TOutput>.ReadCompletedFunc
  fullName.vb: ALE.ETLBox.DataFlow.CustomSource(Of TOutput).ReadCompletedFunc
  nameWithType: CustomSource<TOutput>.ReadCompletedFunc
  nameWithType.vb: CustomSource(Of TOutput).ReadCompletedFunc
- uid: ALE.ETLBox.DataFlow.CustomSource`1.ReadCompletedFunc*
  name: ReadCompletedFunc
  href: api/ALE.ETLBox.DataFlow.CustomSource-1.html#ALE_ETLBox_DataFlow_CustomSource_1_ReadCompletedFunc_
  commentId: Overload:ALE.ETLBox.DataFlow.CustomSource`1.ReadCompletedFunc
  isSpec: "True"
  fullName: ALE.ETLBox.DataFlow.CustomSource<TOutput>.ReadCompletedFunc
  fullName.vb: ALE.ETLBox.DataFlow.CustomSource(Of TOutput).ReadCompletedFunc
  nameWithType: CustomSource<TOutput>.ReadCompletedFunc
  nameWithType.vb: CustomSource(Of TOutput).ReadCompletedFunc
- uid: ALE.ETLBox.DataFlow.CustomSource`1.ReadFunc
  name: ReadFunc
  href: api/ALE.ETLBox.DataFlow.CustomSource-1.html#ALE_ETLBox_DataFlow_CustomSource_1_ReadFunc
  commentId: P:ALE.ETLBox.DataFlow.CustomSource`1.ReadFunc
  fullName: ALE.ETLBox.DataFlow.CustomSource<TOutput>.ReadFunc
  fullName.vb: ALE.ETLBox.DataFlow.CustomSource(Of TOutput).ReadFunc
  nameWithType: CustomSource<TOutput>.ReadFunc
  nameWithType.vb: CustomSource(Of TOutput).ReadFunc
- uid: ALE.ETLBox.DataFlow.CustomSource`1.ReadFunc*
  name: ReadFunc
  href: api/ALE.ETLBox.DataFlow.CustomSource-1.html#ALE_ETLBox_DataFlow_CustomSource_1_ReadFunc_
  commentId: Overload:ALE.ETLBox.DataFlow.CustomSource`1.ReadFunc
  isSpec: "True"
  fullName: ALE.ETLBox.DataFlow.CustomSource<TOutput>.ReadFunc
  fullName.vb: ALE.ETLBox.DataFlow.CustomSource(Of TOutput).ReadFunc
  nameWithType: CustomSource<TOutput>.ReadFunc
  nameWithType.vb: CustomSource(Of TOutput).ReadFunc
- uid: ALE.ETLBox.DataFlow.CustomSource`1.TaskName
  name: TaskName
  href: api/ALE.ETLBox.DataFlow.CustomSource-1.html#ALE_ETLBox_DataFlow_CustomSource_1_TaskName
  commentId: P:ALE.ETLBox.DataFlow.CustomSource`1.TaskName
  fullName: ALE.ETLBox.DataFlow.CustomSource<TOutput>.TaskName
  fullName.vb: ALE.ETLBox.DataFlow.CustomSource(Of TOutput).TaskName
  nameWithType: CustomSource<TOutput>.TaskName
  nameWithType.vb: CustomSource(Of TOutput).TaskName
- uid: ALE.ETLBox.DataFlow.CustomSource`1.TaskName*
  name: TaskName
  href: api/ALE.ETLBox.DataFlow.CustomSource-1.html#ALE_ETLBox_DataFlow_CustomSource_1_TaskName_
  commentId: Overload:ALE.ETLBox.DataFlow.CustomSource`1.TaskName
  isSpec: "True"
  fullName: ALE.ETLBox.DataFlow.CustomSource<TOutput>.TaskName
  fullName.vb: ALE.ETLBox.DataFlow.CustomSource(Of TOutput).TaskName
  nameWithType: CustomSource<TOutput>.TaskName
  nameWithType.vb: CustomSource(Of TOutput).TaskName
- uid: ALE.ETLBox.DataFlow.DataFlow
  name: DataFlow
  href: api/ALE.ETLBox.DataFlow.DataFlow.html
  commentId: T:ALE.ETLBox.DataFlow.DataFlow
  fullName: ALE.ETLBox.DataFlow.DataFlow
  nameWithType: DataFlow
- uid: ALE.ETLBox.DataFlow.DataFlow.ClearSettings
  name: ClearSettings()
  href: api/ALE.ETLBox.DataFlow.DataFlow.html#ALE_ETLBox_DataFlow_DataFlow_ClearSettings
  commentId: M:ALE.ETLBox.DataFlow.DataFlow.ClearSettings
  fullName: ALE.ETLBox.DataFlow.DataFlow.ClearSettings()
  nameWithType: DataFlow.ClearSettings()
- uid: ALE.ETLBox.DataFlow.DataFlow.ClearSettings*
  name: ClearSettings
  href: api/ALE.ETLBox.DataFlow.DataFlow.html#ALE_ETLBox_DataFlow_DataFlow_ClearSettings_
  commentId: Overload:ALE.ETLBox.DataFlow.DataFlow.ClearSettings
  isSpec: "True"
  fullName: ALE.ETLBox.DataFlow.DataFlow.ClearSettings
  nameWithType: DataFlow.ClearSettings
- uid: ALE.ETLBox.DataFlow.DataFlow.HasLoggingThresholdRows
  name: HasLoggingThresholdRows
  href: api/ALE.ETLBox.DataFlow.DataFlow.html#ALE_ETLBox_DataFlow_DataFlow_HasLoggingThresholdRows
  commentId: P:ALE.ETLBox.DataFlow.DataFlow.HasLoggingThresholdRows
  fullName: ALE.ETLBox.DataFlow.DataFlow.HasLoggingThresholdRows
  nameWithType: DataFlow.HasLoggingThresholdRows
- uid: ALE.ETLBox.DataFlow.DataFlow.HasLoggingThresholdRows*
  name: HasLoggingThresholdRows
  href: api/ALE.ETLBox.DataFlow.DataFlow.html#ALE_ETLBox_DataFlow_DataFlow_HasLoggingThresholdRows_
  commentId: Overload:ALE.ETLBox.DataFlow.DataFlow.HasLoggingThresholdRows
  isSpec: "True"
  fullName: ALE.ETLBox.DataFlow.DataFlow.HasLoggingThresholdRows
  nameWithType: DataFlow.HasLoggingThresholdRows
- uid: ALE.ETLBox.DataFlow.DataFlow.LoggingThresholdRows
  name: LoggingThresholdRows
  href: api/ALE.ETLBox.DataFlow.DataFlow.html#ALE_ETLBox_DataFlow_DataFlow_LoggingThresholdRows
  commentId: P:ALE.ETLBox.DataFlow.DataFlow.LoggingThresholdRows
  fullName: ALE.ETLBox.DataFlow.DataFlow.LoggingThresholdRows
  nameWithType: DataFlow.LoggingThresholdRows
- uid: ALE.ETLBox.DataFlow.DataFlow.LoggingThresholdRows*
  name: LoggingThresholdRows
  href: api/ALE.ETLBox.DataFlow.DataFlow.html#ALE_ETLBox_DataFlow_DataFlow_LoggingThresholdRows_
  commentId: Overload:ALE.ETLBox.DataFlow.DataFlow.LoggingThresholdRows
  isSpec: "True"
  fullName: ALE.ETLBox.DataFlow.DataFlow.LoggingThresholdRows
  nameWithType: DataFlow.LoggingThresholdRows
- uid: ALE.ETLBox.DataFlow.DataFlowBatchDestination`1
  name: DataFlowBatchDestination<TInput>
  href: api/ALE.ETLBox.DataFlow.DataFlowBatchDestination-1.html
  commentId: T:ALE.ETLBox.DataFlow.DataFlowBatchDestination`1
  name.vb: DataFlowBatchDestination(Of TInput)
  fullName: ALE.ETLBox.DataFlow.DataFlowBatchDestination<TInput>
  fullName.vb: ALE.ETLBox.DataFlow.DataFlowBatchDestination(Of TInput)
  nameWithType: DataFlowBatchDestination<TInput>
  nameWithType.vb: DataFlowBatchDestination(Of TInput)
- uid: ALE.ETLBox.DataFlow.DataFlowBatchDestination`1.AddPredecessorCompletion(System.Threading.Tasks.Task)
  name: AddPredecessorCompletion(Task)
  href: api/ALE.ETLBox.DataFlow.DataFlowBatchDestination-1.html#ALE_ETLBox_DataFlow_DataFlowBatchDestination_1_AddPredecessorCompletion_System_Threading_Tasks_Task_
  commentId: M:ALE.ETLBox.DataFlow.DataFlowBatchDestination`1.AddPredecessorCompletion(System.Threading.Tasks.Task)
  fullName: ALE.ETLBox.DataFlow.DataFlowBatchDestination<TInput>.AddPredecessorCompletion(System.Threading.Tasks.Task)
  fullName.vb: ALE.ETLBox.DataFlow.DataFlowBatchDestination(Of TInput).AddPredecessorCompletion(System.Threading.Tasks.Task)
  nameWithType: DataFlowBatchDestination<TInput>.AddPredecessorCompletion(Task)
  nameWithType.vb: DataFlowBatchDestination(Of TInput).AddPredecessorCompletion(Task)
- uid: ALE.ETLBox.DataFlow.DataFlowBatchDestination`1.AddPredecessorCompletion*
  name: AddPredecessorCompletion
  href: api/ALE.ETLBox.DataFlow.DataFlowBatchDestination-1.html#ALE_ETLBox_DataFlow_DataFlowBatchDestination_1_AddPredecessorCompletion_
  commentId: Overload:ALE.ETLBox.DataFlow.DataFlowBatchDestination`1.AddPredecessorCompletion
  isSpec: "True"
  fullName: ALE.ETLBox.DataFlow.DataFlowBatchDestination<TInput>.AddPredecessorCompletion
  fullName.vb: ALE.ETLBox.DataFlow.DataFlowBatchDestination(Of TInput).AddPredecessorCompletion
  nameWithType: DataFlowBatchDestination<TInput>.AddPredecessorCompletion
  nameWithType.vb: DataFlowBatchDestination(Of TInput).AddPredecessorCompletion
- uid: ALE.ETLBox.DataFlow.DataFlowBatchDestination`1.BatchSize
  name: BatchSize
  href: api/ALE.ETLBox.DataFlow.DataFlowBatchDestination-1.html#ALE_ETLBox_DataFlow_DataFlowBatchDestination_1_BatchSize
  commentId: P:ALE.ETLBox.DataFlow.DataFlowBatchDestination`1.BatchSize
  fullName: ALE.ETLBox.DataFlow.DataFlowBatchDestination<TInput>.BatchSize
  fullName.vb: ALE.ETLBox.DataFlow.DataFlowBatchDestination(Of TInput).BatchSize
  nameWithType: DataFlowBatchDestination<TInput>.BatchSize
  nameWithType.vb: DataFlowBatchDestination(Of TInput).BatchSize
- uid: ALE.ETLBox.DataFlow.DataFlowBatchDestination`1.BatchSize*
  name: BatchSize
  href: api/ALE.ETLBox.DataFlow.DataFlowBatchDestination-1.html#ALE_ETLBox_DataFlow_DataFlowBatchDestination_1_BatchSize_
  commentId: Overload:ALE.ETLBox.DataFlow.DataFlowBatchDestination`1.BatchSize
  isSpec: "True"
  fullName: ALE.ETLBox.DataFlow.DataFlowBatchDestination<TInput>.BatchSize
  fullName.vb: ALE.ETLBox.DataFlow.DataFlowBatchDestination(Of TInput).BatchSize
  nameWithType: DataFlowBatchDestination<TInput>.BatchSize
  nameWithType.vb: DataFlowBatchDestination(Of TInput).BatchSize
- uid: ALE.ETLBox.DataFlow.DataFlowBatchDestination`1.BeforeBatchWrite
  name: BeforeBatchWrite
  href: api/ALE.ETLBox.DataFlow.DataFlowBatchDestination-1.html#ALE_ETLBox_DataFlow_DataFlowBatchDestination_1_BeforeBatchWrite
  commentId: P:ALE.ETLBox.DataFlow.DataFlowBatchDestination`1.BeforeBatchWrite
  fullName: ALE.ETLBox.DataFlow.DataFlowBatchDestination<TInput>.BeforeBatchWrite
  fullName.vb: ALE.ETLBox.DataFlow.DataFlowBatchDestination(Of TInput).BeforeBatchWrite
  nameWithType: DataFlowBatchDestination<TInput>.BeforeBatchWrite
  nameWithType.vb: DataFlowBatchDestination(Of TInput).BeforeBatchWrite
- uid: ALE.ETLBox.DataFlow.DataFlowBatchDestination`1.BeforeBatchWrite*
  name: BeforeBatchWrite
  href: api/ALE.ETLBox.DataFlow.DataFlowBatchDestination-1.html#ALE_ETLBox_DataFlow_DataFlowBatchDestination_1_BeforeBatchWrite_
  commentId: Overload:ALE.ETLBox.DataFlow.DataFlowBatchDestination`1.BeforeBatchWrite
  isSpec: "True"
  fullName: ALE.ETLBox.DataFlow.DataFlowBatchDestination<TInput>.BeforeBatchWrite
  fullName.vb: ALE.ETLBox.DataFlow.DataFlowBatchDestination(Of TInput).BeforeBatchWrite
  nameWithType: DataFlowBatchDestination<TInput>.BeforeBatchWrite
  nameWithType.vb: DataFlowBatchDestination(Of TInput).BeforeBatchWrite
- uid: ALE.ETLBox.DataFlow.DataFlowBatchDestination`1.Buffer
  name: Buffer
  href: api/ALE.ETLBox.DataFlow.DataFlowBatchDestination-1.html#ALE_ETLBox_DataFlow_DataFlowBatchDestination_1_Buffer
  commentId: P:ALE.ETLBox.DataFlow.DataFlowBatchDestination`1.Buffer
  fullName: ALE.ETLBox.DataFlow.DataFlowBatchDestination<TInput>.Buffer
  fullName.vb: ALE.ETLBox.DataFlow.DataFlowBatchDestination(Of TInput).Buffer
  nameWithType: DataFlowBatchDestination<TInput>.Buffer
  nameWithType.vb: DataFlowBatchDestination(Of TInput).Buffer
- uid: ALE.ETLBox.DataFlow.DataFlowBatchDestination`1.Buffer*
  name: Buffer
  href: api/ALE.ETLBox.DataFlow.DataFlowBatchDestination-1.html#ALE_ETLBox_DataFlow_DataFlowBatchDestination_1_Buffer_
  commentId: Overload:ALE.ETLBox.DataFlow.DataFlowBatchDestination`1.Buffer
  isSpec: "True"
  fullName: ALE.ETLBox.DataFlow.DataFlowBatchDestination<TInput>.Buffer
  fullName.vb: ALE.ETLBox.DataFlow.DataFlowBatchDestination(Of TInput).Buffer
  nameWithType: DataFlowBatchDestination<TInput>.Buffer
  nameWithType.vb: DataFlowBatchDestination(Of TInput).Buffer
- uid: ALE.ETLBox.DataFlow.DataFlowBatchDestination`1.CheckCompleteAction
  name: CheckCompleteAction()
  href: api/ALE.ETLBox.DataFlow.DataFlowBatchDestination-1.html#ALE_ETLBox_DataFlow_DataFlowBatchDestination_1_CheckCompleteAction
  commentId: M:ALE.ETLBox.DataFlow.DataFlowBatchDestination`1.CheckCompleteAction
  fullName: ALE.ETLBox.DataFlow.DataFlowBatchDestination<TInput>.CheckCompleteAction()
  fullName.vb: ALE.ETLBox.DataFlow.DataFlowBatchDestination(Of TInput).CheckCompleteAction()
  nameWithType: DataFlowBatchDestination<TInput>.CheckCompleteAction()
  nameWithType.vb: DataFlowBatchDestination(Of TInput).CheckCompleteAction()
- uid: ALE.ETLBox.DataFlow.DataFlowBatchDestination`1.CheckCompleteAction*
  name: CheckCompleteAction
  href: api/ALE.ETLBox.DataFlow.DataFlowBatchDestination-1.html#ALE_ETLBox_DataFlow_DataFlowBatchDestination_1_CheckCompleteAction_
  commentId: Overload:ALE.ETLBox.DataFlow.DataFlowBatchDestination`1.CheckCompleteAction
  isSpec: "True"
  fullName: ALE.ETLBox.DataFlow.DataFlowBatchDestination<TInput>.CheckCompleteAction
  fullName.vb: ALE.ETLBox.DataFlow.DataFlowBatchDestination(Of TInput).CheckCompleteAction
  nameWithType: DataFlowBatchDestination<TInput>.CheckCompleteAction
  nameWithType.vb: DataFlowBatchDestination(Of TInput).CheckCompleteAction
- uid: ALE.ETLBox.DataFlow.DataFlowBatchDestination`1.InitObjects(System.Int32)
  name: InitObjects(Int32)
  href: api/ALE.ETLBox.DataFlow.DataFlowBatchDestination-1.html#ALE_ETLBox_DataFlow_DataFlowBatchDestination_1_InitObjects_System_Int32_
  commentId: M:ALE.ETLBox.DataFlow.DataFlowBatchDestination`1.InitObjects(System.Int32)
  fullName: ALE.ETLBox.DataFlow.DataFlowBatchDestination<TInput>.InitObjects(System.Int32)
  fullName.vb: ALE.ETLBox.DataFlow.DataFlowBatchDestination(Of TInput).InitObjects(System.Int32)
  nameWithType: DataFlowBatchDestination<TInput>.InitObjects(Int32)
  nameWithType.vb: DataFlowBatchDestination(Of TInput).InitObjects(Int32)
- uid: ALE.ETLBox.DataFlow.DataFlowBatchDestination`1.InitObjects*
  name: InitObjects
  href: api/ALE.ETLBox.DataFlow.DataFlowBatchDestination-1.html#ALE_ETLBox_DataFlow_DataFlowBatchDestination_1_InitObjects_
  commentId: Overload:ALE.ETLBox.DataFlow.DataFlowBatchDestination`1.InitObjects
  isSpec: "True"
  fullName: ALE.ETLBox.DataFlow.DataFlowBatchDestination<TInput>.InitObjects
  fullName.vb: ALE.ETLBox.DataFlow.DataFlowBatchDestination(Of TInput).InitObjects
  nameWithType: DataFlowBatchDestination<TInput>.InitObjects
  nameWithType.vb: DataFlowBatchDestination(Of TInput).InitObjects
- uid: ALE.ETLBox.DataFlow.DataFlowBatchDestination`1.TargetBlock
  name: TargetBlock
  href: api/ALE.ETLBox.DataFlow.DataFlowBatchDestination-1.html#ALE_ETLBox_DataFlow_DataFlowBatchDestination_1_TargetBlock
  commentId: P:ALE.ETLBox.DataFlow.DataFlowBatchDestination`1.TargetBlock
  fullName: ALE.ETLBox.DataFlow.DataFlowBatchDestination<TInput>.TargetBlock
  fullName.vb: ALE.ETLBox.DataFlow.DataFlowBatchDestination(Of TInput).TargetBlock
  nameWithType: DataFlowBatchDestination<TInput>.TargetBlock
  nameWithType.vb: DataFlowBatchDestination(Of TInput).TargetBlock
- uid: ALE.ETLBox.DataFlow.DataFlowBatchDestination`1.TargetBlock*
  name: TargetBlock
  href: api/ALE.ETLBox.DataFlow.DataFlowBatchDestination-1.html#ALE_ETLBox_DataFlow_DataFlowBatchDestination_1_TargetBlock_
  commentId: Overload:ALE.ETLBox.DataFlow.DataFlowBatchDestination`1.TargetBlock
  isSpec: "True"
  fullName: ALE.ETLBox.DataFlow.DataFlowBatchDestination<TInput>.TargetBlock
  fullName.vb: ALE.ETLBox.DataFlow.DataFlowBatchDestination(Of TInput).TargetBlock
  nameWithType: DataFlowBatchDestination<TInput>.TargetBlock
  nameWithType.vb: DataFlowBatchDestination(Of TInput).TargetBlock
- uid: ALE.ETLBox.DataFlow.DataFlowBatchDestination`1.WriteBatch(`0[]@)
  name: WriteBatch(ref TInput[])
  href: api/ALE.ETLBox.DataFlow.DataFlowBatchDestination-1.html#ALE_ETLBox_DataFlow_DataFlowBatchDestination_1_WriteBatch__0____
  commentId: M:ALE.ETLBox.DataFlow.DataFlowBatchDestination`1.WriteBatch(`0[]@)
  name.vb: WriteBatch(ByRef TInput())
  fullName: ALE.ETLBox.DataFlow.DataFlowBatchDestination<TInput>.WriteBatch(ref TInput[])
  fullName.vb: ALE.ETLBox.DataFlow.DataFlowBatchDestination(Of TInput).WriteBatch(ByRef TInput())
  nameWithType: DataFlowBatchDestination<TInput>.WriteBatch(ref TInput[])
  nameWithType.vb: DataFlowBatchDestination(Of TInput).WriteBatch(ByRef TInput())
- uid: ALE.ETLBox.DataFlow.DataFlowBatchDestination`1.WriteBatch*
  name: WriteBatch
  href: api/ALE.ETLBox.DataFlow.DataFlowBatchDestination-1.html#ALE_ETLBox_DataFlow_DataFlowBatchDestination_1_WriteBatch_
  commentId: Overload:ALE.ETLBox.DataFlow.DataFlowBatchDestination`1.WriteBatch
  isSpec: "True"
  fullName: ALE.ETLBox.DataFlow.DataFlowBatchDestination<TInput>.WriteBatch
  fullName.vb: ALE.ETLBox.DataFlow.DataFlowBatchDestination(Of TInput).WriteBatch
  nameWithType: DataFlowBatchDestination<TInput>.WriteBatch
  nameWithType.vb: DataFlowBatchDestination(Of TInput).WriteBatch
- uid: ALE.ETLBox.DataFlow.DataFlowDestination`1
  name: DataFlowDestination<TInput>
  href: api/ALE.ETLBox.DataFlow.DataFlowDestination-1.html
  commentId: T:ALE.ETLBox.DataFlow.DataFlowDestination`1
  name.vb: DataFlowDestination(Of TInput)
  fullName: ALE.ETLBox.DataFlow.DataFlowDestination<TInput>
  fullName.vb: ALE.ETLBox.DataFlow.DataFlowDestination(Of TInput)
  nameWithType: DataFlowDestination<TInput>
  nameWithType.vb: DataFlowDestination(Of TInput)
- uid: ALE.ETLBox.DataFlow.DataFlowDestination`1.AddPredecessorCompletion(System.Threading.Tasks.Task)
  name: AddPredecessorCompletion(Task)
  href: api/ALE.ETLBox.DataFlow.DataFlowDestination-1.html#ALE_ETLBox_DataFlow_DataFlowDestination_1_AddPredecessorCompletion_System_Threading_Tasks_Task_
  commentId: M:ALE.ETLBox.DataFlow.DataFlowDestination`1.AddPredecessorCompletion(System.Threading.Tasks.Task)
  fullName: ALE.ETLBox.DataFlow.DataFlowDestination<TInput>.AddPredecessorCompletion(System.Threading.Tasks.Task)
  fullName.vb: ALE.ETLBox.DataFlow.DataFlowDestination(Of TInput).AddPredecessorCompletion(System.Threading.Tasks.Task)
  nameWithType: DataFlowDestination<TInput>.AddPredecessorCompletion(Task)
  nameWithType.vb: DataFlowDestination(Of TInput).AddPredecessorCompletion(Task)
- uid: ALE.ETLBox.DataFlow.DataFlowDestination`1.AddPredecessorCompletion*
  name: AddPredecessorCompletion
  href: api/ALE.ETLBox.DataFlow.DataFlowDestination-1.html#ALE_ETLBox_DataFlow_DataFlowDestination_1_AddPredecessorCompletion_
  commentId: Overload:ALE.ETLBox.DataFlow.DataFlowDestination`1.AddPredecessorCompletion
  isSpec: "True"
  fullName: ALE.ETLBox.DataFlow.DataFlowDestination<TInput>.AddPredecessorCompletion
  fullName.vb: ALE.ETLBox.DataFlow.DataFlowDestination(Of TInput).AddPredecessorCompletion
  nameWithType: DataFlowDestination<TInput>.AddPredecessorCompletion
  nameWithType.vb: DataFlowDestination(Of TInput).AddPredecessorCompletion
- uid: ALE.ETLBox.DataFlow.DataFlowDestination`1.AwaitCompletion
  name: AwaitCompletion()
  href: api/ALE.ETLBox.DataFlow.DataFlowDestination-1.html#ALE_ETLBox_DataFlow_DataFlowDestination_1_AwaitCompletion
  commentId: M:ALE.ETLBox.DataFlow.DataFlowDestination`1.AwaitCompletion
  fullName: ALE.ETLBox.DataFlow.DataFlowDestination<TInput>.AwaitCompletion()
  fullName.vb: ALE.ETLBox.DataFlow.DataFlowDestination(Of TInput).AwaitCompletion()
  nameWithType: DataFlowDestination<TInput>.AwaitCompletion()
  nameWithType.vb: DataFlowDestination(Of TInput).AwaitCompletion()
- uid: ALE.ETLBox.DataFlow.DataFlowDestination`1.AwaitCompletion*
  name: AwaitCompletion
  href: api/ALE.ETLBox.DataFlow.DataFlowDestination-1.html#ALE_ETLBox_DataFlow_DataFlowDestination_1_AwaitCompletion_
  commentId: Overload:ALE.ETLBox.DataFlow.DataFlowDestination`1.AwaitCompletion
  isSpec: "True"
  fullName: ALE.ETLBox.DataFlow.DataFlowDestination<TInput>.AwaitCompletion
  fullName.vb: ALE.ETLBox.DataFlow.DataFlowDestination(Of TInput).AwaitCompletion
  nameWithType: DataFlowDestination<TInput>.AwaitCompletion
  nameWithType.vb: DataFlowDestination(Of TInput).AwaitCompletion
- uid: ALE.ETLBox.DataFlow.DataFlowDestination`1.CheckCompleteAction
  name: CheckCompleteAction()
  href: api/ALE.ETLBox.DataFlow.DataFlowDestination-1.html#ALE_ETLBox_DataFlow_DataFlowDestination_1_CheckCompleteAction
  commentId: M:ALE.ETLBox.DataFlow.DataFlowDestination`1.CheckCompleteAction
  fullName: ALE.ETLBox.DataFlow.DataFlowDestination<TInput>.CheckCompleteAction()
  fullName.vb: ALE.ETLBox.DataFlow.DataFlowDestination(Of TInput).CheckCompleteAction()
  nameWithType: DataFlowDestination<TInput>.CheckCompleteAction()
  nameWithType.vb: DataFlowDestination(Of TInput).CheckCompleteAction()
- uid: ALE.ETLBox.DataFlow.DataFlowDestination`1.CheckCompleteAction*
  name: CheckCompleteAction
  href: api/ALE.ETLBox.DataFlow.DataFlowDestination-1.html#ALE_ETLBox_DataFlow_DataFlowDestination_1_CheckCompleteAction_
  commentId: Overload:ALE.ETLBox.DataFlow.DataFlowDestination`1.CheckCompleteAction
  isSpec: "True"
  fullName: ALE.ETLBox.DataFlow.DataFlowDestination<TInput>.CheckCompleteAction
  fullName.vb: ALE.ETLBox.DataFlow.DataFlowDestination(Of TInput).CheckCompleteAction
  nameWithType: DataFlowDestination<TInput>.CheckCompleteAction
  nameWithType.vb: DataFlowDestination(Of TInput).CheckCompleteAction
- uid: ALE.ETLBox.DataFlow.DataFlowDestination`1.CleanUp
  name: CleanUp()
  href: api/ALE.ETLBox.DataFlow.DataFlowDestination-1.html#ALE_ETLBox_DataFlow_DataFlowDestination_1_CleanUp
  commentId: M:ALE.ETLBox.DataFlow.DataFlowDestination`1.CleanUp
  fullName: ALE.ETLBox.DataFlow.DataFlowDestination<TInput>.CleanUp()
  fullName.vb: ALE.ETLBox.DataFlow.DataFlowDestination(Of TInput).CleanUp()
  nameWithType: DataFlowDestination<TInput>.CleanUp()
  nameWithType.vb: DataFlowDestination(Of TInput).CleanUp()
- uid: ALE.ETLBox.DataFlow.DataFlowDestination`1.CleanUp*
  name: CleanUp
  href: api/ALE.ETLBox.DataFlow.DataFlowDestination-1.html#ALE_ETLBox_DataFlow_DataFlowDestination_1_CleanUp_
  commentId: Overload:ALE.ETLBox.DataFlow.DataFlowDestination`1.CleanUp
  isSpec: "True"
  fullName: ALE.ETLBox.DataFlow.DataFlowDestination<TInput>.CleanUp
  fullName.vb: ALE.ETLBox.DataFlow.DataFlowDestination(Of TInput).CleanUp
  nameWithType: DataFlowDestination<TInput>.CleanUp
  nameWithType.vb: DataFlowDestination(Of TInput).CleanUp
- uid: ALE.ETLBox.DataFlow.DataFlowDestination`1.Completion
  name: Completion
  href: api/ALE.ETLBox.DataFlow.DataFlowDestination-1.html#ALE_ETLBox_DataFlow_DataFlowDestination_1_Completion
  commentId: P:ALE.ETLBox.DataFlow.DataFlowDestination`1.Completion
  fullName: ALE.ETLBox.DataFlow.DataFlowDestination<TInput>.Completion
  fullName.vb: ALE.ETLBox.DataFlow.DataFlowDestination(Of TInput).Completion
  nameWithType: DataFlowDestination<TInput>.Completion
  nameWithType.vb: DataFlowDestination(Of TInput).Completion
- uid: ALE.ETLBox.DataFlow.DataFlowDestination`1.Completion*
  name: Completion
  href: api/ALE.ETLBox.DataFlow.DataFlowDestination-1.html#ALE_ETLBox_DataFlow_DataFlowDestination_1_Completion_
  commentId: Overload:ALE.ETLBox.DataFlow.DataFlowDestination`1.Completion
  isSpec: "True"
  fullName: ALE.ETLBox.DataFlow.DataFlowDestination<TInput>.Completion
  fullName.vb: ALE.ETLBox.DataFlow.DataFlowDestination(Of TInput).Completion
  nameWithType: DataFlowDestination<TInput>.Completion
  nameWithType.vb: DataFlowDestination(Of TInput).Completion
- uid: ALE.ETLBox.DataFlow.DataFlowDestination`1.LinkErrorTo(ALE.ETLBox.DataFlow.IDataFlowLinkTarget{ALE.ETLBox.DataFlow.ETLBoxError})
  name: LinkErrorTo(IDataFlowLinkTarget<ETLBoxError>)
  href: api/ALE.ETLBox.DataFlow.DataFlowDestination-1.html#ALE_ETLBox_DataFlow_DataFlowDestination_1_LinkErrorTo_ALE_ETLBox_DataFlow_IDataFlowLinkTarget_ALE_ETLBox_DataFlow_ETLBoxError__
  commentId: M:ALE.ETLBox.DataFlow.DataFlowDestination`1.LinkErrorTo(ALE.ETLBox.DataFlow.IDataFlowLinkTarget{ALE.ETLBox.DataFlow.ETLBoxError})
  name.vb: LinkErrorTo(IDataFlowLinkTarget(Of ETLBoxError))
  fullName: ALE.ETLBox.DataFlow.DataFlowDestination<TInput>.LinkErrorTo(ALE.ETLBox.DataFlow.IDataFlowLinkTarget<ALE.ETLBox.DataFlow.ETLBoxError>)
  fullName.vb: ALE.ETLBox.DataFlow.DataFlowDestination(Of TInput).LinkErrorTo(ALE.ETLBox.DataFlow.IDataFlowLinkTarget(Of ALE.ETLBox.DataFlow.ETLBoxError))
  nameWithType: DataFlowDestination<TInput>.LinkErrorTo(IDataFlowLinkTarget<ETLBoxError>)
  nameWithType.vb: DataFlowDestination(Of TInput).LinkErrorTo(IDataFlowLinkTarget(Of ETLBoxError))
- uid: ALE.ETLBox.DataFlow.DataFlowDestination`1.LinkErrorTo*
  name: LinkErrorTo
  href: api/ALE.ETLBox.DataFlow.DataFlowDestination-1.html#ALE_ETLBox_DataFlow_DataFlowDestination_1_LinkErrorTo_
  commentId: Overload:ALE.ETLBox.DataFlow.DataFlowDestination`1.LinkErrorTo
  isSpec: "True"
  fullName: ALE.ETLBox.DataFlow.DataFlowDestination<TInput>.LinkErrorTo
  fullName.vb: ALE.ETLBox.DataFlow.DataFlowDestination(Of TInput).LinkErrorTo
  nameWithType: DataFlowDestination<TInput>.LinkErrorTo
  nameWithType.vb: DataFlowDestination(Of TInput).LinkErrorTo
- uid: ALE.ETLBox.DataFlow.DataFlowDestination`1.OnCompletion
  name: OnCompletion
  href: api/ALE.ETLBox.DataFlow.DataFlowDestination-1.html#ALE_ETLBox_DataFlow_DataFlowDestination_1_OnCompletion
  commentId: P:ALE.ETLBox.DataFlow.DataFlowDestination`1.OnCompletion
  fullName: ALE.ETLBox.DataFlow.DataFlowDestination<TInput>.OnCompletion
  fullName.vb: ALE.ETLBox.DataFlow.DataFlowDestination(Of TInput).OnCompletion
  nameWithType: DataFlowDestination<TInput>.OnCompletion
  nameWithType.vb: DataFlowDestination(Of TInput).OnCompletion
- uid: ALE.ETLBox.DataFlow.DataFlowDestination`1.OnCompletion*
  name: OnCompletion
  href: api/ALE.ETLBox.DataFlow.DataFlowDestination-1.html#ALE_ETLBox_DataFlow_DataFlowDestination_1_OnCompletion_
  commentId: Overload:ALE.ETLBox.DataFlow.DataFlowDestination`1.OnCompletion
  isSpec: "True"
  fullName: ALE.ETLBox.DataFlow.DataFlowDestination<TInput>.OnCompletion
  fullName.vb: ALE.ETLBox.DataFlow.DataFlowDestination(Of TInput).OnCompletion
  nameWithType: DataFlowDestination<TInput>.OnCompletion
  nameWithType.vb: DataFlowDestination(Of TInput).OnCompletion
- uid: ALE.ETLBox.DataFlow.DataFlowDestination`1.PredecessorCompletions
  name: PredecessorCompletions
  href: api/ALE.ETLBox.DataFlow.DataFlowDestination-1.html#ALE_ETLBox_DataFlow_DataFlowDestination_1_PredecessorCompletions
  commentId: P:ALE.ETLBox.DataFlow.DataFlowDestination`1.PredecessorCompletions
  fullName: ALE.ETLBox.DataFlow.DataFlowDestination<TInput>.PredecessorCompletions
  fullName.vb: ALE.ETLBox.DataFlow.DataFlowDestination(Of TInput).PredecessorCompletions
  nameWithType: DataFlowDestination<TInput>.PredecessorCompletions
  nameWithType.vb: DataFlowDestination(Of TInput).PredecessorCompletions
- uid: ALE.ETLBox.DataFlow.DataFlowDestination`1.PredecessorCompletions*
  name: PredecessorCompletions
  href: api/ALE.ETLBox.DataFlow.DataFlowDestination-1.html#ALE_ETLBox_DataFlow_DataFlowDestination_1_PredecessorCompletions_
  commentId: Overload:ALE.ETLBox.DataFlow.DataFlowDestination`1.PredecessorCompletions
  isSpec: "True"
  fullName: ALE.ETLBox.DataFlow.DataFlowDestination<TInput>.PredecessorCompletions
  fullName.vb: ALE.ETLBox.DataFlow.DataFlowDestination(Of TInput).PredecessorCompletions
  nameWithType: DataFlowDestination<TInput>.PredecessorCompletions
  nameWithType.vb: DataFlowDestination(Of TInput).PredecessorCompletions
- uid: ALE.ETLBox.DataFlow.DataFlowDestination`1.SetCompletionTask
  name: SetCompletionTask()
  href: api/ALE.ETLBox.DataFlow.DataFlowDestination-1.html#ALE_ETLBox_DataFlow_DataFlowDestination_1_SetCompletionTask
  commentId: M:ALE.ETLBox.DataFlow.DataFlowDestination`1.SetCompletionTask
  fullName: ALE.ETLBox.DataFlow.DataFlowDestination<TInput>.SetCompletionTask()
  fullName.vb: ALE.ETLBox.DataFlow.DataFlowDestination(Of TInput).SetCompletionTask()
  nameWithType: DataFlowDestination<TInput>.SetCompletionTask()
  nameWithType.vb: DataFlowDestination(Of TInput).SetCompletionTask()
- uid: ALE.ETLBox.DataFlow.DataFlowDestination`1.SetCompletionTask*
  name: SetCompletionTask
  href: api/ALE.ETLBox.DataFlow.DataFlowDestination-1.html#ALE_ETLBox_DataFlow_DataFlowDestination_1_SetCompletionTask_
  commentId: Overload:ALE.ETLBox.DataFlow.DataFlowDestination`1.SetCompletionTask
  isSpec: "True"
  fullName: ALE.ETLBox.DataFlow.DataFlowDestination<TInput>.SetCompletionTask
  fullName.vb: ALE.ETLBox.DataFlow.DataFlowDestination(Of TInput).SetCompletionTask
  nameWithType: DataFlowDestination<TInput>.SetCompletionTask
  nameWithType.vb: DataFlowDestination(Of TInput).SetCompletionTask
- uid: ALE.ETLBox.DataFlow.DataFlowDestination`1.TargetAction
  name: TargetAction
  href: api/ALE.ETLBox.DataFlow.DataFlowDestination-1.html#ALE_ETLBox_DataFlow_DataFlowDestination_1_TargetAction
  commentId: P:ALE.ETLBox.DataFlow.DataFlowDestination`1.TargetAction
  fullName: ALE.ETLBox.DataFlow.DataFlowDestination<TInput>.TargetAction
  fullName.vb: ALE.ETLBox.DataFlow.DataFlowDestination(Of TInput).TargetAction
  nameWithType: DataFlowDestination<TInput>.TargetAction
  nameWithType.vb: DataFlowDestination(Of TInput).TargetAction
- uid: ALE.ETLBox.DataFlow.DataFlowDestination`1.TargetAction*
  name: TargetAction
  href: api/ALE.ETLBox.DataFlow.DataFlowDestination-1.html#ALE_ETLBox_DataFlow_DataFlowDestination_1_TargetAction_
  commentId: Overload:ALE.ETLBox.DataFlow.DataFlowDestination`1.TargetAction
  isSpec: "True"
  fullName: ALE.ETLBox.DataFlow.DataFlowDestination<TInput>.TargetAction
  fullName.vb: ALE.ETLBox.DataFlow.DataFlowDestination(Of TInput).TargetAction
  nameWithType: DataFlowDestination<TInput>.TargetAction
  nameWithType.vb: DataFlowDestination(Of TInput).TargetAction
- uid: ALE.ETLBox.DataFlow.DataFlowDestination`1.TargetBlock
  name: TargetBlock
  href: api/ALE.ETLBox.DataFlow.DataFlowDestination-1.html#ALE_ETLBox_DataFlow_DataFlowDestination_1_TargetBlock
  commentId: P:ALE.ETLBox.DataFlow.DataFlowDestination`1.TargetBlock
  fullName: ALE.ETLBox.DataFlow.DataFlowDestination<TInput>.TargetBlock
  fullName.vb: ALE.ETLBox.DataFlow.DataFlowDestination(Of TInput).TargetBlock
  nameWithType: DataFlowDestination<TInput>.TargetBlock
  nameWithType.vb: DataFlowDestination(Of TInput).TargetBlock
- uid: ALE.ETLBox.DataFlow.DataFlowDestination`1.TargetBlock*
  name: TargetBlock
  href: api/ALE.ETLBox.DataFlow.DataFlowDestination-1.html#ALE_ETLBox_DataFlow_DataFlowDestination_1_TargetBlock_
  commentId: Overload:ALE.ETLBox.DataFlow.DataFlowDestination`1.TargetBlock
  isSpec: "True"
  fullName: ALE.ETLBox.DataFlow.DataFlowDestination<TInput>.TargetBlock
  fullName.vb: ALE.ETLBox.DataFlow.DataFlowDestination(Of TInput).TargetBlock
  nameWithType: DataFlowDestination<TInput>.TargetBlock
  nameWithType.vb: DataFlowDestination(Of TInput).TargetBlock
- uid: ALE.ETLBox.DataFlow.DataFlowDestination`1.Wait
  name: Wait()
  href: api/ALE.ETLBox.DataFlow.DataFlowDestination-1.html#ALE_ETLBox_DataFlow_DataFlowDestination_1_Wait
  commentId: M:ALE.ETLBox.DataFlow.DataFlowDestination`1.Wait
  fullName: ALE.ETLBox.DataFlow.DataFlowDestination<TInput>.Wait()
  fullName.vb: ALE.ETLBox.DataFlow.DataFlowDestination(Of TInput).Wait()
  nameWithType: DataFlowDestination<TInput>.Wait()
  nameWithType.vb: DataFlowDestination(Of TInput).Wait()
- uid: ALE.ETLBox.DataFlow.DataFlowDestination`1.Wait*
  name: Wait
  href: api/ALE.ETLBox.DataFlow.DataFlowDestination-1.html#ALE_ETLBox_DataFlow_DataFlowDestination_1_Wait_
  commentId: Overload:ALE.ETLBox.DataFlow.DataFlowDestination`1.Wait
  isSpec: "True"
  fullName: ALE.ETLBox.DataFlow.DataFlowDestination<TInput>.Wait
  fullName.vb: ALE.ETLBox.DataFlow.DataFlowDestination(Of TInput).Wait
  nameWithType: DataFlowDestination<TInput>.Wait
  nameWithType.vb: DataFlowDestination(Of TInput).Wait
- uid: ALE.ETLBox.DataFlow.DataFlowLinker`1
  name: DataFlowLinker<TOutput>
  href: api/ALE.ETLBox.DataFlow.DataFlowLinker-1.html
  commentId: T:ALE.ETLBox.DataFlow.DataFlowLinker`1
  name.vb: DataFlowLinker(Of TOutput)
  fullName: ALE.ETLBox.DataFlow.DataFlowLinker<TOutput>
  fullName.vb: ALE.ETLBox.DataFlow.DataFlowLinker(Of TOutput)
  nameWithType: DataFlowLinker<TOutput>
  nameWithType.vb: DataFlowLinker(Of TOutput)
- uid: ALE.ETLBox.DataFlow.DataFlowLinker`1.#ctor(ALE.ETLBox.DataFlowTask,System.Threading.Tasks.Dataflow.ISourceBlock{`0})
  name: DataFlowLinker(DataFlowTask, ISourceBlock<TOutput>)
  href: api/ALE.ETLBox.DataFlow.DataFlowLinker-1.html#ALE_ETLBox_DataFlow_DataFlowLinker_1__ctor_ALE_ETLBox_DataFlowTask_System_Threading_Tasks_Dataflow_ISourceBlock__0__
  commentId: M:ALE.ETLBox.DataFlow.DataFlowLinker`1.#ctor(ALE.ETLBox.DataFlowTask,System.Threading.Tasks.Dataflow.ISourceBlock{`0})
  name.vb: DataFlowLinker(DataFlowTask, ISourceBlock(Of TOutput))
  fullName: ALE.ETLBox.DataFlow.DataFlowLinker<TOutput>.DataFlowLinker(ALE.ETLBox.DataFlowTask, System.Threading.Tasks.Dataflow.ISourceBlock<TOutput>)
  fullName.vb: ALE.ETLBox.DataFlow.DataFlowLinker(Of TOutput).DataFlowLinker(ALE.ETLBox.DataFlowTask, System.Threading.Tasks.Dataflow.ISourceBlock(Of TOutput))
  nameWithType: DataFlowLinker<TOutput>.DataFlowLinker(DataFlowTask, ISourceBlock<TOutput>)
  nameWithType.vb: DataFlowLinker(Of TOutput).DataFlowLinker(DataFlowTask, ISourceBlock(Of TOutput))
- uid: ALE.ETLBox.DataFlow.DataFlowLinker`1.#ctor*
  name: DataFlowLinker
  href: api/ALE.ETLBox.DataFlow.DataFlowLinker-1.html#ALE_ETLBox_DataFlow_DataFlowLinker_1__ctor_
  commentId: Overload:ALE.ETLBox.DataFlow.DataFlowLinker`1.#ctor
  isSpec: "True"
  fullName: ALE.ETLBox.DataFlow.DataFlowLinker<TOutput>.DataFlowLinker
  fullName.vb: ALE.ETLBox.DataFlow.DataFlowLinker(Of TOutput).DataFlowLinker
  nameWithType: DataFlowLinker<TOutput>.DataFlowLinker
  nameWithType.vb: DataFlowLinker(Of TOutput).DataFlowLinker
- uid: ALE.ETLBox.DataFlow.DataFlowLinker`1.CallingTask
  name: CallingTask
  href: api/ALE.ETLBox.DataFlow.DataFlowLinker-1.html#ALE_ETLBox_DataFlow_DataFlowLinker_1_CallingTask
  commentId: P:ALE.ETLBox.DataFlow.DataFlowLinker`1.CallingTask
  fullName: ALE.ETLBox.DataFlow.DataFlowLinker<TOutput>.CallingTask
  fullName.vb: ALE.ETLBox.DataFlow.DataFlowLinker(Of TOutput).CallingTask
  nameWithType: DataFlowLinker<TOutput>.CallingTask
  nameWithType.vb: DataFlowLinker(Of TOutput).CallingTask
- uid: ALE.ETLBox.DataFlow.DataFlowLinker`1.CallingTask*
  name: CallingTask
  href: api/ALE.ETLBox.DataFlow.DataFlowLinker-1.html#ALE_ETLBox_DataFlow_DataFlowLinker_1_CallingTask_
  commentId: Overload:ALE.ETLBox.DataFlow.DataFlowLinker`1.CallingTask
  isSpec: "True"
  fullName: ALE.ETLBox.DataFlow.DataFlowLinker<TOutput>.CallingTask
  fullName.vb: ALE.ETLBox.DataFlow.DataFlowLinker(Of TOutput).CallingTask
  nameWithType: DataFlowLinker<TOutput>.CallingTask
  nameWithType.vb: DataFlowLinker(Of TOutput).CallingTask
- uid: ALE.ETLBox.DataFlow.DataFlowLinker`1.DisableLogging
  name: DisableLogging
  href: api/ALE.ETLBox.DataFlow.DataFlowLinker-1.html#ALE_ETLBox_DataFlow_DataFlowLinker_1_DisableLogging
  commentId: P:ALE.ETLBox.DataFlow.DataFlowLinker`1.DisableLogging
  fullName: ALE.ETLBox.DataFlow.DataFlowLinker<TOutput>.DisableLogging
  fullName.vb: ALE.ETLBox.DataFlow.DataFlowLinker(Of TOutput).DisableLogging
  nameWithType: DataFlowLinker<TOutput>.DisableLogging
  nameWithType.vb: DataFlowLinker(Of TOutput).DisableLogging
- uid: ALE.ETLBox.DataFlow.DataFlowLinker`1.DisableLogging*
  name: DisableLogging
  href: api/ALE.ETLBox.DataFlow.DataFlowLinker-1.html#ALE_ETLBox_DataFlow_DataFlowLinker_1_DisableLogging_
  commentId: Overload:ALE.ETLBox.DataFlow.DataFlowLinker`1.DisableLogging
  isSpec: "True"
  fullName: ALE.ETLBox.DataFlow.DataFlowLinker<TOutput>.DisableLogging
  fullName.vb: ALE.ETLBox.DataFlow.DataFlowLinker(Of TOutput).DisableLogging
  nameWithType: DataFlowLinker<TOutput>.DisableLogging
  nameWithType.vb: DataFlowLinker(Of TOutput).DisableLogging
- uid: ALE.ETLBox.DataFlow.DataFlowLinker`1.LinkTo(ALE.ETLBox.DataFlow.IDataFlowLinkTarget{`0})
  name: LinkTo(IDataFlowLinkTarget<TOutput>)
  href: api/ALE.ETLBox.DataFlow.DataFlowLinker-1.html#ALE_ETLBox_DataFlow_DataFlowLinker_1_LinkTo_ALE_ETLBox_DataFlow_IDataFlowLinkTarget__0__
  commentId: M:ALE.ETLBox.DataFlow.DataFlowLinker`1.LinkTo(ALE.ETLBox.DataFlow.IDataFlowLinkTarget{`0})
  name.vb: LinkTo(IDataFlowLinkTarget(Of TOutput))
  fullName: ALE.ETLBox.DataFlow.DataFlowLinker<TOutput>.LinkTo(ALE.ETLBox.DataFlow.IDataFlowLinkTarget<TOutput>)
  fullName.vb: ALE.ETLBox.DataFlow.DataFlowLinker(Of TOutput).LinkTo(ALE.ETLBox.DataFlow.IDataFlowLinkTarget(Of TOutput))
  nameWithType: DataFlowLinker<TOutput>.LinkTo(IDataFlowLinkTarget<TOutput>)
  nameWithType.vb: DataFlowLinker(Of TOutput).LinkTo(IDataFlowLinkTarget(Of TOutput))
- uid: ALE.ETLBox.DataFlow.DataFlowLinker`1.LinkTo(ALE.ETLBox.DataFlow.IDataFlowLinkTarget{`0},System.Predicate{`0})
  name: LinkTo(IDataFlowLinkTarget<TOutput>, Predicate<TOutput>)
  href: api/ALE.ETLBox.DataFlow.DataFlowLinker-1.html#ALE_ETLBox_DataFlow_DataFlowLinker_1_LinkTo_ALE_ETLBox_DataFlow_IDataFlowLinkTarget__0__System_Predicate__0__
  commentId: M:ALE.ETLBox.DataFlow.DataFlowLinker`1.LinkTo(ALE.ETLBox.DataFlow.IDataFlowLinkTarget{`0},System.Predicate{`0})
  name.vb: LinkTo(IDataFlowLinkTarget(Of TOutput), Predicate(Of TOutput))
  fullName: ALE.ETLBox.DataFlow.DataFlowLinker<TOutput>.LinkTo(ALE.ETLBox.DataFlow.IDataFlowLinkTarget<TOutput>, System.Predicate<TOutput>)
  fullName.vb: ALE.ETLBox.DataFlow.DataFlowLinker(Of TOutput).LinkTo(ALE.ETLBox.DataFlow.IDataFlowLinkTarget(Of TOutput), System.Predicate(Of TOutput))
  nameWithType: DataFlowLinker<TOutput>.LinkTo(IDataFlowLinkTarget<TOutput>, Predicate<TOutput>)
  nameWithType.vb: DataFlowLinker(Of TOutput).LinkTo(IDataFlowLinkTarget(Of TOutput), Predicate(Of TOutput))
- uid: ALE.ETLBox.DataFlow.DataFlowLinker`1.LinkTo(ALE.ETLBox.DataFlow.IDataFlowLinkTarget{`0},System.Predicate{`0},System.Predicate{`0})
  name: LinkTo(IDataFlowLinkTarget<TOutput>, Predicate<TOutput>, Predicate<TOutput>)
  href: api/ALE.ETLBox.DataFlow.DataFlowLinker-1.html#ALE_ETLBox_DataFlow_DataFlowLinker_1_LinkTo_ALE_ETLBox_DataFlow_IDataFlowLinkTarget__0__System_Predicate__0__System_Predicate__0__
  commentId: M:ALE.ETLBox.DataFlow.DataFlowLinker`1.LinkTo(ALE.ETLBox.DataFlow.IDataFlowLinkTarget{`0},System.Predicate{`0},System.Predicate{`0})
  name.vb: LinkTo(IDataFlowLinkTarget(Of TOutput), Predicate(Of TOutput), Predicate(Of TOutput))
  fullName: ALE.ETLBox.DataFlow.DataFlowLinker<TOutput>.LinkTo(ALE.ETLBox.DataFlow.IDataFlowLinkTarget<TOutput>, System.Predicate<TOutput>, System.Predicate<TOutput>)
  fullName.vb: ALE.ETLBox.DataFlow.DataFlowLinker(Of TOutput).LinkTo(ALE.ETLBox.DataFlow.IDataFlowLinkTarget(Of TOutput), System.Predicate(Of TOutput), System.Predicate(Of TOutput))
  nameWithType: DataFlowLinker<TOutput>.LinkTo(IDataFlowLinkTarget<TOutput>, Predicate<TOutput>, Predicate<TOutput>)
  nameWithType.vb: DataFlowLinker(Of TOutput).LinkTo(IDataFlowLinkTarget(Of TOutput), Predicate(Of TOutput), Predicate(Of TOutput))
- uid: ALE.ETLBox.DataFlow.DataFlowLinker`1.LinkTo*
  name: LinkTo
  href: api/ALE.ETLBox.DataFlow.DataFlowLinker-1.html#ALE_ETLBox_DataFlow_DataFlowLinker_1_LinkTo_
  commentId: Overload:ALE.ETLBox.DataFlow.DataFlowLinker`1.LinkTo
  isSpec: "True"
  fullName: ALE.ETLBox.DataFlow.DataFlowLinker<TOutput>.LinkTo
  fullName.vb: ALE.ETLBox.DataFlow.DataFlowLinker(Of TOutput).LinkTo
  nameWithType: DataFlowLinker<TOutput>.LinkTo
  nameWithType.vb: DataFlowLinker(Of TOutput).LinkTo
- uid: ALE.ETLBox.DataFlow.DataFlowLinker`1.LinkTo``1(ALE.ETLBox.DataFlow.IDataFlowLinkTarget{`0})
  name: LinkTo<TConvert>(IDataFlowLinkTarget<TOutput>)
  href: api/ALE.ETLBox.DataFlow.DataFlowLinker-1.html#ALE_ETLBox_DataFlow_DataFlowLinker_1_LinkTo__1_ALE_ETLBox_DataFlow_IDataFlowLinkTarget__0__
  commentId: M:ALE.ETLBox.DataFlow.DataFlowLinker`1.LinkTo``1(ALE.ETLBox.DataFlow.IDataFlowLinkTarget{`0})
  name.vb: LinkTo(Of TConvert)(IDataFlowLinkTarget(Of TOutput))
  fullName: ALE.ETLBox.DataFlow.DataFlowLinker<TOutput>.LinkTo<TConvert>(ALE.ETLBox.DataFlow.IDataFlowLinkTarget<TOutput>)
  fullName.vb: ALE.ETLBox.DataFlow.DataFlowLinker(Of TOutput).LinkTo(Of TConvert)(ALE.ETLBox.DataFlow.IDataFlowLinkTarget(Of TOutput))
  nameWithType: DataFlowLinker<TOutput>.LinkTo<TConvert>(IDataFlowLinkTarget<TOutput>)
  nameWithType.vb: DataFlowLinker(Of TOutput).LinkTo(Of TConvert)(IDataFlowLinkTarget(Of TOutput))
- uid: ALE.ETLBox.DataFlow.DataFlowLinker`1.LinkTo``1(ALE.ETLBox.DataFlow.IDataFlowLinkTarget{`0},System.Predicate{`0})
  name: LinkTo<TConvert>(IDataFlowLinkTarget<TOutput>, Predicate<TOutput>)
  href: api/ALE.ETLBox.DataFlow.DataFlowLinker-1.html#ALE_ETLBox_DataFlow_DataFlowLinker_1_LinkTo__1_ALE_ETLBox_DataFlow_IDataFlowLinkTarget__0__System_Predicate__0__
  commentId: M:ALE.ETLBox.DataFlow.DataFlowLinker`1.LinkTo``1(ALE.ETLBox.DataFlow.IDataFlowLinkTarget{`0},System.Predicate{`0})
  name.vb: LinkTo(Of TConvert)(IDataFlowLinkTarget(Of TOutput), Predicate(Of TOutput))
  fullName: ALE.ETLBox.DataFlow.DataFlowLinker<TOutput>.LinkTo<TConvert>(ALE.ETLBox.DataFlow.IDataFlowLinkTarget<TOutput>, System.Predicate<TOutput>)
  fullName.vb: ALE.ETLBox.DataFlow.DataFlowLinker(Of TOutput).LinkTo(Of TConvert)(ALE.ETLBox.DataFlow.IDataFlowLinkTarget(Of TOutput), System.Predicate(Of TOutput))
  nameWithType: DataFlowLinker<TOutput>.LinkTo<TConvert>(IDataFlowLinkTarget<TOutput>, Predicate<TOutput>)
  nameWithType.vb: DataFlowLinker(Of TOutput).LinkTo(Of TConvert)(IDataFlowLinkTarget(Of TOutput), Predicate(Of TOutput))
- uid: ALE.ETLBox.DataFlow.DataFlowLinker`1.LinkTo``1(ALE.ETLBox.DataFlow.IDataFlowLinkTarget{`0},System.Predicate{`0},System.Predicate{`0})
  name: LinkTo<TConvert>(IDataFlowLinkTarget<TOutput>, Predicate<TOutput>, Predicate<TOutput>)
  href: api/ALE.ETLBox.DataFlow.DataFlowLinker-1.html#ALE_ETLBox_DataFlow_DataFlowLinker_1_LinkTo__1_ALE_ETLBox_DataFlow_IDataFlowLinkTarget__0__System_Predicate__0__System_Predicate__0__
  commentId: M:ALE.ETLBox.DataFlow.DataFlowLinker`1.LinkTo``1(ALE.ETLBox.DataFlow.IDataFlowLinkTarget{`0},System.Predicate{`0},System.Predicate{`0})
  name.vb: LinkTo(Of TConvert)(IDataFlowLinkTarget(Of TOutput), Predicate(Of TOutput), Predicate(Of TOutput))
  fullName: ALE.ETLBox.DataFlow.DataFlowLinker<TOutput>.LinkTo<TConvert>(ALE.ETLBox.DataFlow.IDataFlowLinkTarget<TOutput>, System.Predicate<TOutput>, System.Predicate<TOutput>)
  fullName.vb: ALE.ETLBox.DataFlow.DataFlowLinker(Of TOutput).LinkTo(Of TConvert)(ALE.ETLBox.DataFlow.IDataFlowLinkTarget(Of TOutput), System.Predicate(Of TOutput), System.Predicate(Of TOutput))
  nameWithType: DataFlowLinker<TOutput>.LinkTo<TConvert>(IDataFlowLinkTarget<TOutput>, Predicate<TOutput>, Predicate<TOutput>)
  nameWithType.vb: DataFlowLinker(Of TOutput).LinkTo(Of TConvert)(IDataFlowLinkTarget(Of TOutput), Predicate(Of TOutput), Predicate(Of TOutput))
- uid: ALE.ETLBox.DataFlow.DataFlowLinker`1.NLogger
  name: NLogger
  href: api/ALE.ETLBox.DataFlow.DataFlowLinker-1.html#ALE_ETLBox_DataFlow_DataFlowLinker_1_NLogger
  commentId: P:ALE.ETLBox.DataFlow.DataFlowLinker`1.NLogger
  fullName: ALE.ETLBox.DataFlow.DataFlowLinker<TOutput>.NLogger
  fullName.vb: ALE.ETLBox.DataFlow.DataFlowLinker(Of TOutput).NLogger
  nameWithType: DataFlowLinker<TOutput>.NLogger
  nameWithType.vb: DataFlowLinker(Of TOutput).NLogger
- uid: ALE.ETLBox.DataFlow.DataFlowLinker`1.NLogger*
  name: NLogger
  href: api/ALE.ETLBox.DataFlow.DataFlowLinker-1.html#ALE_ETLBox_DataFlow_DataFlowLinker_1_NLogger_
  commentId: Overload:ALE.ETLBox.DataFlow.DataFlowLinker`1.NLogger
  isSpec: "True"
  fullName: ALE.ETLBox.DataFlow.DataFlowLinker<TOutput>.NLogger
  fullName.vb: ALE.ETLBox.DataFlow.DataFlowLinker(Of TOutput).NLogger
  nameWithType: DataFlowLinker<TOutput>.NLogger
  nameWithType.vb: DataFlowLinker(Of TOutput).NLogger
- uid: ALE.ETLBox.DataFlow.DataFlowLinker`1.SourceBlock
  name: SourceBlock
  href: api/ALE.ETLBox.DataFlow.DataFlowLinker-1.html#ALE_ETLBox_DataFlow_DataFlowLinker_1_SourceBlock
  commentId: P:ALE.ETLBox.DataFlow.DataFlowLinker`1.SourceBlock
  fullName: ALE.ETLBox.DataFlow.DataFlowLinker<TOutput>.SourceBlock
  fullName.vb: ALE.ETLBox.DataFlow.DataFlowLinker(Of TOutput).SourceBlock
  nameWithType: DataFlowLinker<TOutput>.SourceBlock
  nameWithType.vb: DataFlowLinker(Of TOutput).SourceBlock
- uid: ALE.ETLBox.DataFlow.DataFlowLinker`1.SourceBlock*
  name: SourceBlock
  href: api/ALE.ETLBox.DataFlow.DataFlowLinker-1.html#ALE_ETLBox_DataFlow_DataFlowLinker_1_SourceBlock_
  commentId: Overload:ALE.ETLBox.DataFlow.DataFlowLinker`1.SourceBlock
  isSpec: "True"
  fullName: ALE.ETLBox.DataFlow.DataFlowLinker<TOutput>.SourceBlock
  fullName.vb: ALE.ETLBox.DataFlow.DataFlowLinker(Of TOutput).SourceBlock
  nameWithType: DataFlowLinker<TOutput>.SourceBlock
  nameWithType.vb: DataFlowLinker(Of TOutput).SourceBlock
- uid: ALE.ETLBox.DataFlow.DataFlowSource`1
  name: DataFlowSource<TOutput>
  href: api/ALE.ETLBox.DataFlow.DataFlowSource-1.html
  commentId: T:ALE.ETLBox.DataFlow.DataFlowSource`1
  name.vb: DataFlowSource(Of TOutput)
  fullName: ALE.ETLBox.DataFlow.DataFlowSource<TOutput>
  fullName.vb: ALE.ETLBox.DataFlow.DataFlowSource(Of TOutput)
  nameWithType: DataFlowSource<TOutput>
  nameWithType.vb: DataFlowSource(Of TOutput)
- uid: ALE.ETLBox.DataFlow.DataFlowSource`1.Buffer
  name: Buffer
  href: api/ALE.ETLBox.DataFlow.DataFlowSource-1.html#ALE_ETLBox_DataFlow_DataFlowSource_1_Buffer
  commentId: P:ALE.ETLBox.DataFlow.DataFlowSource`1.Buffer
  fullName: ALE.ETLBox.DataFlow.DataFlowSource<TOutput>.Buffer
  fullName.vb: ALE.ETLBox.DataFlow.DataFlowSource(Of TOutput).Buffer
  nameWithType: DataFlowSource<TOutput>.Buffer
  nameWithType.vb: DataFlowSource(Of TOutput).Buffer
- uid: ALE.ETLBox.DataFlow.DataFlowSource`1.Buffer*
  name: Buffer
  href: api/ALE.ETLBox.DataFlow.DataFlowSource-1.html#ALE_ETLBox_DataFlow_DataFlowSource_1_Buffer_
  commentId: Overload:ALE.ETLBox.DataFlow.DataFlowSource`1.Buffer
  isSpec: "True"
  fullName: ALE.ETLBox.DataFlow.DataFlowSource<TOutput>.Buffer
  fullName.vb: ALE.ETLBox.DataFlow.DataFlowSource(Of TOutput).Buffer
  nameWithType: DataFlowSource<TOutput>.Buffer
  nameWithType.vb: DataFlowSource(Of TOutput).Buffer
- uid: ALE.ETLBox.DataFlow.DataFlowSource`1.ErrorHandler
  name: ErrorHandler
  href: api/ALE.ETLBox.DataFlow.DataFlowSource-1.html#ALE_ETLBox_DataFlow_DataFlowSource_1_ErrorHandler
  commentId: P:ALE.ETLBox.DataFlow.DataFlowSource`1.ErrorHandler
  fullName: ALE.ETLBox.DataFlow.DataFlowSource<TOutput>.ErrorHandler
  fullName.vb: ALE.ETLBox.DataFlow.DataFlowSource(Of TOutput).ErrorHandler
  nameWithType: DataFlowSource<TOutput>.ErrorHandler
  nameWithType.vb: DataFlowSource(Of TOutput).ErrorHandler
- uid: ALE.ETLBox.DataFlow.DataFlowSource`1.ErrorHandler*
  name: ErrorHandler
  href: api/ALE.ETLBox.DataFlow.DataFlowSource-1.html#ALE_ETLBox_DataFlow_DataFlowSource_1_ErrorHandler_
  commentId: Overload:ALE.ETLBox.DataFlow.DataFlowSource`1.ErrorHandler
  isSpec: "True"
  fullName: ALE.ETLBox.DataFlow.DataFlowSource<TOutput>.ErrorHandler
  fullName.vb: ALE.ETLBox.DataFlow.DataFlowSource(Of TOutput).ErrorHandler
  nameWithType: DataFlowSource<TOutput>.ErrorHandler
  nameWithType.vb: DataFlowSource(Of TOutput).ErrorHandler
- uid: ALE.ETLBox.DataFlow.DataFlowSource`1.Execute
  name: Execute()
  href: api/ALE.ETLBox.DataFlow.DataFlowSource-1.html#ALE_ETLBox_DataFlow_DataFlowSource_1_Execute
  commentId: M:ALE.ETLBox.DataFlow.DataFlowSource`1.Execute
  fullName: ALE.ETLBox.DataFlow.DataFlowSource<TOutput>.Execute()
  fullName.vb: ALE.ETLBox.DataFlow.DataFlowSource(Of TOutput).Execute()
  nameWithType: DataFlowSource<TOutput>.Execute()
  nameWithType.vb: DataFlowSource(Of TOutput).Execute()
- uid: ALE.ETLBox.DataFlow.DataFlowSource`1.Execute*
  name: Execute
  href: api/ALE.ETLBox.DataFlow.DataFlowSource-1.html#ALE_ETLBox_DataFlow_DataFlowSource_1_Execute_
  commentId: Overload:ALE.ETLBox.DataFlow.DataFlowSource`1.Execute
  isSpec: "True"
  fullName: ALE.ETLBox.DataFlow.DataFlowSource<TOutput>.Execute
  fullName.vb: ALE.ETLBox.DataFlow.DataFlowSource(Of TOutput).Execute
  nameWithType: DataFlowSource<TOutput>.Execute
  nameWithType.vb: DataFlowSource(Of TOutput).Execute
- uid: ALE.ETLBox.DataFlow.DataFlowSource`1.ExecuteAsync
  name: ExecuteAsync()
  href: api/ALE.ETLBox.DataFlow.DataFlowSource-1.html#ALE_ETLBox_DataFlow_DataFlowSource_1_ExecuteAsync
  commentId: M:ALE.ETLBox.DataFlow.DataFlowSource`1.ExecuteAsync
  fullName: ALE.ETLBox.DataFlow.DataFlowSource<TOutput>.ExecuteAsync()
  fullName.vb: ALE.ETLBox.DataFlow.DataFlowSource(Of TOutput).ExecuteAsync()
  nameWithType: DataFlowSource<TOutput>.ExecuteAsync()
  nameWithType.vb: DataFlowSource(Of TOutput).ExecuteAsync()
- uid: ALE.ETLBox.DataFlow.DataFlowSource`1.ExecuteAsync*
  name: ExecuteAsync
  href: api/ALE.ETLBox.DataFlow.DataFlowSource-1.html#ALE_ETLBox_DataFlow_DataFlowSource_1_ExecuteAsync_
  commentId: Overload:ALE.ETLBox.DataFlow.DataFlowSource`1.ExecuteAsync
  isSpec: "True"
  fullName: ALE.ETLBox.DataFlow.DataFlowSource<TOutput>.ExecuteAsync
  fullName.vb: ALE.ETLBox.DataFlow.DataFlowSource(Of TOutput).ExecuteAsync
  nameWithType: DataFlowSource<TOutput>.ExecuteAsync
  nameWithType.vb: DataFlowSource(Of TOutput).ExecuteAsync
- uid: ALE.ETLBox.DataFlow.DataFlowSource`1.LinkErrorTo(ALE.ETLBox.DataFlow.IDataFlowLinkTarget{ALE.ETLBox.DataFlow.ETLBoxError})
  name: LinkErrorTo(IDataFlowLinkTarget<ETLBoxError>)
  href: api/ALE.ETLBox.DataFlow.DataFlowSource-1.html#ALE_ETLBox_DataFlow_DataFlowSource_1_LinkErrorTo_ALE_ETLBox_DataFlow_IDataFlowLinkTarget_ALE_ETLBox_DataFlow_ETLBoxError__
  commentId: M:ALE.ETLBox.DataFlow.DataFlowSource`1.LinkErrorTo(ALE.ETLBox.DataFlow.IDataFlowLinkTarget{ALE.ETLBox.DataFlow.ETLBoxError})
  name.vb: LinkErrorTo(IDataFlowLinkTarget(Of ETLBoxError))
  fullName: ALE.ETLBox.DataFlow.DataFlowSource<TOutput>.LinkErrorTo(ALE.ETLBox.DataFlow.IDataFlowLinkTarget<ALE.ETLBox.DataFlow.ETLBoxError>)
  fullName.vb: ALE.ETLBox.DataFlow.DataFlowSource(Of TOutput).LinkErrorTo(ALE.ETLBox.DataFlow.IDataFlowLinkTarget(Of ALE.ETLBox.DataFlow.ETLBoxError))
  nameWithType: DataFlowSource<TOutput>.LinkErrorTo(IDataFlowLinkTarget<ETLBoxError>)
  nameWithType.vb: DataFlowSource(Of TOutput).LinkErrorTo(IDataFlowLinkTarget(Of ETLBoxError))
- uid: ALE.ETLBox.DataFlow.DataFlowSource`1.LinkErrorTo*
  name: LinkErrorTo
  href: api/ALE.ETLBox.DataFlow.DataFlowSource-1.html#ALE_ETLBox_DataFlow_DataFlowSource_1_LinkErrorTo_
  commentId: Overload:ALE.ETLBox.DataFlow.DataFlowSource`1.LinkErrorTo
  isSpec: "True"
  fullName: ALE.ETLBox.DataFlow.DataFlowSource<TOutput>.LinkErrorTo
  fullName.vb: ALE.ETLBox.DataFlow.DataFlowSource(Of TOutput).LinkErrorTo
  nameWithType: DataFlowSource<TOutput>.LinkErrorTo
  nameWithType.vb: DataFlowSource(Of TOutput).LinkErrorTo
- uid: ALE.ETLBox.DataFlow.DataFlowSource`1.LinkTo(ALE.ETLBox.DataFlow.IDataFlowLinkTarget{`0})
  name: LinkTo(IDataFlowLinkTarget<TOutput>)
  href: api/ALE.ETLBox.DataFlow.DataFlowSource-1.html#ALE_ETLBox_DataFlow_DataFlowSource_1_LinkTo_ALE_ETLBox_DataFlow_IDataFlowLinkTarget__0__
  commentId: M:ALE.ETLBox.DataFlow.DataFlowSource`1.LinkTo(ALE.ETLBox.DataFlow.IDataFlowLinkTarget{`0})
  name.vb: LinkTo(IDataFlowLinkTarget(Of TOutput))
  fullName: ALE.ETLBox.DataFlow.DataFlowSource<TOutput>.LinkTo(ALE.ETLBox.DataFlow.IDataFlowLinkTarget<TOutput>)
  fullName.vb: ALE.ETLBox.DataFlow.DataFlowSource(Of TOutput).LinkTo(ALE.ETLBox.DataFlow.IDataFlowLinkTarget(Of TOutput))
  nameWithType: DataFlowSource<TOutput>.LinkTo(IDataFlowLinkTarget<TOutput>)
  nameWithType.vb: DataFlowSource(Of TOutput).LinkTo(IDataFlowLinkTarget(Of TOutput))
- uid: ALE.ETLBox.DataFlow.DataFlowSource`1.LinkTo(ALE.ETLBox.DataFlow.IDataFlowLinkTarget{`0},System.Predicate{`0})
  name: LinkTo(IDataFlowLinkTarget<TOutput>, Predicate<TOutput>)
  href: api/ALE.ETLBox.DataFlow.DataFlowSource-1.html#ALE_ETLBox_DataFlow_DataFlowSource_1_LinkTo_ALE_ETLBox_DataFlow_IDataFlowLinkTarget__0__System_Predicate__0__
  commentId: M:ALE.ETLBox.DataFlow.DataFlowSource`1.LinkTo(ALE.ETLBox.DataFlow.IDataFlowLinkTarget{`0},System.Predicate{`0})
  name.vb: LinkTo(IDataFlowLinkTarget(Of TOutput), Predicate(Of TOutput))
  fullName: ALE.ETLBox.DataFlow.DataFlowSource<TOutput>.LinkTo(ALE.ETLBox.DataFlow.IDataFlowLinkTarget<TOutput>, System.Predicate<TOutput>)
  fullName.vb: ALE.ETLBox.DataFlow.DataFlowSource(Of TOutput).LinkTo(ALE.ETLBox.DataFlow.IDataFlowLinkTarget(Of TOutput), System.Predicate(Of TOutput))
  nameWithType: DataFlowSource<TOutput>.LinkTo(IDataFlowLinkTarget<TOutput>, Predicate<TOutput>)
  nameWithType.vb: DataFlowSource(Of TOutput).LinkTo(IDataFlowLinkTarget(Of TOutput), Predicate(Of TOutput))
- uid: ALE.ETLBox.DataFlow.DataFlowSource`1.LinkTo(ALE.ETLBox.DataFlow.IDataFlowLinkTarget{`0},System.Predicate{`0},System.Predicate{`0})
  name: LinkTo(IDataFlowLinkTarget<TOutput>, Predicate<TOutput>, Predicate<TOutput>)
  href: api/ALE.ETLBox.DataFlow.DataFlowSource-1.html#ALE_ETLBox_DataFlow_DataFlowSource_1_LinkTo_ALE_ETLBox_DataFlow_IDataFlowLinkTarget__0__System_Predicate__0__System_Predicate__0__
  commentId: M:ALE.ETLBox.DataFlow.DataFlowSource`1.LinkTo(ALE.ETLBox.DataFlow.IDataFlowLinkTarget{`0},System.Predicate{`0},System.Predicate{`0})
  name.vb: LinkTo(IDataFlowLinkTarget(Of TOutput), Predicate(Of TOutput), Predicate(Of TOutput))
  fullName: ALE.ETLBox.DataFlow.DataFlowSource<TOutput>.LinkTo(ALE.ETLBox.DataFlow.IDataFlowLinkTarget<TOutput>, System.Predicate<TOutput>, System.Predicate<TOutput>)
  fullName.vb: ALE.ETLBox.DataFlow.DataFlowSource(Of TOutput).LinkTo(ALE.ETLBox.DataFlow.IDataFlowLinkTarget(Of TOutput), System.Predicate(Of TOutput), System.Predicate(Of TOutput))
  nameWithType: DataFlowSource<TOutput>.LinkTo(IDataFlowLinkTarget<TOutput>, Predicate<TOutput>, Predicate<TOutput>)
  nameWithType.vb: DataFlowSource(Of TOutput).LinkTo(IDataFlowLinkTarget(Of TOutput), Predicate(Of TOutput), Predicate(Of TOutput))
- uid: ALE.ETLBox.DataFlow.DataFlowSource`1.LinkTo*
  name: LinkTo
  href: api/ALE.ETLBox.DataFlow.DataFlowSource-1.html#ALE_ETLBox_DataFlow_DataFlowSource_1_LinkTo_
  commentId: Overload:ALE.ETLBox.DataFlow.DataFlowSource`1.LinkTo
  isSpec: "True"
  fullName: ALE.ETLBox.DataFlow.DataFlowSource<TOutput>.LinkTo
  fullName.vb: ALE.ETLBox.DataFlow.DataFlowSource(Of TOutput).LinkTo
  nameWithType: DataFlowSource<TOutput>.LinkTo
  nameWithType.vb: DataFlowSource(Of TOutput).LinkTo
- uid: ALE.ETLBox.DataFlow.DataFlowSource`1.LinkTo``1(ALE.ETLBox.DataFlow.IDataFlowLinkTarget{`0})
  name: LinkTo<TConvert>(IDataFlowLinkTarget<TOutput>)
  href: api/ALE.ETLBox.DataFlow.DataFlowSource-1.html#ALE_ETLBox_DataFlow_DataFlowSource_1_LinkTo__1_ALE_ETLBox_DataFlow_IDataFlowLinkTarget__0__
  commentId: M:ALE.ETLBox.DataFlow.DataFlowSource`1.LinkTo``1(ALE.ETLBox.DataFlow.IDataFlowLinkTarget{`0})
  name.vb: LinkTo(Of TConvert)(IDataFlowLinkTarget(Of TOutput))
  fullName: ALE.ETLBox.DataFlow.DataFlowSource<TOutput>.LinkTo<TConvert>(ALE.ETLBox.DataFlow.IDataFlowLinkTarget<TOutput>)
  fullName.vb: ALE.ETLBox.DataFlow.DataFlowSource(Of TOutput).LinkTo(Of TConvert)(ALE.ETLBox.DataFlow.IDataFlowLinkTarget(Of TOutput))
  nameWithType: DataFlowSource<TOutput>.LinkTo<TConvert>(IDataFlowLinkTarget<TOutput>)
  nameWithType.vb: DataFlowSource(Of TOutput).LinkTo(Of TConvert)(IDataFlowLinkTarget(Of TOutput))
- uid: ALE.ETLBox.DataFlow.DataFlowSource`1.LinkTo``1(ALE.ETLBox.DataFlow.IDataFlowLinkTarget{`0},System.Predicate{`0})
  name: LinkTo<TConvert>(IDataFlowLinkTarget<TOutput>, Predicate<TOutput>)
  href: api/ALE.ETLBox.DataFlow.DataFlowSource-1.html#ALE_ETLBox_DataFlow_DataFlowSource_1_LinkTo__1_ALE_ETLBox_DataFlow_IDataFlowLinkTarget__0__System_Predicate__0__
  commentId: M:ALE.ETLBox.DataFlow.DataFlowSource`1.LinkTo``1(ALE.ETLBox.DataFlow.IDataFlowLinkTarget{`0},System.Predicate{`0})
  name.vb: LinkTo(Of TConvert)(IDataFlowLinkTarget(Of TOutput), Predicate(Of TOutput))
  fullName: ALE.ETLBox.DataFlow.DataFlowSource<TOutput>.LinkTo<TConvert>(ALE.ETLBox.DataFlow.IDataFlowLinkTarget<TOutput>, System.Predicate<TOutput>)
  fullName.vb: ALE.ETLBox.DataFlow.DataFlowSource(Of TOutput).LinkTo(Of TConvert)(ALE.ETLBox.DataFlow.IDataFlowLinkTarget(Of TOutput), System.Predicate(Of TOutput))
  nameWithType: DataFlowSource<TOutput>.LinkTo<TConvert>(IDataFlowLinkTarget<TOutput>, Predicate<TOutput>)
  nameWithType.vb: DataFlowSource(Of TOutput).LinkTo(Of TConvert)(IDataFlowLinkTarget(Of TOutput), Predicate(Of TOutput))
- uid: ALE.ETLBox.DataFlow.DataFlowSource`1.LinkTo``1(ALE.ETLBox.DataFlow.IDataFlowLinkTarget{`0},System.Predicate{`0},System.Predicate{`0})
  name: LinkTo<TConvert>(IDataFlowLinkTarget<TOutput>, Predicate<TOutput>, Predicate<TOutput>)
  href: api/ALE.ETLBox.DataFlow.DataFlowSource-1.html#ALE_ETLBox_DataFlow_DataFlowSource_1_LinkTo__1_ALE_ETLBox_DataFlow_IDataFlowLinkTarget__0__System_Predicate__0__System_Predicate__0__
  commentId: M:ALE.ETLBox.DataFlow.DataFlowSource`1.LinkTo``1(ALE.ETLBox.DataFlow.IDataFlowLinkTarget{`0},System.Predicate{`0},System.Predicate{`0})
  name.vb: LinkTo(Of TConvert)(IDataFlowLinkTarget(Of TOutput), Predicate(Of TOutput), Predicate(Of TOutput))
  fullName: ALE.ETLBox.DataFlow.DataFlowSource<TOutput>.LinkTo<TConvert>(ALE.ETLBox.DataFlow.IDataFlowLinkTarget<TOutput>, System.Predicate<TOutput>, System.Predicate<TOutput>)
  fullName.vb: ALE.ETLBox.DataFlow.DataFlowSource(Of TOutput).LinkTo(Of TConvert)(ALE.ETLBox.DataFlow.IDataFlowLinkTarget(Of TOutput), System.Predicate(Of TOutput), System.Predicate(Of TOutput))
  nameWithType: DataFlowSource<TOutput>.LinkTo<TConvert>(IDataFlowLinkTarget<TOutput>, Predicate<TOutput>, Predicate<TOutput>)
  nameWithType.vb: DataFlowSource(Of TOutput).LinkTo(Of TConvert)(IDataFlowLinkTarget(Of TOutput), Predicate(Of TOutput), Predicate(Of TOutput))
- uid: ALE.ETLBox.DataFlow.DataFlowSource`1.SourceBlock
  name: SourceBlock
  href: api/ALE.ETLBox.DataFlow.DataFlowSource-1.html#ALE_ETLBox_DataFlow_DataFlowSource_1_SourceBlock
  commentId: P:ALE.ETLBox.DataFlow.DataFlowSource`1.SourceBlock
  fullName: ALE.ETLBox.DataFlow.DataFlowSource<TOutput>.SourceBlock
  fullName.vb: ALE.ETLBox.DataFlow.DataFlowSource(Of TOutput).SourceBlock
  nameWithType: DataFlowSource<TOutput>.SourceBlock
  nameWithType.vb: DataFlowSource(Of TOutput).SourceBlock
- uid: ALE.ETLBox.DataFlow.DataFlowSource`1.SourceBlock*
  name: SourceBlock
  href: api/ALE.ETLBox.DataFlow.DataFlowSource-1.html#ALE_ETLBox_DataFlow_DataFlowSource_1_SourceBlock_
  commentId: Overload:ALE.ETLBox.DataFlow.DataFlowSource`1.SourceBlock
  isSpec: "True"
  fullName: ALE.ETLBox.DataFlow.DataFlowSource<TOutput>.SourceBlock
  fullName.vb: ALE.ETLBox.DataFlow.DataFlowSource(Of TOutput).SourceBlock
  nameWithType: DataFlowSource<TOutput>.SourceBlock
  nameWithType.vb: DataFlowSource(Of TOutput).SourceBlock
- uid: ALE.ETLBox.DataFlow.DataFlowStreamDestination`1
  name: DataFlowStreamDestination<TInput>
  href: api/ALE.ETLBox.DataFlow.DataFlowStreamDestination-1.html
  commentId: T:ALE.ETLBox.DataFlow.DataFlowStreamDestination`1
  name.vb: DataFlowStreamDestination(Of TInput)
  fullName: ALE.ETLBox.DataFlow.DataFlowStreamDestination<TInput>
  fullName.vb: ALE.ETLBox.DataFlow.DataFlowStreamDestination(Of TInput)
  nameWithType: DataFlowStreamDestination<TInput>
  nameWithType.vb: DataFlowStreamDestination(Of TInput)
- uid: ALE.ETLBox.DataFlow.DataFlowStreamDestination`1.CleanUp
  name: CleanUp()
  href: api/ALE.ETLBox.DataFlow.DataFlowStreamDestination-1.html#ALE_ETLBox_DataFlow_DataFlowStreamDestination_1_CleanUp
  commentId: M:ALE.ETLBox.DataFlow.DataFlowStreamDestination`1.CleanUp
  fullName: ALE.ETLBox.DataFlow.DataFlowStreamDestination<TInput>.CleanUp()
  fullName.vb: ALE.ETLBox.DataFlow.DataFlowStreamDestination(Of TInput).CleanUp()
  nameWithType: DataFlowStreamDestination<TInput>.CleanUp()
  nameWithType.vb: DataFlowStreamDestination(Of TInput).CleanUp()
- uid: ALE.ETLBox.DataFlow.DataFlowStreamDestination`1.CleanUp*
  name: CleanUp
  href: api/ALE.ETLBox.DataFlow.DataFlowStreamDestination-1.html#ALE_ETLBox_DataFlow_DataFlowStreamDestination_1_CleanUp_
  commentId: Overload:ALE.ETLBox.DataFlow.DataFlowStreamDestination`1.CleanUp
  isSpec: "True"
  fullName: ALE.ETLBox.DataFlow.DataFlowStreamDestination<TInput>.CleanUp
  fullName.vb: ALE.ETLBox.DataFlow.DataFlowStreamDestination(Of TInput).CleanUp
  nameWithType: DataFlowStreamDestination<TInput>.CleanUp
  nameWithType.vb: DataFlowStreamDestination(Of TInput).CleanUp
- uid: ALE.ETLBox.DataFlow.DataFlowStreamDestination`1.CloseStream
  name: CloseStream()
  href: api/ALE.ETLBox.DataFlow.DataFlowStreamDestination-1.html#ALE_ETLBox_DataFlow_DataFlowStreamDestination_1_CloseStream
  commentId: M:ALE.ETLBox.DataFlow.DataFlowStreamDestination`1.CloseStream
  fullName: ALE.ETLBox.DataFlow.DataFlowStreamDestination<TInput>.CloseStream()
  fullName.vb: ALE.ETLBox.DataFlow.DataFlowStreamDestination(Of TInput).CloseStream()
  nameWithType: DataFlowStreamDestination<TInput>.CloseStream()
  nameWithType.vb: DataFlowStreamDestination(Of TInput).CloseStream()
- uid: ALE.ETLBox.DataFlow.DataFlowStreamDestination`1.CloseStream*
  name: CloseStream
  href: api/ALE.ETLBox.DataFlow.DataFlowStreamDestination-1.html#ALE_ETLBox_DataFlow_DataFlowStreamDestination_1_CloseStream_
  commentId: Overload:ALE.ETLBox.DataFlow.DataFlowStreamDestination`1.CloseStream
  isSpec: "True"
  fullName: ALE.ETLBox.DataFlow.DataFlowStreamDestination<TInput>.CloseStream
  fullName.vb: ALE.ETLBox.DataFlow.DataFlowStreamDestination(Of TInput).CloseStream
  nameWithType: DataFlowStreamDestination<TInput>.CloseStream
  nameWithType.vb: DataFlowStreamDestination(Of TInput).CloseStream
- uid: ALE.ETLBox.DataFlow.DataFlowStreamDestination`1.HttpClient
  name: HttpClient
  href: api/ALE.ETLBox.DataFlow.DataFlowStreamDestination-1.html#ALE_ETLBox_DataFlow_DataFlowStreamDestination_1_HttpClient
  commentId: P:ALE.ETLBox.DataFlow.DataFlowStreamDestination`1.HttpClient
  fullName: ALE.ETLBox.DataFlow.DataFlowStreamDestination<TInput>.HttpClient
  fullName.vb: ALE.ETLBox.DataFlow.DataFlowStreamDestination(Of TInput).HttpClient
  nameWithType: DataFlowStreamDestination<TInput>.HttpClient
  nameWithType.vb: DataFlowStreamDestination(Of TInput).HttpClient
- uid: ALE.ETLBox.DataFlow.DataFlowStreamDestination`1.HttpClient*
  name: HttpClient
  href: api/ALE.ETLBox.DataFlow.DataFlowStreamDestination-1.html#ALE_ETLBox_DataFlow_DataFlowStreamDestination_1_HttpClient_
  commentId: Overload:ALE.ETLBox.DataFlow.DataFlowStreamDestination`1.HttpClient
  isSpec: "True"
  fullName: ALE.ETLBox.DataFlow.DataFlowStreamDestination<TInput>.HttpClient
  fullName.vb: ALE.ETLBox.DataFlow.DataFlowStreamDestination(Of TInput).HttpClient
  nameWithType: DataFlowStreamDestination<TInput>.HttpClient
  nameWithType.vb: DataFlowStreamDestination(Of TInput).HttpClient
- uid: ALE.ETLBox.DataFlow.DataFlowStreamDestination`1.InitStream
  name: InitStream()
  href: api/ALE.ETLBox.DataFlow.DataFlowStreamDestination-1.html#ALE_ETLBox_DataFlow_DataFlowStreamDestination_1_InitStream
  commentId: M:ALE.ETLBox.DataFlow.DataFlowStreamDestination`1.InitStream
  fullName: ALE.ETLBox.DataFlow.DataFlowStreamDestination<TInput>.InitStream()
  fullName.vb: ALE.ETLBox.DataFlow.DataFlowStreamDestination(Of TInput).InitStream()
  nameWithType: DataFlowStreamDestination<TInput>.InitStream()
  nameWithType.vb: DataFlowStreamDestination(Of TInput).InitStream()
- uid: ALE.ETLBox.DataFlow.DataFlowStreamDestination`1.InitStream*
  name: InitStream
  href: api/ALE.ETLBox.DataFlow.DataFlowStreamDestination-1.html#ALE_ETLBox_DataFlow_DataFlowStreamDestination_1_InitStream_
  commentId: Overload:ALE.ETLBox.DataFlow.DataFlowStreamDestination`1.InitStream
  isSpec: "True"
  fullName: ALE.ETLBox.DataFlow.DataFlowStreamDestination<TInput>.InitStream
  fullName.vb: ALE.ETLBox.DataFlow.DataFlowStreamDestination(Of TInput).InitStream
  nameWithType: DataFlowStreamDestination<TInput>.InitStream
  nameWithType.vb: DataFlowStreamDestination(Of TInput).InitStream
- uid: ALE.ETLBox.DataFlow.DataFlowStreamDestination`1.InitTargetAction
  name: InitTargetAction()
  href: api/ALE.ETLBox.DataFlow.DataFlowStreamDestination-1.html#ALE_ETLBox_DataFlow_DataFlowStreamDestination_1_InitTargetAction
  commentId: M:ALE.ETLBox.DataFlow.DataFlowStreamDestination`1.InitTargetAction
  fullName: ALE.ETLBox.DataFlow.DataFlowStreamDestination<TInput>.InitTargetAction()
  fullName.vb: ALE.ETLBox.DataFlow.DataFlowStreamDestination(Of TInput).InitTargetAction()
  nameWithType: DataFlowStreamDestination<TInput>.InitTargetAction()
  nameWithType.vb: DataFlowStreamDestination(Of TInput).InitTargetAction()
- uid: ALE.ETLBox.DataFlow.DataFlowStreamDestination`1.InitTargetAction*
  name: InitTargetAction
  href: api/ALE.ETLBox.DataFlow.DataFlowStreamDestination-1.html#ALE_ETLBox_DataFlow_DataFlowStreamDestination_1_InitTargetAction_
  commentId: Overload:ALE.ETLBox.DataFlow.DataFlowStreamDestination`1.InitTargetAction
  isSpec: "True"
  fullName: ALE.ETLBox.DataFlow.DataFlowStreamDestination<TInput>.InitTargetAction
  fullName.vb: ALE.ETLBox.DataFlow.DataFlowStreamDestination(Of TInput).InitTargetAction
  nameWithType: DataFlowStreamDestination<TInput>.InitTargetAction
  nameWithType.vb: DataFlowStreamDestination(Of TInput).InitTargetAction
- uid: ALE.ETLBox.DataFlow.DataFlowStreamDestination`1.ResourceType
  name: ResourceType
  href: api/ALE.ETLBox.DataFlow.DataFlowStreamDestination-1.html#ALE_ETLBox_DataFlow_DataFlowStreamDestination_1_ResourceType
  commentId: P:ALE.ETLBox.DataFlow.DataFlowStreamDestination`1.ResourceType
  fullName: ALE.ETLBox.DataFlow.DataFlowStreamDestination<TInput>.ResourceType
  fullName.vb: ALE.ETLBox.DataFlow.DataFlowStreamDestination(Of TInput).ResourceType
  nameWithType: DataFlowStreamDestination<TInput>.ResourceType
  nameWithType.vb: DataFlowStreamDestination(Of TInput).ResourceType
- uid: ALE.ETLBox.DataFlow.DataFlowStreamDestination`1.ResourceType*
  name: ResourceType
  href: api/ALE.ETLBox.DataFlow.DataFlowStreamDestination-1.html#ALE_ETLBox_DataFlow_DataFlowStreamDestination_1_ResourceType_
  commentId: Overload:ALE.ETLBox.DataFlow.DataFlowStreamDestination`1.ResourceType
  isSpec: "True"
  fullName: ALE.ETLBox.DataFlow.DataFlowStreamDestination<TInput>.ResourceType
  fullName.vb: ALE.ETLBox.DataFlow.DataFlowStreamDestination(Of TInput).ResourceType
  nameWithType: DataFlowStreamDestination<TInput>.ResourceType
  nameWithType.vb: DataFlowStreamDestination(Of TInput).ResourceType
- uid: ALE.ETLBox.DataFlow.DataFlowStreamDestination`1.StreamWriter
  name: StreamWriter
  href: api/ALE.ETLBox.DataFlow.DataFlowStreamDestination-1.html#ALE_ETLBox_DataFlow_DataFlowStreamDestination_1_StreamWriter
  commentId: P:ALE.ETLBox.DataFlow.DataFlowStreamDestination`1.StreamWriter
  fullName: ALE.ETLBox.DataFlow.DataFlowStreamDestination<TInput>.StreamWriter
  fullName.vb: ALE.ETLBox.DataFlow.DataFlowStreamDestination(Of TInput).StreamWriter
  nameWithType: DataFlowStreamDestination<TInput>.StreamWriter
  nameWithType.vb: DataFlowStreamDestination(Of TInput).StreamWriter
- uid: ALE.ETLBox.DataFlow.DataFlowStreamDestination`1.StreamWriter*
  name: StreamWriter
  href: api/ALE.ETLBox.DataFlow.DataFlowStreamDestination-1.html#ALE_ETLBox_DataFlow_DataFlowStreamDestination_1_StreamWriter_
  commentId: Overload:ALE.ETLBox.DataFlow.DataFlowStreamDestination`1.StreamWriter
  isSpec: "True"
  fullName: ALE.ETLBox.DataFlow.DataFlowStreamDestination<TInput>.StreamWriter
  fullName.vb: ALE.ETLBox.DataFlow.DataFlowStreamDestination(Of TInput).StreamWriter
  nameWithType: DataFlowStreamDestination<TInput>.StreamWriter
  nameWithType.vb: DataFlowStreamDestination(Of TInput).StreamWriter
- uid: ALE.ETLBox.DataFlow.DataFlowStreamDestination`1.Uri
  name: Uri
  href: api/ALE.ETLBox.DataFlow.DataFlowStreamDestination-1.html#ALE_ETLBox_DataFlow_DataFlowStreamDestination_1_Uri
  commentId: P:ALE.ETLBox.DataFlow.DataFlowStreamDestination`1.Uri
  fullName: ALE.ETLBox.DataFlow.DataFlowStreamDestination<TInput>.Uri
  fullName.vb: ALE.ETLBox.DataFlow.DataFlowStreamDestination(Of TInput).Uri
  nameWithType: DataFlowStreamDestination<TInput>.Uri
  nameWithType.vb: DataFlowStreamDestination(Of TInput).Uri
- uid: ALE.ETLBox.DataFlow.DataFlowStreamDestination`1.Uri*
  name: Uri
  href: api/ALE.ETLBox.DataFlow.DataFlowStreamDestination-1.html#ALE_ETLBox_DataFlow_DataFlowStreamDestination_1_Uri_
  commentId: Overload:ALE.ETLBox.DataFlow.DataFlowStreamDestination`1.Uri
  isSpec: "True"
  fullName: ALE.ETLBox.DataFlow.DataFlowStreamDestination<TInput>.Uri
  fullName.vb: ALE.ETLBox.DataFlow.DataFlowStreamDestination(Of TInput).Uri
  nameWithType: DataFlowStreamDestination<TInput>.Uri
  nameWithType.vb: DataFlowStreamDestination(Of TInput).Uri
- uid: ALE.ETLBox.DataFlow.DataFlowStreamDestination`1.WriteData(`0)
  name: WriteData(TInput)
  href: api/ALE.ETLBox.DataFlow.DataFlowStreamDestination-1.html#ALE_ETLBox_DataFlow_DataFlowStreamDestination_1_WriteData__0_
  commentId: M:ALE.ETLBox.DataFlow.DataFlowStreamDestination`1.WriteData(`0)
  fullName: ALE.ETLBox.DataFlow.DataFlowStreamDestination<TInput>.WriteData(TInput)
  fullName.vb: ALE.ETLBox.DataFlow.DataFlowStreamDestination(Of TInput).WriteData(TInput)
  nameWithType: DataFlowStreamDestination<TInput>.WriteData(TInput)
  nameWithType.vb: DataFlowStreamDestination(Of TInput).WriteData(TInput)
- uid: ALE.ETLBox.DataFlow.DataFlowStreamDestination`1.WriteData*
  name: WriteData
  href: api/ALE.ETLBox.DataFlow.DataFlowStreamDestination-1.html#ALE_ETLBox_DataFlow_DataFlowStreamDestination_1_WriteData_
  commentId: Overload:ALE.ETLBox.DataFlow.DataFlowStreamDestination`1.WriteData
  isSpec: "True"
  fullName: ALE.ETLBox.DataFlow.DataFlowStreamDestination<TInput>.WriteData
  fullName.vb: ALE.ETLBox.DataFlow.DataFlowStreamDestination(Of TInput).WriteData
  nameWithType: DataFlowStreamDestination<TInput>.WriteData
  nameWithType.vb: DataFlowStreamDestination(Of TInput).WriteData
- uid: ALE.ETLBox.DataFlow.DataFlowStreamDestination`1.WriteIntoStream(`0)
  name: WriteIntoStream(TInput)
  href: api/ALE.ETLBox.DataFlow.DataFlowStreamDestination-1.html#ALE_ETLBox_DataFlow_DataFlowStreamDestination_1_WriteIntoStream__0_
  commentId: M:ALE.ETLBox.DataFlow.DataFlowStreamDestination`1.WriteIntoStream(`0)
  fullName: ALE.ETLBox.DataFlow.DataFlowStreamDestination<TInput>.WriteIntoStream(TInput)
  fullName.vb: ALE.ETLBox.DataFlow.DataFlowStreamDestination(Of TInput).WriteIntoStream(TInput)
  nameWithType: DataFlowStreamDestination<TInput>.WriteIntoStream(TInput)
  nameWithType.vb: DataFlowStreamDestination(Of TInput).WriteIntoStream(TInput)
- uid: ALE.ETLBox.DataFlow.DataFlowStreamDestination`1.WriteIntoStream*
  name: WriteIntoStream
  href: api/ALE.ETLBox.DataFlow.DataFlowStreamDestination-1.html#ALE_ETLBox_DataFlow_DataFlowStreamDestination_1_WriteIntoStream_
  commentId: Overload:ALE.ETLBox.DataFlow.DataFlowStreamDestination`1.WriteIntoStream
  isSpec: "True"
  fullName: ALE.ETLBox.DataFlow.DataFlowStreamDestination<TInput>.WriteIntoStream
  fullName.vb: ALE.ETLBox.DataFlow.DataFlowStreamDestination(Of TInput).WriteIntoStream
  nameWithType: DataFlowStreamDestination<TInput>.WriteIntoStream
  nameWithType.vb: DataFlowStreamDestination(Of TInput).WriteIntoStream
- uid: ALE.ETLBox.DataFlow.DataFlowStreamSource`1
  name: DataFlowStreamSource<TOutput>
  href: api/ALE.ETLBox.DataFlow.DataFlowStreamSource-1.html
  commentId: T:ALE.ETLBox.DataFlow.DataFlowStreamSource`1
  name.vb: DataFlowStreamSource(Of TOutput)
  fullName: ALE.ETLBox.DataFlow.DataFlowStreamSource<TOutput>
  fullName.vb: ALE.ETLBox.DataFlow.DataFlowStreamSource(Of TOutput)
  nameWithType: DataFlowStreamSource<TOutput>
  nameWithType.vb: DataFlowStreamSource(Of TOutput)
- uid: ALE.ETLBox.DataFlow.DataFlowStreamSource`1._uri
  name: _uri
  href: api/ALE.ETLBox.DataFlow.DataFlowStreamSource-1.html#ALE_ETLBox_DataFlow_DataFlowStreamSource_1__uri
  commentId: F:ALE.ETLBox.DataFlow.DataFlowStreamSource`1._uri
  fullName: ALE.ETLBox.DataFlow.DataFlowStreamSource<TOutput>._uri
  fullName.vb: ALE.ETLBox.DataFlow.DataFlowStreamSource(Of TOutput)._uri
  nameWithType: DataFlowStreamSource<TOutput>._uri
  nameWithType.vb: DataFlowStreamSource(Of TOutput)._uri
- uid: ALE.ETLBox.DataFlow.DataFlowStreamSource`1.CloseReader
  name: CloseReader()
  href: api/ALE.ETLBox.DataFlow.DataFlowStreamSource-1.html#ALE_ETLBox_DataFlow_DataFlowStreamSource_1_CloseReader
  commentId: M:ALE.ETLBox.DataFlow.DataFlowStreamSource`1.CloseReader
  fullName: ALE.ETLBox.DataFlow.DataFlowStreamSource<TOutput>.CloseReader()
  fullName.vb: ALE.ETLBox.DataFlow.DataFlowStreamSource(Of TOutput).CloseReader()
  nameWithType: DataFlowStreamSource<TOutput>.CloseReader()
  nameWithType.vb: DataFlowStreamSource(Of TOutput).CloseReader()
- uid: ALE.ETLBox.DataFlow.DataFlowStreamSource`1.CloseReader*
  name: CloseReader
  href: api/ALE.ETLBox.DataFlow.DataFlowStreamSource-1.html#ALE_ETLBox_DataFlow_DataFlowStreamSource_1_CloseReader_
  commentId: Overload:ALE.ETLBox.DataFlow.DataFlowStreamSource`1.CloseReader
  isSpec: "True"
  fullName: ALE.ETLBox.DataFlow.DataFlowStreamSource<TOutput>.CloseReader
  fullName.vb: ALE.ETLBox.DataFlow.DataFlowStreamSource(Of TOutput).CloseReader
  nameWithType: DataFlowStreamSource<TOutput>.CloseReader
  nameWithType.vb: DataFlowStreamSource(Of TOutput).CloseReader
- uid: ALE.ETLBox.DataFlow.DataFlowStreamSource`1.CurrentRequestUri
  name: CurrentRequestUri
  href: api/ALE.ETLBox.DataFlow.DataFlowStreamSource-1.html#ALE_ETLBox_DataFlow_DataFlowStreamSource_1_CurrentRequestUri
  commentId: P:ALE.ETLBox.DataFlow.DataFlowStreamSource`1.CurrentRequestUri
  fullName: ALE.ETLBox.DataFlow.DataFlowStreamSource<TOutput>.CurrentRequestUri
  fullName.vb: ALE.ETLBox.DataFlow.DataFlowStreamSource(Of TOutput).CurrentRequestUri
  nameWithType: DataFlowStreamSource<TOutput>.CurrentRequestUri
  nameWithType.vb: DataFlowStreamSource(Of TOutput).CurrentRequestUri
- uid: ALE.ETLBox.DataFlow.DataFlowStreamSource`1.CurrentRequestUri*
  name: CurrentRequestUri
  href: api/ALE.ETLBox.DataFlow.DataFlowStreamSource-1.html#ALE_ETLBox_DataFlow_DataFlowStreamSource_1_CurrentRequestUri_
  commentId: Overload:ALE.ETLBox.DataFlow.DataFlowStreamSource`1.CurrentRequestUri
  isSpec: "True"
  fullName: ALE.ETLBox.DataFlow.DataFlowStreamSource<TOutput>.CurrentRequestUri
  fullName.vb: ALE.ETLBox.DataFlow.DataFlowStreamSource(Of TOutput).CurrentRequestUri
  nameWithType: DataFlowStreamSource<TOutput>.CurrentRequestUri
  nameWithType.vb: DataFlowStreamSource(Of TOutput).CurrentRequestUri
- uid: ALE.ETLBox.DataFlow.DataFlowStreamSource`1.Execute
  name: Execute()
  href: api/ALE.ETLBox.DataFlow.DataFlowStreamSource-1.html#ALE_ETLBox_DataFlow_DataFlowStreamSource_1_Execute
  commentId: M:ALE.ETLBox.DataFlow.DataFlowStreamSource`1.Execute
  fullName: ALE.ETLBox.DataFlow.DataFlowStreamSource<TOutput>.Execute()
  fullName.vb: ALE.ETLBox.DataFlow.DataFlowStreamSource(Of TOutput).Execute()
  nameWithType: DataFlowStreamSource<TOutput>.Execute()
  nameWithType.vb: DataFlowStreamSource(Of TOutput).Execute()
- uid: ALE.ETLBox.DataFlow.DataFlowStreamSource`1.Execute*
  name: Execute
  href: api/ALE.ETLBox.DataFlow.DataFlowStreamSource-1.html#ALE_ETLBox_DataFlow_DataFlowStreamSource_1_Execute_
  commentId: Overload:ALE.ETLBox.DataFlow.DataFlowStreamSource`1.Execute
  isSpec: "True"
  fullName: ALE.ETLBox.DataFlow.DataFlowStreamSource<TOutput>.Execute
  fullName.vb: ALE.ETLBox.DataFlow.DataFlowStreamSource(Of TOutput).Execute
  nameWithType: DataFlowStreamSource<TOutput>.Execute
  nameWithType.vb: DataFlowStreamSource(Of TOutput).Execute
- uid: ALE.ETLBox.DataFlow.DataFlowStreamSource`1.GetNextUri
  name: GetNextUri
  href: api/ALE.ETLBox.DataFlow.DataFlowStreamSource-1.html#ALE_ETLBox_DataFlow_DataFlowStreamSource_1_GetNextUri
  commentId: P:ALE.ETLBox.DataFlow.DataFlowStreamSource`1.GetNextUri
  fullName: ALE.ETLBox.DataFlow.DataFlowStreamSource<TOutput>.GetNextUri
  fullName.vb: ALE.ETLBox.DataFlow.DataFlowStreamSource(Of TOutput).GetNextUri
  nameWithType: DataFlowStreamSource<TOutput>.GetNextUri
  nameWithType.vb: DataFlowStreamSource(Of TOutput).GetNextUri
- uid: ALE.ETLBox.DataFlow.DataFlowStreamSource`1.GetNextUri*
  name: GetNextUri
  href: api/ALE.ETLBox.DataFlow.DataFlowStreamSource-1.html#ALE_ETLBox_DataFlow_DataFlowStreamSource_1_GetNextUri_
  commentId: Overload:ALE.ETLBox.DataFlow.DataFlowStreamSource`1.GetNextUri
  isSpec: "True"
  fullName: ALE.ETLBox.DataFlow.DataFlowStreamSource<TOutput>.GetNextUri
  fullName.vb: ALE.ETLBox.DataFlow.DataFlowStreamSource(Of TOutput).GetNextUri
  nameWithType: DataFlowStreamSource<TOutput>.GetNextUri
  nameWithType.vb: DataFlowStreamSource(Of TOutput).GetNextUri
- uid: ALE.ETLBox.DataFlow.DataFlowStreamSource`1.HasNextUri
  name: HasNextUri
  href: api/ALE.ETLBox.DataFlow.DataFlowStreamSource-1.html#ALE_ETLBox_DataFlow_DataFlowStreamSource_1_HasNextUri
  commentId: P:ALE.ETLBox.DataFlow.DataFlowStreamSource`1.HasNextUri
  fullName: ALE.ETLBox.DataFlow.DataFlowStreamSource<TOutput>.HasNextUri
  fullName.vb: ALE.ETLBox.DataFlow.DataFlowStreamSource(Of TOutput).HasNextUri
  nameWithType: DataFlowStreamSource<TOutput>.HasNextUri
  nameWithType.vb: DataFlowStreamSource(Of TOutput).HasNextUri
- uid: ALE.ETLBox.DataFlow.DataFlowStreamSource`1.HasNextUri*
  name: HasNextUri
  href: api/ALE.ETLBox.DataFlow.DataFlowStreamSource-1.html#ALE_ETLBox_DataFlow_DataFlowStreamSource_1_HasNextUri_
  commentId: Overload:ALE.ETLBox.DataFlow.DataFlowStreamSource`1.HasNextUri
  isSpec: "True"
  fullName: ALE.ETLBox.DataFlow.DataFlowStreamSource<TOutput>.HasNextUri
  fullName.vb: ALE.ETLBox.DataFlow.DataFlowStreamSource(Of TOutput).HasNextUri
  nameWithType: DataFlowStreamSource<TOutput>.HasNextUri
  nameWithType.vb: DataFlowStreamSource(Of TOutput).HasNextUri
- uid: ALE.ETLBox.DataFlow.DataFlowStreamSource`1.HttpClient
  name: HttpClient
  href: api/ALE.ETLBox.DataFlow.DataFlowStreamSource-1.html#ALE_ETLBox_DataFlow_DataFlowStreamSource_1_HttpClient
  commentId: P:ALE.ETLBox.DataFlow.DataFlowStreamSource`1.HttpClient
  fullName: ALE.ETLBox.DataFlow.DataFlowStreamSource<TOutput>.HttpClient
  fullName.vb: ALE.ETLBox.DataFlow.DataFlowStreamSource(Of TOutput).HttpClient
  nameWithType: DataFlowStreamSource<TOutput>.HttpClient
  nameWithType.vb: DataFlowStreamSource(Of TOutput).HttpClient
- uid: ALE.ETLBox.DataFlow.DataFlowStreamSource`1.HttpClient*
  name: HttpClient
  href: api/ALE.ETLBox.DataFlow.DataFlowStreamSource-1.html#ALE_ETLBox_DataFlow_DataFlowStreamSource_1_HttpClient_
  commentId: Overload:ALE.ETLBox.DataFlow.DataFlowStreamSource`1.HttpClient
  isSpec: "True"
  fullName: ALE.ETLBox.DataFlow.DataFlowStreamSource<TOutput>.HttpClient
  fullName.vb: ALE.ETLBox.DataFlow.DataFlowStreamSource(Of TOutput).HttpClient
  nameWithType: DataFlowStreamSource<TOutput>.HttpClient
  nameWithType.vb: DataFlowStreamSource(Of TOutput).HttpClient
- uid: ALE.ETLBox.DataFlow.DataFlowStreamSource`1.InitReader
  name: InitReader()
  href: api/ALE.ETLBox.DataFlow.DataFlowStreamSource-1.html#ALE_ETLBox_DataFlow_DataFlowStreamSource_1_InitReader
  commentId: M:ALE.ETLBox.DataFlow.DataFlowStreamSource`1.InitReader
  fullName: ALE.ETLBox.DataFlow.DataFlowStreamSource<TOutput>.InitReader()
  fullName.vb: ALE.ETLBox.DataFlow.DataFlowStreamSource(Of TOutput).InitReader()
  nameWithType: DataFlowStreamSource<TOutput>.InitReader()
  nameWithType.vb: DataFlowStreamSource(Of TOutput).InitReader()
- uid: ALE.ETLBox.DataFlow.DataFlowStreamSource`1.InitReader*
  name: InitReader
  href: api/ALE.ETLBox.DataFlow.DataFlowStreamSource-1.html#ALE_ETLBox_DataFlow_DataFlowStreamSource_1_InitReader_
  commentId: Overload:ALE.ETLBox.DataFlow.DataFlowStreamSource`1.InitReader
  isSpec: "True"
  fullName: ALE.ETLBox.DataFlow.DataFlowStreamSource<TOutput>.InitReader
  fullName.vb: ALE.ETLBox.DataFlow.DataFlowStreamSource(Of TOutput).InitReader
  nameWithType: DataFlowStreamSource<TOutput>.InitReader
  nameWithType.vb: DataFlowStreamSource(Of TOutput).InitReader
- uid: ALE.ETLBox.DataFlow.DataFlowStreamSource`1.ReadAll
  name: ReadAll()
  href: api/ALE.ETLBox.DataFlow.DataFlowStreamSource-1.html#ALE_ETLBox_DataFlow_DataFlowStreamSource_1_ReadAll
  commentId: M:ALE.ETLBox.DataFlow.DataFlowStreamSource`1.ReadAll
  fullName: ALE.ETLBox.DataFlow.DataFlowStreamSource<TOutput>.ReadAll()
  fullName.vb: ALE.ETLBox.DataFlow.DataFlowStreamSource(Of TOutput).ReadAll()
  nameWithType: DataFlowStreamSource<TOutput>.ReadAll()
  nameWithType.vb: DataFlowStreamSource(Of TOutput).ReadAll()
- uid: ALE.ETLBox.DataFlow.DataFlowStreamSource`1.ReadAll*
  name: ReadAll
  href: api/ALE.ETLBox.DataFlow.DataFlowStreamSource-1.html#ALE_ETLBox_DataFlow_DataFlowStreamSource_1_ReadAll_
  commentId: Overload:ALE.ETLBox.DataFlow.DataFlowStreamSource`1.ReadAll
  isSpec: "True"
  fullName: ALE.ETLBox.DataFlow.DataFlowStreamSource<TOutput>.ReadAll
  fullName.vb: ALE.ETLBox.DataFlow.DataFlowStreamSource(Of TOutput).ReadAll
  nameWithType: DataFlowStreamSource<TOutput>.ReadAll
  nameWithType.vb: DataFlowStreamSource(Of TOutput).ReadAll
- uid: ALE.ETLBox.DataFlow.DataFlowStreamSource`1.ResourceType
  name: ResourceType
  href: api/ALE.ETLBox.DataFlow.DataFlowStreamSource-1.html#ALE_ETLBox_DataFlow_DataFlowStreamSource_1_ResourceType
  commentId: P:ALE.ETLBox.DataFlow.DataFlowStreamSource`1.ResourceType
  fullName: ALE.ETLBox.DataFlow.DataFlowStreamSource<TOutput>.ResourceType
  fullName.vb: ALE.ETLBox.DataFlow.DataFlowStreamSource(Of TOutput).ResourceType
  nameWithType: DataFlowStreamSource<TOutput>.ResourceType
  nameWithType.vb: DataFlowStreamSource(Of TOutput).ResourceType
- uid: ALE.ETLBox.DataFlow.DataFlowStreamSource`1.ResourceType*
  name: ResourceType
  href: api/ALE.ETLBox.DataFlow.DataFlowStreamSource-1.html#ALE_ETLBox_DataFlow_DataFlowStreamSource_1_ResourceType_
  commentId: Overload:ALE.ETLBox.DataFlow.DataFlowStreamSource`1.ResourceType
  isSpec: "True"
  fullName: ALE.ETLBox.DataFlow.DataFlowStreamSource<TOutput>.ResourceType
  fullName.vb: ALE.ETLBox.DataFlow.DataFlowStreamSource(Of TOutput).ResourceType
  nameWithType: DataFlowStreamSource<TOutput>.ResourceType
  nameWithType.vb: DataFlowStreamSource(Of TOutput).ResourceType
- uid: ALE.ETLBox.DataFlow.DataFlowStreamSource`1.StreamReader
  name: StreamReader
  href: api/ALE.ETLBox.DataFlow.DataFlowStreamSource-1.html#ALE_ETLBox_DataFlow_DataFlowStreamSource_1_StreamReader
  commentId: P:ALE.ETLBox.DataFlow.DataFlowStreamSource`1.StreamReader
  fullName: ALE.ETLBox.DataFlow.DataFlowStreamSource<TOutput>.StreamReader
  fullName.vb: ALE.ETLBox.DataFlow.DataFlowStreamSource(Of TOutput).StreamReader
  nameWithType: DataFlowStreamSource<TOutput>.StreamReader
  nameWithType.vb: DataFlowStreamSource(Of TOutput).StreamReader
- uid: ALE.ETLBox.DataFlow.DataFlowStreamSource`1.StreamReader*
  name: StreamReader
  href: api/ALE.ETLBox.DataFlow.DataFlowStreamSource-1.html#ALE_ETLBox_DataFlow_DataFlowStreamSource_1_StreamReader_
  commentId: Overload:ALE.ETLBox.DataFlow.DataFlowStreamSource`1.StreamReader
  isSpec: "True"
  fullName: ALE.ETLBox.DataFlow.DataFlowStreamSource<TOutput>.StreamReader
  fullName.vb: ALE.ETLBox.DataFlow.DataFlowStreamSource(Of TOutput).StreamReader
  nameWithType: DataFlowStreamSource<TOutput>.StreamReader
  nameWithType.vb: DataFlowStreamSource(Of TOutput).StreamReader
- uid: ALE.ETLBox.DataFlow.DataFlowStreamSource`1.Uri
  name: Uri
  href: api/ALE.ETLBox.DataFlow.DataFlowStreamSource-1.html#ALE_ETLBox_DataFlow_DataFlowStreamSource_1_Uri
  commentId: P:ALE.ETLBox.DataFlow.DataFlowStreamSource`1.Uri
  fullName: ALE.ETLBox.DataFlow.DataFlowStreamSource<TOutput>.Uri
  fullName.vb: ALE.ETLBox.DataFlow.DataFlowStreamSource(Of TOutput).Uri
  nameWithType: DataFlowStreamSource<TOutput>.Uri
  nameWithType.vb: DataFlowStreamSource(Of TOutput).Uri
- uid: ALE.ETLBox.DataFlow.DataFlowStreamSource`1.Uri*
  name: Uri
  href: api/ALE.ETLBox.DataFlow.DataFlowStreamSource-1.html#ALE_ETLBox_DataFlow_DataFlowStreamSource_1_Uri_
  commentId: Overload:ALE.ETLBox.DataFlow.DataFlowStreamSource`1.Uri
  isSpec: "True"
  fullName: ALE.ETLBox.DataFlow.DataFlowStreamSource<TOutput>.Uri
  fullName.vb: ALE.ETLBox.DataFlow.DataFlowStreamSource(Of TOutput).Uri
  nameWithType: DataFlowStreamSource<TOutput>.Uri
  nameWithType.vb: DataFlowStreamSource(Of TOutput).Uri
- uid: ALE.ETLBox.DataFlow.DbDestination
  name: DbDestination
  href: api/ALE.ETLBox.DataFlow.DbDestination.html
  commentId: T:ALE.ETLBox.DataFlow.DbDestination
  fullName: ALE.ETLBox.DataFlow.DbDestination
  nameWithType: DbDestination
- uid: ALE.ETLBox.DataFlow.DbDestination.#ctor
  name: DbDestination()
  href: api/ALE.ETLBox.DataFlow.DbDestination.html#ALE_ETLBox_DataFlow_DbDestination__ctor
  commentId: M:ALE.ETLBox.DataFlow.DbDestination.#ctor
  fullName: ALE.ETLBox.DataFlow.DbDestination.DbDestination()
  nameWithType: DbDestination.DbDestination()
- uid: ALE.ETLBox.DataFlow.DbDestination.#ctor(ALE.ETLBox.ConnectionManager.IConnectionManager,System.String)
  name: DbDestination(IConnectionManager, String)
  href: api/ALE.ETLBox.DataFlow.DbDestination.html#ALE_ETLBox_DataFlow_DbDestination__ctor_ALE_ETLBox_ConnectionManager_IConnectionManager_System_String_
  commentId: M:ALE.ETLBox.DataFlow.DbDestination.#ctor(ALE.ETLBox.ConnectionManager.IConnectionManager,System.String)
  fullName: ALE.ETLBox.DataFlow.DbDestination.DbDestination(ALE.ETLBox.ConnectionManager.IConnectionManager, System.String)
  nameWithType: DbDestination.DbDestination(IConnectionManager, String)
- uid: ALE.ETLBox.DataFlow.DbDestination.#ctor(ALE.ETLBox.ConnectionManager.IConnectionManager,System.String,System.Int32)
  name: DbDestination(IConnectionManager, String, Int32)
  href: api/ALE.ETLBox.DataFlow.DbDestination.html#ALE_ETLBox_DataFlow_DbDestination__ctor_ALE_ETLBox_ConnectionManager_IConnectionManager_System_String_System_Int32_
  commentId: M:ALE.ETLBox.DataFlow.DbDestination.#ctor(ALE.ETLBox.ConnectionManager.IConnectionManager,System.String,System.Int32)
  fullName: ALE.ETLBox.DataFlow.DbDestination.DbDestination(ALE.ETLBox.ConnectionManager.IConnectionManager, System.String, System.Int32)
  nameWithType: DbDestination.DbDestination(IConnectionManager, String, Int32)
- uid: ALE.ETLBox.DataFlow.DbDestination.#ctor(System.Int32)
  name: DbDestination(Int32)
  href: api/ALE.ETLBox.DataFlow.DbDestination.html#ALE_ETLBox_DataFlow_DbDestination__ctor_System_Int32_
  commentId: M:ALE.ETLBox.DataFlow.DbDestination.#ctor(System.Int32)
  fullName: ALE.ETLBox.DataFlow.DbDestination.DbDestination(System.Int32)
  nameWithType: DbDestination.DbDestination(Int32)
- uid: ALE.ETLBox.DataFlow.DbDestination.#ctor(System.String)
  name: DbDestination(String)
  href: api/ALE.ETLBox.DataFlow.DbDestination.html#ALE_ETLBox_DataFlow_DbDestination__ctor_System_String_
  commentId: M:ALE.ETLBox.DataFlow.DbDestination.#ctor(System.String)
  fullName: ALE.ETLBox.DataFlow.DbDestination.DbDestination(System.String)
  nameWithType: DbDestination.DbDestination(String)
- uid: ALE.ETLBox.DataFlow.DbDestination.#ctor(System.String,System.Int32)
  name: DbDestination(String, Int32)
  href: api/ALE.ETLBox.DataFlow.DbDestination.html#ALE_ETLBox_DataFlow_DbDestination__ctor_System_String_System_Int32_
  commentId: M:ALE.ETLBox.DataFlow.DbDestination.#ctor(System.String,System.Int32)
  fullName: ALE.ETLBox.DataFlow.DbDestination.DbDestination(System.String, System.Int32)
  nameWithType: DbDestination.DbDestination(String, Int32)
- uid: ALE.ETLBox.DataFlow.DbDestination.#ctor*
  name: DbDestination
  href: api/ALE.ETLBox.DataFlow.DbDestination.html#ALE_ETLBox_DataFlow_DbDestination__ctor_
  commentId: Overload:ALE.ETLBox.DataFlow.DbDestination.#ctor
  isSpec: "True"
  fullName: ALE.ETLBox.DataFlow.DbDestination.DbDestination
  nameWithType: DbDestination.DbDestination
- uid: ALE.ETLBox.DataFlow.DbDestination`1
  name: DbDestination<TInput>
  href: api/ALE.ETLBox.DataFlow.DbDestination-1.html
  commentId: T:ALE.ETLBox.DataFlow.DbDestination`1
  name.vb: DbDestination(Of TInput)
  fullName: ALE.ETLBox.DataFlow.DbDestination<TInput>
  fullName.vb: ALE.ETLBox.DataFlow.DbDestination(Of TInput)
  nameWithType: DbDestination<TInput>
  nameWithType.vb: DbDestination(Of TInput)
- uid: ALE.ETLBox.DataFlow.DbDestination`1.#ctor
  name: DbDestination()
  href: api/ALE.ETLBox.DataFlow.DbDestination-1.html#ALE_ETLBox_DataFlow_DbDestination_1__ctor
  commentId: M:ALE.ETLBox.DataFlow.DbDestination`1.#ctor
  fullName: ALE.ETLBox.DataFlow.DbDestination<TInput>.DbDestination()
  fullName.vb: ALE.ETLBox.DataFlow.DbDestination(Of TInput).DbDestination()
  nameWithType: DbDestination<TInput>.DbDestination()
  nameWithType.vb: DbDestination(Of TInput).DbDestination()
- uid: ALE.ETLBox.DataFlow.DbDestination`1.#ctor(ALE.ETLBox.ConnectionManager.IConnectionManager,System.String)
  name: DbDestination(IConnectionManager, String)
  href: api/ALE.ETLBox.DataFlow.DbDestination-1.html#ALE_ETLBox_DataFlow_DbDestination_1__ctor_ALE_ETLBox_ConnectionManager_IConnectionManager_System_String_
  commentId: M:ALE.ETLBox.DataFlow.DbDestination`1.#ctor(ALE.ETLBox.ConnectionManager.IConnectionManager,System.String)
  fullName: ALE.ETLBox.DataFlow.DbDestination<TInput>.DbDestination(ALE.ETLBox.ConnectionManager.IConnectionManager, System.String)
  fullName.vb: ALE.ETLBox.DataFlow.DbDestination(Of TInput).DbDestination(ALE.ETLBox.ConnectionManager.IConnectionManager, System.String)
  nameWithType: DbDestination<TInput>.DbDestination(IConnectionManager, String)
  nameWithType.vb: DbDestination(Of TInput).DbDestination(IConnectionManager, String)
- uid: ALE.ETLBox.DataFlow.DbDestination`1.#ctor(ALE.ETLBox.ConnectionManager.IConnectionManager,System.String,System.Int32)
  name: DbDestination(IConnectionManager, String, Int32)
  href: api/ALE.ETLBox.DataFlow.DbDestination-1.html#ALE_ETLBox_DataFlow_DbDestination_1__ctor_ALE_ETLBox_ConnectionManager_IConnectionManager_System_String_System_Int32_
  commentId: M:ALE.ETLBox.DataFlow.DbDestination`1.#ctor(ALE.ETLBox.ConnectionManager.IConnectionManager,System.String,System.Int32)
  fullName: ALE.ETLBox.DataFlow.DbDestination<TInput>.DbDestination(ALE.ETLBox.ConnectionManager.IConnectionManager, System.String, System.Int32)
  fullName.vb: ALE.ETLBox.DataFlow.DbDestination(Of TInput).DbDestination(ALE.ETLBox.ConnectionManager.IConnectionManager, System.String, System.Int32)
  nameWithType: DbDestination<TInput>.DbDestination(IConnectionManager, String, Int32)
  nameWithType.vb: DbDestination(Of TInput).DbDestination(IConnectionManager, String, Int32)
- uid: ALE.ETLBox.DataFlow.DbDestination`1.#ctor(System.Int32)
  name: DbDestination(Int32)
  href: api/ALE.ETLBox.DataFlow.DbDestination-1.html#ALE_ETLBox_DataFlow_DbDestination_1__ctor_System_Int32_
  commentId: M:ALE.ETLBox.DataFlow.DbDestination`1.#ctor(System.Int32)
  fullName: ALE.ETLBox.DataFlow.DbDestination<TInput>.DbDestination(System.Int32)
  fullName.vb: ALE.ETLBox.DataFlow.DbDestination(Of TInput).DbDestination(System.Int32)
  nameWithType: DbDestination<TInput>.DbDestination(Int32)
  nameWithType.vb: DbDestination(Of TInput).DbDestination(Int32)
- uid: ALE.ETLBox.DataFlow.DbDestination`1.#ctor(System.String)
  name: DbDestination(String)
  href: api/ALE.ETLBox.DataFlow.DbDestination-1.html#ALE_ETLBox_DataFlow_DbDestination_1__ctor_System_String_
  commentId: M:ALE.ETLBox.DataFlow.DbDestination`1.#ctor(System.String)
  fullName: ALE.ETLBox.DataFlow.DbDestination<TInput>.DbDestination(System.String)
  fullName.vb: ALE.ETLBox.DataFlow.DbDestination(Of TInput).DbDestination(System.String)
  nameWithType: DbDestination<TInput>.DbDestination(String)
  nameWithType.vb: DbDestination(Of TInput).DbDestination(String)
- uid: ALE.ETLBox.DataFlow.DbDestination`1.#ctor(System.String,System.Int32)
  name: DbDestination(String, Int32)
  href: api/ALE.ETLBox.DataFlow.DbDestination-1.html#ALE_ETLBox_DataFlow_DbDestination_1__ctor_System_String_System_Int32_
  commentId: M:ALE.ETLBox.DataFlow.DbDestination`1.#ctor(System.String,System.Int32)
  fullName: ALE.ETLBox.DataFlow.DbDestination<TInput>.DbDestination(System.String, System.Int32)
  fullName.vb: ALE.ETLBox.DataFlow.DbDestination(Of TInput).DbDestination(System.String, System.Int32)
  nameWithType: DbDestination<TInput>.DbDestination(String, Int32)
  nameWithType.vb: DbDestination(Of TInput).DbDestination(String, Int32)
- uid: ALE.ETLBox.DataFlow.DbDestination`1.#ctor*
  name: DbDestination
  href: api/ALE.ETLBox.DataFlow.DbDestination-1.html#ALE_ETLBox_DataFlow_DbDestination_1__ctor_
  commentId: Overload:ALE.ETLBox.DataFlow.DbDestination`1.#ctor
  isSpec: "True"
  fullName: ALE.ETLBox.DataFlow.DbDestination<TInput>.DbDestination
  fullName.vb: ALE.ETLBox.DataFlow.DbDestination(Of TInput).DbDestination
  nameWithType: DbDestination<TInput>.DbDestination
  nameWithType.vb: DbDestination(Of TInput).DbDestination
- uid: ALE.ETLBox.DataFlow.DbDestination`1.DestinationTableDefinition
  name: DestinationTableDefinition
  href: api/ALE.ETLBox.DataFlow.DbDestination-1.html#ALE_ETLBox_DataFlow_DbDestination_1_DestinationTableDefinition
  commentId: P:ALE.ETLBox.DataFlow.DbDestination`1.DestinationTableDefinition
  fullName: ALE.ETLBox.DataFlow.DbDestination<TInput>.DestinationTableDefinition
  fullName.vb: ALE.ETLBox.DataFlow.DbDestination(Of TInput).DestinationTableDefinition
  nameWithType: DbDestination<TInput>.DestinationTableDefinition
  nameWithType.vb: DbDestination(Of TInput).DestinationTableDefinition
- uid: ALE.ETLBox.DataFlow.DbDestination`1.DestinationTableDefinition*
  name: DestinationTableDefinition
  href: api/ALE.ETLBox.DataFlow.DbDestination-1.html#ALE_ETLBox_DataFlow_DbDestination_1_DestinationTableDefinition_
  commentId: Overload:ALE.ETLBox.DataFlow.DbDestination`1.DestinationTableDefinition
  isSpec: "True"
  fullName: ALE.ETLBox.DataFlow.DbDestination<TInput>.DestinationTableDefinition
  fullName.vb: ALE.ETLBox.DataFlow.DbDestination(Of TInput).DestinationTableDefinition
  nameWithType: DbDestination<TInput>.DestinationTableDefinition
  nameWithType.vb: DbDestination(Of TInput).DestinationTableDefinition
- uid: ALE.ETLBox.DataFlow.DbDestination`1.HasDestinationTableDefinition
  name: HasDestinationTableDefinition
  href: api/ALE.ETLBox.DataFlow.DbDestination-1.html#ALE_ETLBox_DataFlow_DbDestination_1_HasDestinationTableDefinition
  commentId: P:ALE.ETLBox.DataFlow.DbDestination`1.HasDestinationTableDefinition
  fullName: ALE.ETLBox.DataFlow.DbDestination<TInput>.HasDestinationTableDefinition
  fullName.vb: ALE.ETLBox.DataFlow.DbDestination(Of TInput).HasDestinationTableDefinition
  nameWithType: DbDestination<TInput>.HasDestinationTableDefinition
  nameWithType.vb: DbDestination(Of TInput).HasDestinationTableDefinition
- uid: ALE.ETLBox.DataFlow.DbDestination`1.HasDestinationTableDefinition*
  name: HasDestinationTableDefinition
  href: api/ALE.ETLBox.DataFlow.DbDestination-1.html#ALE_ETLBox_DataFlow_DbDestination_1_HasDestinationTableDefinition_
  commentId: Overload:ALE.ETLBox.DataFlow.DbDestination`1.HasDestinationTableDefinition
  isSpec: "True"
  fullName: ALE.ETLBox.DataFlow.DbDestination<TInput>.HasDestinationTableDefinition
  fullName.vb: ALE.ETLBox.DataFlow.DbDestination(Of TInput).HasDestinationTableDefinition
  nameWithType: DbDestination<TInput>.HasDestinationTableDefinition
  nameWithType.vb: DbDestination(Of TInput).HasDestinationTableDefinition
- uid: ALE.ETLBox.DataFlow.DbDestination`1.HasTableName
  name: HasTableName
  href: api/ALE.ETLBox.DataFlow.DbDestination-1.html#ALE_ETLBox_DataFlow_DbDestination_1_HasTableName
  commentId: P:ALE.ETLBox.DataFlow.DbDestination`1.HasTableName
  fullName: ALE.ETLBox.DataFlow.DbDestination<TInput>.HasTableName
  fullName.vb: ALE.ETLBox.DataFlow.DbDestination(Of TInput).HasTableName
  nameWithType: DbDestination<TInput>.HasTableName
  nameWithType.vb: DbDestination(Of TInput).HasTableName
- uid: ALE.ETLBox.DataFlow.DbDestination`1.HasTableName*
  name: HasTableName
  href: api/ALE.ETLBox.DataFlow.DbDestination-1.html#ALE_ETLBox_DataFlow_DbDestination_1_HasTableName_
  commentId: Overload:ALE.ETLBox.DataFlow.DbDestination`1.HasTableName
  isSpec: "True"
  fullName: ALE.ETLBox.DataFlow.DbDestination<TInput>.HasTableName
  fullName.vb: ALE.ETLBox.DataFlow.DbDestination(Of TInput).HasTableName
  nameWithType: DbDestination<TInput>.HasTableName
  nameWithType.vb: DbDestination(Of TInput).HasTableName
- uid: ALE.ETLBox.DataFlow.DbDestination`1.InitObjects(System.Int32)
  name: InitObjects(Int32)
  href: api/ALE.ETLBox.DataFlow.DbDestination-1.html#ALE_ETLBox_DataFlow_DbDestination_1_InitObjects_System_Int32_
  commentId: M:ALE.ETLBox.DataFlow.DbDestination`1.InitObjects(System.Int32)
  fullName: ALE.ETLBox.DataFlow.DbDestination<TInput>.InitObjects(System.Int32)
  fullName.vb: ALE.ETLBox.DataFlow.DbDestination(Of TInput).InitObjects(System.Int32)
  nameWithType: DbDestination<TInput>.InitObjects(Int32)
  nameWithType.vb: DbDestination(Of TInput).InitObjects(Int32)
- uid: ALE.ETLBox.DataFlow.DbDestination`1.InitObjects*
  name: InitObjects
  href: api/ALE.ETLBox.DataFlow.DbDestination-1.html#ALE_ETLBox_DataFlow_DbDestination_1_InitObjects_
  commentId: Overload:ALE.ETLBox.DataFlow.DbDestination`1.InitObjects
  isSpec: "True"
  fullName: ALE.ETLBox.DataFlow.DbDestination<TInput>.InitObjects
  fullName.vb: ALE.ETLBox.DataFlow.DbDestination(Of TInput).InitObjects
  nameWithType: DbDestination<TInput>.InitObjects
  nameWithType.vb: DbDestination(Of TInput).InitObjects
- uid: ALE.ETLBox.DataFlow.DbDestination`1.TableName
  name: TableName
  href: api/ALE.ETLBox.DataFlow.DbDestination-1.html#ALE_ETLBox_DataFlow_DbDestination_1_TableName
  commentId: P:ALE.ETLBox.DataFlow.DbDestination`1.TableName
  fullName: ALE.ETLBox.DataFlow.DbDestination<TInput>.TableName
  fullName.vb: ALE.ETLBox.DataFlow.DbDestination(Of TInput).TableName
  nameWithType: DbDestination<TInput>.TableName
  nameWithType.vb: DbDestination(Of TInput).TableName
- uid: ALE.ETLBox.DataFlow.DbDestination`1.TableName*
  name: TableName
  href: api/ALE.ETLBox.DataFlow.DbDestination-1.html#ALE_ETLBox_DataFlow_DbDestination_1_TableName_
  commentId: Overload:ALE.ETLBox.DataFlow.DbDestination`1.TableName
  isSpec: "True"
  fullName: ALE.ETLBox.DataFlow.DbDestination<TInput>.TableName
  fullName.vb: ALE.ETLBox.DataFlow.DbDestination(Of TInput).TableName
  nameWithType: DbDestination<TInput>.TableName
  nameWithType.vb: DbDestination(Of TInput).TableName
- uid: ALE.ETLBox.DataFlow.DbDestination`1.TaskName
  name: TaskName
  href: api/ALE.ETLBox.DataFlow.DbDestination-1.html#ALE_ETLBox_DataFlow_DbDestination_1_TaskName
  commentId: P:ALE.ETLBox.DataFlow.DbDestination`1.TaskName
  fullName: ALE.ETLBox.DataFlow.DbDestination<TInput>.TaskName
  fullName.vb: ALE.ETLBox.DataFlow.DbDestination(Of TInput).TaskName
  nameWithType: DbDestination<TInput>.TaskName
  nameWithType.vb: DbDestination(Of TInput).TaskName
- uid: ALE.ETLBox.DataFlow.DbDestination`1.TaskName*
  name: TaskName
  href: api/ALE.ETLBox.DataFlow.DbDestination-1.html#ALE_ETLBox_DataFlow_DbDestination_1_TaskName_
  commentId: Overload:ALE.ETLBox.DataFlow.DbDestination`1.TaskName
  isSpec: "True"
  fullName: ALE.ETLBox.DataFlow.DbDestination<TInput>.TaskName
  fullName.vb: ALE.ETLBox.DataFlow.DbDestination(Of TInput).TaskName
  nameWithType: DbDestination<TInput>.TaskName
  nameWithType.vb: DbDestination(Of TInput).TaskName
- uid: ALE.ETLBox.DataFlow.DbDestination`1.WriteBatch(`0[]@)
  name: WriteBatch(ref TInput[])
  href: api/ALE.ETLBox.DataFlow.DbDestination-1.html#ALE_ETLBox_DataFlow_DbDestination_1_WriteBatch__0____
  commentId: M:ALE.ETLBox.DataFlow.DbDestination`1.WriteBatch(`0[]@)
  name.vb: WriteBatch(ByRef TInput())
  fullName: ALE.ETLBox.DataFlow.DbDestination<TInput>.WriteBatch(ref TInput[])
  fullName.vb: ALE.ETLBox.DataFlow.DbDestination(Of TInput).WriteBatch(ByRef TInput())
  nameWithType: DbDestination<TInput>.WriteBatch(ref TInput[])
  nameWithType.vb: DbDestination(Of TInput).WriteBatch(ByRef TInput())
- uid: ALE.ETLBox.DataFlow.DbDestination`1.WriteBatch*
  name: WriteBatch
  href: api/ALE.ETLBox.DataFlow.DbDestination-1.html#ALE_ETLBox_DataFlow_DbDestination_1_WriteBatch_
  commentId: Overload:ALE.ETLBox.DataFlow.DbDestination`1.WriteBatch
  isSpec: "True"
  fullName: ALE.ETLBox.DataFlow.DbDestination<TInput>.WriteBatch
  fullName.vb: ALE.ETLBox.DataFlow.DbDestination(Of TInput).WriteBatch
  nameWithType: DbDestination<TInput>.WriteBatch
  nameWithType.vb: DbDestination(Of TInput).WriteBatch
- uid: ALE.ETLBox.DataFlow.DbMerge`1
  name: DbMerge<TInput>
  href: api/ALE.ETLBox.DataFlow.DbMerge-1.html
  commentId: T:ALE.ETLBox.DataFlow.DbMerge`1
  name.vb: DbMerge(Of TInput)
  fullName: ALE.ETLBox.DataFlow.DbMerge<TInput>
  fullName.vb: ALE.ETLBox.DataFlow.DbMerge(Of TInput)
  nameWithType: DbMerge<TInput>
  nameWithType.vb: DbMerge(Of TInput)
- uid: ALE.ETLBox.DataFlow.DbMerge`1.#ctor(ALE.ETLBox.ConnectionManager.IConnectionManager,System.String)
  name: DbMerge(IConnectionManager, String)
  href: api/ALE.ETLBox.DataFlow.DbMerge-1.html#ALE_ETLBox_DataFlow_DbMerge_1__ctor_ALE_ETLBox_ConnectionManager_IConnectionManager_System_String_
  commentId: M:ALE.ETLBox.DataFlow.DbMerge`1.#ctor(ALE.ETLBox.ConnectionManager.IConnectionManager,System.String)
  fullName: ALE.ETLBox.DataFlow.DbMerge<TInput>.DbMerge(ALE.ETLBox.ConnectionManager.IConnectionManager, System.String)
  fullName.vb: ALE.ETLBox.DataFlow.DbMerge(Of TInput).DbMerge(ALE.ETLBox.ConnectionManager.IConnectionManager, System.String)
  nameWithType: DbMerge<TInput>.DbMerge(IConnectionManager, String)
  nameWithType.vb: DbMerge(Of TInput).DbMerge(IConnectionManager, String)
- uid: ALE.ETLBox.DataFlow.DbMerge`1.#ctor(System.String)
  name: DbMerge(String)
  href: api/ALE.ETLBox.DataFlow.DbMerge-1.html#ALE_ETLBox_DataFlow_DbMerge_1__ctor_System_String_
  commentId: M:ALE.ETLBox.DataFlow.DbMerge`1.#ctor(System.String)
  fullName: ALE.ETLBox.DataFlow.DbMerge<TInput>.DbMerge(System.String)
  fullName.vb: ALE.ETLBox.DataFlow.DbMerge(Of TInput).DbMerge(System.String)
  nameWithType: DbMerge<TInput>.DbMerge(String)
  nameWithType.vb: DbMerge(Of TInput).DbMerge(String)
- uid: ALE.ETLBox.DataFlow.DbMerge`1.#ctor*
  name: DbMerge
  href: api/ALE.ETLBox.DataFlow.DbMerge-1.html#ALE_ETLBox_DataFlow_DbMerge_1__ctor_
  commentId: Overload:ALE.ETLBox.DataFlow.DbMerge`1.#ctor
  isSpec: "True"
  fullName: ALE.ETLBox.DataFlow.DbMerge<TInput>.DbMerge
  fullName.vb: ALE.ETLBox.DataFlow.DbMerge(Of TInput).DbMerge
  nameWithType: DbMerge<TInput>.DbMerge
  nameWithType.vb: DbMerge(Of TInput).DbMerge
- uid: ALE.ETLBox.DataFlow.DbMerge`1.Completion
  name: Completion()
  href: api/ALE.ETLBox.DataFlow.DbMerge-1.html#ALE_ETLBox_DataFlow_DbMerge_1_Completion
  commentId: M:ALE.ETLBox.DataFlow.DbMerge`1.Completion
  fullName: ALE.ETLBox.DataFlow.DbMerge<TInput>.Completion()
  fullName.vb: ALE.ETLBox.DataFlow.DbMerge(Of TInput).Completion()
  nameWithType: DbMerge<TInput>.Completion()
  nameWithType.vb: DbMerge(Of TInput).Completion()
- uid: ALE.ETLBox.DataFlow.DbMerge`1.Completion*
  name: Completion
  href: api/ALE.ETLBox.DataFlow.DbMerge-1.html#ALE_ETLBox_DataFlow_DbMerge_1_Completion_
  commentId: Overload:ALE.ETLBox.DataFlow.DbMerge`1.Completion
  isSpec: "True"
  fullName: ALE.ETLBox.DataFlow.DbMerge<TInput>.Completion
  fullName.vb: ALE.ETLBox.DataFlow.DbMerge(Of TInput).Completion
  nameWithType: DbMerge<TInput>.Completion
  nameWithType.vb: DbMerge(Of TInput).Completion
- uid: ALE.ETLBox.DataFlow.DbMerge`1.ConnectionManager
  name: ConnectionManager
  href: api/ALE.ETLBox.DataFlow.DbMerge-1.html#ALE_ETLBox_DataFlow_DbMerge_1_ConnectionManager
  commentId: P:ALE.ETLBox.DataFlow.DbMerge`1.ConnectionManager
  fullName: ALE.ETLBox.DataFlow.DbMerge<TInput>.ConnectionManager
  fullName.vb: ALE.ETLBox.DataFlow.DbMerge(Of TInput).ConnectionManager
  nameWithType: DbMerge<TInput>.ConnectionManager
  nameWithType.vb: DbMerge(Of TInput).ConnectionManager
- uid: ALE.ETLBox.DataFlow.DbMerge`1.ConnectionManager*
  name: ConnectionManager
  href: api/ALE.ETLBox.DataFlow.DbMerge-1.html#ALE_ETLBox_DataFlow_DbMerge_1_ConnectionManager_
  commentId: Overload:ALE.ETLBox.DataFlow.DbMerge`1.ConnectionManager
  isSpec: "True"
  fullName: ALE.ETLBox.DataFlow.DbMerge<TInput>.ConnectionManager
  fullName.vb: ALE.ETLBox.DataFlow.DbMerge(Of TInput).ConnectionManager
  nameWithType: DbMerge<TInput>.ConnectionManager
  nameWithType.vb: DbMerge(Of TInput).ConnectionManager
- uid: ALE.ETLBox.DataFlow.DbMerge`1.DeltaMode
  name: DeltaMode
  href: api/ALE.ETLBox.DataFlow.DbMerge-1.html#ALE_ETLBox_DataFlow_DbMerge_1_DeltaMode
  commentId: P:ALE.ETLBox.DataFlow.DbMerge`1.DeltaMode
  fullName: ALE.ETLBox.DataFlow.DbMerge<TInput>.DeltaMode
  fullName.vb: ALE.ETLBox.DataFlow.DbMerge(Of TInput).DeltaMode
  nameWithType: DbMerge<TInput>.DeltaMode
  nameWithType.vb: DbMerge(Of TInput).DeltaMode
- uid: ALE.ETLBox.DataFlow.DbMerge`1.DeltaMode*
  name: DeltaMode
  href: api/ALE.ETLBox.DataFlow.DbMerge-1.html#ALE_ETLBox_DataFlow_DbMerge_1_DeltaMode_
  commentId: Overload:ALE.ETLBox.DataFlow.DbMerge`1.DeltaMode
  isSpec: "True"
  fullName: ALE.ETLBox.DataFlow.DbMerge<TInput>.DeltaMode
  fullName.vb: ALE.ETLBox.DataFlow.DbMerge(Of TInput).DeltaMode
  nameWithType: DbMerge<TInput>.DeltaMode
  nameWithType.vb: DbMerge(Of TInput).DeltaMode
- uid: ALE.ETLBox.DataFlow.DbMerge`1.DeltaTable
  name: DeltaTable
  href: api/ALE.ETLBox.DataFlow.DbMerge-1.html#ALE_ETLBox_DataFlow_DbMerge_1_DeltaTable
  commentId: P:ALE.ETLBox.DataFlow.DbMerge`1.DeltaTable
  fullName: ALE.ETLBox.DataFlow.DbMerge<TInput>.DeltaTable
  fullName.vb: ALE.ETLBox.DataFlow.DbMerge(Of TInput).DeltaTable
  nameWithType: DbMerge<TInput>.DeltaTable
  nameWithType.vb: DbMerge(Of TInput).DeltaTable
- uid: ALE.ETLBox.DataFlow.DbMerge`1.DeltaTable*
  name: DeltaTable
  href: api/ALE.ETLBox.DataFlow.DbMerge-1.html#ALE_ETLBox_DataFlow_DbMerge_1_DeltaTable_
  commentId: Overload:ALE.ETLBox.DataFlow.DbMerge`1.DeltaTable
  isSpec: "True"
  fullName: ALE.ETLBox.DataFlow.DbMerge<TInput>.DeltaTable
  fullName.vb: ALE.ETLBox.DataFlow.DbMerge(Of TInput).DeltaTable
  nameWithType: DbMerge<TInput>.DeltaTable
  nameWithType.vb: DbMerge(Of TInput).DeltaTable
- uid: ALE.ETLBox.DataFlow.DbMerge`1.DestinationTableDefinition
  name: DestinationTableDefinition
  href: api/ALE.ETLBox.DataFlow.DbMerge-1.html#ALE_ETLBox_DataFlow_DbMerge_1_DestinationTableDefinition
  commentId: P:ALE.ETLBox.DataFlow.DbMerge`1.DestinationTableDefinition
  fullName: ALE.ETLBox.DataFlow.DbMerge<TInput>.DestinationTableDefinition
  fullName.vb: ALE.ETLBox.DataFlow.DbMerge(Of TInput).DestinationTableDefinition
  nameWithType: DbMerge<TInput>.DestinationTableDefinition
  nameWithType.vb: DbMerge(Of TInput).DestinationTableDefinition
- uid: ALE.ETLBox.DataFlow.DbMerge`1.DestinationTableDefinition*
  name: DestinationTableDefinition
  href: api/ALE.ETLBox.DataFlow.DbMerge-1.html#ALE_ETLBox_DataFlow_DbMerge_1_DestinationTableDefinition_
  commentId: Overload:ALE.ETLBox.DataFlow.DbMerge`1.DestinationTableDefinition
  isSpec: "True"
  fullName: ALE.ETLBox.DataFlow.DbMerge<TInput>.DestinationTableDefinition
  fullName.vb: ALE.ETLBox.DataFlow.DbMerge(Of TInput).DestinationTableDefinition
  nameWithType: DbMerge<TInput>.DestinationTableDefinition
  nameWithType.vb: DbMerge(Of TInput).DestinationTableDefinition
- uid: ALE.ETLBox.DataFlow.DbMerge`1.Execute
  name: Execute()
  href: api/ALE.ETLBox.DataFlow.DbMerge-1.html#ALE_ETLBox_DataFlow_DbMerge_1_Execute
  commentId: M:ALE.ETLBox.DataFlow.DbMerge`1.Execute
  fullName: ALE.ETLBox.DataFlow.DbMerge<TInput>.Execute()
  fullName.vb: ALE.ETLBox.DataFlow.DbMerge(Of TInput).Execute()
  nameWithType: DbMerge<TInput>.Execute()
  nameWithType.vb: DbMerge(Of TInput).Execute()
- uid: ALE.ETLBox.DataFlow.DbMerge`1.Execute*
  name: Execute
  href: api/ALE.ETLBox.DataFlow.DbMerge-1.html#ALE_ETLBox_DataFlow_DbMerge_1_Execute_
  commentId: Overload:ALE.ETLBox.DataFlow.DbMerge`1.Execute
  isSpec: "True"
  fullName: ALE.ETLBox.DataFlow.DbMerge<TInput>.Execute
  fullName.vb: ALE.ETLBox.DataFlow.DbMerge(Of TInput).Execute
  nameWithType: DbMerge<TInput>.Execute
  nameWithType.vb: DbMerge(Of TInput).Execute
- uid: ALE.ETLBox.DataFlow.DbMerge`1.ExecuteAsync
  name: ExecuteAsync()
  href: api/ALE.ETLBox.DataFlow.DbMerge-1.html#ALE_ETLBox_DataFlow_DbMerge_1_ExecuteAsync
  commentId: M:ALE.ETLBox.DataFlow.DbMerge`1.ExecuteAsync
  fullName: ALE.ETLBox.DataFlow.DbMerge<TInput>.ExecuteAsync()
  fullName.vb: ALE.ETLBox.DataFlow.DbMerge(Of TInput).ExecuteAsync()
  nameWithType: DbMerge<TInput>.ExecuteAsync()
  nameWithType.vb: DbMerge(Of TInput).ExecuteAsync()
- uid: ALE.ETLBox.DataFlow.DbMerge`1.ExecuteAsync*
  name: ExecuteAsync
  href: api/ALE.ETLBox.DataFlow.DbMerge-1.html#ALE_ETLBox_DataFlow_DbMerge_1_ExecuteAsync_
  commentId: Overload:ALE.ETLBox.DataFlow.DbMerge`1.ExecuteAsync
  isSpec: "True"
  fullName: ALE.ETLBox.DataFlow.DbMerge<TInput>.ExecuteAsync
  fullName.vb: ALE.ETLBox.DataFlow.DbMerge(Of TInput).ExecuteAsync
  nameWithType: DbMerge<TInput>.ExecuteAsync
  nameWithType.vb: DbMerge(Of TInput).ExecuteAsync
- uid: ALE.ETLBox.DataFlow.DbMerge`1.SourceBlock
  name: SourceBlock
  href: api/ALE.ETLBox.DataFlow.DbMerge-1.html#ALE_ETLBox_DataFlow_DbMerge_1_SourceBlock
  commentId: P:ALE.ETLBox.DataFlow.DbMerge`1.SourceBlock
  fullName: ALE.ETLBox.DataFlow.DbMerge<TInput>.SourceBlock
  fullName.vb: ALE.ETLBox.DataFlow.DbMerge(Of TInput).SourceBlock
  nameWithType: DbMerge<TInput>.SourceBlock
  nameWithType.vb: DbMerge(Of TInput).SourceBlock
- uid: ALE.ETLBox.DataFlow.DbMerge`1.SourceBlock*
  name: SourceBlock
  href: api/ALE.ETLBox.DataFlow.DbMerge-1.html#ALE_ETLBox_DataFlow_DbMerge_1_SourceBlock_
  commentId: Overload:ALE.ETLBox.DataFlow.DbMerge`1.SourceBlock
  isSpec: "True"
  fullName: ALE.ETLBox.DataFlow.DbMerge<TInput>.SourceBlock
  fullName.vb: ALE.ETLBox.DataFlow.DbMerge(Of TInput).SourceBlock
  nameWithType: DbMerge<TInput>.SourceBlock
  nameWithType.vb: DbMerge(Of TInput).SourceBlock
- uid: ALE.ETLBox.DataFlow.DbMerge`1.TableName
  name: TableName
  href: api/ALE.ETLBox.DataFlow.DbMerge-1.html#ALE_ETLBox_DataFlow_DbMerge_1_TableName
  commentId: P:ALE.ETLBox.DataFlow.DbMerge`1.TableName
  fullName: ALE.ETLBox.DataFlow.DbMerge<TInput>.TableName
  fullName.vb: ALE.ETLBox.DataFlow.DbMerge(Of TInput).TableName
  nameWithType: DbMerge<TInput>.TableName
  nameWithType.vb: DbMerge(Of TInput).TableName
- uid: ALE.ETLBox.DataFlow.DbMerge`1.TableName*
  name: TableName
  href: api/ALE.ETLBox.DataFlow.DbMerge-1.html#ALE_ETLBox_DataFlow_DbMerge_1_TableName_
  commentId: Overload:ALE.ETLBox.DataFlow.DbMerge`1.TableName
  isSpec: "True"
  fullName: ALE.ETLBox.DataFlow.DbMerge<TInput>.TableName
  fullName.vb: ALE.ETLBox.DataFlow.DbMerge(Of TInput).TableName
  nameWithType: DbMerge<TInput>.TableName
  nameWithType.vb: DbMerge(Of TInput).TableName
- uid: ALE.ETLBox.DataFlow.DbMerge`1.TargetBlock
  name: TargetBlock
  href: api/ALE.ETLBox.DataFlow.DbMerge-1.html#ALE_ETLBox_DataFlow_DbMerge_1_TargetBlock
  commentId: P:ALE.ETLBox.DataFlow.DbMerge`1.TargetBlock
  fullName: ALE.ETLBox.DataFlow.DbMerge<TInput>.TargetBlock
  fullName.vb: ALE.ETLBox.DataFlow.DbMerge(Of TInput).TargetBlock
  nameWithType: DbMerge<TInput>.TargetBlock
  nameWithType.vb: DbMerge(Of TInput).TargetBlock
- uid: ALE.ETLBox.DataFlow.DbMerge`1.TargetBlock*
  name: TargetBlock
  href: api/ALE.ETLBox.DataFlow.DbMerge-1.html#ALE_ETLBox_DataFlow_DbMerge_1_TargetBlock_
  commentId: Overload:ALE.ETLBox.DataFlow.DbMerge`1.TargetBlock
  isSpec: "True"
  fullName: ALE.ETLBox.DataFlow.DbMerge<TInput>.TargetBlock
  fullName.vb: ALE.ETLBox.DataFlow.DbMerge(Of TInput).TargetBlock
  nameWithType: DbMerge<TInput>.TargetBlock
  nameWithType.vb: DbMerge(Of TInput).TargetBlock
- uid: ALE.ETLBox.DataFlow.DbMerge`1.TaskName
  name: TaskName
  href: api/ALE.ETLBox.DataFlow.DbMerge-1.html#ALE_ETLBox_DataFlow_DbMerge_1_TaskName
  commentId: P:ALE.ETLBox.DataFlow.DbMerge`1.TaskName
  fullName: ALE.ETLBox.DataFlow.DbMerge<TInput>.TaskName
  fullName.vb: ALE.ETLBox.DataFlow.DbMerge(Of TInput).TaskName
  nameWithType: DbMerge<TInput>.TaskName
  nameWithType.vb: DbMerge(Of TInput).TaskName
- uid: ALE.ETLBox.DataFlow.DbMerge`1.TaskName*
  name: TaskName
  href: api/ALE.ETLBox.DataFlow.DbMerge-1.html#ALE_ETLBox_DataFlow_DbMerge_1_TaskName_
  commentId: Overload:ALE.ETLBox.DataFlow.DbMerge`1.TaskName
  isSpec: "True"
  fullName: ALE.ETLBox.DataFlow.DbMerge<TInput>.TaskName
  fullName.vb: ALE.ETLBox.DataFlow.DbMerge(Of TInput).TaskName
  nameWithType: DbMerge<TInput>.TaskName
  nameWithType.vb: DbMerge(Of TInput).TaskName
- uid: ALE.ETLBox.DataFlow.DbMerge`1.UseTruncateMethod
  name: UseTruncateMethod
  href: api/ALE.ETLBox.DataFlow.DbMerge-1.html#ALE_ETLBox_DataFlow_DbMerge_1_UseTruncateMethod
  commentId: P:ALE.ETLBox.DataFlow.DbMerge`1.UseTruncateMethod
  fullName: ALE.ETLBox.DataFlow.DbMerge<TInput>.UseTruncateMethod
  fullName.vb: ALE.ETLBox.DataFlow.DbMerge(Of TInput).UseTruncateMethod
  nameWithType: DbMerge<TInput>.UseTruncateMethod
  nameWithType.vb: DbMerge(Of TInput).UseTruncateMethod
- uid: ALE.ETLBox.DataFlow.DbMerge`1.UseTruncateMethod*
  name: UseTruncateMethod
  href: api/ALE.ETLBox.DataFlow.DbMerge-1.html#ALE_ETLBox_DataFlow_DbMerge_1_UseTruncateMethod_
  commentId: Overload:ALE.ETLBox.DataFlow.DbMerge`1.UseTruncateMethod
  isSpec: "True"
  fullName: ALE.ETLBox.DataFlow.DbMerge<TInput>.UseTruncateMethod
  fullName.vb: ALE.ETLBox.DataFlow.DbMerge(Of TInput).UseTruncateMethod
  nameWithType: DbMerge<TInput>.UseTruncateMethod
  nameWithType.vb: DbMerge(Of TInput).UseTruncateMethod
- uid: ALE.ETLBox.DataFlow.DbMerge`1.Wait
  name: Wait()
  href: api/ALE.ETLBox.DataFlow.DbMerge-1.html#ALE_ETLBox_DataFlow_DbMerge_1_Wait
  commentId: M:ALE.ETLBox.DataFlow.DbMerge`1.Wait
  fullName: ALE.ETLBox.DataFlow.DbMerge<TInput>.Wait()
  fullName.vb: ALE.ETLBox.DataFlow.DbMerge(Of TInput).Wait()
  nameWithType: DbMerge<TInput>.Wait()
  nameWithType.vb: DbMerge(Of TInput).Wait()
- uid: ALE.ETLBox.DataFlow.DbMerge`1.Wait*
  name: Wait
  href: api/ALE.ETLBox.DataFlow.DbMerge-1.html#ALE_ETLBox_DataFlow_DbMerge_1_Wait_
  commentId: Overload:ALE.ETLBox.DataFlow.DbMerge`1.Wait
  isSpec: "True"
  fullName: ALE.ETLBox.DataFlow.DbMerge<TInput>.Wait
  fullName.vb: ALE.ETLBox.DataFlow.DbMerge(Of TInput).Wait
  nameWithType: DbMerge<TInput>.Wait
  nameWithType.vb: DbMerge(Of TInput).Wait
- uid: ALE.ETLBox.DataFlow.DbSource
  name: DbSource
  href: api/ALE.ETLBox.DataFlow.DbSource.html
  commentId: T:ALE.ETLBox.DataFlow.DbSource
  fullName: ALE.ETLBox.DataFlow.DbSource
  nameWithType: DbSource
- uid: ALE.ETLBox.DataFlow.DbSource.#ctor
  name: DbSource()
  href: api/ALE.ETLBox.DataFlow.DbSource.html#ALE_ETLBox_DataFlow_DbSource__ctor
  commentId: M:ALE.ETLBox.DataFlow.DbSource.#ctor
  fullName: ALE.ETLBox.DataFlow.DbSource.DbSource()
  nameWithType: DbSource.DbSource()
- uid: ALE.ETLBox.DataFlow.DbSource.#ctor(ALE.ETLBox.ConnectionManager.IConnectionManager)
  name: DbSource(IConnectionManager)
  href: api/ALE.ETLBox.DataFlow.DbSource.html#ALE_ETLBox_DataFlow_DbSource__ctor_ALE_ETLBox_ConnectionManager_IConnectionManager_
  commentId: M:ALE.ETLBox.DataFlow.DbSource.#ctor(ALE.ETLBox.ConnectionManager.IConnectionManager)
  fullName: ALE.ETLBox.DataFlow.DbSource.DbSource(ALE.ETLBox.ConnectionManager.IConnectionManager)
  nameWithType: DbSource.DbSource(IConnectionManager)
- uid: ALE.ETLBox.DataFlow.DbSource.#ctor(ALE.ETLBox.ConnectionManager.IConnectionManager,System.String)
  name: DbSource(IConnectionManager, String)
  href: api/ALE.ETLBox.DataFlow.DbSource.html#ALE_ETLBox_DataFlow_DbSource__ctor_ALE_ETLBox_ConnectionManager_IConnectionManager_System_String_
  commentId: M:ALE.ETLBox.DataFlow.DbSource.#ctor(ALE.ETLBox.ConnectionManager.IConnectionManager,System.String)
  fullName: ALE.ETLBox.DataFlow.DbSource.DbSource(ALE.ETLBox.ConnectionManager.IConnectionManager, System.String)
  nameWithType: DbSource.DbSource(IConnectionManager, String)
- uid: ALE.ETLBox.DataFlow.DbSource.#ctor(System.String)
  name: DbSource(String)
  href: api/ALE.ETLBox.DataFlow.DbSource.html#ALE_ETLBox_DataFlow_DbSource__ctor_System_String_
  commentId: M:ALE.ETLBox.DataFlow.DbSource.#ctor(System.String)
  fullName: ALE.ETLBox.DataFlow.DbSource.DbSource(System.String)
  nameWithType: DbSource.DbSource(String)
- uid: ALE.ETLBox.DataFlow.DbSource.#ctor*
  name: DbSource
  href: api/ALE.ETLBox.DataFlow.DbSource.html#ALE_ETLBox_DataFlow_DbSource__ctor_
  commentId: Overload:ALE.ETLBox.DataFlow.DbSource.#ctor
  isSpec: "True"
  fullName: ALE.ETLBox.DataFlow.DbSource.DbSource
  nameWithType: DbSource.DbSource
- uid: ALE.ETLBox.DataFlow.DbSource`1
  name: DbSource<TOutput>
  href: api/ALE.ETLBox.DataFlow.DbSource-1.html
  commentId: T:ALE.ETLBox.DataFlow.DbSource`1
  name.vb: DbSource(Of TOutput)
  fullName: ALE.ETLBox.DataFlow.DbSource<TOutput>
  fullName.vb: ALE.ETLBox.DataFlow.DbSource(Of TOutput)
  nameWithType: DbSource<TOutput>
  nameWithType.vb: DbSource(Of TOutput)
- uid: ALE.ETLBox.DataFlow.DbSource`1.#ctor
  name: DbSource()
  href: api/ALE.ETLBox.DataFlow.DbSource-1.html#ALE_ETLBox_DataFlow_DbSource_1__ctor
  commentId: M:ALE.ETLBox.DataFlow.DbSource`1.#ctor
  fullName: ALE.ETLBox.DataFlow.DbSource<TOutput>.DbSource()
  fullName.vb: ALE.ETLBox.DataFlow.DbSource(Of TOutput).DbSource()
  nameWithType: DbSource<TOutput>.DbSource()
  nameWithType.vb: DbSource(Of TOutput).DbSource()
- uid: ALE.ETLBox.DataFlow.DbSource`1.#ctor(ALE.ETLBox.ConnectionManager.IConnectionManager)
  name: DbSource(IConnectionManager)
  href: api/ALE.ETLBox.DataFlow.DbSource-1.html#ALE_ETLBox_DataFlow_DbSource_1__ctor_ALE_ETLBox_ConnectionManager_IConnectionManager_
  commentId: M:ALE.ETLBox.DataFlow.DbSource`1.#ctor(ALE.ETLBox.ConnectionManager.IConnectionManager)
  fullName: ALE.ETLBox.DataFlow.DbSource<TOutput>.DbSource(ALE.ETLBox.ConnectionManager.IConnectionManager)
  fullName.vb: ALE.ETLBox.DataFlow.DbSource(Of TOutput).DbSource(ALE.ETLBox.ConnectionManager.IConnectionManager)
  nameWithType: DbSource<TOutput>.DbSource(IConnectionManager)
  nameWithType.vb: DbSource(Of TOutput).DbSource(IConnectionManager)
- uid: ALE.ETLBox.DataFlow.DbSource`1.#ctor(ALE.ETLBox.ConnectionManager.IConnectionManager,System.String)
  name: DbSource(IConnectionManager, String)
  href: api/ALE.ETLBox.DataFlow.DbSource-1.html#ALE_ETLBox_DataFlow_DbSource_1__ctor_ALE_ETLBox_ConnectionManager_IConnectionManager_System_String_
  commentId: M:ALE.ETLBox.DataFlow.DbSource`1.#ctor(ALE.ETLBox.ConnectionManager.IConnectionManager,System.String)
  fullName: ALE.ETLBox.DataFlow.DbSource<TOutput>.DbSource(ALE.ETLBox.ConnectionManager.IConnectionManager, System.String)
  fullName.vb: ALE.ETLBox.DataFlow.DbSource(Of TOutput).DbSource(ALE.ETLBox.ConnectionManager.IConnectionManager, System.String)
  nameWithType: DbSource<TOutput>.DbSource(IConnectionManager, String)
  nameWithType.vb: DbSource(Of TOutput).DbSource(IConnectionManager, String)
- uid: ALE.ETLBox.DataFlow.DbSource`1.#ctor(System.String)
  name: DbSource(String)
  href: api/ALE.ETLBox.DataFlow.DbSource-1.html#ALE_ETLBox_DataFlow_DbSource_1__ctor_System_String_
  commentId: M:ALE.ETLBox.DataFlow.DbSource`1.#ctor(System.String)
  fullName: ALE.ETLBox.DataFlow.DbSource<TOutput>.DbSource(System.String)
  fullName.vb: ALE.ETLBox.DataFlow.DbSource(Of TOutput).DbSource(System.String)
  nameWithType: DbSource<TOutput>.DbSource(String)
  nameWithType.vb: DbSource(Of TOutput).DbSource(String)
- uid: ALE.ETLBox.DataFlow.DbSource`1.#ctor*
  name: DbSource
  href: api/ALE.ETLBox.DataFlow.DbSource-1.html#ALE_ETLBox_DataFlow_DbSource_1__ctor_
  commentId: Overload:ALE.ETLBox.DataFlow.DbSource`1.#ctor
  isSpec: "True"
  fullName: ALE.ETLBox.DataFlow.DbSource<TOutput>.DbSource
  fullName.vb: ALE.ETLBox.DataFlow.DbSource(Of TOutput).DbSource
  nameWithType: DbSource<TOutput>.DbSource
  nameWithType.vb: DbSource(Of TOutput).DbSource
- uid: ALE.ETLBox.DataFlow.DbSource`1.ColumnNames
  name: ColumnNames
  href: api/ALE.ETLBox.DataFlow.DbSource-1.html#ALE_ETLBox_DataFlow_DbSource_1_ColumnNames
  commentId: P:ALE.ETLBox.DataFlow.DbSource`1.ColumnNames
  fullName: ALE.ETLBox.DataFlow.DbSource<TOutput>.ColumnNames
  fullName.vb: ALE.ETLBox.DataFlow.DbSource(Of TOutput).ColumnNames
  nameWithType: DbSource<TOutput>.ColumnNames
  nameWithType.vb: DbSource(Of TOutput).ColumnNames
- uid: ALE.ETLBox.DataFlow.DbSource`1.ColumnNames*
  name: ColumnNames
  href: api/ALE.ETLBox.DataFlow.DbSource-1.html#ALE_ETLBox_DataFlow_DbSource_1_ColumnNames_
  commentId: Overload:ALE.ETLBox.DataFlow.DbSource`1.ColumnNames
  isSpec: "True"
  fullName: ALE.ETLBox.DataFlow.DbSource<TOutput>.ColumnNames
  fullName.vb: ALE.ETLBox.DataFlow.DbSource(Of TOutput).ColumnNames
  nameWithType: DbSource<TOutput>.ColumnNames
  nameWithType.vb: DbSource(Of TOutput).ColumnNames
- uid: ALE.ETLBox.DataFlow.DbSource`1.ColumnNamesEvaluated
  name: ColumnNamesEvaluated
  href: api/ALE.ETLBox.DataFlow.DbSource-1.html#ALE_ETLBox_DataFlow_DbSource_1_ColumnNamesEvaluated
  commentId: P:ALE.ETLBox.DataFlow.DbSource`1.ColumnNamesEvaluated
  fullName: ALE.ETLBox.DataFlow.DbSource<TOutput>.ColumnNamesEvaluated
  fullName.vb: ALE.ETLBox.DataFlow.DbSource(Of TOutput).ColumnNamesEvaluated
  nameWithType: DbSource<TOutput>.ColumnNamesEvaluated
  nameWithType.vb: DbSource(Of TOutput).ColumnNamesEvaluated
- uid: ALE.ETLBox.DataFlow.DbSource`1.ColumnNamesEvaluated*
  name: ColumnNamesEvaluated
  href: api/ALE.ETLBox.DataFlow.DbSource-1.html#ALE_ETLBox_DataFlow_DbSource_1_ColumnNamesEvaluated_
  commentId: Overload:ALE.ETLBox.DataFlow.DbSource`1.ColumnNamesEvaluated
  isSpec: "True"
  fullName: ALE.ETLBox.DataFlow.DbSource<TOutput>.ColumnNamesEvaluated
  fullName.vb: ALE.ETLBox.DataFlow.DbSource(Of TOutput).ColumnNamesEvaluated
  nameWithType: DbSource<TOutput>.ColumnNamesEvaluated
  nameWithType.vb: DbSource(Of TOutput).ColumnNamesEvaluated
- uid: ALE.ETLBox.DataFlow.DbSource`1.Execute
  name: Execute()
  href: api/ALE.ETLBox.DataFlow.DbSource-1.html#ALE_ETLBox_DataFlow_DbSource_1_Execute
  commentId: M:ALE.ETLBox.DataFlow.DbSource`1.Execute
  fullName: ALE.ETLBox.DataFlow.DbSource<TOutput>.Execute()
  fullName.vb: ALE.ETLBox.DataFlow.DbSource(Of TOutput).Execute()
  nameWithType: DbSource<TOutput>.Execute()
  nameWithType.vb: DbSource(Of TOutput).Execute()
- uid: ALE.ETLBox.DataFlow.DbSource`1.Execute*
  name: Execute
  href: api/ALE.ETLBox.DataFlow.DbSource-1.html#ALE_ETLBox_DataFlow_DbSource_1_Execute_
  commentId: Overload:ALE.ETLBox.DataFlow.DbSource`1.Execute
  isSpec: "True"
  fullName: ALE.ETLBox.DataFlow.DbSource<TOutput>.Execute
  fullName.vb: ALE.ETLBox.DataFlow.DbSource(Of TOutput).Execute
  nameWithType: DbSource<TOutput>.Execute
  nameWithType.vb: DbSource(Of TOutput).Execute
- uid: ALE.ETLBox.DataFlow.DbSource`1.SourceTableDefinition
  name: SourceTableDefinition
  href: api/ALE.ETLBox.DataFlow.DbSource-1.html#ALE_ETLBox_DataFlow_DbSource_1_SourceTableDefinition
  commentId: P:ALE.ETLBox.DataFlow.DbSource`1.SourceTableDefinition
  fullName: ALE.ETLBox.DataFlow.DbSource<TOutput>.SourceTableDefinition
  fullName.vb: ALE.ETLBox.DataFlow.DbSource(Of TOutput).SourceTableDefinition
  nameWithType: DbSource<TOutput>.SourceTableDefinition
  nameWithType.vb: DbSource(Of TOutput).SourceTableDefinition
- uid: ALE.ETLBox.DataFlow.DbSource`1.SourceTableDefinition*
  name: SourceTableDefinition
  href: api/ALE.ETLBox.DataFlow.DbSource-1.html#ALE_ETLBox_DataFlow_DbSource_1_SourceTableDefinition_
  commentId: Overload:ALE.ETLBox.DataFlow.DbSource`1.SourceTableDefinition
  isSpec: "True"
  fullName: ALE.ETLBox.DataFlow.DbSource<TOutput>.SourceTableDefinition
  fullName.vb: ALE.ETLBox.DataFlow.DbSource(Of TOutput).SourceTableDefinition
  nameWithType: DbSource<TOutput>.SourceTableDefinition
  nameWithType.vb: DbSource(Of TOutput).SourceTableDefinition
- uid: ALE.ETLBox.DataFlow.DbSource`1.Sql
  name: Sql
  href: api/ALE.ETLBox.DataFlow.DbSource-1.html#ALE_ETLBox_DataFlow_DbSource_1_Sql
  commentId: P:ALE.ETLBox.DataFlow.DbSource`1.Sql
  fullName: ALE.ETLBox.DataFlow.DbSource<TOutput>.Sql
  fullName.vb: ALE.ETLBox.DataFlow.DbSource(Of TOutput).Sql
  nameWithType: DbSource<TOutput>.Sql
  nameWithType.vb: DbSource(Of TOutput).Sql
- uid: ALE.ETLBox.DataFlow.DbSource`1.Sql*
  name: Sql
  href: api/ALE.ETLBox.DataFlow.DbSource-1.html#ALE_ETLBox_DataFlow_DbSource_1_Sql_
  commentId: Overload:ALE.ETLBox.DataFlow.DbSource`1.Sql
  isSpec: "True"
  fullName: ALE.ETLBox.DataFlow.DbSource<TOutput>.Sql
  fullName.vb: ALE.ETLBox.DataFlow.DbSource(Of TOutput).Sql
  nameWithType: DbSource<TOutput>.Sql
  nameWithType.vb: DbSource(Of TOutput).Sql
- uid: ALE.ETLBox.DataFlow.DbSource`1.SqlForRead
  name: SqlForRead
  href: api/ALE.ETLBox.DataFlow.DbSource-1.html#ALE_ETLBox_DataFlow_DbSource_1_SqlForRead
  commentId: P:ALE.ETLBox.DataFlow.DbSource`1.SqlForRead
  fullName: ALE.ETLBox.DataFlow.DbSource<TOutput>.SqlForRead
  fullName.vb: ALE.ETLBox.DataFlow.DbSource(Of TOutput).SqlForRead
  nameWithType: DbSource<TOutput>.SqlForRead
  nameWithType.vb: DbSource(Of TOutput).SqlForRead
- uid: ALE.ETLBox.DataFlow.DbSource`1.SqlForRead*
  name: SqlForRead
  href: api/ALE.ETLBox.DataFlow.DbSource-1.html#ALE_ETLBox_DataFlow_DbSource_1_SqlForRead_
  commentId: Overload:ALE.ETLBox.DataFlow.DbSource`1.SqlForRead
  isSpec: "True"
  fullName: ALE.ETLBox.DataFlow.DbSource<TOutput>.SqlForRead
  fullName.vb: ALE.ETLBox.DataFlow.DbSource(Of TOutput).SqlForRead
  nameWithType: DbSource<TOutput>.SqlForRead
  nameWithType.vb: DbSource(Of TOutput).SqlForRead
- uid: ALE.ETLBox.DataFlow.DbSource`1.TableName
  name: TableName
  href: api/ALE.ETLBox.DataFlow.DbSource-1.html#ALE_ETLBox_DataFlow_DbSource_1_TableName
  commentId: P:ALE.ETLBox.DataFlow.DbSource`1.TableName
  fullName: ALE.ETLBox.DataFlow.DbSource<TOutput>.TableName
  fullName.vb: ALE.ETLBox.DataFlow.DbSource(Of TOutput).TableName
  nameWithType: DbSource<TOutput>.TableName
  nameWithType.vb: DbSource(Of TOutput).TableName
- uid: ALE.ETLBox.DataFlow.DbSource`1.TableName*
  name: TableName
  href: api/ALE.ETLBox.DataFlow.DbSource-1.html#ALE_ETLBox_DataFlow_DbSource_1_TableName_
  commentId: Overload:ALE.ETLBox.DataFlow.DbSource`1.TableName
  isSpec: "True"
  fullName: ALE.ETLBox.DataFlow.DbSource<TOutput>.TableName
  fullName.vb: ALE.ETLBox.DataFlow.DbSource(Of TOutput).TableName
  nameWithType: DbSource<TOutput>.TableName
  nameWithType.vb: DbSource(Of TOutput).TableName
- uid: ALE.ETLBox.DataFlow.DbSource`1.TaskName
  name: TaskName
  href: api/ALE.ETLBox.DataFlow.DbSource-1.html#ALE_ETLBox_DataFlow_DbSource_1_TaskName
  commentId: P:ALE.ETLBox.DataFlow.DbSource`1.TaskName
  fullName: ALE.ETLBox.DataFlow.DbSource<TOutput>.TaskName
  fullName.vb: ALE.ETLBox.DataFlow.DbSource(Of TOutput).TaskName
  nameWithType: DbSource<TOutput>.TaskName
  nameWithType.vb: DbSource(Of TOutput).TaskName
- uid: ALE.ETLBox.DataFlow.DbSource`1.TaskName*
  name: TaskName
  href: api/ALE.ETLBox.DataFlow.DbSource-1.html#ALE_ETLBox_DataFlow_DbSource_1_TaskName_
  commentId: Overload:ALE.ETLBox.DataFlow.DbSource`1.TaskName
  isSpec: "True"
  fullName: ALE.ETLBox.DataFlow.DbSource<TOutput>.TaskName
  fullName.vb: ALE.ETLBox.DataFlow.DbSource(Of TOutput).TaskName
  nameWithType: DbSource<TOutput>.TaskName
  nameWithType.vb: DbSource(Of TOutput).TaskName
- uid: ALE.ETLBox.DataFlow.DeleteColumn
  name: DeleteColumn
  href: api/ALE.ETLBox.DataFlow.DeleteColumn.html
  commentId: T:ALE.ETLBox.DataFlow.DeleteColumn
  fullName: ALE.ETLBox.DataFlow.DeleteColumn
  nameWithType: DeleteColumn
- uid: ALE.ETLBox.DataFlow.DeleteColumn.#ctor(System.Object)
  name: DeleteColumn(Object)
  href: api/ALE.ETLBox.DataFlow.DeleteColumn.html#ALE_ETLBox_DataFlow_DeleteColumn__ctor_System_Object_
  commentId: M:ALE.ETLBox.DataFlow.DeleteColumn.#ctor(System.Object)
  fullName: ALE.ETLBox.DataFlow.DeleteColumn.DeleteColumn(System.Object)
  nameWithType: DeleteColumn.DeleteColumn(Object)
- uid: ALE.ETLBox.DataFlow.DeleteColumn.#ctor*
  name: DeleteColumn
  href: api/ALE.ETLBox.DataFlow.DeleteColumn.html#ALE_ETLBox_DataFlow_DeleteColumn__ctor_
  commentId: Overload:ALE.ETLBox.DataFlow.DeleteColumn.#ctor
  isSpec: "True"
  fullName: ALE.ETLBox.DataFlow.DeleteColumn.DeleteColumn
  nameWithType: DeleteColumn.DeleteColumn
- uid: ALE.ETLBox.DataFlow.DeleteColumn.DeleteOnMatchValue
  name: DeleteOnMatchValue
  href: api/ALE.ETLBox.DataFlow.DeleteColumn.html#ALE_ETLBox_DataFlow_DeleteColumn_DeleteOnMatchValue
  commentId: P:ALE.ETLBox.DataFlow.DeleteColumn.DeleteOnMatchValue
  fullName: ALE.ETLBox.DataFlow.DeleteColumn.DeleteOnMatchValue
  nameWithType: DeleteColumn.DeleteOnMatchValue
- uid: ALE.ETLBox.DataFlow.DeleteColumn.DeleteOnMatchValue*
  name: DeleteOnMatchValue
  href: api/ALE.ETLBox.DataFlow.DeleteColumn.html#ALE_ETLBox_DataFlow_DeleteColumn_DeleteOnMatchValue_
  commentId: Overload:ALE.ETLBox.DataFlow.DeleteColumn.DeleteOnMatchValue
  isSpec: "True"
  fullName: ALE.ETLBox.DataFlow.DeleteColumn.DeleteOnMatchValue
  nameWithType: DeleteColumn.DeleteOnMatchValue
- uid: ALE.ETLBox.DataFlow.DeltaMode
  name: DeltaMode
  href: api/ALE.ETLBox.DataFlow.DeltaMode.html
  commentId: T:ALE.ETLBox.DataFlow.DeltaMode
  fullName: ALE.ETLBox.DataFlow.DeltaMode
  nameWithType: DeltaMode
- uid: ALE.ETLBox.DataFlow.DeltaMode.Delta
  name: Delta
  href: api/ALE.ETLBox.DataFlow.DeltaMode.html#ALE_ETLBox_DataFlow_DeltaMode_Delta
  commentId: F:ALE.ETLBox.DataFlow.DeltaMode.Delta
  fullName: ALE.ETLBox.DataFlow.DeltaMode.Delta
  nameWithType: DeltaMode.Delta
- uid: ALE.ETLBox.DataFlow.DeltaMode.Full
  name: Full
  href: api/ALE.ETLBox.DataFlow.DeltaMode.html#ALE_ETLBox_DataFlow_DeltaMode_Full
  commentId: F:ALE.ETLBox.DataFlow.DeltaMode.Full
  fullName: ALE.ETLBox.DataFlow.DeltaMode.Full
  nameWithType: DeltaMode.Full
- uid: ALE.ETLBox.DataFlow.DeltaMode.NoDeletions
  name: NoDeletions
  href: api/ALE.ETLBox.DataFlow.DeltaMode.html#ALE_ETLBox_DataFlow_DeltaMode_NoDeletions
  commentId: F:ALE.ETLBox.DataFlow.DeltaMode.NoDeletions
  fullName: ALE.ETLBox.DataFlow.DeltaMode.NoDeletions
  nameWithType: DeltaMode.NoDeletions
- uid: ALE.ETLBox.DataFlow.ErrorHandler
  name: ErrorHandler
  href: api/ALE.ETLBox.DataFlow.ErrorHandler.html
  commentId: T:ALE.ETLBox.DataFlow.ErrorHandler
  fullName: ALE.ETLBox.DataFlow.ErrorHandler
  nameWithType: ErrorHandler
- uid: ALE.ETLBox.DataFlow.ErrorHandler.ConvertErrorData*
  name: ConvertErrorData
  href: api/ALE.ETLBox.DataFlow.ErrorHandler.html#ALE_ETLBox_DataFlow_ErrorHandler_ConvertErrorData_
  commentId: Overload:ALE.ETLBox.DataFlow.ErrorHandler.ConvertErrorData
  isSpec: "True"
  fullName: ALE.ETLBox.DataFlow.ErrorHandler.ConvertErrorData
  nameWithType: ErrorHandler.ConvertErrorData
- uid: ALE.ETLBox.DataFlow.ErrorHandler.ConvertErrorData``1(``0)
  name: ConvertErrorData<T>(T)
  href: api/ALE.ETLBox.DataFlow.ErrorHandler.html#ALE_ETLBox_DataFlow_ErrorHandler_ConvertErrorData__1___0_
  commentId: M:ALE.ETLBox.DataFlow.ErrorHandler.ConvertErrorData``1(``0)
  name.vb: ConvertErrorData(Of T)(T)
  fullName: ALE.ETLBox.DataFlow.ErrorHandler.ConvertErrorData<T>(T)
  fullName.vb: ALE.ETLBox.DataFlow.ErrorHandler.ConvertErrorData(Of T)(T)
  nameWithType: ErrorHandler.ConvertErrorData<T>(T)
  nameWithType.vb: ErrorHandler.ConvertErrorData(Of T)(T)
- uid: ALE.ETLBox.DataFlow.ErrorHandler.ErrorSourceBlock
  name: ErrorSourceBlock
  href: api/ALE.ETLBox.DataFlow.ErrorHandler.html#ALE_ETLBox_DataFlow_ErrorHandler_ErrorSourceBlock
  commentId: P:ALE.ETLBox.DataFlow.ErrorHandler.ErrorSourceBlock
  fullName: ALE.ETLBox.DataFlow.ErrorHandler.ErrorSourceBlock
  nameWithType: ErrorHandler.ErrorSourceBlock
- uid: ALE.ETLBox.DataFlow.ErrorHandler.ErrorSourceBlock*
  name: ErrorSourceBlock
  href: api/ALE.ETLBox.DataFlow.ErrorHandler.html#ALE_ETLBox_DataFlow_ErrorHandler_ErrorSourceBlock_
  commentId: Overload:ALE.ETLBox.DataFlow.ErrorHandler.ErrorSourceBlock
  isSpec: "True"
  fullName: ALE.ETLBox.DataFlow.ErrorHandler.ErrorSourceBlock
  nameWithType: ErrorHandler.ErrorSourceBlock
- uid: ALE.ETLBox.DataFlow.ErrorHandler.LinkErrorTo(ALE.ETLBox.DataFlow.IDataFlowLinkTarget{ALE.ETLBox.DataFlow.ETLBoxError},System.Threading.Tasks.Task)
  name: LinkErrorTo(IDataFlowLinkTarget<ETLBoxError>, Task)
  href: api/ALE.ETLBox.DataFlow.ErrorHandler.html#ALE_ETLBox_DataFlow_ErrorHandler_LinkErrorTo_ALE_ETLBox_DataFlow_IDataFlowLinkTarget_ALE_ETLBox_DataFlow_ETLBoxError__System_Threading_Tasks_Task_
  commentId: M:ALE.ETLBox.DataFlow.ErrorHandler.LinkErrorTo(ALE.ETLBox.DataFlow.IDataFlowLinkTarget{ALE.ETLBox.DataFlow.ETLBoxError},System.Threading.Tasks.Task)
  name.vb: LinkErrorTo(IDataFlowLinkTarget(Of ETLBoxError), Task)
  fullName: ALE.ETLBox.DataFlow.ErrorHandler.LinkErrorTo(ALE.ETLBox.DataFlow.IDataFlowLinkTarget<ALE.ETLBox.DataFlow.ETLBoxError>, System.Threading.Tasks.Task)
  fullName.vb: ALE.ETLBox.DataFlow.ErrorHandler.LinkErrorTo(ALE.ETLBox.DataFlow.IDataFlowLinkTarget(Of ALE.ETLBox.DataFlow.ETLBoxError), System.Threading.Tasks.Task)
  nameWithType: ErrorHandler.LinkErrorTo(IDataFlowLinkTarget<ETLBoxError>, Task)
  nameWithType.vb: ErrorHandler.LinkErrorTo(IDataFlowLinkTarget(Of ETLBoxError), Task)
- uid: ALE.ETLBox.DataFlow.ErrorHandler.LinkErrorTo*
  name: LinkErrorTo
  href: api/ALE.ETLBox.DataFlow.ErrorHandler.html#ALE_ETLBox_DataFlow_ErrorHandler_LinkErrorTo_
  commentId: Overload:ALE.ETLBox.DataFlow.ErrorHandler.LinkErrorTo
  isSpec: "True"
  fullName: ALE.ETLBox.DataFlow.ErrorHandler.LinkErrorTo
  nameWithType: ErrorHandler.LinkErrorTo
- uid: ALE.ETLBox.DataFlow.ErrorHandler.Send(System.Exception,System.String)
  name: Send(Exception, String)
  href: api/ALE.ETLBox.DataFlow.ErrorHandler.html#ALE_ETLBox_DataFlow_ErrorHandler_Send_System_Exception_System_String_
  commentId: M:ALE.ETLBox.DataFlow.ErrorHandler.Send(System.Exception,System.String)
  fullName: ALE.ETLBox.DataFlow.ErrorHandler.Send(System.Exception, System.String)
  nameWithType: ErrorHandler.Send(Exception, String)
- uid: ALE.ETLBox.DataFlow.ErrorHandler.Send*
  name: Send
  href: api/ALE.ETLBox.DataFlow.ErrorHandler.html#ALE_ETLBox_DataFlow_ErrorHandler_Send_
  commentId: Overload:ALE.ETLBox.DataFlow.ErrorHandler.Send
  isSpec: "True"
  fullName: ALE.ETLBox.DataFlow.ErrorHandler.Send
  nameWithType: ErrorHandler.Send
- uid: ALE.ETLBox.DataFlow.ETLBoxError
  name: ETLBoxError
  href: api/ALE.ETLBox.DataFlow.ETLBoxError.html
  commentId: T:ALE.ETLBox.DataFlow.ETLBoxError
  fullName: ALE.ETLBox.DataFlow.ETLBoxError
  nameWithType: ETLBoxError
- uid: ALE.ETLBox.DataFlow.ETLBoxError.ErrorText
  name: ErrorText
  href: api/ALE.ETLBox.DataFlow.ETLBoxError.html#ALE_ETLBox_DataFlow_ETLBoxError_ErrorText
  commentId: P:ALE.ETLBox.DataFlow.ETLBoxError.ErrorText
  fullName: ALE.ETLBox.DataFlow.ETLBoxError.ErrorText
  nameWithType: ETLBoxError.ErrorText
- uid: ALE.ETLBox.DataFlow.ETLBoxError.ErrorText*
  name: ErrorText
  href: api/ALE.ETLBox.DataFlow.ETLBoxError.html#ALE_ETLBox_DataFlow_ETLBoxError_ErrorText_
  commentId: Overload:ALE.ETLBox.DataFlow.ETLBoxError.ErrorText
  isSpec: "True"
  fullName: ALE.ETLBox.DataFlow.ETLBoxError.ErrorText
  nameWithType: ETLBoxError.ErrorText
- uid: ALE.ETLBox.DataFlow.ETLBoxError.Exception
  name: Exception
  href: api/ALE.ETLBox.DataFlow.ETLBoxError.html#ALE_ETLBox_DataFlow_ETLBoxError_Exception
  commentId: P:ALE.ETLBox.DataFlow.ETLBoxError.Exception
  fullName: ALE.ETLBox.DataFlow.ETLBoxError.Exception
  nameWithType: ETLBoxError.Exception
- uid: ALE.ETLBox.DataFlow.ETLBoxError.Exception*
  name: Exception
  href: api/ALE.ETLBox.DataFlow.ETLBoxError.html#ALE_ETLBox_DataFlow_ETLBoxError_Exception_
  commentId: Overload:ALE.ETLBox.DataFlow.ETLBoxError.Exception
  isSpec: "True"
  fullName: ALE.ETLBox.DataFlow.ETLBoxError.Exception
  nameWithType: ETLBoxError.Exception
- uid: ALE.ETLBox.DataFlow.ETLBoxError.RecordAsJson
  name: RecordAsJson
  href: api/ALE.ETLBox.DataFlow.ETLBoxError.html#ALE_ETLBox_DataFlow_ETLBoxError_RecordAsJson
  commentId: P:ALE.ETLBox.DataFlow.ETLBoxError.RecordAsJson
  fullName: ALE.ETLBox.DataFlow.ETLBoxError.RecordAsJson
  nameWithType: ETLBoxError.RecordAsJson
- uid: ALE.ETLBox.DataFlow.ETLBoxError.RecordAsJson*
  name: RecordAsJson
  href: api/ALE.ETLBox.DataFlow.ETLBoxError.html#ALE_ETLBox_DataFlow_ETLBoxError_RecordAsJson_
  commentId: Overload:ALE.ETLBox.DataFlow.ETLBoxError.RecordAsJson
  isSpec: "True"
  fullName: ALE.ETLBox.DataFlow.ETLBoxError.RecordAsJson
  nameWithType: ETLBoxError.RecordAsJson
- uid: ALE.ETLBox.DataFlow.ETLBoxError.ReportTime
  name: ReportTime
  href: api/ALE.ETLBox.DataFlow.ETLBoxError.html#ALE_ETLBox_DataFlow_ETLBoxError_ReportTime
  commentId: P:ALE.ETLBox.DataFlow.ETLBoxError.ReportTime
  fullName: ALE.ETLBox.DataFlow.ETLBoxError.ReportTime
  nameWithType: ETLBoxError.ReportTime
- uid: ALE.ETLBox.DataFlow.ETLBoxError.ReportTime*
  name: ReportTime
  href: api/ALE.ETLBox.DataFlow.ETLBoxError.html#ALE_ETLBox_DataFlow_ETLBoxError_ReportTime_
  commentId: Overload:ALE.ETLBox.DataFlow.ETLBoxError.ReportTime
  isSpec: "True"
  fullName: ALE.ETLBox.DataFlow.ETLBoxError.ReportTime
  nameWithType: ETLBoxError.ReportTime
- uid: ALE.ETLBox.DataFlow.ExcelColumn
  name: ExcelColumn
  href: api/ALE.ETLBox.DataFlow.ExcelColumn.html
  commentId: T:ALE.ETLBox.DataFlow.ExcelColumn
  fullName: ALE.ETLBox.DataFlow.ExcelColumn
  nameWithType: ExcelColumn
- uid: ALE.ETLBox.DataFlow.ExcelColumn.#ctor(System.Int32)
  name: ExcelColumn(Int32)
  href: api/ALE.ETLBox.DataFlow.ExcelColumn.html#ALE_ETLBox_DataFlow_ExcelColumn__ctor_System_Int32_
  commentId: M:ALE.ETLBox.DataFlow.ExcelColumn.#ctor(System.Int32)
  fullName: ALE.ETLBox.DataFlow.ExcelColumn.ExcelColumn(System.Int32)
  nameWithType: ExcelColumn.ExcelColumn(Int32)
- uid: ALE.ETLBox.DataFlow.ExcelColumn.#ctor*
  name: ExcelColumn
  href: api/ALE.ETLBox.DataFlow.ExcelColumn.html#ALE_ETLBox_DataFlow_ExcelColumn__ctor_
  commentId: Overload:ALE.ETLBox.DataFlow.ExcelColumn.#ctor
  isSpec: "True"
  fullName: ALE.ETLBox.DataFlow.ExcelColumn.ExcelColumn
  nameWithType: ExcelColumn.ExcelColumn
- uid: ALE.ETLBox.DataFlow.ExcelColumn.Index
  name: Index
  href: api/ALE.ETLBox.DataFlow.ExcelColumn.html#ALE_ETLBox_DataFlow_ExcelColumn_Index
  commentId: P:ALE.ETLBox.DataFlow.ExcelColumn.Index
  fullName: ALE.ETLBox.DataFlow.ExcelColumn.Index
  nameWithType: ExcelColumn.Index
- uid: ALE.ETLBox.DataFlow.ExcelColumn.Index*
  name: Index
  href: api/ALE.ETLBox.DataFlow.ExcelColumn.html#ALE_ETLBox_DataFlow_ExcelColumn_Index_
  commentId: Overload:ALE.ETLBox.DataFlow.ExcelColumn.Index
  isSpec: "True"
  fullName: ALE.ETLBox.DataFlow.ExcelColumn.Index
  nameWithType: ExcelColumn.Index
- uid: ALE.ETLBox.DataFlow.ExcelRange
  name: ExcelRange
  href: api/ALE.ETLBox.DataFlow.ExcelRange.html
  commentId: T:ALE.ETLBox.DataFlow.ExcelRange
  fullName: ALE.ETLBox.DataFlow.ExcelRange
  nameWithType: ExcelRange
- uid: ALE.ETLBox.DataFlow.ExcelRange.#ctor(System.Int32,System.Int32)
  name: ExcelRange(Int32, Int32)
  href: api/ALE.ETLBox.DataFlow.ExcelRange.html#ALE_ETLBox_DataFlow_ExcelRange__ctor_System_Int32_System_Int32_
  commentId: M:ALE.ETLBox.DataFlow.ExcelRange.#ctor(System.Int32,System.Int32)
  fullName: ALE.ETLBox.DataFlow.ExcelRange.ExcelRange(System.Int32, System.Int32)
  nameWithType: ExcelRange.ExcelRange(Int32, Int32)
- uid: ALE.ETLBox.DataFlow.ExcelRange.#ctor(System.Int32,System.Int32,System.Int32,System.Int32)
  name: ExcelRange(Int32, Int32, Int32, Int32)
  href: api/ALE.ETLBox.DataFlow.ExcelRange.html#ALE_ETLBox_DataFlow_ExcelRange__ctor_System_Int32_System_Int32_System_Int32_System_Int32_
  commentId: M:ALE.ETLBox.DataFlow.ExcelRange.#ctor(System.Int32,System.Int32,System.Int32,System.Int32)
  fullName: ALE.ETLBox.DataFlow.ExcelRange.ExcelRange(System.Int32, System.Int32, System.Int32, System.Int32)
  nameWithType: ExcelRange.ExcelRange(Int32, Int32, Int32, Int32)
- uid: ALE.ETLBox.DataFlow.ExcelRange.#ctor*
  name: ExcelRange
  href: api/ALE.ETLBox.DataFlow.ExcelRange.html#ALE_ETLBox_DataFlow_ExcelRange__ctor_
  commentId: Overload:ALE.ETLBox.DataFlow.ExcelRange.#ctor
  isSpec: "True"
  fullName: ALE.ETLBox.DataFlow.ExcelRange.ExcelRange
  nameWithType: ExcelRange.ExcelRange
- uid: ALE.ETLBox.DataFlow.ExcelRange.EndColumn
  name: EndColumn
  href: api/ALE.ETLBox.DataFlow.ExcelRange.html#ALE_ETLBox_DataFlow_ExcelRange_EndColumn
  commentId: P:ALE.ETLBox.DataFlow.ExcelRange.EndColumn
  fullName: ALE.ETLBox.DataFlow.ExcelRange.EndColumn
  nameWithType: ExcelRange.EndColumn
- uid: ALE.ETLBox.DataFlow.ExcelRange.EndColumn*
  name: EndColumn
  href: api/ALE.ETLBox.DataFlow.ExcelRange.html#ALE_ETLBox_DataFlow_ExcelRange_EndColumn_
  commentId: Overload:ALE.ETLBox.DataFlow.ExcelRange.EndColumn
  isSpec: "True"
  fullName: ALE.ETLBox.DataFlow.ExcelRange.EndColumn
  nameWithType: ExcelRange.EndColumn
- uid: ALE.ETLBox.DataFlow.ExcelRange.EndRow
  name: EndRow
  href: api/ALE.ETLBox.DataFlow.ExcelRange.html#ALE_ETLBox_DataFlow_ExcelRange_EndRow
  commentId: P:ALE.ETLBox.DataFlow.ExcelRange.EndRow
  fullName: ALE.ETLBox.DataFlow.ExcelRange.EndRow
  nameWithType: ExcelRange.EndRow
- uid: ALE.ETLBox.DataFlow.ExcelRange.EndRow*
  name: EndRow
  href: api/ALE.ETLBox.DataFlow.ExcelRange.html#ALE_ETLBox_DataFlow_ExcelRange_EndRow_
  commentId: Overload:ALE.ETLBox.DataFlow.ExcelRange.EndRow
  isSpec: "True"
  fullName: ALE.ETLBox.DataFlow.ExcelRange.EndRow
  nameWithType: ExcelRange.EndRow
- uid: ALE.ETLBox.DataFlow.ExcelRange.StartColumn
  name: StartColumn
  href: api/ALE.ETLBox.DataFlow.ExcelRange.html#ALE_ETLBox_DataFlow_ExcelRange_StartColumn
  commentId: P:ALE.ETLBox.DataFlow.ExcelRange.StartColumn
  fullName: ALE.ETLBox.DataFlow.ExcelRange.StartColumn
  nameWithType: ExcelRange.StartColumn
- uid: ALE.ETLBox.DataFlow.ExcelRange.StartColumn*
  name: StartColumn
  href: api/ALE.ETLBox.DataFlow.ExcelRange.html#ALE_ETLBox_DataFlow_ExcelRange_StartColumn_
  commentId: Overload:ALE.ETLBox.DataFlow.ExcelRange.StartColumn
  isSpec: "True"
  fullName: ALE.ETLBox.DataFlow.ExcelRange.StartColumn
  nameWithType: ExcelRange.StartColumn
- uid: ALE.ETLBox.DataFlow.ExcelRange.StartRow
  name: StartRow
  href: api/ALE.ETLBox.DataFlow.ExcelRange.html#ALE_ETLBox_DataFlow_ExcelRange_StartRow
  commentId: P:ALE.ETLBox.DataFlow.ExcelRange.StartRow
  fullName: ALE.ETLBox.DataFlow.ExcelRange.StartRow
  nameWithType: ExcelRange.StartRow
- uid: ALE.ETLBox.DataFlow.ExcelRange.StartRow*
  name: StartRow
  href: api/ALE.ETLBox.DataFlow.ExcelRange.html#ALE_ETLBox_DataFlow_ExcelRange_StartRow_
  commentId: Overload:ALE.ETLBox.DataFlow.ExcelRange.StartRow
  isSpec: "True"
  fullName: ALE.ETLBox.DataFlow.ExcelRange.StartRow
  nameWithType: ExcelRange.StartRow
- uid: ALE.ETLBox.DataFlow.ExcelSource
  name: ExcelSource
  href: api/ALE.ETLBox.DataFlow.ExcelSource.html
  commentId: T:ALE.ETLBox.DataFlow.ExcelSource
  fullName: ALE.ETLBox.DataFlow.ExcelSource
  nameWithType: ExcelSource
- uid: ALE.ETLBox.DataFlow.ExcelSource.#ctor
  name: ExcelSource()
  href: api/ALE.ETLBox.DataFlow.ExcelSource.html#ALE_ETLBox_DataFlow_ExcelSource__ctor
  commentId: M:ALE.ETLBox.DataFlow.ExcelSource.#ctor
  fullName: ALE.ETLBox.DataFlow.ExcelSource.ExcelSource()
  nameWithType: ExcelSource.ExcelSource()
- uid: ALE.ETLBox.DataFlow.ExcelSource.#ctor(System.String)
  name: ExcelSource(String)
  href: api/ALE.ETLBox.DataFlow.ExcelSource.html#ALE_ETLBox_DataFlow_ExcelSource__ctor_System_String_
  commentId: M:ALE.ETLBox.DataFlow.ExcelSource.#ctor(System.String)
  fullName: ALE.ETLBox.DataFlow.ExcelSource.ExcelSource(System.String)
  nameWithType: ExcelSource.ExcelSource(String)
- uid: ALE.ETLBox.DataFlow.ExcelSource.#ctor*
  name: ExcelSource
  href: api/ALE.ETLBox.DataFlow.ExcelSource.html#ALE_ETLBox_DataFlow_ExcelSource__ctor_
  commentId: Overload:ALE.ETLBox.DataFlow.ExcelSource.#ctor
  isSpec: "True"
  fullName: ALE.ETLBox.DataFlow.ExcelSource.ExcelSource
  nameWithType: ExcelSource.ExcelSource
- uid: ALE.ETLBox.DataFlow.ExcelSource`1
  name: ExcelSource<TOutput>
  href: api/ALE.ETLBox.DataFlow.ExcelSource-1.html
  commentId: T:ALE.ETLBox.DataFlow.ExcelSource`1
  name.vb: ExcelSource(Of TOutput)
  fullName: ALE.ETLBox.DataFlow.ExcelSource<TOutput>
  fullName.vb: ALE.ETLBox.DataFlow.ExcelSource(Of TOutput)
  nameWithType: ExcelSource<TOutput>
  nameWithType.vb: ExcelSource(Of TOutput)
- uid: ALE.ETLBox.DataFlow.ExcelSource`1.#ctor
  name: ExcelSource()
  href: api/ALE.ETLBox.DataFlow.ExcelSource-1.html#ALE_ETLBox_DataFlow_ExcelSource_1__ctor
  commentId: M:ALE.ETLBox.DataFlow.ExcelSource`1.#ctor
  fullName: ALE.ETLBox.DataFlow.ExcelSource<TOutput>.ExcelSource()
  fullName.vb: ALE.ETLBox.DataFlow.ExcelSource(Of TOutput).ExcelSource()
  nameWithType: ExcelSource<TOutput>.ExcelSource()
  nameWithType.vb: ExcelSource(Of TOutput).ExcelSource()
- uid: ALE.ETLBox.DataFlow.ExcelSource`1.#ctor(System.String)
  name: ExcelSource(String)
  href: api/ALE.ETLBox.DataFlow.ExcelSource-1.html#ALE_ETLBox_DataFlow_ExcelSource_1__ctor_System_String_
  commentId: M:ALE.ETLBox.DataFlow.ExcelSource`1.#ctor(System.String)
  fullName: ALE.ETLBox.DataFlow.ExcelSource<TOutput>.ExcelSource(System.String)
  fullName.vb: ALE.ETLBox.DataFlow.ExcelSource(Of TOutput).ExcelSource(System.String)
  nameWithType: ExcelSource<TOutput>.ExcelSource(String)
  nameWithType.vb: ExcelSource(Of TOutput).ExcelSource(String)
- uid: ALE.ETLBox.DataFlow.ExcelSource`1.#ctor*
  name: ExcelSource
  href: api/ALE.ETLBox.DataFlow.ExcelSource-1.html#ALE_ETLBox_DataFlow_ExcelSource_1__ctor_
  commentId: Overload:ALE.ETLBox.DataFlow.ExcelSource`1.#ctor
  isSpec: "True"
  fullName: ALE.ETLBox.DataFlow.ExcelSource<TOutput>.ExcelSource
  fullName.vb: ALE.ETLBox.DataFlow.ExcelSource(Of TOutput).ExcelSource
  nameWithType: ExcelSource<TOutput>.ExcelSource
  nameWithType.vb: ExcelSource(Of TOutput).ExcelSource
- uid: ALE.ETLBox.DataFlow.ExcelSource`1.CloseReader
  name: CloseReader()
  href: api/ALE.ETLBox.DataFlow.ExcelSource-1.html#ALE_ETLBox_DataFlow_ExcelSource_1_CloseReader
  commentId: M:ALE.ETLBox.DataFlow.ExcelSource`1.CloseReader
  fullName: ALE.ETLBox.DataFlow.ExcelSource<TOutput>.CloseReader()
  fullName.vb: ALE.ETLBox.DataFlow.ExcelSource(Of TOutput).CloseReader()
  nameWithType: ExcelSource<TOutput>.CloseReader()
  nameWithType.vb: ExcelSource(Of TOutput).CloseReader()
- uid: ALE.ETLBox.DataFlow.ExcelSource`1.CloseReader*
  name: CloseReader
  href: api/ALE.ETLBox.DataFlow.ExcelSource-1.html#ALE_ETLBox_DataFlow_ExcelSource_1_CloseReader_
  commentId: Overload:ALE.ETLBox.DataFlow.ExcelSource`1.CloseReader
  isSpec: "True"
  fullName: ALE.ETLBox.DataFlow.ExcelSource<TOutput>.CloseReader
  fullName.vb: ALE.ETLBox.DataFlow.ExcelSource(Of TOutput).CloseReader
  nameWithType: ExcelSource<TOutput>.CloseReader
  nameWithType.vb: ExcelSource(Of TOutput).CloseReader
- uid: ALE.ETLBox.DataFlow.ExcelSource`1.ExcelFilePassword
  name: ExcelFilePassword
  href: api/ALE.ETLBox.DataFlow.ExcelSource-1.html#ALE_ETLBox_DataFlow_ExcelSource_1_ExcelFilePassword
  commentId: P:ALE.ETLBox.DataFlow.ExcelSource`1.ExcelFilePassword
  fullName: ALE.ETLBox.DataFlow.ExcelSource<TOutput>.ExcelFilePassword
  fullName.vb: ALE.ETLBox.DataFlow.ExcelSource(Of TOutput).ExcelFilePassword
  nameWithType: ExcelSource<TOutput>.ExcelFilePassword
  nameWithType.vb: ExcelSource(Of TOutput).ExcelFilePassword
- uid: ALE.ETLBox.DataFlow.ExcelSource`1.ExcelFilePassword*
  name: ExcelFilePassword
  href: api/ALE.ETLBox.DataFlow.ExcelSource-1.html#ALE_ETLBox_DataFlow_ExcelSource_1_ExcelFilePassword_
  commentId: Overload:ALE.ETLBox.DataFlow.ExcelSource`1.ExcelFilePassword
  isSpec: "True"
  fullName: ALE.ETLBox.DataFlow.ExcelSource<TOutput>.ExcelFilePassword
  fullName.vb: ALE.ETLBox.DataFlow.ExcelSource(Of TOutput).ExcelFilePassword
  nameWithType: ExcelSource<TOutput>.ExcelFilePassword
  nameWithType.vb: ExcelSource(Of TOutput).ExcelFilePassword
- uid: ALE.ETLBox.DataFlow.ExcelSource`1.IgnoreBlankRows
  name: IgnoreBlankRows
  href: api/ALE.ETLBox.DataFlow.ExcelSource-1.html#ALE_ETLBox_DataFlow_ExcelSource_1_IgnoreBlankRows
  commentId: P:ALE.ETLBox.DataFlow.ExcelSource`1.IgnoreBlankRows
  fullName: ALE.ETLBox.DataFlow.ExcelSource<TOutput>.IgnoreBlankRows
  fullName.vb: ALE.ETLBox.DataFlow.ExcelSource(Of TOutput).IgnoreBlankRows
  nameWithType: ExcelSource<TOutput>.IgnoreBlankRows
  nameWithType.vb: ExcelSource(Of TOutput).IgnoreBlankRows
- uid: ALE.ETLBox.DataFlow.ExcelSource`1.IgnoreBlankRows*
  name: IgnoreBlankRows
  href: api/ALE.ETLBox.DataFlow.ExcelSource-1.html#ALE_ETLBox_DataFlow_ExcelSource_1_IgnoreBlankRows_
  commentId: Overload:ALE.ETLBox.DataFlow.ExcelSource`1.IgnoreBlankRows
  isSpec: "True"
  fullName: ALE.ETLBox.DataFlow.ExcelSource<TOutput>.IgnoreBlankRows
  fullName.vb: ALE.ETLBox.DataFlow.ExcelSource(Of TOutput).IgnoreBlankRows
  nameWithType: ExcelSource<TOutput>.IgnoreBlankRows
  nameWithType.vb: ExcelSource(Of TOutput).IgnoreBlankRows
- uid: ALE.ETLBox.DataFlow.ExcelSource`1.InitReader
  name: InitReader()
  href: api/ALE.ETLBox.DataFlow.ExcelSource-1.html#ALE_ETLBox_DataFlow_ExcelSource_1_InitReader
  commentId: M:ALE.ETLBox.DataFlow.ExcelSource`1.InitReader
  fullName: ALE.ETLBox.DataFlow.ExcelSource<TOutput>.InitReader()
  fullName.vb: ALE.ETLBox.DataFlow.ExcelSource(Of TOutput).InitReader()
  nameWithType: ExcelSource<TOutput>.InitReader()
  nameWithType.vb: ExcelSource(Of TOutput).InitReader()
- uid: ALE.ETLBox.DataFlow.ExcelSource`1.InitReader*
  name: InitReader
  href: api/ALE.ETLBox.DataFlow.ExcelSource-1.html#ALE_ETLBox_DataFlow_ExcelSource_1_InitReader_
  commentId: Overload:ALE.ETLBox.DataFlow.ExcelSource`1.InitReader
  isSpec: "True"
  fullName: ALE.ETLBox.DataFlow.ExcelSource<TOutput>.InitReader
  fullName.vb: ALE.ETLBox.DataFlow.ExcelSource(Of TOutput).InitReader
  nameWithType: ExcelSource<TOutput>.InitReader
  nameWithType.vb: ExcelSource(Of TOutput).InitReader
- uid: ALE.ETLBox.DataFlow.ExcelSource`1.Range
  name: Range
  href: api/ALE.ETLBox.DataFlow.ExcelSource-1.html#ALE_ETLBox_DataFlow_ExcelSource_1_Range
  commentId: P:ALE.ETLBox.DataFlow.ExcelSource`1.Range
  fullName: ALE.ETLBox.DataFlow.ExcelSource<TOutput>.Range
  fullName.vb: ALE.ETLBox.DataFlow.ExcelSource(Of TOutput).Range
  nameWithType: ExcelSource<TOutput>.Range
  nameWithType.vb: ExcelSource(Of TOutput).Range
- uid: ALE.ETLBox.DataFlow.ExcelSource`1.Range*
  name: Range
  href: api/ALE.ETLBox.DataFlow.ExcelSource-1.html#ALE_ETLBox_DataFlow_ExcelSource_1_Range_
  commentId: Overload:ALE.ETLBox.DataFlow.ExcelSource`1.Range
  isSpec: "True"
  fullName: ALE.ETLBox.DataFlow.ExcelSource<TOutput>.Range
  fullName.vb: ALE.ETLBox.DataFlow.ExcelSource(Of TOutput).Range
  nameWithType: ExcelSource<TOutput>.Range
  nameWithType.vb: ExcelSource(Of TOutput).Range
- uid: ALE.ETLBox.DataFlow.ExcelSource`1.ReadAll
  name: ReadAll()
  href: api/ALE.ETLBox.DataFlow.ExcelSource-1.html#ALE_ETLBox_DataFlow_ExcelSource_1_ReadAll
  commentId: M:ALE.ETLBox.DataFlow.ExcelSource`1.ReadAll
  fullName: ALE.ETLBox.DataFlow.ExcelSource<TOutput>.ReadAll()
  fullName.vb: ALE.ETLBox.DataFlow.ExcelSource(Of TOutput).ReadAll()
  nameWithType: ExcelSource<TOutput>.ReadAll()
  nameWithType.vb: ExcelSource(Of TOutput).ReadAll()
- uid: ALE.ETLBox.DataFlow.ExcelSource`1.ReadAll*
  name: ReadAll
  href: api/ALE.ETLBox.DataFlow.ExcelSource-1.html#ALE_ETLBox_DataFlow_ExcelSource_1_ReadAll_
  commentId: Overload:ALE.ETLBox.DataFlow.ExcelSource`1.ReadAll
  isSpec: "True"
  fullName: ALE.ETLBox.DataFlow.ExcelSource<TOutput>.ReadAll
  fullName.vb: ALE.ETLBox.DataFlow.ExcelSource(Of TOutput).ReadAll
  nameWithType: ExcelSource<TOutput>.ReadAll
  nameWithType.vb: ExcelSource(Of TOutput).ReadAll
- uid: ALE.ETLBox.DataFlow.ExcelSource`1.SheetName
  name: SheetName
  href: api/ALE.ETLBox.DataFlow.ExcelSource-1.html#ALE_ETLBox_DataFlow_ExcelSource_1_SheetName
  commentId: P:ALE.ETLBox.DataFlow.ExcelSource`1.SheetName
  fullName: ALE.ETLBox.DataFlow.ExcelSource<TOutput>.SheetName
  fullName.vb: ALE.ETLBox.DataFlow.ExcelSource(Of TOutput).SheetName
  nameWithType: ExcelSource<TOutput>.SheetName
  nameWithType.vb: ExcelSource(Of TOutput).SheetName
- uid: ALE.ETLBox.DataFlow.ExcelSource`1.SheetName*
  name: SheetName
  href: api/ALE.ETLBox.DataFlow.ExcelSource-1.html#ALE_ETLBox_DataFlow_ExcelSource_1_SheetName_
  commentId: Overload:ALE.ETLBox.DataFlow.ExcelSource`1.SheetName
  isSpec: "True"
  fullName: ALE.ETLBox.DataFlow.ExcelSource<TOutput>.SheetName
  fullName.vb: ALE.ETLBox.DataFlow.ExcelSource(Of TOutput).SheetName
  nameWithType: ExcelSource<TOutput>.SheetName
  nameWithType.vb: ExcelSource(Of TOutput).SheetName
- uid: ALE.ETLBox.DataFlow.ExcelSource`1.TaskName
  name: TaskName
  href: api/ALE.ETLBox.DataFlow.ExcelSource-1.html#ALE_ETLBox_DataFlow_ExcelSource_1_TaskName
  commentId: P:ALE.ETLBox.DataFlow.ExcelSource`1.TaskName
  fullName: ALE.ETLBox.DataFlow.ExcelSource<TOutput>.TaskName
  fullName.vb: ALE.ETLBox.DataFlow.ExcelSource(Of TOutput).TaskName
  nameWithType: ExcelSource<TOutput>.TaskName
  nameWithType.vb: ExcelSource(Of TOutput).TaskName
- uid: ALE.ETLBox.DataFlow.ExcelSource`1.TaskName*
  name: TaskName
  href: api/ALE.ETLBox.DataFlow.ExcelSource-1.html#ALE_ETLBox_DataFlow_ExcelSource_1_TaskName_
  commentId: Overload:ALE.ETLBox.DataFlow.ExcelSource`1.TaskName
  isSpec: "True"
  fullName: ALE.ETLBox.DataFlow.ExcelSource<TOutput>.TaskName
  fullName.vb: ALE.ETLBox.DataFlow.ExcelSource(Of TOutput).TaskName
  nameWithType: ExcelSource<TOutput>.TaskName
  nameWithType.vb: ExcelSource(Of TOutput).TaskName
- uid: ALE.ETLBox.DataFlow.GroupColumn
  name: GroupColumn
  href: api/ALE.ETLBox.DataFlow.GroupColumn.html
  commentId: T:ALE.ETLBox.DataFlow.GroupColumn
  fullName: ALE.ETLBox.DataFlow.GroupColumn
  nameWithType: GroupColumn
- uid: ALE.ETLBox.DataFlow.GroupColumn.#ctor(System.String)
  name: GroupColumn(String)
  href: api/ALE.ETLBox.DataFlow.GroupColumn.html#ALE_ETLBox_DataFlow_GroupColumn__ctor_System_String_
  commentId: M:ALE.ETLBox.DataFlow.GroupColumn.#ctor(System.String)
  fullName: ALE.ETLBox.DataFlow.GroupColumn.GroupColumn(System.String)
  nameWithType: GroupColumn.GroupColumn(String)
- uid: ALE.ETLBox.DataFlow.GroupColumn.#ctor*
  name: GroupColumn
  href: api/ALE.ETLBox.DataFlow.GroupColumn.html#ALE_ETLBox_DataFlow_GroupColumn__ctor_
  commentId: Overload:ALE.ETLBox.DataFlow.GroupColumn.#ctor
  isSpec: "True"
  fullName: ALE.ETLBox.DataFlow.GroupColumn.GroupColumn
  nameWithType: GroupColumn.GroupColumn
- uid: ALE.ETLBox.DataFlow.GroupColumn.AggregationGroupingProperty
  name: AggregationGroupingProperty
  href: api/ALE.ETLBox.DataFlow.GroupColumn.html#ALE_ETLBox_DataFlow_GroupColumn_AggregationGroupingProperty
  commentId: P:ALE.ETLBox.DataFlow.GroupColumn.AggregationGroupingProperty
  fullName: ALE.ETLBox.DataFlow.GroupColumn.AggregationGroupingProperty
  nameWithType: GroupColumn.AggregationGroupingProperty
- uid: ALE.ETLBox.DataFlow.GroupColumn.AggregationGroupingProperty*
  name: AggregationGroupingProperty
  href: api/ALE.ETLBox.DataFlow.GroupColumn.html#ALE_ETLBox_DataFlow_GroupColumn_AggregationGroupingProperty_
  commentId: Overload:ALE.ETLBox.DataFlow.GroupColumn.AggregationGroupingProperty
  isSpec: "True"
  fullName: ALE.ETLBox.DataFlow.GroupColumn.AggregationGroupingProperty
  nameWithType: GroupColumn.AggregationGroupingProperty
- uid: ALE.ETLBox.DataFlow.IDataFlowDestination`1
  name: IDataFlowDestination<TInput>
  href: api/ALE.ETLBox.DataFlow.IDataFlowDestination-1.html
  commentId: T:ALE.ETLBox.DataFlow.IDataFlowDestination`1
  name.vb: IDataFlowDestination(Of TInput)
  fullName: ALE.ETLBox.DataFlow.IDataFlowDestination<TInput>
  fullName.vb: ALE.ETLBox.DataFlow.IDataFlowDestination(Of TInput)
  nameWithType: IDataFlowDestination<TInput>
  nameWithType.vb: IDataFlowDestination(Of TInput)
- uid: ALE.ETLBox.DataFlow.IDataFlowDestination`1.Completion
  name: Completion
  href: api/ALE.ETLBox.DataFlow.IDataFlowDestination-1.html#ALE_ETLBox_DataFlow_IDataFlowDestination_1_Completion
  commentId: P:ALE.ETLBox.DataFlow.IDataFlowDestination`1.Completion
  fullName: ALE.ETLBox.DataFlow.IDataFlowDestination<TInput>.Completion
  fullName.vb: ALE.ETLBox.DataFlow.IDataFlowDestination(Of TInput).Completion
  nameWithType: IDataFlowDestination<TInput>.Completion
  nameWithType.vb: IDataFlowDestination(Of TInput).Completion
- uid: ALE.ETLBox.DataFlow.IDataFlowDestination`1.Completion*
  name: Completion
  href: api/ALE.ETLBox.DataFlow.IDataFlowDestination-1.html#ALE_ETLBox_DataFlow_IDataFlowDestination_1_Completion_
  commentId: Overload:ALE.ETLBox.DataFlow.IDataFlowDestination`1.Completion
  isSpec: "True"
  fullName: ALE.ETLBox.DataFlow.IDataFlowDestination<TInput>.Completion
  fullName.vb: ALE.ETLBox.DataFlow.IDataFlowDestination(Of TInput).Completion
  nameWithType: IDataFlowDestination<TInput>.Completion
  nameWithType.vb: IDataFlowDestination(Of TInput).Completion
- uid: ALE.ETLBox.DataFlow.IDataFlowDestination`1.Wait
  name: Wait()
  href: api/ALE.ETLBox.DataFlow.IDataFlowDestination-1.html#ALE_ETLBox_DataFlow_IDataFlowDestination_1_Wait
  commentId: M:ALE.ETLBox.DataFlow.IDataFlowDestination`1.Wait
  fullName: ALE.ETLBox.DataFlow.IDataFlowDestination<TInput>.Wait()
  fullName.vb: ALE.ETLBox.DataFlow.IDataFlowDestination(Of TInput).Wait()
  nameWithType: IDataFlowDestination<TInput>.Wait()
  nameWithType.vb: IDataFlowDestination(Of TInput).Wait()
- uid: ALE.ETLBox.DataFlow.IDataFlowDestination`1.Wait*
  name: Wait
  href: api/ALE.ETLBox.DataFlow.IDataFlowDestination-1.html#ALE_ETLBox_DataFlow_IDataFlowDestination_1_Wait_
  commentId: Overload:ALE.ETLBox.DataFlow.IDataFlowDestination`1.Wait
  isSpec: "True"
  fullName: ALE.ETLBox.DataFlow.IDataFlowDestination<TInput>.Wait
  fullName.vb: ALE.ETLBox.DataFlow.IDataFlowDestination(Of TInput).Wait
  nameWithType: IDataFlowDestination<TInput>.Wait
  nameWithType.vb: IDataFlowDestination(Of TInput).Wait
- uid: ALE.ETLBox.DataFlow.IDataFlowLinkSource`1
  name: IDataFlowLinkSource<TOutput>
  href: api/ALE.ETLBox.DataFlow.IDataFlowLinkSource-1.html
  commentId: T:ALE.ETLBox.DataFlow.IDataFlowLinkSource`1
  name.vb: IDataFlowLinkSource(Of TOutput)
  fullName: ALE.ETLBox.DataFlow.IDataFlowLinkSource<TOutput>
  fullName.vb: ALE.ETLBox.DataFlow.IDataFlowLinkSource(Of TOutput)
  nameWithType: IDataFlowLinkSource<TOutput>
  nameWithType.vb: IDataFlowLinkSource(Of TOutput)
- uid: ALE.ETLBox.DataFlow.IDataFlowLinkSource`1.LinkTo(ALE.ETLBox.DataFlow.IDataFlowLinkTarget{`0})
  name: LinkTo(IDataFlowLinkTarget<TOutput>)
  href: api/ALE.ETLBox.DataFlow.IDataFlowLinkSource-1.html#ALE_ETLBox_DataFlow_IDataFlowLinkSource_1_LinkTo_ALE_ETLBox_DataFlow_IDataFlowLinkTarget__0__
  commentId: M:ALE.ETLBox.DataFlow.IDataFlowLinkSource`1.LinkTo(ALE.ETLBox.DataFlow.IDataFlowLinkTarget{`0})
  name.vb: LinkTo(IDataFlowLinkTarget(Of TOutput))
  fullName: ALE.ETLBox.DataFlow.IDataFlowLinkSource<TOutput>.LinkTo(ALE.ETLBox.DataFlow.IDataFlowLinkTarget<TOutput>)
  fullName.vb: ALE.ETLBox.DataFlow.IDataFlowLinkSource(Of TOutput).LinkTo(ALE.ETLBox.DataFlow.IDataFlowLinkTarget(Of TOutput))
  nameWithType: IDataFlowLinkSource<TOutput>.LinkTo(IDataFlowLinkTarget<TOutput>)
  nameWithType.vb: IDataFlowLinkSource(Of TOutput).LinkTo(IDataFlowLinkTarget(Of TOutput))
- uid: ALE.ETLBox.DataFlow.IDataFlowLinkSource`1.LinkTo(ALE.ETLBox.DataFlow.IDataFlowLinkTarget{`0},System.Predicate{`0})
  name: LinkTo(IDataFlowLinkTarget<TOutput>, Predicate<TOutput>)
  href: api/ALE.ETLBox.DataFlow.IDataFlowLinkSource-1.html#ALE_ETLBox_DataFlow_IDataFlowLinkSource_1_LinkTo_ALE_ETLBox_DataFlow_IDataFlowLinkTarget__0__System_Predicate__0__
  commentId: M:ALE.ETLBox.DataFlow.IDataFlowLinkSource`1.LinkTo(ALE.ETLBox.DataFlow.IDataFlowLinkTarget{`0},System.Predicate{`0})
  name.vb: LinkTo(IDataFlowLinkTarget(Of TOutput), Predicate(Of TOutput))
  fullName: ALE.ETLBox.DataFlow.IDataFlowLinkSource<TOutput>.LinkTo(ALE.ETLBox.DataFlow.IDataFlowLinkTarget<TOutput>, System.Predicate<TOutput>)
  fullName.vb: ALE.ETLBox.DataFlow.IDataFlowLinkSource(Of TOutput).LinkTo(ALE.ETLBox.DataFlow.IDataFlowLinkTarget(Of TOutput), System.Predicate(Of TOutput))
  nameWithType: IDataFlowLinkSource<TOutput>.LinkTo(IDataFlowLinkTarget<TOutput>, Predicate<TOutput>)
  nameWithType.vb: IDataFlowLinkSource(Of TOutput).LinkTo(IDataFlowLinkTarget(Of TOutput), Predicate(Of TOutput))
- uid: ALE.ETLBox.DataFlow.IDataFlowLinkSource`1.LinkTo(ALE.ETLBox.DataFlow.IDataFlowLinkTarget{`0},System.Predicate{`0},System.Predicate{`0})
  name: LinkTo(IDataFlowLinkTarget<TOutput>, Predicate<TOutput>, Predicate<TOutput>)
  href: api/ALE.ETLBox.DataFlow.IDataFlowLinkSource-1.html#ALE_ETLBox_DataFlow_IDataFlowLinkSource_1_LinkTo_ALE_ETLBox_DataFlow_IDataFlowLinkTarget__0__System_Predicate__0__System_Predicate__0__
  commentId: M:ALE.ETLBox.DataFlow.IDataFlowLinkSource`1.LinkTo(ALE.ETLBox.DataFlow.IDataFlowLinkTarget{`0},System.Predicate{`0},System.Predicate{`0})
  name.vb: LinkTo(IDataFlowLinkTarget(Of TOutput), Predicate(Of TOutput), Predicate(Of TOutput))
  fullName: ALE.ETLBox.DataFlow.IDataFlowLinkSource<TOutput>.LinkTo(ALE.ETLBox.DataFlow.IDataFlowLinkTarget<TOutput>, System.Predicate<TOutput>, System.Predicate<TOutput>)
  fullName.vb: ALE.ETLBox.DataFlow.IDataFlowLinkSource(Of TOutput).LinkTo(ALE.ETLBox.DataFlow.IDataFlowLinkTarget(Of TOutput), System.Predicate(Of TOutput), System.Predicate(Of TOutput))
  nameWithType: IDataFlowLinkSource<TOutput>.LinkTo(IDataFlowLinkTarget<TOutput>, Predicate<TOutput>, Predicate<TOutput>)
  nameWithType.vb: IDataFlowLinkSource(Of TOutput).LinkTo(IDataFlowLinkTarget(Of TOutput), Predicate(Of TOutput), Predicate(Of TOutput))
- uid: ALE.ETLBox.DataFlow.IDataFlowLinkSource`1.LinkTo*
  name: LinkTo
  href: api/ALE.ETLBox.DataFlow.IDataFlowLinkSource-1.html#ALE_ETLBox_DataFlow_IDataFlowLinkSource_1_LinkTo_
  commentId: Overload:ALE.ETLBox.DataFlow.IDataFlowLinkSource`1.LinkTo
  isSpec: "True"
  fullName: ALE.ETLBox.DataFlow.IDataFlowLinkSource<TOutput>.LinkTo
  fullName.vb: ALE.ETLBox.DataFlow.IDataFlowLinkSource(Of TOutput).LinkTo
  nameWithType: IDataFlowLinkSource<TOutput>.LinkTo
  nameWithType.vb: IDataFlowLinkSource(Of TOutput).LinkTo
- uid: ALE.ETLBox.DataFlow.IDataFlowLinkSource`1.LinkTo``1(ALE.ETLBox.DataFlow.IDataFlowLinkTarget{`0})
  name: LinkTo<TConvert>(IDataFlowLinkTarget<TOutput>)
  href: api/ALE.ETLBox.DataFlow.IDataFlowLinkSource-1.html#ALE_ETLBox_DataFlow_IDataFlowLinkSource_1_LinkTo__1_ALE_ETLBox_DataFlow_IDataFlowLinkTarget__0__
  commentId: M:ALE.ETLBox.DataFlow.IDataFlowLinkSource`1.LinkTo``1(ALE.ETLBox.DataFlow.IDataFlowLinkTarget{`0})
  name.vb: LinkTo(Of TConvert)(IDataFlowLinkTarget(Of TOutput))
  fullName: ALE.ETLBox.DataFlow.IDataFlowLinkSource<TOutput>.LinkTo<TConvert>(ALE.ETLBox.DataFlow.IDataFlowLinkTarget<TOutput>)
  fullName.vb: ALE.ETLBox.DataFlow.IDataFlowLinkSource(Of TOutput).LinkTo(Of TConvert)(ALE.ETLBox.DataFlow.IDataFlowLinkTarget(Of TOutput))
  nameWithType: IDataFlowLinkSource<TOutput>.LinkTo<TConvert>(IDataFlowLinkTarget<TOutput>)
  nameWithType.vb: IDataFlowLinkSource(Of TOutput).LinkTo(Of TConvert)(IDataFlowLinkTarget(Of TOutput))
- uid: ALE.ETLBox.DataFlow.IDataFlowLinkSource`1.LinkTo``1(ALE.ETLBox.DataFlow.IDataFlowLinkTarget{`0},System.Predicate{`0})
  name: LinkTo<TConvert>(IDataFlowLinkTarget<TOutput>, Predicate<TOutput>)
  href: api/ALE.ETLBox.DataFlow.IDataFlowLinkSource-1.html#ALE_ETLBox_DataFlow_IDataFlowLinkSource_1_LinkTo__1_ALE_ETLBox_DataFlow_IDataFlowLinkTarget__0__System_Predicate__0__
  commentId: M:ALE.ETLBox.DataFlow.IDataFlowLinkSource`1.LinkTo``1(ALE.ETLBox.DataFlow.IDataFlowLinkTarget{`0},System.Predicate{`0})
  name.vb: LinkTo(Of TConvert)(IDataFlowLinkTarget(Of TOutput), Predicate(Of TOutput))
  fullName: ALE.ETLBox.DataFlow.IDataFlowLinkSource<TOutput>.LinkTo<TConvert>(ALE.ETLBox.DataFlow.IDataFlowLinkTarget<TOutput>, System.Predicate<TOutput>)
  fullName.vb: ALE.ETLBox.DataFlow.IDataFlowLinkSource(Of TOutput).LinkTo(Of TConvert)(ALE.ETLBox.DataFlow.IDataFlowLinkTarget(Of TOutput), System.Predicate(Of TOutput))
  nameWithType: IDataFlowLinkSource<TOutput>.LinkTo<TConvert>(IDataFlowLinkTarget<TOutput>, Predicate<TOutput>)
  nameWithType.vb: IDataFlowLinkSource(Of TOutput).LinkTo(Of TConvert)(IDataFlowLinkTarget(Of TOutput), Predicate(Of TOutput))
- uid: ALE.ETLBox.DataFlow.IDataFlowLinkSource`1.LinkTo``1(ALE.ETLBox.DataFlow.IDataFlowLinkTarget{`0},System.Predicate{`0},System.Predicate{`0})
  name: LinkTo<TConvert>(IDataFlowLinkTarget<TOutput>, Predicate<TOutput>, Predicate<TOutput>)
  href: api/ALE.ETLBox.DataFlow.IDataFlowLinkSource-1.html#ALE_ETLBox_DataFlow_IDataFlowLinkSource_1_LinkTo__1_ALE_ETLBox_DataFlow_IDataFlowLinkTarget__0__System_Predicate__0__System_Predicate__0__
  commentId: M:ALE.ETLBox.DataFlow.IDataFlowLinkSource`1.LinkTo``1(ALE.ETLBox.DataFlow.IDataFlowLinkTarget{`0},System.Predicate{`0},System.Predicate{`0})
  name.vb: LinkTo(Of TConvert)(IDataFlowLinkTarget(Of TOutput), Predicate(Of TOutput), Predicate(Of TOutput))
  fullName: ALE.ETLBox.DataFlow.IDataFlowLinkSource<TOutput>.LinkTo<TConvert>(ALE.ETLBox.DataFlow.IDataFlowLinkTarget<TOutput>, System.Predicate<TOutput>, System.Predicate<TOutput>)
  fullName.vb: ALE.ETLBox.DataFlow.IDataFlowLinkSource(Of TOutput).LinkTo(Of TConvert)(ALE.ETLBox.DataFlow.IDataFlowLinkTarget(Of TOutput), System.Predicate(Of TOutput), System.Predicate(Of TOutput))
  nameWithType: IDataFlowLinkSource<TOutput>.LinkTo<TConvert>(IDataFlowLinkTarget<TOutput>, Predicate<TOutput>, Predicate<TOutput>)
  nameWithType.vb: IDataFlowLinkSource(Of TOutput).LinkTo(Of TConvert)(IDataFlowLinkTarget(Of TOutput), Predicate(Of TOutput), Predicate(Of TOutput))
- uid: ALE.ETLBox.DataFlow.IDataFlowLinkSource`1.SourceBlock
  name: SourceBlock
  href: api/ALE.ETLBox.DataFlow.IDataFlowLinkSource-1.html#ALE_ETLBox_DataFlow_IDataFlowLinkSource_1_SourceBlock
  commentId: P:ALE.ETLBox.DataFlow.IDataFlowLinkSource`1.SourceBlock
  fullName: ALE.ETLBox.DataFlow.IDataFlowLinkSource<TOutput>.SourceBlock
  fullName.vb: ALE.ETLBox.DataFlow.IDataFlowLinkSource(Of TOutput).SourceBlock
  nameWithType: IDataFlowLinkSource<TOutput>.SourceBlock
  nameWithType.vb: IDataFlowLinkSource(Of TOutput).SourceBlock
- uid: ALE.ETLBox.DataFlow.IDataFlowLinkSource`1.SourceBlock*
  name: SourceBlock
  href: api/ALE.ETLBox.DataFlow.IDataFlowLinkSource-1.html#ALE_ETLBox_DataFlow_IDataFlowLinkSource_1_SourceBlock_
  commentId: Overload:ALE.ETLBox.DataFlow.IDataFlowLinkSource`1.SourceBlock
  isSpec: "True"
  fullName: ALE.ETLBox.DataFlow.IDataFlowLinkSource<TOutput>.SourceBlock
  fullName.vb: ALE.ETLBox.DataFlow.IDataFlowLinkSource(Of TOutput).SourceBlock
  nameWithType: IDataFlowLinkSource<TOutput>.SourceBlock
  nameWithType.vb: IDataFlowLinkSource(Of TOutput).SourceBlock
- uid: ALE.ETLBox.DataFlow.IDataFlowLinkTarget`1
  name: IDataFlowLinkTarget<TInput>
  href: api/ALE.ETLBox.DataFlow.IDataFlowLinkTarget-1.html
  commentId: T:ALE.ETLBox.DataFlow.IDataFlowLinkTarget`1
  name.vb: IDataFlowLinkTarget(Of TInput)
  fullName: ALE.ETLBox.DataFlow.IDataFlowLinkTarget<TInput>
  fullName.vb: ALE.ETLBox.DataFlow.IDataFlowLinkTarget(Of TInput)
  nameWithType: IDataFlowLinkTarget<TInput>
  nameWithType.vb: IDataFlowLinkTarget(Of TInput)
- uid: ALE.ETLBox.DataFlow.IDataFlowLinkTarget`1.AddPredecessorCompletion(System.Threading.Tasks.Task)
  name: AddPredecessorCompletion(Task)
  href: api/ALE.ETLBox.DataFlow.IDataFlowLinkTarget-1.html#ALE_ETLBox_DataFlow_IDataFlowLinkTarget_1_AddPredecessorCompletion_System_Threading_Tasks_Task_
  commentId: M:ALE.ETLBox.DataFlow.IDataFlowLinkTarget`1.AddPredecessorCompletion(System.Threading.Tasks.Task)
  fullName: ALE.ETLBox.DataFlow.IDataFlowLinkTarget<TInput>.AddPredecessorCompletion(System.Threading.Tasks.Task)
  fullName.vb: ALE.ETLBox.DataFlow.IDataFlowLinkTarget(Of TInput).AddPredecessorCompletion(System.Threading.Tasks.Task)
  nameWithType: IDataFlowLinkTarget<TInput>.AddPredecessorCompletion(Task)
  nameWithType.vb: IDataFlowLinkTarget(Of TInput).AddPredecessorCompletion(Task)
- uid: ALE.ETLBox.DataFlow.IDataFlowLinkTarget`1.AddPredecessorCompletion*
  name: AddPredecessorCompletion
  href: api/ALE.ETLBox.DataFlow.IDataFlowLinkTarget-1.html#ALE_ETLBox_DataFlow_IDataFlowLinkTarget_1_AddPredecessorCompletion_
  commentId: Overload:ALE.ETLBox.DataFlow.IDataFlowLinkTarget`1.AddPredecessorCompletion
  isSpec: "True"
  fullName: ALE.ETLBox.DataFlow.IDataFlowLinkTarget<TInput>.AddPredecessorCompletion
  fullName.vb: ALE.ETLBox.DataFlow.IDataFlowLinkTarget(Of TInput).AddPredecessorCompletion
  nameWithType: IDataFlowLinkTarget<TInput>.AddPredecessorCompletion
  nameWithType.vb: IDataFlowLinkTarget(Of TInput).AddPredecessorCompletion
- uid: ALE.ETLBox.DataFlow.IDataFlowLinkTarget`1.TargetBlock
  name: TargetBlock
  href: api/ALE.ETLBox.DataFlow.IDataFlowLinkTarget-1.html#ALE_ETLBox_DataFlow_IDataFlowLinkTarget_1_TargetBlock
  commentId: P:ALE.ETLBox.DataFlow.IDataFlowLinkTarget`1.TargetBlock
  fullName: ALE.ETLBox.DataFlow.IDataFlowLinkTarget<TInput>.TargetBlock
  fullName.vb: ALE.ETLBox.DataFlow.IDataFlowLinkTarget(Of TInput).TargetBlock
  nameWithType: IDataFlowLinkTarget<TInput>.TargetBlock
  nameWithType.vb: IDataFlowLinkTarget(Of TInput).TargetBlock
- uid: ALE.ETLBox.DataFlow.IDataFlowLinkTarget`1.TargetBlock*
  name: TargetBlock
  href: api/ALE.ETLBox.DataFlow.IDataFlowLinkTarget-1.html#ALE_ETLBox_DataFlow_IDataFlowLinkTarget_1_TargetBlock_
  commentId: Overload:ALE.ETLBox.DataFlow.IDataFlowLinkTarget`1.TargetBlock
  isSpec: "True"
  fullName: ALE.ETLBox.DataFlow.IDataFlowLinkTarget<TInput>.TargetBlock
  fullName.vb: ALE.ETLBox.DataFlow.IDataFlowLinkTarget(Of TInput).TargetBlock
  nameWithType: IDataFlowLinkTarget<TInput>.TargetBlock
  nameWithType.vb: IDataFlowLinkTarget(Of TInput).TargetBlock
- uid: ALE.ETLBox.DataFlow.IDataFlowSource`1
  name: IDataFlowSource<TOutput>
  href: api/ALE.ETLBox.DataFlow.IDataFlowSource-1.html
  commentId: T:ALE.ETLBox.DataFlow.IDataFlowSource`1
  name.vb: IDataFlowSource(Of TOutput)
  fullName: ALE.ETLBox.DataFlow.IDataFlowSource<TOutput>
  fullName.vb: ALE.ETLBox.DataFlow.IDataFlowSource(Of TOutput)
  nameWithType: IDataFlowSource<TOutput>
  nameWithType.vb: IDataFlowSource(Of TOutput)
- uid: ALE.ETLBox.DataFlow.IDataFlowSource`1.Execute
  name: Execute()
  href: api/ALE.ETLBox.DataFlow.IDataFlowSource-1.html#ALE_ETLBox_DataFlow_IDataFlowSource_1_Execute
  commentId: M:ALE.ETLBox.DataFlow.IDataFlowSource`1.Execute
  fullName: ALE.ETLBox.DataFlow.IDataFlowSource<TOutput>.Execute()
  fullName.vb: ALE.ETLBox.DataFlow.IDataFlowSource(Of TOutput).Execute()
  nameWithType: IDataFlowSource<TOutput>.Execute()
  nameWithType.vb: IDataFlowSource(Of TOutput).Execute()
- uid: ALE.ETLBox.DataFlow.IDataFlowSource`1.Execute*
  name: Execute
  href: api/ALE.ETLBox.DataFlow.IDataFlowSource-1.html#ALE_ETLBox_DataFlow_IDataFlowSource_1_Execute_
  commentId: Overload:ALE.ETLBox.DataFlow.IDataFlowSource`1.Execute
  isSpec: "True"
  fullName: ALE.ETLBox.DataFlow.IDataFlowSource<TOutput>.Execute
  fullName.vb: ALE.ETLBox.DataFlow.IDataFlowSource(Of TOutput).Execute
  nameWithType: IDataFlowSource<TOutput>.Execute
  nameWithType.vb: IDataFlowSource(Of TOutput).Execute
- uid: ALE.ETLBox.DataFlow.IDataFlowSource`1.ExecuteAsync
  name: ExecuteAsync()
  href: api/ALE.ETLBox.DataFlow.IDataFlowSource-1.html#ALE_ETLBox_DataFlow_IDataFlowSource_1_ExecuteAsync
  commentId: M:ALE.ETLBox.DataFlow.IDataFlowSource`1.ExecuteAsync
  fullName: ALE.ETLBox.DataFlow.IDataFlowSource<TOutput>.ExecuteAsync()
  fullName.vb: ALE.ETLBox.DataFlow.IDataFlowSource(Of TOutput).ExecuteAsync()
  nameWithType: IDataFlowSource<TOutput>.ExecuteAsync()
  nameWithType.vb: IDataFlowSource(Of TOutput).ExecuteAsync()
- uid: ALE.ETLBox.DataFlow.IDataFlowSource`1.ExecuteAsync*
  name: ExecuteAsync
  href: api/ALE.ETLBox.DataFlow.IDataFlowSource-1.html#ALE_ETLBox_DataFlow_IDataFlowSource_1_ExecuteAsync_
  commentId: Overload:ALE.ETLBox.DataFlow.IDataFlowSource`1.ExecuteAsync
  isSpec: "True"
  fullName: ALE.ETLBox.DataFlow.IDataFlowSource<TOutput>.ExecuteAsync
  fullName.vb: ALE.ETLBox.DataFlow.IDataFlowSource(Of TOutput).ExecuteAsync
  nameWithType: IDataFlowSource<TOutput>.ExecuteAsync
  nameWithType.vb: IDataFlowSource(Of TOutput).ExecuteAsync
- uid: ALE.ETLBox.DataFlow.IDataFlowSource`1.LinkErrorTo(ALE.ETLBox.DataFlow.IDataFlowLinkTarget{ALE.ETLBox.DataFlow.ETLBoxError})
  name: LinkErrorTo(IDataFlowLinkTarget<ETLBoxError>)
  href: api/ALE.ETLBox.DataFlow.IDataFlowSource-1.html#ALE_ETLBox_DataFlow_IDataFlowSource_1_LinkErrorTo_ALE_ETLBox_DataFlow_IDataFlowLinkTarget_ALE_ETLBox_DataFlow_ETLBoxError__
  commentId: M:ALE.ETLBox.DataFlow.IDataFlowSource`1.LinkErrorTo(ALE.ETLBox.DataFlow.IDataFlowLinkTarget{ALE.ETLBox.DataFlow.ETLBoxError})
  name.vb: LinkErrorTo(IDataFlowLinkTarget(Of ETLBoxError))
  fullName: ALE.ETLBox.DataFlow.IDataFlowSource<TOutput>.LinkErrorTo(ALE.ETLBox.DataFlow.IDataFlowLinkTarget<ALE.ETLBox.DataFlow.ETLBoxError>)
  fullName.vb: ALE.ETLBox.DataFlow.IDataFlowSource(Of TOutput).LinkErrorTo(ALE.ETLBox.DataFlow.IDataFlowLinkTarget(Of ALE.ETLBox.DataFlow.ETLBoxError))
  nameWithType: IDataFlowSource<TOutput>.LinkErrorTo(IDataFlowLinkTarget<ETLBoxError>)
  nameWithType.vb: IDataFlowSource(Of TOutput).LinkErrorTo(IDataFlowLinkTarget(Of ETLBoxError))
- uid: ALE.ETLBox.DataFlow.IDataFlowSource`1.LinkErrorTo*
  name: LinkErrorTo
  href: api/ALE.ETLBox.DataFlow.IDataFlowSource-1.html#ALE_ETLBox_DataFlow_IDataFlowSource_1_LinkErrorTo_
  commentId: Overload:ALE.ETLBox.DataFlow.IDataFlowSource`1.LinkErrorTo
  isSpec: "True"
  fullName: ALE.ETLBox.DataFlow.IDataFlowSource<TOutput>.LinkErrorTo
  fullName.vb: ALE.ETLBox.DataFlow.IDataFlowSource(Of TOutput).LinkErrorTo
  nameWithType: IDataFlowSource<TOutput>.LinkErrorTo
  nameWithType.vb: IDataFlowSource(Of TOutput).LinkErrorTo
- uid: ALE.ETLBox.DataFlow.IDataFlowTransformation`2
  name: IDataFlowTransformation<TInput, TOutput>
  href: api/ALE.ETLBox.DataFlow.IDataFlowTransformation-2.html
  commentId: T:ALE.ETLBox.DataFlow.IDataFlowTransformation`2
  name.vb: IDataFlowTransformation(Of TInput, TOutput)
  fullName: ALE.ETLBox.DataFlow.IDataFlowTransformation<TInput, TOutput>
  fullName.vb: ALE.ETLBox.DataFlow.IDataFlowTransformation(Of TInput, TOutput)
  nameWithType: IDataFlowTransformation<TInput, TOutput>
  nameWithType.vb: IDataFlowTransformation(Of TInput, TOutput)
- uid: ALE.ETLBox.DataFlow.IdColumn
  name: IdColumn
  href: api/ALE.ETLBox.DataFlow.IdColumn.html
  commentId: T:ALE.ETLBox.DataFlow.IdColumn
  fullName: ALE.ETLBox.DataFlow.IdColumn
  nameWithType: IdColumn
- uid: ALE.ETLBox.DataFlow.IdColumn.#ctor
  name: IdColumn()
  href: api/ALE.ETLBox.DataFlow.IdColumn.html#ALE_ETLBox_DataFlow_IdColumn__ctor
  commentId: M:ALE.ETLBox.DataFlow.IdColumn.#ctor
  fullName: ALE.ETLBox.DataFlow.IdColumn.IdColumn()
  nameWithType: IdColumn.IdColumn()
- uid: ALE.ETLBox.DataFlow.IdColumn.#ctor*
  name: IdColumn
  href: api/ALE.ETLBox.DataFlow.IdColumn.html#ALE_ETLBox_DataFlow_IdColumn__ctor_
  commentId: Overload:ALE.ETLBox.DataFlow.IdColumn.#ctor
  isSpec: "True"
  fullName: ALE.ETLBox.DataFlow.IdColumn.IdColumn
  nameWithType: IdColumn.IdColumn
- uid: ALE.ETLBox.DataFlow.IMergeableRow
  name: IMergeableRow
  href: api/ALE.ETLBox.DataFlow.IMergeableRow.html
  commentId: T:ALE.ETLBox.DataFlow.IMergeableRow
  fullName: ALE.ETLBox.DataFlow.IMergeableRow
  nameWithType: IMergeableRow
- uid: ALE.ETLBox.DataFlow.IMergeableRow.ChangeAction
  name: ChangeAction
  href: api/ALE.ETLBox.DataFlow.IMergeableRow.html#ALE_ETLBox_DataFlow_IMergeableRow_ChangeAction
  commentId: P:ALE.ETLBox.DataFlow.IMergeableRow.ChangeAction
  fullName: ALE.ETLBox.DataFlow.IMergeableRow.ChangeAction
  nameWithType: IMergeableRow.ChangeAction
- uid: ALE.ETLBox.DataFlow.IMergeableRow.ChangeAction*
  name: ChangeAction
  href: api/ALE.ETLBox.DataFlow.IMergeableRow.html#ALE_ETLBox_DataFlow_IMergeableRow_ChangeAction_
  commentId: Overload:ALE.ETLBox.DataFlow.IMergeableRow.ChangeAction
  isSpec: "True"
  fullName: ALE.ETLBox.DataFlow.IMergeableRow.ChangeAction
  nameWithType: IMergeableRow.ChangeAction
- uid: ALE.ETLBox.DataFlow.IMergeableRow.ChangeDate
  name: ChangeDate
  href: api/ALE.ETLBox.DataFlow.IMergeableRow.html#ALE_ETLBox_DataFlow_IMergeableRow_ChangeDate
  commentId: P:ALE.ETLBox.DataFlow.IMergeableRow.ChangeDate
  fullName: ALE.ETLBox.DataFlow.IMergeableRow.ChangeDate
  nameWithType: IMergeableRow.ChangeDate
- uid: ALE.ETLBox.DataFlow.IMergeableRow.ChangeDate*
  name: ChangeDate
  href: api/ALE.ETLBox.DataFlow.IMergeableRow.html#ALE_ETLBox_DataFlow_IMergeableRow_ChangeDate_
  commentId: Overload:ALE.ETLBox.DataFlow.IMergeableRow.ChangeDate
  isSpec: "True"
  fullName: ALE.ETLBox.DataFlow.IMergeableRow.ChangeDate
  nameWithType: IMergeableRow.ChangeDate
- uid: ALE.ETLBox.DataFlow.IMergeableRow.IsDeletion
  name: IsDeletion
  href: api/ALE.ETLBox.DataFlow.IMergeableRow.html#ALE_ETLBox_DataFlow_IMergeableRow_IsDeletion
  commentId: P:ALE.ETLBox.DataFlow.IMergeableRow.IsDeletion
  fullName: ALE.ETLBox.DataFlow.IMergeableRow.IsDeletion
  nameWithType: IMergeableRow.IsDeletion
- uid: ALE.ETLBox.DataFlow.IMergeableRow.IsDeletion*
  name: IsDeletion
  href: api/ALE.ETLBox.DataFlow.IMergeableRow.html#ALE_ETLBox_DataFlow_IMergeableRow_IsDeletion_
  commentId: Overload:ALE.ETLBox.DataFlow.IMergeableRow.IsDeletion
  isSpec: "True"
  fullName: ALE.ETLBox.DataFlow.IMergeableRow.IsDeletion
  nameWithType: IMergeableRow.IsDeletion
- uid: ALE.ETLBox.DataFlow.IMergeableRow.UniqueId
  name: UniqueId
  href: api/ALE.ETLBox.DataFlow.IMergeableRow.html#ALE_ETLBox_DataFlow_IMergeableRow_UniqueId
  commentId: P:ALE.ETLBox.DataFlow.IMergeableRow.UniqueId
  fullName: ALE.ETLBox.DataFlow.IMergeableRow.UniqueId
  nameWithType: IMergeableRow.UniqueId
- uid: ALE.ETLBox.DataFlow.IMergeableRow.UniqueId*
  name: UniqueId
  href: api/ALE.ETLBox.DataFlow.IMergeableRow.html#ALE_ETLBox_DataFlow_IMergeableRow_UniqueId_
  commentId: Overload:ALE.ETLBox.DataFlow.IMergeableRow.UniqueId
  isSpec: "True"
  fullName: ALE.ETLBox.DataFlow.IMergeableRow.UniqueId
  nameWithType: IMergeableRow.UniqueId
- uid: ALE.ETLBox.DataFlow.JsonDestination
  name: JsonDestination
  href: api/ALE.ETLBox.DataFlow.JsonDestination.html
  commentId: T:ALE.ETLBox.DataFlow.JsonDestination
  fullName: ALE.ETLBox.DataFlow.JsonDestination
  nameWithType: JsonDestination
- uid: ALE.ETLBox.DataFlow.JsonDestination.#ctor
  name: JsonDestination()
  href: api/ALE.ETLBox.DataFlow.JsonDestination.html#ALE_ETLBox_DataFlow_JsonDestination__ctor
  commentId: M:ALE.ETLBox.DataFlow.JsonDestination.#ctor
  fullName: ALE.ETLBox.DataFlow.JsonDestination.JsonDestination()
  nameWithType: JsonDestination.JsonDestination()
- uid: ALE.ETLBox.DataFlow.JsonDestination.#ctor(System.String)
  name: JsonDestination(String)
  href: api/ALE.ETLBox.DataFlow.JsonDestination.html#ALE_ETLBox_DataFlow_JsonDestination__ctor_System_String_
  commentId: M:ALE.ETLBox.DataFlow.JsonDestination.#ctor(System.String)
  fullName: ALE.ETLBox.DataFlow.JsonDestination.JsonDestination(System.String)
  nameWithType: JsonDestination.JsonDestination(String)
- uid: ALE.ETLBox.DataFlow.JsonDestination.#ctor*
  name: JsonDestination
  href: api/ALE.ETLBox.DataFlow.JsonDestination.html#ALE_ETLBox_DataFlow_JsonDestination__ctor_
  commentId: Overload:ALE.ETLBox.DataFlow.JsonDestination.#ctor
  isSpec: "True"
  fullName: ALE.ETLBox.DataFlow.JsonDestination.JsonDestination
  nameWithType: JsonDestination.JsonDestination
- uid: ALE.ETLBox.DataFlow.JsonDestination`1
  name: JsonDestination<TInput>
  href: api/ALE.ETLBox.DataFlow.JsonDestination-1.html
  commentId: T:ALE.ETLBox.DataFlow.JsonDestination`1
  name.vb: JsonDestination(Of TInput)
  fullName: ALE.ETLBox.DataFlow.JsonDestination<TInput>
  fullName.vb: ALE.ETLBox.DataFlow.JsonDestination(Of TInput)
  nameWithType: JsonDestination<TInput>
  nameWithType.vb: JsonDestination(Of TInput)
- uid: ALE.ETLBox.DataFlow.JsonDestination`1.#ctor
  name: JsonDestination()
  href: api/ALE.ETLBox.DataFlow.JsonDestination-1.html#ALE_ETLBox_DataFlow_JsonDestination_1__ctor
  commentId: M:ALE.ETLBox.DataFlow.JsonDestination`1.#ctor
  fullName: ALE.ETLBox.DataFlow.JsonDestination<TInput>.JsonDestination()
  fullName.vb: ALE.ETLBox.DataFlow.JsonDestination(Of TInput).JsonDestination()
  nameWithType: JsonDestination<TInput>.JsonDestination()
  nameWithType.vb: JsonDestination(Of TInput).JsonDestination()
- uid: ALE.ETLBox.DataFlow.JsonDestination`1.#ctor(System.String)
  name: JsonDestination(String)
  href: api/ALE.ETLBox.DataFlow.JsonDestination-1.html#ALE_ETLBox_DataFlow_JsonDestination_1__ctor_System_String_
  commentId: M:ALE.ETLBox.DataFlow.JsonDestination`1.#ctor(System.String)
  fullName: ALE.ETLBox.DataFlow.JsonDestination<TInput>.JsonDestination(System.String)
  fullName.vb: ALE.ETLBox.DataFlow.JsonDestination(Of TInput).JsonDestination(System.String)
  nameWithType: JsonDestination<TInput>.JsonDestination(String)
  nameWithType.vb: JsonDestination(Of TInput).JsonDestination(String)
- uid: ALE.ETLBox.DataFlow.JsonDestination`1.#ctor(System.String,ALE.ETLBox.DataFlow.ResourceType)
  name: JsonDestination(String, ResourceType)
  href: api/ALE.ETLBox.DataFlow.JsonDestination-1.html#ALE_ETLBox_DataFlow_JsonDestination_1__ctor_System_String_ALE_ETLBox_DataFlow_ResourceType_
  commentId: M:ALE.ETLBox.DataFlow.JsonDestination`1.#ctor(System.String,ALE.ETLBox.DataFlow.ResourceType)
  fullName: ALE.ETLBox.DataFlow.JsonDestination<TInput>.JsonDestination(System.String, ALE.ETLBox.DataFlow.ResourceType)
  fullName.vb: ALE.ETLBox.DataFlow.JsonDestination(Of TInput).JsonDestination(System.String, ALE.ETLBox.DataFlow.ResourceType)
  nameWithType: JsonDestination<TInput>.JsonDestination(String, ResourceType)
  nameWithType.vb: JsonDestination(Of TInput).JsonDestination(String, ResourceType)
- uid: ALE.ETLBox.DataFlow.JsonDestination`1.#ctor*
  name: JsonDestination
  href: api/ALE.ETLBox.DataFlow.JsonDestination-1.html#ALE_ETLBox_DataFlow_JsonDestination_1__ctor_
  commentId: Overload:ALE.ETLBox.DataFlow.JsonDestination`1.#ctor
  isSpec: "True"
  fullName: ALE.ETLBox.DataFlow.JsonDestination<TInput>.JsonDestination
  fullName.vb: ALE.ETLBox.DataFlow.JsonDestination(Of TInput).JsonDestination
  nameWithType: JsonDestination<TInput>.JsonDestination
  nameWithType.vb: JsonDestination(Of TInput).JsonDestination
- uid: ALE.ETLBox.DataFlow.JsonDestination`1.CloseStream
  name: CloseStream()
  href: api/ALE.ETLBox.DataFlow.JsonDestination-1.html#ALE_ETLBox_DataFlow_JsonDestination_1_CloseStream
  commentId: M:ALE.ETLBox.DataFlow.JsonDestination`1.CloseStream
  fullName: ALE.ETLBox.DataFlow.JsonDestination<TInput>.CloseStream()
  fullName.vb: ALE.ETLBox.DataFlow.JsonDestination(Of TInput).CloseStream()
  nameWithType: JsonDestination<TInput>.CloseStream()
  nameWithType.vb: JsonDestination(Of TInput).CloseStream()
- uid: ALE.ETLBox.DataFlow.JsonDestination`1.CloseStream*
  name: CloseStream
  href: api/ALE.ETLBox.DataFlow.JsonDestination-1.html#ALE_ETLBox_DataFlow_JsonDestination_1_CloseStream_
  commentId: Overload:ALE.ETLBox.DataFlow.JsonDestination`1.CloseStream
  isSpec: "True"
  fullName: ALE.ETLBox.DataFlow.JsonDestination<TInput>.CloseStream
  fullName.vb: ALE.ETLBox.DataFlow.JsonDestination(Of TInput).CloseStream
  nameWithType: JsonDestination<TInput>.CloseStream
  nameWithType.vb: JsonDestination(Of TInput).CloseStream
- uid: ALE.ETLBox.DataFlow.JsonDestination`1.InitStream
  name: InitStream()
  href: api/ALE.ETLBox.DataFlow.JsonDestination-1.html#ALE_ETLBox_DataFlow_JsonDestination_1_InitStream
  commentId: M:ALE.ETLBox.DataFlow.JsonDestination`1.InitStream
  fullName: ALE.ETLBox.DataFlow.JsonDestination<TInput>.InitStream()
  fullName.vb: ALE.ETLBox.DataFlow.JsonDestination(Of TInput).InitStream()
  nameWithType: JsonDestination<TInput>.InitStream()
  nameWithType.vb: JsonDestination(Of TInput).InitStream()
- uid: ALE.ETLBox.DataFlow.JsonDestination`1.InitStream*
  name: InitStream
  href: api/ALE.ETLBox.DataFlow.JsonDestination-1.html#ALE_ETLBox_DataFlow_JsonDestination_1_InitStream_
  commentId: Overload:ALE.ETLBox.DataFlow.JsonDestination`1.InitStream
  isSpec: "True"
  fullName: ALE.ETLBox.DataFlow.JsonDestination<TInput>.InitStream
  fullName.vb: ALE.ETLBox.DataFlow.JsonDestination(Of TInput).InitStream
  nameWithType: JsonDestination<TInput>.InitStream
  nameWithType.vb: JsonDestination(Of TInput).InitStream
- uid: ALE.ETLBox.DataFlow.JsonDestination`1.JsonSerializer
  name: JsonSerializer
  href: api/ALE.ETLBox.DataFlow.JsonDestination-1.html#ALE_ETLBox_DataFlow_JsonDestination_1_JsonSerializer
  commentId: P:ALE.ETLBox.DataFlow.JsonDestination`1.JsonSerializer
  fullName: ALE.ETLBox.DataFlow.JsonDestination<TInput>.JsonSerializer
  fullName.vb: ALE.ETLBox.DataFlow.JsonDestination(Of TInput).JsonSerializer
  nameWithType: JsonDestination<TInput>.JsonSerializer
  nameWithType.vb: JsonDestination(Of TInput).JsonSerializer
- uid: ALE.ETLBox.DataFlow.JsonDestination`1.JsonSerializer*
  name: JsonSerializer
  href: api/ALE.ETLBox.DataFlow.JsonDestination-1.html#ALE_ETLBox_DataFlow_JsonDestination_1_JsonSerializer_
  commentId: Overload:ALE.ETLBox.DataFlow.JsonDestination`1.JsonSerializer
  isSpec: "True"
  fullName: ALE.ETLBox.DataFlow.JsonDestination<TInput>.JsonSerializer
  fullName.vb: ALE.ETLBox.DataFlow.JsonDestination(Of TInput).JsonSerializer
  nameWithType: JsonDestination<TInput>.JsonSerializer
  nameWithType.vb: JsonDestination(Of TInput).JsonSerializer
- uid: ALE.ETLBox.DataFlow.JsonDestination`1.TaskName
  name: TaskName
  href: api/ALE.ETLBox.DataFlow.JsonDestination-1.html#ALE_ETLBox_DataFlow_JsonDestination_1_TaskName
  commentId: P:ALE.ETLBox.DataFlow.JsonDestination`1.TaskName
  fullName: ALE.ETLBox.DataFlow.JsonDestination<TInput>.TaskName
  fullName.vb: ALE.ETLBox.DataFlow.JsonDestination(Of TInput).TaskName
  nameWithType: JsonDestination<TInput>.TaskName
  nameWithType.vb: JsonDestination(Of TInput).TaskName
- uid: ALE.ETLBox.DataFlow.JsonDestination`1.TaskName*
  name: TaskName
  href: api/ALE.ETLBox.DataFlow.JsonDestination-1.html#ALE_ETLBox_DataFlow_JsonDestination_1_TaskName_
  commentId: Overload:ALE.ETLBox.DataFlow.JsonDestination`1.TaskName
  isSpec: "True"
  fullName: ALE.ETLBox.DataFlow.JsonDestination<TInput>.TaskName
  fullName.vb: ALE.ETLBox.DataFlow.JsonDestination(Of TInput).TaskName
  nameWithType: JsonDestination<TInput>.TaskName
  nameWithType.vb: JsonDestination(Of TInput).TaskName
- uid: ALE.ETLBox.DataFlow.JsonDestination`1.WriteIntoStream(`0)
  name: WriteIntoStream(TInput)
  href: api/ALE.ETLBox.DataFlow.JsonDestination-1.html#ALE_ETLBox_DataFlow_JsonDestination_1_WriteIntoStream__0_
  commentId: M:ALE.ETLBox.DataFlow.JsonDestination`1.WriteIntoStream(`0)
  fullName: ALE.ETLBox.DataFlow.JsonDestination<TInput>.WriteIntoStream(TInput)
  fullName.vb: ALE.ETLBox.DataFlow.JsonDestination(Of TInput).WriteIntoStream(TInput)
  nameWithType: JsonDestination<TInput>.WriteIntoStream(TInput)
  nameWithType.vb: JsonDestination(Of TInput).WriteIntoStream(TInput)
- uid: ALE.ETLBox.DataFlow.JsonDestination`1.WriteIntoStream*
  name: WriteIntoStream
  href: api/ALE.ETLBox.DataFlow.JsonDestination-1.html#ALE_ETLBox_DataFlow_JsonDestination_1_WriteIntoStream_
  commentId: Overload:ALE.ETLBox.DataFlow.JsonDestination`1.WriteIntoStream
  isSpec: "True"
  fullName: ALE.ETLBox.DataFlow.JsonDestination<TInput>.WriteIntoStream
  fullName.vb: ALE.ETLBox.DataFlow.JsonDestination(Of TInput).WriteIntoStream
  nameWithType: JsonDestination<TInput>.WriteIntoStream
  nameWithType.vb: JsonDestination(Of TInput).WriteIntoStream
- uid: ALE.ETLBox.DataFlow.JsonSource
  name: JsonSource
  href: api/ALE.ETLBox.DataFlow.JsonSource.html
  commentId: T:ALE.ETLBox.DataFlow.JsonSource
  fullName: ALE.ETLBox.DataFlow.JsonSource
  nameWithType: JsonSource
- uid: ALE.ETLBox.DataFlow.JsonSource.#ctor
  name: JsonSource()
  href: api/ALE.ETLBox.DataFlow.JsonSource.html#ALE_ETLBox_DataFlow_JsonSource__ctor
  commentId: M:ALE.ETLBox.DataFlow.JsonSource.#ctor
  fullName: ALE.ETLBox.DataFlow.JsonSource.JsonSource()
  nameWithType: JsonSource.JsonSource()
- uid: ALE.ETLBox.DataFlow.JsonSource.#ctor(System.String)
  name: JsonSource(String)
  href: api/ALE.ETLBox.DataFlow.JsonSource.html#ALE_ETLBox_DataFlow_JsonSource__ctor_System_String_
  commentId: M:ALE.ETLBox.DataFlow.JsonSource.#ctor(System.String)
  fullName: ALE.ETLBox.DataFlow.JsonSource.JsonSource(System.String)
  nameWithType: JsonSource.JsonSource(String)
- uid: ALE.ETLBox.DataFlow.JsonSource.#ctor(System.String,ALE.ETLBox.DataFlow.ResourceType)
  name: JsonSource(String, ResourceType)
  href: api/ALE.ETLBox.DataFlow.JsonSource.html#ALE_ETLBox_DataFlow_JsonSource__ctor_System_String_ALE_ETLBox_DataFlow_ResourceType_
  commentId: M:ALE.ETLBox.DataFlow.JsonSource.#ctor(System.String,ALE.ETLBox.DataFlow.ResourceType)
  fullName: ALE.ETLBox.DataFlow.JsonSource.JsonSource(System.String, ALE.ETLBox.DataFlow.ResourceType)
  nameWithType: JsonSource.JsonSource(String, ResourceType)
- uid: ALE.ETLBox.DataFlow.JsonSource.#ctor*
  name: JsonSource
  href: api/ALE.ETLBox.DataFlow.JsonSource.html#ALE_ETLBox_DataFlow_JsonSource__ctor_
  commentId: Overload:ALE.ETLBox.DataFlow.JsonSource.#ctor
  isSpec: "True"
  fullName: ALE.ETLBox.DataFlow.JsonSource.JsonSource
  nameWithType: JsonSource.JsonSource
- uid: ALE.ETLBox.DataFlow.JsonSource`1
  name: JsonSource<TOutput>
  href: api/ALE.ETLBox.DataFlow.JsonSource-1.html
  commentId: T:ALE.ETLBox.DataFlow.JsonSource`1
  name.vb: JsonSource(Of TOutput)
  fullName: ALE.ETLBox.DataFlow.JsonSource<TOutput>
  fullName.vb: ALE.ETLBox.DataFlow.JsonSource(Of TOutput)
  nameWithType: JsonSource<TOutput>
  nameWithType.vb: JsonSource(Of TOutput)
- uid: ALE.ETLBox.DataFlow.JsonSource`1.#ctor
  name: JsonSource()
  href: api/ALE.ETLBox.DataFlow.JsonSource-1.html#ALE_ETLBox_DataFlow_JsonSource_1__ctor
  commentId: M:ALE.ETLBox.DataFlow.JsonSource`1.#ctor
  fullName: ALE.ETLBox.DataFlow.JsonSource<TOutput>.JsonSource()
  fullName.vb: ALE.ETLBox.DataFlow.JsonSource(Of TOutput).JsonSource()
  nameWithType: JsonSource<TOutput>.JsonSource()
  nameWithType.vb: JsonSource(Of TOutput).JsonSource()
- uid: ALE.ETLBox.DataFlow.JsonSource`1.#ctor(System.String)
  name: JsonSource(String)
  href: api/ALE.ETLBox.DataFlow.JsonSource-1.html#ALE_ETLBox_DataFlow_JsonSource_1__ctor_System_String_
  commentId: M:ALE.ETLBox.DataFlow.JsonSource`1.#ctor(System.String)
  fullName: ALE.ETLBox.DataFlow.JsonSource<TOutput>.JsonSource(System.String)
  fullName.vb: ALE.ETLBox.DataFlow.JsonSource(Of TOutput).JsonSource(System.String)
  nameWithType: JsonSource<TOutput>.JsonSource(String)
  nameWithType.vb: JsonSource(Of TOutput).JsonSource(String)
- uid: ALE.ETLBox.DataFlow.JsonSource`1.#ctor(System.String,ALE.ETLBox.DataFlow.ResourceType)
  name: JsonSource(String, ResourceType)
  href: api/ALE.ETLBox.DataFlow.JsonSource-1.html#ALE_ETLBox_DataFlow_JsonSource_1__ctor_System_String_ALE_ETLBox_DataFlow_ResourceType_
  commentId: M:ALE.ETLBox.DataFlow.JsonSource`1.#ctor(System.String,ALE.ETLBox.DataFlow.ResourceType)
  fullName: ALE.ETLBox.DataFlow.JsonSource<TOutput>.JsonSource(System.String, ALE.ETLBox.DataFlow.ResourceType)
  fullName.vb: ALE.ETLBox.DataFlow.JsonSource(Of TOutput).JsonSource(System.String, ALE.ETLBox.DataFlow.ResourceType)
  nameWithType: JsonSource<TOutput>.JsonSource(String, ResourceType)
  nameWithType.vb: JsonSource(Of TOutput).JsonSource(String, ResourceType)
- uid: ALE.ETLBox.DataFlow.JsonSource`1.#ctor*
  name: JsonSource
  href: api/ALE.ETLBox.DataFlow.JsonSource-1.html#ALE_ETLBox_DataFlow_JsonSource_1__ctor_
  commentId: Overload:ALE.ETLBox.DataFlow.JsonSource`1.#ctor
  isSpec: "True"
  fullName: ALE.ETLBox.DataFlow.JsonSource<TOutput>.JsonSource
  fullName.vb: ALE.ETLBox.DataFlow.JsonSource(Of TOutput).JsonSource
  nameWithType: JsonSource<TOutput>.JsonSource
  nameWithType.vb: JsonSource(Of TOutput).JsonSource
- uid: ALE.ETLBox.DataFlow.JsonSource`1.CloseReader
  name: CloseReader()
  href: api/ALE.ETLBox.DataFlow.JsonSource-1.html#ALE_ETLBox_DataFlow_JsonSource_1_CloseReader
  commentId: M:ALE.ETLBox.DataFlow.JsonSource`1.CloseReader
  fullName: ALE.ETLBox.DataFlow.JsonSource<TOutput>.CloseReader()
  fullName.vb: ALE.ETLBox.DataFlow.JsonSource(Of TOutput).CloseReader()
  nameWithType: JsonSource<TOutput>.CloseReader()
  nameWithType.vb: JsonSource(Of TOutput).CloseReader()
- uid: ALE.ETLBox.DataFlow.JsonSource`1.CloseReader*
  name: CloseReader
  href: api/ALE.ETLBox.DataFlow.JsonSource-1.html#ALE_ETLBox_DataFlow_JsonSource_1_CloseReader_
  commentId: Overload:ALE.ETLBox.DataFlow.JsonSource`1.CloseReader
  isSpec: "True"
  fullName: ALE.ETLBox.DataFlow.JsonSource<TOutput>.CloseReader
  fullName.vb: ALE.ETLBox.DataFlow.JsonSource(Of TOutput).CloseReader
  nameWithType: JsonSource<TOutput>.CloseReader
  nameWithType.vb: JsonSource(Of TOutput).CloseReader
- uid: ALE.ETLBox.DataFlow.JsonSource`1.InitReader
  name: InitReader()
  href: api/ALE.ETLBox.DataFlow.JsonSource-1.html#ALE_ETLBox_DataFlow_JsonSource_1_InitReader
  commentId: M:ALE.ETLBox.DataFlow.JsonSource`1.InitReader
  fullName: ALE.ETLBox.DataFlow.JsonSource<TOutput>.InitReader()
  fullName.vb: ALE.ETLBox.DataFlow.JsonSource(Of TOutput).InitReader()
  nameWithType: JsonSource<TOutput>.InitReader()
  nameWithType.vb: JsonSource(Of TOutput).InitReader()
- uid: ALE.ETLBox.DataFlow.JsonSource`1.InitReader*
  name: InitReader
  href: api/ALE.ETLBox.DataFlow.JsonSource-1.html#ALE_ETLBox_DataFlow_JsonSource_1_InitReader_
  commentId: Overload:ALE.ETLBox.DataFlow.JsonSource`1.InitReader
  isSpec: "True"
  fullName: ALE.ETLBox.DataFlow.JsonSource<TOutput>.InitReader
  fullName.vb: ALE.ETLBox.DataFlow.JsonSource(Of TOutput).InitReader
  nameWithType: JsonSource<TOutput>.InitReader
  nameWithType.vb: JsonSource(Of TOutput).InitReader
- uid: ALE.ETLBox.DataFlow.JsonSource`1.JsonSerializer
  name: JsonSerializer
  href: api/ALE.ETLBox.DataFlow.JsonSource-1.html#ALE_ETLBox_DataFlow_JsonSource_1_JsonSerializer
  commentId: P:ALE.ETLBox.DataFlow.JsonSource`1.JsonSerializer
  fullName: ALE.ETLBox.DataFlow.JsonSource<TOutput>.JsonSerializer
  fullName.vb: ALE.ETLBox.DataFlow.JsonSource(Of TOutput).JsonSerializer
  nameWithType: JsonSource<TOutput>.JsonSerializer
  nameWithType.vb: JsonSource(Of TOutput).JsonSerializer
- uid: ALE.ETLBox.DataFlow.JsonSource`1.JsonSerializer*
  name: JsonSerializer
  href: api/ALE.ETLBox.DataFlow.JsonSource-1.html#ALE_ETLBox_DataFlow_JsonSource_1_JsonSerializer_
  commentId: Overload:ALE.ETLBox.DataFlow.JsonSource`1.JsonSerializer
  isSpec: "True"
  fullName: ALE.ETLBox.DataFlow.JsonSource<TOutput>.JsonSerializer
  fullName.vb: ALE.ETLBox.DataFlow.JsonSource(Of TOutput).JsonSerializer
  nameWithType: JsonSource<TOutput>.JsonSerializer
  nameWithType.vb: JsonSource(Of TOutput).JsonSerializer
- uid: ALE.ETLBox.DataFlow.JsonSource`1.ReadAll
  name: ReadAll()
  href: api/ALE.ETLBox.DataFlow.JsonSource-1.html#ALE_ETLBox_DataFlow_JsonSource_1_ReadAll
  commentId: M:ALE.ETLBox.DataFlow.JsonSource`1.ReadAll
  fullName: ALE.ETLBox.DataFlow.JsonSource<TOutput>.ReadAll()
  fullName.vb: ALE.ETLBox.DataFlow.JsonSource(Of TOutput).ReadAll()
  nameWithType: JsonSource<TOutput>.ReadAll()
  nameWithType.vb: JsonSource(Of TOutput).ReadAll()
- uid: ALE.ETLBox.DataFlow.JsonSource`1.ReadAll*
  name: ReadAll
  href: api/ALE.ETLBox.DataFlow.JsonSource-1.html#ALE_ETLBox_DataFlow_JsonSource_1_ReadAll_
  commentId: Overload:ALE.ETLBox.DataFlow.JsonSource`1.ReadAll
  isSpec: "True"
  fullName: ALE.ETLBox.DataFlow.JsonSource<TOutput>.ReadAll
  fullName.vb: ALE.ETLBox.DataFlow.JsonSource(Of TOutput).ReadAll
  nameWithType: JsonSource<TOutput>.ReadAll
  nameWithType.vb: JsonSource(Of TOutput).ReadAll
- uid: ALE.ETLBox.DataFlow.JsonSource`1.TaskName
  name: TaskName
  href: api/ALE.ETLBox.DataFlow.JsonSource-1.html#ALE_ETLBox_DataFlow_JsonSource_1_TaskName
  commentId: P:ALE.ETLBox.DataFlow.JsonSource`1.TaskName
  fullName: ALE.ETLBox.DataFlow.JsonSource<TOutput>.TaskName
  fullName.vb: ALE.ETLBox.DataFlow.JsonSource(Of TOutput).TaskName
  nameWithType: JsonSource<TOutput>.TaskName
  nameWithType.vb: JsonSource(Of TOutput).TaskName
- uid: ALE.ETLBox.DataFlow.JsonSource`1.TaskName*
  name: TaskName
  href: api/ALE.ETLBox.DataFlow.JsonSource-1.html#ALE_ETLBox_DataFlow_JsonSource_1_TaskName_
  commentId: Overload:ALE.ETLBox.DataFlow.JsonSource`1.TaskName
  isSpec: "True"
  fullName: ALE.ETLBox.DataFlow.JsonSource<TOutput>.TaskName
  fullName.vb: ALE.ETLBox.DataFlow.JsonSource(Of TOutput).TaskName
  nameWithType: JsonSource<TOutput>.TaskName
  nameWithType.vb: JsonSource(Of TOutput).TaskName
- uid: ALE.ETLBox.DataFlow.LookupTransformation
  name: LookupTransformation
  href: api/ALE.ETLBox.DataFlow.LookupTransformation.html
  commentId: T:ALE.ETLBox.DataFlow.LookupTransformation
  fullName: ALE.ETLBox.DataFlow.LookupTransformation
  nameWithType: LookupTransformation
- uid: ALE.ETLBox.DataFlow.LookupTransformation.#ctor
  name: LookupTransformation()
  href: api/ALE.ETLBox.DataFlow.LookupTransformation.html#ALE_ETLBox_DataFlow_LookupTransformation__ctor
  commentId: M:ALE.ETLBox.DataFlow.LookupTransformation.#ctor
  fullName: ALE.ETLBox.DataFlow.LookupTransformation.LookupTransformation()
  nameWithType: LookupTransformation.LookupTransformation()
- uid: ALE.ETLBox.DataFlow.LookupTransformation.#ctor(ALE.ETLBox.DataFlow.IDataFlowSource{System.Dynamic.ExpandoObject})
  name: LookupTransformation(IDataFlowSource<ExpandoObject>)
  href: api/ALE.ETLBox.DataFlow.LookupTransformation.html#ALE_ETLBox_DataFlow_LookupTransformation__ctor_ALE_ETLBox_DataFlow_IDataFlowSource_System_Dynamic_ExpandoObject__
  commentId: M:ALE.ETLBox.DataFlow.LookupTransformation.#ctor(ALE.ETLBox.DataFlow.IDataFlowSource{System.Dynamic.ExpandoObject})
  name.vb: LookupTransformation(IDataFlowSource(Of ExpandoObject))
  fullName: ALE.ETLBox.DataFlow.LookupTransformation.LookupTransformation(ALE.ETLBox.DataFlow.IDataFlowSource<System.Dynamic.ExpandoObject>)
  fullName.vb: ALE.ETLBox.DataFlow.LookupTransformation.LookupTransformation(ALE.ETLBox.DataFlow.IDataFlowSource(Of System.Dynamic.ExpandoObject))
  nameWithType: LookupTransformation.LookupTransformation(IDataFlowSource<ExpandoObject>)
  nameWithType.vb: LookupTransformation.LookupTransformation(IDataFlowSource(Of ExpandoObject))
- uid: ALE.ETLBox.DataFlow.LookupTransformation.#ctor(ALE.ETLBox.DataFlow.IDataFlowSource{System.Dynamic.ExpandoObject},System.Func{System.Dynamic.ExpandoObject,System.Dynamic.ExpandoObject})
  name: LookupTransformation(IDataFlowSource<ExpandoObject>, Func<ExpandoObject, ExpandoObject>)
  href: api/ALE.ETLBox.DataFlow.LookupTransformation.html#ALE_ETLBox_DataFlow_LookupTransformation__ctor_ALE_ETLBox_DataFlow_IDataFlowSource_System_Dynamic_ExpandoObject__System_Func_System_Dynamic_ExpandoObject_System_Dynamic_ExpandoObject__
  commentId: M:ALE.ETLBox.DataFlow.LookupTransformation.#ctor(ALE.ETLBox.DataFlow.IDataFlowSource{System.Dynamic.ExpandoObject},System.Func{System.Dynamic.ExpandoObject,System.Dynamic.ExpandoObject})
  name.vb: LookupTransformation(IDataFlowSource(Of ExpandoObject), Func(Of ExpandoObject, ExpandoObject))
  fullName: ALE.ETLBox.DataFlow.LookupTransformation.LookupTransformation(ALE.ETLBox.DataFlow.IDataFlowSource<System.Dynamic.ExpandoObject>, System.Func<System.Dynamic.ExpandoObject, System.Dynamic.ExpandoObject>)
  fullName.vb: ALE.ETLBox.DataFlow.LookupTransformation.LookupTransformation(ALE.ETLBox.DataFlow.IDataFlowSource(Of System.Dynamic.ExpandoObject), System.Func(Of System.Dynamic.ExpandoObject, System.Dynamic.ExpandoObject))
  nameWithType: LookupTransformation.LookupTransformation(IDataFlowSource<ExpandoObject>, Func<ExpandoObject, ExpandoObject>)
  nameWithType.vb: LookupTransformation.LookupTransformation(IDataFlowSource(Of ExpandoObject), Func(Of ExpandoObject, ExpandoObject))
- uid: ALE.ETLBox.DataFlow.LookupTransformation.#ctor(ALE.ETLBox.DataFlow.IDataFlowSource{System.Dynamic.ExpandoObject},System.Func{System.Dynamic.ExpandoObject,System.Dynamic.ExpandoObject},System.Collections.Generic.List{System.Dynamic.ExpandoObject})
  name: LookupTransformation(IDataFlowSource<ExpandoObject>, Func<ExpandoObject, ExpandoObject>, List<ExpandoObject>)
  href: api/ALE.ETLBox.DataFlow.LookupTransformation.html#ALE_ETLBox_DataFlow_LookupTransformation__ctor_ALE_ETLBox_DataFlow_IDataFlowSource_System_Dynamic_ExpandoObject__System_Func_System_Dynamic_ExpandoObject_System_Dynamic_ExpandoObject__System_Collections_Generic_List_System_Dynamic_ExpandoObject__
  commentId: M:ALE.ETLBox.DataFlow.LookupTransformation.#ctor(ALE.ETLBox.DataFlow.IDataFlowSource{System.Dynamic.ExpandoObject},System.Func{System.Dynamic.ExpandoObject,System.Dynamic.ExpandoObject},System.Collections.Generic.List{System.Dynamic.ExpandoObject})
  name.vb: LookupTransformation(IDataFlowSource(Of ExpandoObject), Func(Of ExpandoObject, ExpandoObject), List(Of ExpandoObject))
  fullName: ALE.ETLBox.DataFlow.LookupTransformation.LookupTransformation(ALE.ETLBox.DataFlow.IDataFlowSource<System.Dynamic.ExpandoObject>, System.Func<System.Dynamic.ExpandoObject, System.Dynamic.ExpandoObject>, System.Collections.Generic.List<System.Dynamic.ExpandoObject>)
  fullName.vb: ALE.ETLBox.DataFlow.LookupTransformation.LookupTransformation(ALE.ETLBox.DataFlow.IDataFlowSource(Of System.Dynamic.ExpandoObject), System.Func(Of System.Dynamic.ExpandoObject, System.Dynamic.ExpandoObject), System.Collections.Generic.List(Of System.Dynamic.ExpandoObject))
  nameWithType: LookupTransformation.LookupTransformation(IDataFlowSource<ExpandoObject>, Func<ExpandoObject, ExpandoObject>, List<ExpandoObject>)
  nameWithType.vb: LookupTransformation.LookupTransformation(IDataFlowSource(Of ExpandoObject), Func(Of ExpandoObject, ExpandoObject), List(Of ExpandoObject))
- uid: ALE.ETLBox.DataFlow.LookupTransformation.#ctor*
  name: LookupTransformation
  href: api/ALE.ETLBox.DataFlow.LookupTransformation.html#ALE_ETLBox_DataFlow_LookupTransformation__ctor_
  commentId: Overload:ALE.ETLBox.DataFlow.LookupTransformation.#ctor
  isSpec: "True"
  fullName: ALE.ETLBox.DataFlow.LookupTransformation.LookupTransformation
  nameWithType: LookupTransformation.LookupTransformation
- uid: ALE.ETLBox.DataFlow.LookupTransformation`2
  name: LookupTransformation<TInput, TSourceOutput>
  href: api/ALE.ETLBox.DataFlow.LookupTransformation-2.html
  commentId: T:ALE.ETLBox.DataFlow.LookupTransformation`2
  name.vb: LookupTransformation(Of TInput, TSourceOutput)
  fullName: ALE.ETLBox.DataFlow.LookupTransformation<TInput, TSourceOutput>
  fullName.vb: ALE.ETLBox.DataFlow.LookupTransformation(Of TInput, TSourceOutput)
  nameWithType: LookupTransformation<TInput, TSourceOutput>
  nameWithType.vb: LookupTransformation(Of TInput, TSourceOutput)
- uid: ALE.ETLBox.DataFlow.LookupTransformation`2.#ctor
  name: LookupTransformation()
  href: api/ALE.ETLBox.DataFlow.LookupTransformation-2.html#ALE_ETLBox_DataFlow_LookupTransformation_2__ctor
  commentId: M:ALE.ETLBox.DataFlow.LookupTransformation`2.#ctor
  fullName: ALE.ETLBox.DataFlow.LookupTransformation<TInput, TSourceOutput>.LookupTransformation()
  fullName.vb: ALE.ETLBox.DataFlow.LookupTransformation(Of TInput, TSourceOutput).LookupTransformation()
  nameWithType: LookupTransformation<TInput, TSourceOutput>.LookupTransformation()
  nameWithType.vb: LookupTransformation(Of TInput, TSourceOutput).LookupTransformation()
- uid: ALE.ETLBox.DataFlow.LookupTransformation`2.#ctor(ALE.ETLBox.DataFlow.IDataFlowSource{`1})
  name: LookupTransformation(IDataFlowSource<TSourceOutput>)
  href: api/ALE.ETLBox.DataFlow.LookupTransformation-2.html#ALE_ETLBox_DataFlow_LookupTransformation_2__ctor_ALE_ETLBox_DataFlow_IDataFlowSource__1__
  commentId: M:ALE.ETLBox.DataFlow.LookupTransformation`2.#ctor(ALE.ETLBox.DataFlow.IDataFlowSource{`1})
  name.vb: LookupTransformation(IDataFlowSource(Of TSourceOutput))
  fullName: ALE.ETLBox.DataFlow.LookupTransformation<TInput, TSourceOutput>.LookupTransformation(ALE.ETLBox.DataFlow.IDataFlowSource<TSourceOutput>)
  fullName.vb: ALE.ETLBox.DataFlow.LookupTransformation(Of TInput, TSourceOutput).LookupTransformation(ALE.ETLBox.DataFlow.IDataFlowSource(Of TSourceOutput))
  nameWithType: LookupTransformation<TInput, TSourceOutput>.LookupTransformation(IDataFlowSource<TSourceOutput>)
  nameWithType.vb: LookupTransformation(Of TInput, TSourceOutput).LookupTransformation(IDataFlowSource(Of TSourceOutput))
- uid: ALE.ETLBox.DataFlow.LookupTransformation`2.#ctor(ALE.ETLBox.DataFlow.IDataFlowSource{`1},System.Func{`0,`0})
  name: LookupTransformation(IDataFlowSource<TSourceOutput>, Func<TInput, TInput>)
  href: api/ALE.ETLBox.DataFlow.LookupTransformation-2.html#ALE_ETLBox_DataFlow_LookupTransformation_2__ctor_ALE_ETLBox_DataFlow_IDataFlowSource__1__System_Func__0__0__
  commentId: M:ALE.ETLBox.DataFlow.LookupTransformation`2.#ctor(ALE.ETLBox.DataFlow.IDataFlowSource{`1},System.Func{`0,`0})
  name.vb: LookupTransformation(IDataFlowSource(Of TSourceOutput), Func(Of TInput, TInput))
  fullName: ALE.ETLBox.DataFlow.LookupTransformation<TInput, TSourceOutput>.LookupTransformation(ALE.ETLBox.DataFlow.IDataFlowSource<TSourceOutput>, System.Func<TInput, TInput>)
  fullName.vb: ALE.ETLBox.DataFlow.LookupTransformation(Of TInput, TSourceOutput).LookupTransformation(ALE.ETLBox.DataFlow.IDataFlowSource(Of TSourceOutput), System.Func(Of TInput, TInput))
  nameWithType: LookupTransformation<TInput, TSourceOutput>.LookupTransformation(IDataFlowSource<TSourceOutput>, Func<TInput, TInput>)
  nameWithType.vb: LookupTransformation(Of TInput, TSourceOutput).LookupTransformation(IDataFlowSource(Of TSourceOutput), Func(Of TInput, TInput))
- uid: ALE.ETLBox.DataFlow.LookupTransformation`2.#ctor(ALE.ETLBox.DataFlow.IDataFlowSource{`1},System.Func{`0,`0},System.Collections.Generic.List{`1})
  name: LookupTransformation(IDataFlowSource<TSourceOutput>, Func<TInput, TInput>, List<TSourceOutput>)
  href: api/ALE.ETLBox.DataFlow.LookupTransformation-2.html#ALE_ETLBox_DataFlow_LookupTransformation_2__ctor_ALE_ETLBox_DataFlow_IDataFlowSource__1__System_Func__0__0__System_Collections_Generic_List__1__
  commentId: M:ALE.ETLBox.DataFlow.LookupTransformation`2.#ctor(ALE.ETLBox.DataFlow.IDataFlowSource{`1},System.Func{`0,`0},System.Collections.Generic.List{`1})
  name.vb: LookupTransformation(IDataFlowSource(Of TSourceOutput), Func(Of TInput, TInput), List(Of TSourceOutput))
  fullName: ALE.ETLBox.DataFlow.LookupTransformation<TInput, TSourceOutput>.LookupTransformation(ALE.ETLBox.DataFlow.IDataFlowSource<TSourceOutput>, System.Func<TInput, TInput>, System.Collections.Generic.List<TSourceOutput>)
  fullName.vb: ALE.ETLBox.DataFlow.LookupTransformation(Of TInput, TSourceOutput).LookupTransformation(ALE.ETLBox.DataFlow.IDataFlowSource(Of TSourceOutput), System.Func(Of TInput, TInput), System.Collections.Generic.List(Of TSourceOutput))
  nameWithType: LookupTransformation<TInput, TSourceOutput>.LookupTransformation(IDataFlowSource<TSourceOutput>, Func<TInput, TInput>, List<TSourceOutput>)
  nameWithType.vb: LookupTransformation(Of TInput, TSourceOutput).LookupTransformation(IDataFlowSource(Of TSourceOutput), Func(Of TInput, TInput), List(Of TSourceOutput))
- uid: ALE.ETLBox.DataFlow.LookupTransformation`2.#ctor*
  name: LookupTransformation
  href: api/ALE.ETLBox.DataFlow.LookupTransformation-2.html#ALE_ETLBox_DataFlow_LookupTransformation_2__ctor_
  commentId: Overload:ALE.ETLBox.DataFlow.LookupTransformation`2.#ctor
  isSpec: "True"
  fullName: ALE.ETLBox.DataFlow.LookupTransformation<TInput, TSourceOutput>.LookupTransformation
  fullName.vb: ALE.ETLBox.DataFlow.LookupTransformation(Of TInput, TSourceOutput).LookupTransformation
  nameWithType: LookupTransformation<TInput, TSourceOutput>.LookupTransformation
  nameWithType.vb: LookupTransformation(Of TInput, TSourceOutput).LookupTransformation
- uid: ALE.ETLBox.DataFlow.LookupTransformation`2.LinkLookupSourceErrorTo(ALE.ETLBox.DataFlow.IDataFlowLinkTarget{ALE.ETLBox.DataFlow.ETLBoxError})
  name: LinkLookupSourceErrorTo(IDataFlowLinkTarget<ETLBoxError>)
  href: api/ALE.ETLBox.DataFlow.LookupTransformation-2.html#ALE_ETLBox_DataFlow_LookupTransformation_2_LinkLookupSourceErrorTo_ALE_ETLBox_DataFlow_IDataFlowLinkTarget_ALE_ETLBox_DataFlow_ETLBoxError__
  commentId: M:ALE.ETLBox.DataFlow.LookupTransformation`2.LinkLookupSourceErrorTo(ALE.ETLBox.DataFlow.IDataFlowLinkTarget{ALE.ETLBox.DataFlow.ETLBoxError})
  name.vb: LinkLookupSourceErrorTo(IDataFlowLinkTarget(Of ETLBoxError))
  fullName: ALE.ETLBox.DataFlow.LookupTransformation<TInput, TSourceOutput>.LinkLookupSourceErrorTo(ALE.ETLBox.DataFlow.IDataFlowLinkTarget<ALE.ETLBox.DataFlow.ETLBoxError>)
  fullName.vb: ALE.ETLBox.DataFlow.LookupTransformation(Of TInput, TSourceOutput).LinkLookupSourceErrorTo(ALE.ETLBox.DataFlow.IDataFlowLinkTarget(Of ALE.ETLBox.DataFlow.ETLBoxError))
  nameWithType: LookupTransformation<TInput, TSourceOutput>.LinkLookupSourceErrorTo(IDataFlowLinkTarget<ETLBoxError>)
  nameWithType.vb: LookupTransformation(Of TInput, TSourceOutput).LinkLookupSourceErrorTo(IDataFlowLinkTarget(Of ETLBoxError))
- uid: ALE.ETLBox.DataFlow.LookupTransformation`2.LinkLookupSourceErrorTo*
  name: LinkLookupSourceErrorTo
  href: api/ALE.ETLBox.DataFlow.LookupTransformation-2.html#ALE_ETLBox_DataFlow_LookupTransformation_2_LinkLookupSourceErrorTo_
  commentId: Overload:ALE.ETLBox.DataFlow.LookupTransformation`2.LinkLookupSourceErrorTo
  isSpec: "True"
  fullName: ALE.ETLBox.DataFlow.LookupTransformation<TInput, TSourceOutput>.LinkLookupSourceErrorTo
  fullName.vb: ALE.ETLBox.DataFlow.LookupTransformation(Of TInput, TSourceOutput).LinkLookupSourceErrorTo
  nameWithType: LookupTransformation<TInput, TSourceOutput>.LinkLookupSourceErrorTo
  nameWithType.vb: LookupTransformation(Of TInput, TSourceOutput).LinkLookupSourceErrorTo
- uid: ALE.ETLBox.DataFlow.LookupTransformation`2.LinkLookupTransformationErrorTo(ALE.ETLBox.DataFlow.IDataFlowLinkTarget{ALE.ETLBox.DataFlow.ETLBoxError})
  name: LinkLookupTransformationErrorTo(IDataFlowLinkTarget<ETLBoxError>)
  href: api/ALE.ETLBox.DataFlow.LookupTransformation-2.html#ALE_ETLBox_DataFlow_LookupTransformation_2_LinkLookupTransformationErrorTo_ALE_ETLBox_DataFlow_IDataFlowLinkTarget_ALE_ETLBox_DataFlow_ETLBoxError__
  commentId: M:ALE.ETLBox.DataFlow.LookupTransformation`2.LinkLookupTransformationErrorTo(ALE.ETLBox.DataFlow.IDataFlowLinkTarget{ALE.ETLBox.DataFlow.ETLBoxError})
  name.vb: LinkLookupTransformationErrorTo(IDataFlowLinkTarget(Of ETLBoxError))
  fullName: ALE.ETLBox.DataFlow.LookupTransformation<TInput, TSourceOutput>.LinkLookupTransformationErrorTo(ALE.ETLBox.DataFlow.IDataFlowLinkTarget<ALE.ETLBox.DataFlow.ETLBoxError>)
  fullName.vb: ALE.ETLBox.DataFlow.LookupTransformation(Of TInput, TSourceOutput).LinkLookupTransformationErrorTo(ALE.ETLBox.DataFlow.IDataFlowLinkTarget(Of ALE.ETLBox.DataFlow.ETLBoxError))
  nameWithType: LookupTransformation<TInput, TSourceOutput>.LinkLookupTransformationErrorTo(IDataFlowLinkTarget<ETLBoxError>)
  nameWithType.vb: LookupTransformation(Of TInput, TSourceOutput).LinkLookupTransformationErrorTo(IDataFlowLinkTarget(Of ETLBoxError))
- uid: ALE.ETLBox.DataFlow.LookupTransformation`2.LinkLookupTransformationErrorTo*
  name: LinkLookupTransformationErrorTo
  href: api/ALE.ETLBox.DataFlow.LookupTransformation-2.html#ALE_ETLBox_DataFlow_LookupTransformation_2_LinkLookupTransformationErrorTo_
  commentId: Overload:ALE.ETLBox.DataFlow.LookupTransformation`2.LinkLookupTransformationErrorTo
  isSpec: "True"
  fullName: ALE.ETLBox.DataFlow.LookupTransformation<TInput, TSourceOutput>.LinkLookupTransformationErrorTo
  fullName.vb: ALE.ETLBox.DataFlow.LookupTransformation(Of TInput, TSourceOutput).LinkLookupTransformationErrorTo
  nameWithType: LookupTransformation<TInput, TSourceOutput>.LinkLookupTransformationErrorTo
  nameWithType.vb: LookupTransformation(Of TInput, TSourceOutput).LinkLookupTransformationErrorTo
- uid: ALE.ETLBox.DataFlow.LookupTransformation`2.LookupData
  name: LookupData
  href: api/ALE.ETLBox.DataFlow.LookupTransformation-2.html#ALE_ETLBox_DataFlow_LookupTransformation_2_LookupData
  commentId: P:ALE.ETLBox.DataFlow.LookupTransformation`2.LookupData
  fullName: ALE.ETLBox.DataFlow.LookupTransformation<TInput, TSourceOutput>.LookupData
  fullName.vb: ALE.ETLBox.DataFlow.LookupTransformation(Of TInput, TSourceOutput).LookupData
  nameWithType: LookupTransformation<TInput, TSourceOutput>.LookupData
  nameWithType.vb: LookupTransformation(Of TInput, TSourceOutput).LookupData
- uid: ALE.ETLBox.DataFlow.LookupTransformation`2.LookupData*
  name: LookupData
  href: api/ALE.ETLBox.DataFlow.LookupTransformation-2.html#ALE_ETLBox_DataFlow_LookupTransformation_2_LookupData_
  commentId: Overload:ALE.ETLBox.DataFlow.LookupTransformation`2.LookupData
  isSpec: "True"
  fullName: ALE.ETLBox.DataFlow.LookupTransformation<TInput, TSourceOutput>.LookupData
  fullName.vb: ALE.ETLBox.DataFlow.LookupTransformation(Of TInput, TSourceOutput).LookupData
  nameWithType: LookupTransformation<TInput, TSourceOutput>.LookupData
  nameWithType.vb: LookupTransformation(Of TInput, TSourceOutput).LookupData
- uid: ALE.ETLBox.DataFlow.LookupTransformation`2.Source
  name: Source
  href: api/ALE.ETLBox.DataFlow.LookupTransformation-2.html#ALE_ETLBox_DataFlow_LookupTransformation_2_Source
  commentId: P:ALE.ETLBox.DataFlow.LookupTransformation`2.Source
  fullName: ALE.ETLBox.DataFlow.LookupTransformation<TInput, TSourceOutput>.Source
  fullName.vb: ALE.ETLBox.DataFlow.LookupTransformation(Of TInput, TSourceOutput).Source
  nameWithType: LookupTransformation<TInput, TSourceOutput>.Source
  nameWithType.vb: LookupTransformation(Of TInput, TSourceOutput).Source
- uid: ALE.ETLBox.DataFlow.LookupTransformation`2.Source*
  name: Source
  href: api/ALE.ETLBox.DataFlow.LookupTransformation-2.html#ALE_ETLBox_DataFlow_LookupTransformation_2_Source_
  commentId: Overload:ALE.ETLBox.DataFlow.LookupTransformation`2.Source
  isSpec: "True"
  fullName: ALE.ETLBox.DataFlow.LookupTransformation<TInput, TSourceOutput>.Source
  fullName.vb: ALE.ETLBox.DataFlow.LookupTransformation(Of TInput, TSourceOutput).Source
  nameWithType: LookupTransformation<TInput, TSourceOutput>.Source
  nameWithType.vb: LookupTransformation(Of TInput, TSourceOutput).Source
- uid: ALE.ETLBox.DataFlow.LookupTransformation`2.SourceBlock
  name: SourceBlock
  href: api/ALE.ETLBox.DataFlow.LookupTransformation-2.html#ALE_ETLBox_DataFlow_LookupTransformation_2_SourceBlock
  commentId: P:ALE.ETLBox.DataFlow.LookupTransformation`2.SourceBlock
  fullName: ALE.ETLBox.DataFlow.LookupTransformation<TInput, TSourceOutput>.SourceBlock
  fullName.vb: ALE.ETLBox.DataFlow.LookupTransformation(Of TInput, TSourceOutput).SourceBlock
  nameWithType: LookupTransformation<TInput, TSourceOutput>.SourceBlock
  nameWithType.vb: LookupTransformation(Of TInput, TSourceOutput).SourceBlock
- uid: ALE.ETLBox.DataFlow.LookupTransformation`2.SourceBlock*
  name: SourceBlock
  href: api/ALE.ETLBox.DataFlow.LookupTransformation-2.html#ALE_ETLBox_DataFlow_LookupTransformation_2_SourceBlock_
  commentId: Overload:ALE.ETLBox.DataFlow.LookupTransformation`2.SourceBlock
  isSpec: "True"
  fullName: ALE.ETLBox.DataFlow.LookupTransformation<TInput, TSourceOutput>.SourceBlock
  fullName.vb: ALE.ETLBox.DataFlow.LookupTransformation(Of TInput, TSourceOutput).SourceBlock
  nameWithType: LookupTransformation<TInput, TSourceOutput>.SourceBlock
  nameWithType.vb: LookupTransformation(Of TInput, TSourceOutput).SourceBlock
- uid: ALE.ETLBox.DataFlow.LookupTransformation`2.TargetBlock
  name: TargetBlock
  href: api/ALE.ETLBox.DataFlow.LookupTransformation-2.html#ALE_ETLBox_DataFlow_LookupTransformation_2_TargetBlock
  commentId: P:ALE.ETLBox.DataFlow.LookupTransformation`2.TargetBlock
  fullName: ALE.ETLBox.DataFlow.LookupTransformation<TInput, TSourceOutput>.TargetBlock
  fullName.vb: ALE.ETLBox.DataFlow.LookupTransformation(Of TInput, TSourceOutput).TargetBlock
  nameWithType: LookupTransformation<TInput, TSourceOutput>.TargetBlock
  nameWithType.vb: LookupTransformation(Of TInput, TSourceOutput).TargetBlock
- uid: ALE.ETLBox.DataFlow.LookupTransformation`2.TargetBlock*
  name: TargetBlock
  href: api/ALE.ETLBox.DataFlow.LookupTransformation-2.html#ALE_ETLBox_DataFlow_LookupTransformation_2_TargetBlock_
  commentId: Overload:ALE.ETLBox.DataFlow.LookupTransformation`2.TargetBlock
  isSpec: "True"
  fullName: ALE.ETLBox.DataFlow.LookupTransformation<TInput, TSourceOutput>.TargetBlock
  fullName.vb: ALE.ETLBox.DataFlow.LookupTransformation(Of TInput, TSourceOutput).TargetBlock
  nameWithType: LookupTransformation<TInput, TSourceOutput>.TargetBlock
  nameWithType.vb: LookupTransformation(Of TInput, TSourceOutput).TargetBlock
- uid: ALE.ETLBox.DataFlow.LookupTransformation`2.TaskName
  name: TaskName
  href: api/ALE.ETLBox.DataFlow.LookupTransformation-2.html#ALE_ETLBox_DataFlow_LookupTransformation_2_TaskName
  commentId: P:ALE.ETLBox.DataFlow.LookupTransformation`2.TaskName
  fullName: ALE.ETLBox.DataFlow.LookupTransformation<TInput, TSourceOutput>.TaskName
  fullName.vb: ALE.ETLBox.DataFlow.LookupTransformation(Of TInput, TSourceOutput).TaskName
  nameWithType: LookupTransformation<TInput, TSourceOutput>.TaskName
  nameWithType.vb: LookupTransformation(Of TInput, TSourceOutput).TaskName
- uid: ALE.ETLBox.DataFlow.LookupTransformation`2.TaskName*
  name: TaskName
  href: api/ALE.ETLBox.DataFlow.LookupTransformation-2.html#ALE_ETLBox_DataFlow_LookupTransformation_2_TaskName_
  commentId: Overload:ALE.ETLBox.DataFlow.LookupTransformation`2.TaskName
  isSpec: "True"
  fullName: ALE.ETLBox.DataFlow.LookupTransformation<TInput, TSourceOutput>.TaskName
  fullName.vb: ALE.ETLBox.DataFlow.LookupTransformation(Of TInput, TSourceOutput).TaskName
  nameWithType: LookupTransformation<TInput, TSourceOutput>.TaskName
  nameWithType.vb: LookupTransformation(Of TInput, TSourceOutput).TaskName
- uid: ALE.ETLBox.DataFlow.LookupTransformation`2.TransformationFunc
  name: TransformationFunc
  href: api/ALE.ETLBox.DataFlow.LookupTransformation-2.html#ALE_ETLBox_DataFlow_LookupTransformation_2_TransformationFunc
  commentId: P:ALE.ETLBox.DataFlow.LookupTransformation`2.TransformationFunc
  fullName: ALE.ETLBox.DataFlow.LookupTransformation<TInput, TSourceOutput>.TransformationFunc
  fullName.vb: ALE.ETLBox.DataFlow.LookupTransformation(Of TInput, TSourceOutput).TransformationFunc
  nameWithType: LookupTransformation<TInput, TSourceOutput>.TransformationFunc
  nameWithType.vb: LookupTransformation(Of TInput, TSourceOutput).TransformationFunc
- uid: ALE.ETLBox.DataFlow.LookupTransformation`2.TransformationFunc*
  name: TransformationFunc
  href: api/ALE.ETLBox.DataFlow.LookupTransformation-2.html#ALE_ETLBox_DataFlow_LookupTransformation_2_TransformationFunc_
  commentId: Overload:ALE.ETLBox.DataFlow.LookupTransformation`2.TransformationFunc
  isSpec: "True"
  fullName: ALE.ETLBox.DataFlow.LookupTransformation<TInput, TSourceOutput>.TransformationFunc
  fullName.vb: ALE.ETLBox.DataFlow.LookupTransformation(Of TInput, TSourceOutput).TransformationFunc
  nameWithType: LookupTransformation<TInput, TSourceOutput>.TransformationFunc
  nameWithType.vb: LookupTransformation(Of TInput, TSourceOutput).TransformationFunc
- uid: ALE.ETLBox.DataFlow.MatchColumn
  name: MatchColumn
  href: api/ALE.ETLBox.DataFlow.MatchColumn.html
  commentId: T:ALE.ETLBox.DataFlow.MatchColumn
  fullName: ALE.ETLBox.DataFlow.MatchColumn
  nameWithType: MatchColumn
- uid: ALE.ETLBox.DataFlow.MatchColumn.#ctor(System.String)
  name: MatchColumn(String)
  href: api/ALE.ETLBox.DataFlow.MatchColumn.html#ALE_ETLBox_DataFlow_MatchColumn__ctor_System_String_
  commentId: M:ALE.ETLBox.DataFlow.MatchColumn.#ctor(System.String)
  fullName: ALE.ETLBox.DataFlow.MatchColumn.MatchColumn(System.String)
  nameWithType: MatchColumn.MatchColumn(String)
- uid: ALE.ETLBox.DataFlow.MatchColumn.#ctor*
  name: MatchColumn
  href: api/ALE.ETLBox.DataFlow.MatchColumn.html#ALE_ETLBox_DataFlow_MatchColumn__ctor_
  commentId: Overload:ALE.ETLBox.DataFlow.MatchColumn.#ctor
  isSpec: "True"
  fullName: ALE.ETLBox.DataFlow.MatchColumn.MatchColumn
  nameWithType: MatchColumn.MatchColumn
- uid: ALE.ETLBox.DataFlow.MatchColumn.LookupSourcePropertyName
  name: LookupSourcePropertyName
  href: api/ALE.ETLBox.DataFlow.MatchColumn.html#ALE_ETLBox_DataFlow_MatchColumn_LookupSourcePropertyName
  commentId: P:ALE.ETLBox.DataFlow.MatchColumn.LookupSourcePropertyName
  fullName: ALE.ETLBox.DataFlow.MatchColumn.LookupSourcePropertyName
  nameWithType: MatchColumn.LookupSourcePropertyName
- uid: ALE.ETLBox.DataFlow.MatchColumn.LookupSourcePropertyName*
  name: LookupSourcePropertyName
  href: api/ALE.ETLBox.DataFlow.MatchColumn.html#ALE_ETLBox_DataFlow_MatchColumn_LookupSourcePropertyName_
  commentId: Overload:ALE.ETLBox.DataFlow.MatchColumn.LookupSourcePropertyName
  isSpec: "True"
  fullName: ALE.ETLBox.DataFlow.MatchColumn.LookupSourcePropertyName
  nameWithType: MatchColumn.LookupSourcePropertyName
- uid: ALE.ETLBox.DataFlow.MemoryDestination
  name: MemoryDestination
  href: api/ALE.ETLBox.DataFlow.MemoryDestination.html
  commentId: T:ALE.ETLBox.DataFlow.MemoryDestination
  fullName: ALE.ETLBox.DataFlow.MemoryDestination
  nameWithType: MemoryDestination
- uid: ALE.ETLBox.DataFlow.MemoryDestination.#ctor
  name: MemoryDestination()
  href: api/ALE.ETLBox.DataFlow.MemoryDestination.html#ALE_ETLBox_DataFlow_MemoryDestination__ctor
  commentId: M:ALE.ETLBox.DataFlow.MemoryDestination.#ctor
  fullName: ALE.ETLBox.DataFlow.MemoryDestination.MemoryDestination()
  nameWithType: MemoryDestination.MemoryDestination()
- uid: ALE.ETLBox.DataFlow.MemoryDestination.#ctor*
  name: MemoryDestination
  href: api/ALE.ETLBox.DataFlow.MemoryDestination.html#ALE_ETLBox_DataFlow_MemoryDestination__ctor_
  commentId: Overload:ALE.ETLBox.DataFlow.MemoryDestination.#ctor
  isSpec: "True"
  fullName: ALE.ETLBox.DataFlow.MemoryDestination.MemoryDestination
  nameWithType: MemoryDestination.MemoryDestination
- uid: ALE.ETLBox.DataFlow.MemoryDestination`1
  name: MemoryDestination<TInput>
  href: api/ALE.ETLBox.DataFlow.MemoryDestination-1.html
  commentId: T:ALE.ETLBox.DataFlow.MemoryDestination`1
  name.vb: MemoryDestination(Of TInput)
  fullName: ALE.ETLBox.DataFlow.MemoryDestination<TInput>
  fullName.vb: ALE.ETLBox.DataFlow.MemoryDestination(Of TInput)
  nameWithType: MemoryDestination<TInput>
  nameWithType.vb: MemoryDestination(Of TInput)
- uid: ALE.ETLBox.DataFlow.MemoryDestination`1.#ctor
  name: MemoryDestination()
  href: api/ALE.ETLBox.DataFlow.MemoryDestination-1.html#ALE_ETLBox_DataFlow_MemoryDestination_1__ctor
  commentId: M:ALE.ETLBox.DataFlow.MemoryDestination`1.#ctor
  fullName: ALE.ETLBox.DataFlow.MemoryDestination<TInput>.MemoryDestination()
  fullName.vb: ALE.ETLBox.DataFlow.MemoryDestination(Of TInput).MemoryDestination()
  nameWithType: MemoryDestination<TInput>.MemoryDestination()
  nameWithType.vb: MemoryDestination(Of TInput).MemoryDestination()
- uid: ALE.ETLBox.DataFlow.MemoryDestination`1.#ctor*
  name: MemoryDestination
  href: api/ALE.ETLBox.DataFlow.MemoryDestination-1.html#ALE_ETLBox_DataFlow_MemoryDestination_1__ctor_
  commentId: Overload:ALE.ETLBox.DataFlow.MemoryDestination`1.#ctor
  isSpec: "True"
  fullName: ALE.ETLBox.DataFlow.MemoryDestination<TInput>.MemoryDestination
  fullName.vb: ALE.ETLBox.DataFlow.MemoryDestination(Of TInput).MemoryDestination
  nameWithType: MemoryDestination<TInput>.MemoryDestination
  nameWithType.vb: MemoryDestination(Of TInput).MemoryDestination
- uid: ALE.ETLBox.DataFlow.MemoryDestination`1.CleanUp
  name: CleanUp()
  href: api/ALE.ETLBox.DataFlow.MemoryDestination-1.html#ALE_ETLBox_DataFlow_MemoryDestination_1_CleanUp
  commentId: M:ALE.ETLBox.DataFlow.MemoryDestination`1.CleanUp
  fullName: ALE.ETLBox.DataFlow.MemoryDestination<TInput>.CleanUp()
  fullName.vb: ALE.ETLBox.DataFlow.MemoryDestination(Of TInput).CleanUp()
  nameWithType: MemoryDestination<TInput>.CleanUp()
  nameWithType.vb: MemoryDestination(Of TInput).CleanUp()
- uid: ALE.ETLBox.DataFlow.MemoryDestination`1.CleanUp*
  name: CleanUp
  href: api/ALE.ETLBox.DataFlow.MemoryDestination-1.html#ALE_ETLBox_DataFlow_MemoryDestination_1_CleanUp_
  commentId: Overload:ALE.ETLBox.DataFlow.MemoryDestination`1.CleanUp
  isSpec: "True"
  fullName: ALE.ETLBox.DataFlow.MemoryDestination<TInput>.CleanUp
  fullName.vb: ALE.ETLBox.DataFlow.MemoryDestination(Of TInput).CleanUp
  nameWithType: MemoryDestination<TInput>.CleanUp
  nameWithType.vb: MemoryDestination(Of TInput).CleanUp
- uid: ALE.ETLBox.DataFlow.MemoryDestination`1.Data
  name: Data
  href: api/ALE.ETLBox.DataFlow.MemoryDestination-1.html#ALE_ETLBox_DataFlow_MemoryDestination_1_Data
  commentId: P:ALE.ETLBox.DataFlow.MemoryDestination`1.Data
  fullName: ALE.ETLBox.DataFlow.MemoryDestination<TInput>.Data
  fullName.vb: ALE.ETLBox.DataFlow.MemoryDestination(Of TInput).Data
  nameWithType: MemoryDestination<TInput>.Data
  nameWithType.vb: MemoryDestination(Of TInput).Data
- uid: ALE.ETLBox.DataFlow.MemoryDestination`1.Data*
  name: Data
  href: api/ALE.ETLBox.DataFlow.MemoryDestination-1.html#ALE_ETLBox_DataFlow_MemoryDestination_1_Data_
  commentId: Overload:ALE.ETLBox.DataFlow.MemoryDestination`1.Data
  isSpec: "True"
  fullName: ALE.ETLBox.DataFlow.MemoryDestination<TInput>.Data
  fullName.vb: ALE.ETLBox.DataFlow.MemoryDestination(Of TInput).Data
  nameWithType: MemoryDestination<TInput>.Data
  nameWithType.vb: MemoryDestination(Of TInput).Data
- uid: ALE.ETLBox.DataFlow.MemoryDestination`1.TaskName
  name: TaskName
  href: api/ALE.ETLBox.DataFlow.MemoryDestination-1.html#ALE_ETLBox_DataFlow_MemoryDestination_1_TaskName
  commentId: P:ALE.ETLBox.DataFlow.MemoryDestination`1.TaskName
  fullName: ALE.ETLBox.DataFlow.MemoryDestination<TInput>.TaskName
  fullName.vb: ALE.ETLBox.DataFlow.MemoryDestination(Of TInput).TaskName
  nameWithType: MemoryDestination<TInput>.TaskName
  nameWithType.vb: MemoryDestination(Of TInput).TaskName
- uid: ALE.ETLBox.DataFlow.MemoryDestination`1.TaskName*
  name: TaskName
  href: api/ALE.ETLBox.DataFlow.MemoryDestination-1.html#ALE_ETLBox_DataFlow_MemoryDestination_1_TaskName_
  commentId: Overload:ALE.ETLBox.DataFlow.MemoryDestination`1.TaskName
  isSpec: "True"
  fullName: ALE.ETLBox.DataFlow.MemoryDestination<TInput>.TaskName
  fullName.vb: ALE.ETLBox.DataFlow.MemoryDestination(Of TInput).TaskName
  nameWithType: MemoryDestination<TInput>.TaskName
  nameWithType.vb: MemoryDestination(Of TInput).TaskName
- uid: ALE.ETLBox.DataFlow.MemoryDestination`1.WriteRecord(`0)
  name: WriteRecord(TInput)
  href: api/ALE.ETLBox.DataFlow.MemoryDestination-1.html#ALE_ETLBox_DataFlow_MemoryDestination_1_WriteRecord__0_
  commentId: M:ALE.ETLBox.DataFlow.MemoryDestination`1.WriteRecord(`0)
  fullName: ALE.ETLBox.DataFlow.MemoryDestination<TInput>.WriteRecord(TInput)
  fullName.vb: ALE.ETLBox.DataFlow.MemoryDestination(Of TInput).WriteRecord(TInput)
  nameWithType: MemoryDestination<TInput>.WriteRecord(TInput)
  nameWithType.vb: MemoryDestination(Of TInput).WriteRecord(TInput)
- uid: ALE.ETLBox.DataFlow.MemoryDestination`1.WriteRecord*
  name: WriteRecord
  href: api/ALE.ETLBox.DataFlow.MemoryDestination-1.html#ALE_ETLBox_DataFlow_MemoryDestination_1_WriteRecord_
  commentId: Overload:ALE.ETLBox.DataFlow.MemoryDestination`1.WriteRecord
  isSpec: "True"
  fullName: ALE.ETLBox.DataFlow.MemoryDestination<TInput>.WriteRecord
  fullName.vb: ALE.ETLBox.DataFlow.MemoryDestination(Of TInput).WriteRecord
  nameWithType: MemoryDestination<TInput>.WriteRecord
  nameWithType.vb: MemoryDestination(Of TInput).WriteRecord
- uid: ALE.ETLBox.DataFlow.MemorySource
  name: MemorySource
  href: api/ALE.ETLBox.DataFlow.MemorySource.html
  commentId: T:ALE.ETLBox.DataFlow.MemorySource
  fullName: ALE.ETLBox.DataFlow.MemorySource
  nameWithType: MemorySource
- uid: ALE.ETLBox.DataFlow.MemorySource.#ctor
  name: MemorySource()
  href: api/ALE.ETLBox.DataFlow.MemorySource.html#ALE_ETLBox_DataFlow_MemorySource__ctor
  commentId: M:ALE.ETLBox.DataFlow.MemorySource.#ctor
  fullName: ALE.ETLBox.DataFlow.MemorySource.MemorySource()
  nameWithType: MemorySource.MemorySource()
- uid: ALE.ETLBox.DataFlow.MemorySource.#ctor(System.Collections.Generic.List{System.Dynamic.ExpandoObject})
  name: MemorySource(List<ExpandoObject>)
  href: api/ALE.ETLBox.DataFlow.MemorySource.html#ALE_ETLBox_DataFlow_MemorySource__ctor_System_Collections_Generic_List_System_Dynamic_ExpandoObject__
  commentId: M:ALE.ETLBox.DataFlow.MemorySource.#ctor(System.Collections.Generic.List{System.Dynamic.ExpandoObject})
  name.vb: MemorySource(List(Of ExpandoObject))
  fullName: ALE.ETLBox.DataFlow.MemorySource.MemorySource(System.Collections.Generic.List<System.Dynamic.ExpandoObject>)
  fullName.vb: ALE.ETLBox.DataFlow.MemorySource.MemorySource(System.Collections.Generic.List(Of System.Dynamic.ExpandoObject))
  nameWithType: MemorySource.MemorySource(List<ExpandoObject>)
  nameWithType.vb: MemorySource.MemorySource(List(Of ExpandoObject))
- uid: ALE.ETLBox.DataFlow.MemorySource.#ctor*
  name: MemorySource
  href: api/ALE.ETLBox.DataFlow.MemorySource.html#ALE_ETLBox_DataFlow_MemorySource__ctor_
  commentId: Overload:ALE.ETLBox.DataFlow.MemorySource.#ctor
  isSpec: "True"
  fullName: ALE.ETLBox.DataFlow.MemorySource.MemorySource
  nameWithType: MemorySource.MemorySource
- uid: ALE.ETLBox.DataFlow.MemorySource`1
  name: MemorySource<TOutput>
  href: api/ALE.ETLBox.DataFlow.MemorySource-1.html
  commentId: T:ALE.ETLBox.DataFlow.MemorySource`1
  name.vb: MemorySource(Of TOutput)
  fullName: ALE.ETLBox.DataFlow.MemorySource<TOutput>
  fullName.vb: ALE.ETLBox.DataFlow.MemorySource(Of TOutput)
  nameWithType: MemorySource<TOutput>
  nameWithType.vb: MemorySource(Of TOutput)
- uid: ALE.ETLBox.DataFlow.MemorySource`1.#ctor
  name: MemorySource()
  href: api/ALE.ETLBox.DataFlow.MemorySource-1.html#ALE_ETLBox_DataFlow_MemorySource_1__ctor
  commentId: M:ALE.ETLBox.DataFlow.MemorySource`1.#ctor
  fullName: ALE.ETLBox.DataFlow.MemorySource<TOutput>.MemorySource()
  fullName.vb: ALE.ETLBox.DataFlow.MemorySource(Of TOutput).MemorySource()
  nameWithType: MemorySource<TOutput>.MemorySource()
  nameWithType.vb: MemorySource(Of TOutput).MemorySource()
- uid: ALE.ETLBox.DataFlow.MemorySource`1.#ctor(System.Collections.Generic.List{`0})
  name: MemorySource(List<TOutput>)
  href: api/ALE.ETLBox.DataFlow.MemorySource-1.html#ALE_ETLBox_DataFlow_MemorySource_1__ctor_System_Collections_Generic_List__0__
  commentId: M:ALE.ETLBox.DataFlow.MemorySource`1.#ctor(System.Collections.Generic.List{`0})
  name.vb: MemorySource(List(Of TOutput))
  fullName: ALE.ETLBox.DataFlow.MemorySource<TOutput>.MemorySource(System.Collections.Generic.List<TOutput>)
  fullName.vb: ALE.ETLBox.DataFlow.MemorySource(Of TOutput).MemorySource(System.Collections.Generic.List(Of TOutput))
  nameWithType: MemorySource<TOutput>.MemorySource(List<TOutput>)
  nameWithType.vb: MemorySource(Of TOutput).MemorySource(List(Of TOutput))
- uid: ALE.ETLBox.DataFlow.MemorySource`1.#ctor*
  name: MemorySource
  href: api/ALE.ETLBox.DataFlow.MemorySource-1.html#ALE_ETLBox_DataFlow_MemorySource_1__ctor_
  commentId: Overload:ALE.ETLBox.DataFlow.MemorySource`1.#ctor
  isSpec: "True"
  fullName: ALE.ETLBox.DataFlow.MemorySource<TOutput>.MemorySource
  fullName.vb: ALE.ETLBox.DataFlow.MemorySource(Of TOutput).MemorySource
  nameWithType: MemorySource<TOutput>.MemorySource
  nameWithType.vb: MemorySource(Of TOutput).MemorySource
- uid: ALE.ETLBox.DataFlow.MemorySource`1.Data
  name: Data
  href: api/ALE.ETLBox.DataFlow.MemorySource-1.html#ALE_ETLBox_DataFlow_MemorySource_1_Data
  commentId: P:ALE.ETLBox.DataFlow.MemorySource`1.Data
  fullName: ALE.ETLBox.DataFlow.MemorySource<TOutput>.Data
  fullName.vb: ALE.ETLBox.DataFlow.MemorySource(Of TOutput).Data
  nameWithType: MemorySource<TOutput>.Data
  nameWithType.vb: MemorySource(Of TOutput).Data
- uid: ALE.ETLBox.DataFlow.MemorySource`1.Data*
  name: Data
  href: api/ALE.ETLBox.DataFlow.MemorySource-1.html#ALE_ETLBox_DataFlow_MemorySource_1_Data_
  commentId: Overload:ALE.ETLBox.DataFlow.MemorySource`1.Data
  isSpec: "True"
  fullName: ALE.ETLBox.DataFlow.MemorySource<TOutput>.Data
  fullName.vb: ALE.ETLBox.DataFlow.MemorySource(Of TOutput).Data
  nameWithType: MemorySource<TOutput>.Data
  nameWithType.vb: MemorySource(Of TOutput).Data
- uid: ALE.ETLBox.DataFlow.MemorySource`1.Execute
  name: Execute()
  href: api/ALE.ETLBox.DataFlow.MemorySource-1.html#ALE_ETLBox_DataFlow_MemorySource_1_Execute
  commentId: M:ALE.ETLBox.DataFlow.MemorySource`1.Execute
  fullName: ALE.ETLBox.DataFlow.MemorySource<TOutput>.Execute()
  fullName.vb: ALE.ETLBox.DataFlow.MemorySource(Of TOutput).Execute()
  nameWithType: MemorySource<TOutput>.Execute()
  nameWithType.vb: MemorySource(Of TOutput).Execute()
- uid: ALE.ETLBox.DataFlow.MemorySource`1.Execute*
  name: Execute
  href: api/ALE.ETLBox.DataFlow.MemorySource-1.html#ALE_ETLBox_DataFlow_MemorySource_1_Execute_
  commentId: Overload:ALE.ETLBox.DataFlow.MemorySource`1.Execute
  isSpec: "True"
  fullName: ALE.ETLBox.DataFlow.MemorySource<TOutput>.Execute
  fullName.vb: ALE.ETLBox.DataFlow.MemorySource(Of TOutput).Execute
  nameWithType: MemorySource<TOutput>.Execute
  nameWithType.vb: MemorySource(Of TOutput).Execute
- uid: ALE.ETLBox.DataFlow.MemorySource`1.TaskName
  name: TaskName
  href: api/ALE.ETLBox.DataFlow.MemorySource-1.html#ALE_ETLBox_DataFlow_MemorySource_1_TaskName
  commentId: P:ALE.ETLBox.DataFlow.MemorySource`1.TaskName
  fullName: ALE.ETLBox.DataFlow.MemorySource<TOutput>.TaskName
  fullName.vb: ALE.ETLBox.DataFlow.MemorySource(Of TOutput).TaskName
  nameWithType: MemorySource<TOutput>.TaskName
  nameWithType.vb: MemorySource(Of TOutput).TaskName
- uid: ALE.ETLBox.DataFlow.MemorySource`1.TaskName*
  name: TaskName
  href: api/ALE.ETLBox.DataFlow.MemorySource-1.html#ALE_ETLBox_DataFlow_MemorySource_1_TaskName_
  commentId: Overload:ALE.ETLBox.DataFlow.MemorySource`1.TaskName
  isSpec: "True"
  fullName: ALE.ETLBox.DataFlow.MemorySource<TOutput>.TaskName
  fullName.vb: ALE.ETLBox.DataFlow.MemorySource(Of TOutput).TaskName
  nameWithType: MemorySource<TOutput>.TaskName
  nameWithType.vb: MemorySource(Of TOutput).TaskName
- uid: ALE.ETLBox.DataFlow.MergeableRow
  name: MergeableRow
  href: api/ALE.ETLBox.DataFlow.MergeableRow.html
  commentId: T:ALE.ETLBox.DataFlow.MergeableRow
  fullName: ALE.ETLBox.DataFlow.MergeableRow
  nameWithType: MergeableRow
- uid: ALE.ETLBox.DataFlow.MergeableRow.#ctor
  name: MergeableRow()
  href: api/ALE.ETLBox.DataFlow.MergeableRow.html#ALE_ETLBox_DataFlow_MergeableRow__ctor
  commentId: M:ALE.ETLBox.DataFlow.MergeableRow.#ctor
  fullName: ALE.ETLBox.DataFlow.MergeableRow.MergeableRow()
  nameWithType: MergeableRow.MergeableRow()
- uid: ALE.ETLBox.DataFlow.MergeableRow.#ctor*
  name: MergeableRow
  href: api/ALE.ETLBox.DataFlow.MergeableRow.html#ALE_ETLBox_DataFlow_MergeableRow__ctor_
  commentId: Overload:ALE.ETLBox.DataFlow.MergeableRow.#ctor
  isSpec: "True"
  fullName: ALE.ETLBox.DataFlow.MergeableRow.MergeableRow
  nameWithType: MergeableRow.MergeableRow
- uid: ALE.ETLBox.DataFlow.MergeableRow.ChangeAction
  name: ChangeAction
  href: api/ALE.ETLBox.DataFlow.MergeableRow.html#ALE_ETLBox_DataFlow_MergeableRow_ChangeAction
  commentId: P:ALE.ETLBox.DataFlow.MergeableRow.ChangeAction
  fullName: ALE.ETLBox.DataFlow.MergeableRow.ChangeAction
  nameWithType: MergeableRow.ChangeAction
- uid: ALE.ETLBox.DataFlow.MergeableRow.ChangeAction*
  name: ChangeAction
  href: api/ALE.ETLBox.DataFlow.MergeableRow.html#ALE_ETLBox_DataFlow_MergeableRow_ChangeAction_
  commentId: Overload:ALE.ETLBox.DataFlow.MergeableRow.ChangeAction
  isSpec: "True"
  fullName: ALE.ETLBox.DataFlow.MergeableRow.ChangeAction
  nameWithType: MergeableRow.ChangeAction
- uid: ALE.ETLBox.DataFlow.MergeableRow.ChangeDate
  name: ChangeDate
  href: api/ALE.ETLBox.DataFlow.MergeableRow.html#ALE_ETLBox_DataFlow_MergeableRow_ChangeDate
  commentId: P:ALE.ETLBox.DataFlow.MergeableRow.ChangeDate
  fullName: ALE.ETLBox.DataFlow.MergeableRow.ChangeDate
  nameWithType: MergeableRow.ChangeDate
- uid: ALE.ETLBox.DataFlow.MergeableRow.ChangeDate*
  name: ChangeDate
  href: api/ALE.ETLBox.DataFlow.MergeableRow.html#ALE_ETLBox_DataFlow_MergeableRow_ChangeDate_
  commentId: Overload:ALE.ETLBox.DataFlow.MergeableRow.ChangeDate
  isSpec: "True"
  fullName: ALE.ETLBox.DataFlow.MergeableRow.ChangeDate
  nameWithType: MergeableRow.ChangeDate
- uid: ALE.ETLBox.DataFlow.MergeableRow.Equals(System.Object)
  name: Equals(Object)
  href: api/ALE.ETLBox.DataFlow.MergeableRow.html#ALE_ETLBox_DataFlow_MergeableRow_Equals_System_Object_
  commentId: M:ALE.ETLBox.DataFlow.MergeableRow.Equals(System.Object)
  fullName: ALE.ETLBox.DataFlow.MergeableRow.Equals(System.Object)
  nameWithType: MergeableRow.Equals(Object)
- uid: ALE.ETLBox.DataFlow.MergeableRow.Equals*
  name: Equals
  href: api/ALE.ETLBox.DataFlow.MergeableRow.html#ALE_ETLBox_DataFlow_MergeableRow_Equals_
  commentId: Overload:ALE.ETLBox.DataFlow.MergeableRow.Equals
  isSpec: "True"
  fullName: ALE.ETLBox.DataFlow.MergeableRow.Equals
  nameWithType: MergeableRow.Equals
- uid: ALE.ETLBox.DataFlow.MergeableRow.GetHashCode
  name: GetHashCode()
  href: api/ALE.ETLBox.DataFlow.MergeableRow.html#ALE_ETLBox_DataFlow_MergeableRow_GetHashCode
  commentId: M:ALE.ETLBox.DataFlow.MergeableRow.GetHashCode
  fullName: ALE.ETLBox.DataFlow.MergeableRow.GetHashCode()
  nameWithType: MergeableRow.GetHashCode()
- uid: ALE.ETLBox.DataFlow.MergeableRow.GetHashCode*
  name: GetHashCode
  href: api/ALE.ETLBox.DataFlow.MergeableRow.html#ALE_ETLBox_DataFlow_MergeableRow_GetHashCode_
  commentId: Overload:ALE.ETLBox.DataFlow.MergeableRow.GetHashCode
  isSpec: "True"
  fullName: ALE.ETLBox.DataFlow.MergeableRow.GetHashCode
  nameWithType: MergeableRow.GetHashCode
- uid: ALE.ETLBox.DataFlow.MergeableRow.IsDeletion
  name: IsDeletion
  href: api/ALE.ETLBox.DataFlow.MergeableRow.html#ALE_ETLBox_DataFlow_MergeableRow_IsDeletion
  commentId: P:ALE.ETLBox.DataFlow.MergeableRow.IsDeletion
  fullName: ALE.ETLBox.DataFlow.MergeableRow.IsDeletion
  nameWithType: MergeableRow.IsDeletion
- uid: ALE.ETLBox.DataFlow.MergeableRow.IsDeletion*
  name: IsDeletion
  href: api/ALE.ETLBox.DataFlow.MergeableRow.html#ALE_ETLBox_DataFlow_MergeableRow_IsDeletion_
  commentId: Overload:ALE.ETLBox.DataFlow.MergeableRow.IsDeletion
  isSpec: "True"
  fullName: ALE.ETLBox.DataFlow.MergeableRow.IsDeletion
  nameWithType: MergeableRow.IsDeletion
- uid: ALE.ETLBox.DataFlow.MergeableRow.UniqueId
  name: UniqueId
  href: api/ALE.ETLBox.DataFlow.MergeableRow.html#ALE_ETLBox_DataFlow_MergeableRow_UniqueId
  commentId: P:ALE.ETLBox.DataFlow.MergeableRow.UniqueId
  fullName: ALE.ETLBox.DataFlow.MergeableRow.UniqueId
  nameWithType: MergeableRow.UniqueId
- uid: ALE.ETLBox.DataFlow.MergeableRow.UniqueId*
  name: UniqueId
  href: api/ALE.ETLBox.DataFlow.MergeableRow.html#ALE_ETLBox_DataFlow_MergeableRow_UniqueId_
  commentId: Overload:ALE.ETLBox.DataFlow.MergeableRow.UniqueId
  isSpec: "True"
  fullName: ALE.ETLBox.DataFlow.MergeableRow.UniqueId
  nameWithType: MergeableRow.UniqueId
- uid: ALE.ETLBox.DataFlow.MergeJoin
  name: MergeJoin
  href: api/ALE.ETLBox.DataFlow.MergeJoin.html
  commentId: T:ALE.ETLBox.DataFlow.MergeJoin
  fullName: ALE.ETLBox.DataFlow.MergeJoin
  nameWithType: MergeJoin
- uid: ALE.ETLBox.DataFlow.MergeJoin.#ctor
  name: MergeJoin()
  href: api/ALE.ETLBox.DataFlow.MergeJoin.html#ALE_ETLBox_DataFlow_MergeJoin__ctor
  commentId: M:ALE.ETLBox.DataFlow.MergeJoin.#ctor
  fullName: ALE.ETLBox.DataFlow.MergeJoin.MergeJoin()
  nameWithType: MergeJoin.MergeJoin()
- uid: ALE.ETLBox.DataFlow.MergeJoin.#ctor(System.Func{System.Dynamic.ExpandoObject,System.Dynamic.ExpandoObject,System.Dynamic.ExpandoObject})
  name: MergeJoin(Func<ExpandoObject, ExpandoObject, ExpandoObject>)
  href: api/ALE.ETLBox.DataFlow.MergeJoin.html#ALE_ETLBox_DataFlow_MergeJoin__ctor_System_Func_System_Dynamic_ExpandoObject_System_Dynamic_ExpandoObject_System_Dynamic_ExpandoObject__
  commentId: M:ALE.ETLBox.DataFlow.MergeJoin.#ctor(System.Func{System.Dynamic.ExpandoObject,System.Dynamic.ExpandoObject,System.Dynamic.ExpandoObject})
  name.vb: MergeJoin(Func(Of ExpandoObject, ExpandoObject, ExpandoObject))
  fullName: ALE.ETLBox.DataFlow.MergeJoin.MergeJoin(System.Func<System.Dynamic.ExpandoObject, System.Dynamic.ExpandoObject, System.Dynamic.ExpandoObject>)
  fullName.vb: ALE.ETLBox.DataFlow.MergeJoin.MergeJoin(System.Func(Of System.Dynamic.ExpandoObject, System.Dynamic.ExpandoObject, System.Dynamic.ExpandoObject))
  nameWithType: MergeJoin.MergeJoin(Func<ExpandoObject, ExpandoObject, ExpandoObject>)
  nameWithType.vb: MergeJoin.MergeJoin(Func(Of ExpandoObject, ExpandoObject, ExpandoObject))
- uid: ALE.ETLBox.DataFlow.MergeJoin.#ctor(System.String,System.Func{System.Dynamic.ExpandoObject,System.Dynamic.ExpandoObject,System.Dynamic.ExpandoObject})
  name: MergeJoin(String, Func<ExpandoObject, ExpandoObject, ExpandoObject>)
  href: api/ALE.ETLBox.DataFlow.MergeJoin.html#ALE_ETLBox_DataFlow_MergeJoin__ctor_System_String_System_Func_System_Dynamic_ExpandoObject_System_Dynamic_ExpandoObject_System_Dynamic_ExpandoObject__
  commentId: M:ALE.ETLBox.DataFlow.MergeJoin.#ctor(System.String,System.Func{System.Dynamic.ExpandoObject,System.Dynamic.ExpandoObject,System.Dynamic.ExpandoObject})
  name.vb: MergeJoin(String, Func(Of ExpandoObject, ExpandoObject, ExpandoObject))
  fullName: ALE.ETLBox.DataFlow.MergeJoin.MergeJoin(System.String, System.Func<System.Dynamic.ExpandoObject, System.Dynamic.ExpandoObject, System.Dynamic.ExpandoObject>)
  fullName.vb: ALE.ETLBox.DataFlow.MergeJoin.MergeJoin(System.String, System.Func(Of System.Dynamic.ExpandoObject, System.Dynamic.ExpandoObject, System.Dynamic.ExpandoObject))
  nameWithType: MergeJoin.MergeJoin(String, Func<ExpandoObject, ExpandoObject, ExpandoObject>)
  nameWithType.vb: MergeJoin.MergeJoin(String, Func(Of ExpandoObject, ExpandoObject, ExpandoObject))
- uid: ALE.ETLBox.DataFlow.MergeJoin.#ctor*
  name: MergeJoin
  href: api/ALE.ETLBox.DataFlow.MergeJoin.html#ALE_ETLBox_DataFlow_MergeJoin__ctor_
  commentId: Overload:ALE.ETLBox.DataFlow.MergeJoin.#ctor
  isSpec: "True"
  fullName: ALE.ETLBox.DataFlow.MergeJoin.MergeJoin
  nameWithType: MergeJoin.MergeJoin
- uid: ALE.ETLBox.DataFlow.MergeJoin`1
  name: MergeJoin<TInput>
  href: api/ALE.ETLBox.DataFlow.MergeJoin-1.html
  commentId: T:ALE.ETLBox.DataFlow.MergeJoin`1
  name.vb: MergeJoin(Of TInput)
  fullName: ALE.ETLBox.DataFlow.MergeJoin<TInput>
  fullName.vb: ALE.ETLBox.DataFlow.MergeJoin(Of TInput)
  nameWithType: MergeJoin<TInput>
  nameWithType.vb: MergeJoin(Of TInput)
- uid: ALE.ETLBox.DataFlow.MergeJoin`1.#ctor
  name: MergeJoin()
  href: api/ALE.ETLBox.DataFlow.MergeJoin-1.html#ALE_ETLBox_DataFlow_MergeJoin_1__ctor
  commentId: M:ALE.ETLBox.DataFlow.MergeJoin`1.#ctor
  fullName: ALE.ETLBox.DataFlow.MergeJoin<TInput>.MergeJoin()
  fullName.vb: ALE.ETLBox.DataFlow.MergeJoin(Of TInput).MergeJoin()
  nameWithType: MergeJoin<TInput>.MergeJoin()
  nameWithType.vb: MergeJoin(Of TInput).MergeJoin()
- uid: ALE.ETLBox.DataFlow.MergeJoin`1.#ctor(System.Func{`0,`0,`0})
  name: MergeJoin(Func<TInput, TInput, TInput>)
  href: api/ALE.ETLBox.DataFlow.MergeJoin-1.html#ALE_ETLBox_DataFlow_MergeJoin_1__ctor_System_Func__0__0__0__
  commentId: M:ALE.ETLBox.DataFlow.MergeJoin`1.#ctor(System.Func{`0,`0,`0})
  name.vb: MergeJoin(Func(Of TInput, TInput, TInput))
  fullName: ALE.ETLBox.DataFlow.MergeJoin<TInput>.MergeJoin(System.Func<TInput, TInput, TInput>)
  fullName.vb: ALE.ETLBox.DataFlow.MergeJoin(Of TInput).MergeJoin(System.Func(Of TInput, TInput, TInput))
  nameWithType: MergeJoin<TInput>.MergeJoin(Func<TInput, TInput, TInput>)
  nameWithType.vb: MergeJoin(Of TInput).MergeJoin(Func(Of TInput, TInput, TInput))
- uid: ALE.ETLBox.DataFlow.MergeJoin`1.#ctor(System.String,System.Func{`0,`0,`0})
  name: MergeJoin(String, Func<TInput, TInput, TInput>)
  href: api/ALE.ETLBox.DataFlow.MergeJoin-1.html#ALE_ETLBox_DataFlow_MergeJoin_1__ctor_System_String_System_Func__0__0__0__
  commentId: M:ALE.ETLBox.DataFlow.MergeJoin`1.#ctor(System.String,System.Func{`0,`0,`0})
  name.vb: MergeJoin(String, Func(Of TInput, TInput, TInput))
  fullName: ALE.ETLBox.DataFlow.MergeJoin<TInput>.MergeJoin(System.String, System.Func<TInput, TInput, TInput>)
  fullName.vb: ALE.ETLBox.DataFlow.MergeJoin(Of TInput).MergeJoin(System.String, System.Func(Of TInput, TInput, TInput))
  nameWithType: MergeJoin<TInput>.MergeJoin(String, Func<TInput, TInput, TInput>)
  nameWithType.vb: MergeJoin(Of TInput).MergeJoin(String, Func(Of TInput, TInput, TInput))
- uid: ALE.ETLBox.DataFlow.MergeJoin`1.#ctor*
  name: MergeJoin
  href: api/ALE.ETLBox.DataFlow.MergeJoin-1.html#ALE_ETLBox_DataFlow_MergeJoin_1__ctor_
  commentId: Overload:ALE.ETLBox.DataFlow.MergeJoin`1.#ctor
  isSpec: "True"
  fullName: ALE.ETLBox.DataFlow.MergeJoin<TInput>.MergeJoin
  fullName.vb: ALE.ETLBox.DataFlow.MergeJoin(Of TInput).MergeJoin
  nameWithType: MergeJoin<TInput>.MergeJoin
  nameWithType.vb: MergeJoin(Of TInput).MergeJoin
- uid: ALE.ETLBox.DataFlow.MergeJoin`3
  name: MergeJoin<TInput1, TInput2, TOutput>
  href: api/ALE.ETLBox.DataFlow.MergeJoin-3.html
  commentId: T:ALE.ETLBox.DataFlow.MergeJoin`3
  name.vb: MergeJoin(Of TInput1, TInput2, TOutput)
  fullName: ALE.ETLBox.DataFlow.MergeJoin<TInput1, TInput2, TOutput>
  fullName.vb: ALE.ETLBox.DataFlow.MergeJoin(Of TInput1, TInput2, TOutput)
  nameWithType: MergeJoin<TInput1, TInput2, TOutput>
  nameWithType.vb: MergeJoin(Of TInput1, TInput2, TOutput)
- uid: ALE.ETLBox.DataFlow.MergeJoin`3.#ctor
  name: MergeJoin()
  href: api/ALE.ETLBox.DataFlow.MergeJoin-3.html#ALE_ETLBox_DataFlow_MergeJoin_3__ctor
  commentId: M:ALE.ETLBox.DataFlow.MergeJoin`3.#ctor
  fullName: ALE.ETLBox.DataFlow.MergeJoin<TInput1, TInput2, TOutput>.MergeJoin()
  fullName.vb: ALE.ETLBox.DataFlow.MergeJoin(Of TInput1, TInput2, TOutput).MergeJoin()
  nameWithType: MergeJoin<TInput1, TInput2, TOutput>.MergeJoin()
  nameWithType.vb: MergeJoin(Of TInput1, TInput2, TOutput).MergeJoin()
- uid: ALE.ETLBox.DataFlow.MergeJoin`3.#ctor(System.Func{`0,`1,`2})
  name: MergeJoin(Func<TInput1, TInput2, TOutput>)
  href: api/ALE.ETLBox.DataFlow.MergeJoin-3.html#ALE_ETLBox_DataFlow_MergeJoin_3__ctor_System_Func__0__1__2__
  commentId: M:ALE.ETLBox.DataFlow.MergeJoin`3.#ctor(System.Func{`0,`1,`2})
  name.vb: MergeJoin(Func(Of TInput1, TInput2, TOutput))
  fullName: ALE.ETLBox.DataFlow.MergeJoin<TInput1, TInput2, TOutput>.MergeJoin(System.Func<TInput1, TInput2, TOutput>)
  fullName.vb: ALE.ETLBox.DataFlow.MergeJoin(Of TInput1, TInput2, TOutput).MergeJoin(System.Func(Of TInput1, TInput2, TOutput))
  nameWithType: MergeJoin<TInput1, TInput2, TOutput>.MergeJoin(Func<TInput1, TInput2, TOutput>)
  nameWithType.vb: MergeJoin(Of TInput1, TInput2, TOutput).MergeJoin(Func(Of TInput1, TInput2, TOutput))
- uid: ALE.ETLBox.DataFlow.MergeJoin`3.#ctor(System.String,System.Func{`0,`1,`2})
  name: MergeJoin(String, Func<TInput1, TInput2, TOutput>)
  href: api/ALE.ETLBox.DataFlow.MergeJoin-3.html#ALE_ETLBox_DataFlow_MergeJoin_3__ctor_System_String_System_Func__0__1__2__
  commentId: M:ALE.ETLBox.DataFlow.MergeJoin`3.#ctor(System.String,System.Func{`0,`1,`2})
  name.vb: MergeJoin(String, Func(Of TInput1, TInput2, TOutput))
  fullName: ALE.ETLBox.DataFlow.MergeJoin<TInput1, TInput2, TOutput>.MergeJoin(System.String, System.Func<TInput1, TInput2, TOutput>)
  fullName.vb: ALE.ETLBox.DataFlow.MergeJoin(Of TInput1, TInput2, TOutput).MergeJoin(System.String, System.Func(Of TInput1, TInput2, TOutput))
  nameWithType: MergeJoin<TInput1, TInput2, TOutput>.MergeJoin(String, Func<TInput1, TInput2, TOutput>)
  nameWithType.vb: MergeJoin(Of TInput1, TInput2, TOutput).MergeJoin(String, Func(Of TInput1, TInput2, TOutput))
- uid: ALE.ETLBox.DataFlow.MergeJoin`3.#ctor*
  name: MergeJoin
  href: api/ALE.ETLBox.DataFlow.MergeJoin-3.html#ALE_ETLBox_DataFlow_MergeJoin_3__ctor_
  commentId: Overload:ALE.ETLBox.DataFlow.MergeJoin`3.#ctor
  isSpec: "True"
  fullName: ALE.ETLBox.DataFlow.MergeJoin<TInput1, TInput2, TOutput>.MergeJoin
  fullName.vb: ALE.ETLBox.DataFlow.MergeJoin(Of TInput1, TInput2, TOutput).MergeJoin
  nameWithType: MergeJoin<TInput1, TInput2, TOutput>.MergeJoin
  nameWithType.vb: MergeJoin(Of TInput1, TInput2, TOutput).MergeJoin
- uid: ALE.ETLBox.DataFlow.MergeJoin`3.LinkErrorTo(ALE.ETLBox.DataFlow.IDataFlowLinkTarget{ALE.ETLBox.DataFlow.ETLBoxError})
  name: LinkErrorTo(IDataFlowLinkTarget<ETLBoxError>)
  href: api/ALE.ETLBox.DataFlow.MergeJoin-3.html#ALE_ETLBox_DataFlow_MergeJoin_3_LinkErrorTo_ALE_ETLBox_DataFlow_IDataFlowLinkTarget_ALE_ETLBox_DataFlow_ETLBoxError__
  commentId: M:ALE.ETLBox.DataFlow.MergeJoin`3.LinkErrorTo(ALE.ETLBox.DataFlow.IDataFlowLinkTarget{ALE.ETLBox.DataFlow.ETLBoxError})
  name.vb: LinkErrorTo(IDataFlowLinkTarget(Of ETLBoxError))
  fullName: ALE.ETLBox.DataFlow.MergeJoin<TInput1, TInput2, TOutput>.LinkErrorTo(ALE.ETLBox.DataFlow.IDataFlowLinkTarget<ALE.ETLBox.DataFlow.ETLBoxError>)
  fullName.vb: ALE.ETLBox.DataFlow.MergeJoin(Of TInput1, TInput2, TOutput).LinkErrorTo(ALE.ETLBox.DataFlow.IDataFlowLinkTarget(Of ALE.ETLBox.DataFlow.ETLBoxError))
  nameWithType: MergeJoin<TInput1, TInput2, TOutput>.LinkErrorTo(IDataFlowLinkTarget<ETLBoxError>)
  nameWithType.vb: MergeJoin(Of TInput1, TInput2, TOutput).LinkErrorTo(IDataFlowLinkTarget(Of ETLBoxError))
- uid: ALE.ETLBox.DataFlow.MergeJoin`3.LinkErrorTo*
  name: LinkErrorTo
  href: api/ALE.ETLBox.DataFlow.MergeJoin-3.html#ALE_ETLBox_DataFlow_MergeJoin_3_LinkErrorTo_
  commentId: Overload:ALE.ETLBox.DataFlow.MergeJoin`3.LinkErrorTo
  isSpec: "True"
  fullName: ALE.ETLBox.DataFlow.MergeJoin<TInput1, TInput2, TOutput>.LinkErrorTo
  fullName.vb: ALE.ETLBox.DataFlow.MergeJoin(Of TInput1, TInput2, TOutput).LinkErrorTo
  nameWithType: MergeJoin<TInput1, TInput2, TOutput>.LinkErrorTo
  nameWithType.vb: MergeJoin(Of TInput1, TInput2, TOutput).LinkErrorTo
- uid: ALE.ETLBox.DataFlow.MergeJoin`3.LinkTo(ALE.ETLBox.DataFlow.IDataFlowLinkTarget{`2})
  name: LinkTo(IDataFlowLinkTarget<TOutput>)
  href: api/ALE.ETLBox.DataFlow.MergeJoin-3.html#ALE_ETLBox_DataFlow_MergeJoin_3_LinkTo_ALE_ETLBox_DataFlow_IDataFlowLinkTarget__2__
  commentId: M:ALE.ETLBox.DataFlow.MergeJoin`3.LinkTo(ALE.ETLBox.DataFlow.IDataFlowLinkTarget{`2})
  name.vb: LinkTo(IDataFlowLinkTarget(Of TOutput))
  fullName: ALE.ETLBox.DataFlow.MergeJoin<TInput1, TInput2, TOutput>.LinkTo(ALE.ETLBox.DataFlow.IDataFlowLinkTarget<TOutput>)
  fullName.vb: ALE.ETLBox.DataFlow.MergeJoin(Of TInput1, TInput2, TOutput).LinkTo(ALE.ETLBox.DataFlow.IDataFlowLinkTarget(Of TOutput))
  nameWithType: MergeJoin<TInput1, TInput2, TOutput>.LinkTo(IDataFlowLinkTarget<TOutput>)
  nameWithType.vb: MergeJoin(Of TInput1, TInput2, TOutput).LinkTo(IDataFlowLinkTarget(Of TOutput))
- uid: ALE.ETLBox.DataFlow.MergeJoin`3.LinkTo(ALE.ETLBox.DataFlow.IDataFlowLinkTarget{`2},System.Predicate{`2})
  name: LinkTo(IDataFlowLinkTarget<TOutput>, Predicate<TOutput>)
  href: api/ALE.ETLBox.DataFlow.MergeJoin-3.html#ALE_ETLBox_DataFlow_MergeJoin_3_LinkTo_ALE_ETLBox_DataFlow_IDataFlowLinkTarget__2__System_Predicate__2__
  commentId: M:ALE.ETLBox.DataFlow.MergeJoin`3.LinkTo(ALE.ETLBox.DataFlow.IDataFlowLinkTarget{`2},System.Predicate{`2})
  name.vb: LinkTo(IDataFlowLinkTarget(Of TOutput), Predicate(Of TOutput))
  fullName: ALE.ETLBox.DataFlow.MergeJoin<TInput1, TInput2, TOutput>.LinkTo(ALE.ETLBox.DataFlow.IDataFlowLinkTarget<TOutput>, System.Predicate<TOutput>)
  fullName.vb: ALE.ETLBox.DataFlow.MergeJoin(Of TInput1, TInput2, TOutput).LinkTo(ALE.ETLBox.DataFlow.IDataFlowLinkTarget(Of TOutput), System.Predicate(Of TOutput))
  nameWithType: MergeJoin<TInput1, TInput2, TOutput>.LinkTo(IDataFlowLinkTarget<TOutput>, Predicate<TOutput>)
  nameWithType.vb: MergeJoin(Of TInput1, TInput2, TOutput).LinkTo(IDataFlowLinkTarget(Of TOutput), Predicate(Of TOutput))
- uid: ALE.ETLBox.DataFlow.MergeJoin`3.LinkTo(ALE.ETLBox.DataFlow.IDataFlowLinkTarget{`2},System.Predicate{`2},System.Predicate{`2})
  name: LinkTo(IDataFlowLinkTarget<TOutput>, Predicate<TOutput>, Predicate<TOutput>)
  href: api/ALE.ETLBox.DataFlow.MergeJoin-3.html#ALE_ETLBox_DataFlow_MergeJoin_3_LinkTo_ALE_ETLBox_DataFlow_IDataFlowLinkTarget__2__System_Predicate__2__System_Predicate__2__
  commentId: M:ALE.ETLBox.DataFlow.MergeJoin`3.LinkTo(ALE.ETLBox.DataFlow.IDataFlowLinkTarget{`2},System.Predicate{`2},System.Predicate{`2})
  name.vb: LinkTo(IDataFlowLinkTarget(Of TOutput), Predicate(Of TOutput), Predicate(Of TOutput))
  fullName: ALE.ETLBox.DataFlow.MergeJoin<TInput1, TInput2, TOutput>.LinkTo(ALE.ETLBox.DataFlow.IDataFlowLinkTarget<TOutput>, System.Predicate<TOutput>, System.Predicate<TOutput>)
  fullName.vb: ALE.ETLBox.DataFlow.MergeJoin(Of TInput1, TInput2, TOutput).LinkTo(ALE.ETLBox.DataFlow.IDataFlowLinkTarget(Of TOutput), System.Predicate(Of TOutput), System.Predicate(Of TOutput))
  nameWithType: MergeJoin<TInput1, TInput2, TOutput>.LinkTo(IDataFlowLinkTarget<TOutput>, Predicate<TOutput>, Predicate<TOutput>)
  nameWithType.vb: MergeJoin(Of TInput1, TInput2, TOutput).LinkTo(IDataFlowLinkTarget(Of TOutput), Predicate(Of TOutput), Predicate(Of TOutput))
- uid: ALE.ETLBox.DataFlow.MergeJoin`3.LinkTo*
  name: LinkTo
  href: api/ALE.ETLBox.DataFlow.MergeJoin-3.html#ALE_ETLBox_DataFlow_MergeJoin_3_LinkTo_
  commentId: Overload:ALE.ETLBox.DataFlow.MergeJoin`3.LinkTo
  isSpec: "True"
  fullName: ALE.ETLBox.DataFlow.MergeJoin<TInput1, TInput2, TOutput>.LinkTo
  fullName.vb: ALE.ETLBox.DataFlow.MergeJoin(Of TInput1, TInput2, TOutput).LinkTo
  nameWithType: MergeJoin<TInput1, TInput2, TOutput>.LinkTo
  nameWithType.vb: MergeJoin(Of TInput1, TInput2, TOutput).LinkTo
- uid: ALE.ETLBox.DataFlow.MergeJoin`3.LinkTo``1(ALE.ETLBox.DataFlow.IDataFlowLinkTarget{`2})
  name: LinkTo<TConvert>(IDataFlowLinkTarget<TOutput>)
  href: api/ALE.ETLBox.DataFlow.MergeJoin-3.html#ALE_ETLBox_DataFlow_MergeJoin_3_LinkTo__1_ALE_ETLBox_DataFlow_IDataFlowLinkTarget__2__
  commentId: M:ALE.ETLBox.DataFlow.MergeJoin`3.LinkTo``1(ALE.ETLBox.DataFlow.IDataFlowLinkTarget{`2})
  name.vb: LinkTo(Of TConvert)(IDataFlowLinkTarget(Of TOutput))
  fullName: ALE.ETLBox.DataFlow.MergeJoin<TInput1, TInput2, TOutput>.LinkTo<TConvert>(ALE.ETLBox.DataFlow.IDataFlowLinkTarget<TOutput>)
  fullName.vb: ALE.ETLBox.DataFlow.MergeJoin(Of TInput1, TInput2, TOutput).LinkTo(Of TConvert)(ALE.ETLBox.DataFlow.IDataFlowLinkTarget(Of TOutput))
  nameWithType: MergeJoin<TInput1, TInput2, TOutput>.LinkTo<TConvert>(IDataFlowLinkTarget<TOutput>)
  nameWithType.vb: MergeJoin(Of TInput1, TInput2, TOutput).LinkTo(Of TConvert)(IDataFlowLinkTarget(Of TOutput))
- uid: ALE.ETLBox.DataFlow.MergeJoin`3.LinkTo``1(ALE.ETLBox.DataFlow.IDataFlowLinkTarget{`2},System.Predicate{`2})
  name: LinkTo<TConvert>(IDataFlowLinkTarget<TOutput>, Predicate<TOutput>)
  href: api/ALE.ETLBox.DataFlow.MergeJoin-3.html#ALE_ETLBox_DataFlow_MergeJoin_3_LinkTo__1_ALE_ETLBox_DataFlow_IDataFlowLinkTarget__2__System_Predicate__2__
  commentId: M:ALE.ETLBox.DataFlow.MergeJoin`3.LinkTo``1(ALE.ETLBox.DataFlow.IDataFlowLinkTarget{`2},System.Predicate{`2})
  name.vb: LinkTo(Of TConvert)(IDataFlowLinkTarget(Of TOutput), Predicate(Of TOutput))
  fullName: ALE.ETLBox.DataFlow.MergeJoin<TInput1, TInput2, TOutput>.LinkTo<TConvert>(ALE.ETLBox.DataFlow.IDataFlowLinkTarget<TOutput>, System.Predicate<TOutput>)
  fullName.vb: ALE.ETLBox.DataFlow.MergeJoin(Of TInput1, TInput2, TOutput).LinkTo(Of TConvert)(ALE.ETLBox.DataFlow.IDataFlowLinkTarget(Of TOutput), System.Predicate(Of TOutput))
  nameWithType: MergeJoin<TInput1, TInput2, TOutput>.LinkTo<TConvert>(IDataFlowLinkTarget<TOutput>, Predicate<TOutput>)
  nameWithType.vb: MergeJoin(Of TInput1, TInput2, TOutput).LinkTo(Of TConvert)(IDataFlowLinkTarget(Of TOutput), Predicate(Of TOutput))
- uid: ALE.ETLBox.DataFlow.MergeJoin`3.LinkTo``1(ALE.ETLBox.DataFlow.IDataFlowLinkTarget{`2},System.Predicate{`2},System.Predicate{`2})
  name: LinkTo<TConvert>(IDataFlowLinkTarget<TOutput>, Predicate<TOutput>, Predicate<TOutput>)
  href: api/ALE.ETLBox.DataFlow.MergeJoin-3.html#ALE_ETLBox_DataFlow_MergeJoin_3_LinkTo__1_ALE_ETLBox_DataFlow_IDataFlowLinkTarget__2__System_Predicate__2__System_Predicate__2__
  commentId: M:ALE.ETLBox.DataFlow.MergeJoin`3.LinkTo``1(ALE.ETLBox.DataFlow.IDataFlowLinkTarget{`2},System.Predicate{`2},System.Predicate{`2})
  name.vb: LinkTo(Of TConvert)(IDataFlowLinkTarget(Of TOutput), Predicate(Of TOutput), Predicate(Of TOutput))
  fullName: ALE.ETLBox.DataFlow.MergeJoin<TInput1, TInput2, TOutput>.LinkTo<TConvert>(ALE.ETLBox.DataFlow.IDataFlowLinkTarget<TOutput>, System.Predicate<TOutput>, System.Predicate<TOutput>)
  fullName.vb: ALE.ETLBox.DataFlow.MergeJoin(Of TInput1, TInput2, TOutput).LinkTo(Of TConvert)(ALE.ETLBox.DataFlow.IDataFlowLinkTarget(Of TOutput), System.Predicate(Of TOutput), System.Predicate(Of TOutput))
  nameWithType: MergeJoin<TInput1, TInput2, TOutput>.LinkTo<TConvert>(IDataFlowLinkTarget<TOutput>, Predicate<TOutput>, Predicate<TOutput>)
  nameWithType.vb: MergeJoin(Of TInput1, TInput2, TOutput).LinkTo(Of TConvert)(IDataFlowLinkTarget(Of TOutput), Predicate(Of TOutput), Predicate(Of TOutput))
- uid: ALE.ETLBox.DataFlow.MergeJoin`3.MergeJoinFunc
  name: MergeJoinFunc
  href: api/ALE.ETLBox.DataFlow.MergeJoin-3.html#ALE_ETLBox_DataFlow_MergeJoin_3_MergeJoinFunc
  commentId: P:ALE.ETLBox.DataFlow.MergeJoin`3.MergeJoinFunc
  fullName: ALE.ETLBox.DataFlow.MergeJoin<TInput1, TInput2, TOutput>.MergeJoinFunc
  fullName.vb: ALE.ETLBox.DataFlow.MergeJoin(Of TInput1, TInput2, TOutput).MergeJoinFunc
  nameWithType: MergeJoin<TInput1, TInput2, TOutput>.MergeJoinFunc
  nameWithType.vb: MergeJoin(Of TInput1, TInput2, TOutput).MergeJoinFunc
- uid: ALE.ETLBox.DataFlow.MergeJoin`3.MergeJoinFunc*
  name: MergeJoinFunc
  href: api/ALE.ETLBox.DataFlow.MergeJoin-3.html#ALE_ETLBox_DataFlow_MergeJoin_3_MergeJoinFunc_
  commentId: Overload:ALE.ETLBox.DataFlow.MergeJoin`3.MergeJoinFunc
  isSpec: "True"
  fullName: ALE.ETLBox.DataFlow.MergeJoin<TInput1, TInput2, TOutput>.MergeJoinFunc
  fullName.vb: ALE.ETLBox.DataFlow.MergeJoin(Of TInput1, TInput2, TOutput).MergeJoinFunc
  nameWithType: MergeJoin<TInput1, TInput2, TOutput>.MergeJoinFunc
  nameWithType.vb: MergeJoin(Of TInput1, TInput2, TOutput).MergeJoinFunc
- uid: ALE.ETLBox.DataFlow.MergeJoin`3.SourceBlock
  name: SourceBlock
  href: api/ALE.ETLBox.DataFlow.MergeJoin-3.html#ALE_ETLBox_DataFlow_MergeJoin_3_SourceBlock
  commentId: P:ALE.ETLBox.DataFlow.MergeJoin`3.SourceBlock
  fullName: ALE.ETLBox.DataFlow.MergeJoin<TInput1, TInput2, TOutput>.SourceBlock
  fullName.vb: ALE.ETLBox.DataFlow.MergeJoin(Of TInput1, TInput2, TOutput).SourceBlock
  nameWithType: MergeJoin<TInput1, TInput2, TOutput>.SourceBlock
  nameWithType.vb: MergeJoin(Of TInput1, TInput2, TOutput).SourceBlock
- uid: ALE.ETLBox.DataFlow.MergeJoin`3.SourceBlock*
  name: SourceBlock
  href: api/ALE.ETLBox.DataFlow.MergeJoin-3.html#ALE_ETLBox_DataFlow_MergeJoin_3_SourceBlock_
  commentId: Overload:ALE.ETLBox.DataFlow.MergeJoin`3.SourceBlock
  isSpec: "True"
  fullName: ALE.ETLBox.DataFlow.MergeJoin<TInput1, TInput2, TOutput>.SourceBlock
  fullName.vb: ALE.ETLBox.DataFlow.MergeJoin(Of TInput1, TInput2, TOutput).SourceBlock
  nameWithType: MergeJoin<TInput1, TInput2, TOutput>.SourceBlock
  nameWithType.vb: MergeJoin(Of TInput1, TInput2, TOutput).SourceBlock
- uid: ALE.ETLBox.DataFlow.MergeJoin`3.Target1
  name: Target1
  href: api/ALE.ETLBox.DataFlow.MergeJoin-3.html#ALE_ETLBox_DataFlow_MergeJoin_3_Target1
  commentId: P:ALE.ETLBox.DataFlow.MergeJoin`3.Target1
  fullName: ALE.ETLBox.DataFlow.MergeJoin<TInput1, TInput2, TOutput>.Target1
  fullName.vb: ALE.ETLBox.DataFlow.MergeJoin(Of TInput1, TInput2, TOutput).Target1
  nameWithType: MergeJoin<TInput1, TInput2, TOutput>.Target1
  nameWithType.vb: MergeJoin(Of TInput1, TInput2, TOutput).Target1
- uid: ALE.ETLBox.DataFlow.MergeJoin`3.Target1*
  name: Target1
  href: api/ALE.ETLBox.DataFlow.MergeJoin-3.html#ALE_ETLBox_DataFlow_MergeJoin_3_Target1_
  commentId: Overload:ALE.ETLBox.DataFlow.MergeJoin`3.Target1
  isSpec: "True"
  fullName: ALE.ETLBox.DataFlow.MergeJoin<TInput1, TInput2, TOutput>.Target1
  fullName.vb: ALE.ETLBox.DataFlow.MergeJoin(Of TInput1, TInput2, TOutput).Target1
  nameWithType: MergeJoin<TInput1, TInput2, TOutput>.Target1
  nameWithType.vb: MergeJoin(Of TInput1, TInput2, TOutput).Target1
- uid: ALE.ETLBox.DataFlow.MergeJoin`3.Target2
  name: Target2
  href: api/ALE.ETLBox.DataFlow.MergeJoin-3.html#ALE_ETLBox_DataFlow_MergeJoin_3_Target2
  commentId: P:ALE.ETLBox.DataFlow.MergeJoin`3.Target2
  fullName: ALE.ETLBox.DataFlow.MergeJoin<TInput1, TInput2, TOutput>.Target2
  fullName.vb: ALE.ETLBox.DataFlow.MergeJoin(Of TInput1, TInput2, TOutput).Target2
  nameWithType: MergeJoin<TInput1, TInput2, TOutput>.Target2
  nameWithType.vb: MergeJoin(Of TInput1, TInput2, TOutput).Target2
- uid: ALE.ETLBox.DataFlow.MergeJoin`3.Target2*
  name: Target2
  href: api/ALE.ETLBox.DataFlow.MergeJoin-3.html#ALE_ETLBox_DataFlow_MergeJoin_3_Target2_
  commentId: Overload:ALE.ETLBox.DataFlow.MergeJoin`3.Target2
  isSpec: "True"
  fullName: ALE.ETLBox.DataFlow.MergeJoin<TInput1, TInput2, TOutput>.Target2
  fullName.vb: ALE.ETLBox.DataFlow.MergeJoin(Of TInput1, TInput2, TOutput).Target2
  nameWithType: MergeJoin<TInput1, TInput2, TOutput>.Target2
  nameWithType.vb: MergeJoin(Of TInput1, TInput2, TOutput).Target2
- uid: ALE.ETLBox.DataFlow.MergeJoin`3.TaskName
  name: TaskName
  href: api/ALE.ETLBox.DataFlow.MergeJoin-3.html#ALE_ETLBox_DataFlow_MergeJoin_3_TaskName
  commentId: P:ALE.ETLBox.DataFlow.MergeJoin`3.TaskName
  fullName: ALE.ETLBox.DataFlow.MergeJoin<TInput1, TInput2, TOutput>.TaskName
  fullName.vb: ALE.ETLBox.DataFlow.MergeJoin(Of TInput1, TInput2, TOutput).TaskName
  nameWithType: MergeJoin<TInput1, TInput2, TOutput>.TaskName
  nameWithType.vb: MergeJoin(Of TInput1, TInput2, TOutput).TaskName
- uid: ALE.ETLBox.DataFlow.MergeJoin`3.TaskName*
  name: TaskName
  href: api/ALE.ETLBox.DataFlow.MergeJoin-3.html#ALE_ETLBox_DataFlow_MergeJoin_3_TaskName_
  commentId: Overload:ALE.ETLBox.DataFlow.MergeJoin`3.TaskName
  isSpec: "True"
  fullName: ALE.ETLBox.DataFlow.MergeJoin<TInput1, TInput2, TOutput>.TaskName
  fullName.vb: ALE.ETLBox.DataFlow.MergeJoin(Of TInput1, TInput2, TOutput).TaskName
  nameWithType: MergeJoin<TInput1, TInput2, TOutput>.TaskName
  nameWithType.vb: MergeJoin(Of TInput1, TInput2, TOutput).TaskName
- uid: ALE.ETLBox.DataFlow.MergeJoinTarget`1
  name: MergeJoinTarget<TInput>
  href: api/ALE.ETLBox.DataFlow.MergeJoinTarget-1.html
  commentId: T:ALE.ETLBox.DataFlow.MergeJoinTarget`1
  name.vb: MergeJoinTarget(Of TInput)
  fullName: ALE.ETLBox.DataFlow.MergeJoinTarget<TInput>
  fullName.vb: ALE.ETLBox.DataFlow.MergeJoinTarget(Of TInput)
  nameWithType: MergeJoinTarget<TInput>
  nameWithType.vb: MergeJoinTarget(Of TInput)
- uid: ALE.ETLBox.DataFlow.MergeJoinTarget`1.#ctor(ALE.ETLBox.ITask,System.Threading.Tasks.Dataflow.ITargetBlock{`0})
  name: MergeJoinTarget(ITask, ITargetBlock<TInput>)
  href: api/ALE.ETLBox.DataFlow.MergeJoinTarget-1.html#ALE_ETLBox_DataFlow_MergeJoinTarget_1__ctor_ALE_ETLBox_ITask_System_Threading_Tasks_Dataflow_ITargetBlock__0__
  commentId: M:ALE.ETLBox.DataFlow.MergeJoinTarget`1.#ctor(ALE.ETLBox.ITask,System.Threading.Tasks.Dataflow.ITargetBlock{`0})
  name.vb: MergeJoinTarget(ITask, ITargetBlock(Of TInput))
  fullName: ALE.ETLBox.DataFlow.MergeJoinTarget<TInput>.MergeJoinTarget(ALE.ETLBox.ITask, System.Threading.Tasks.Dataflow.ITargetBlock<TInput>)
  fullName.vb: ALE.ETLBox.DataFlow.MergeJoinTarget(Of TInput).MergeJoinTarget(ALE.ETLBox.ITask, System.Threading.Tasks.Dataflow.ITargetBlock(Of TInput))
  nameWithType: MergeJoinTarget<TInput>.MergeJoinTarget(ITask, ITargetBlock<TInput>)
  nameWithType.vb: MergeJoinTarget(Of TInput).MergeJoinTarget(ITask, ITargetBlock(Of TInput))
- uid: ALE.ETLBox.DataFlow.MergeJoinTarget`1.#ctor*
  name: MergeJoinTarget
  href: api/ALE.ETLBox.DataFlow.MergeJoinTarget-1.html#ALE_ETLBox_DataFlow_MergeJoinTarget_1__ctor_
  commentId: Overload:ALE.ETLBox.DataFlow.MergeJoinTarget`1.#ctor
  isSpec: "True"
  fullName: ALE.ETLBox.DataFlow.MergeJoinTarget<TInput>.MergeJoinTarget
  fullName.vb: ALE.ETLBox.DataFlow.MergeJoinTarget(Of TInput).MergeJoinTarget
  nameWithType: MergeJoinTarget<TInput>.MergeJoinTarget
  nameWithType.vb: MergeJoinTarget(Of TInput).MergeJoinTarget
- uid: ALE.ETLBox.DataFlow.MergeJoinTarget`1.AddPredecessorCompletion(System.Threading.Tasks.Task)
  name: AddPredecessorCompletion(Task)
  href: api/ALE.ETLBox.DataFlow.MergeJoinTarget-1.html#ALE_ETLBox_DataFlow_MergeJoinTarget_1_AddPredecessorCompletion_System_Threading_Tasks_Task_
  commentId: M:ALE.ETLBox.DataFlow.MergeJoinTarget`1.AddPredecessorCompletion(System.Threading.Tasks.Task)
  fullName: ALE.ETLBox.DataFlow.MergeJoinTarget<TInput>.AddPredecessorCompletion(System.Threading.Tasks.Task)
  fullName.vb: ALE.ETLBox.DataFlow.MergeJoinTarget(Of TInput).AddPredecessorCompletion(System.Threading.Tasks.Task)
  nameWithType: MergeJoinTarget<TInput>.AddPredecessorCompletion(Task)
  nameWithType.vb: MergeJoinTarget(Of TInput).AddPredecessorCompletion(Task)
- uid: ALE.ETLBox.DataFlow.MergeJoinTarget`1.AddPredecessorCompletion*
  name: AddPredecessorCompletion
  href: api/ALE.ETLBox.DataFlow.MergeJoinTarget-1.html#ALE_ETLBox_DataFlow_MergeJoinTarget_1_AddPredecessorCompletion_
  commentId: Overload:ALE.ETLBox.DataFlow.MergeJoinTarget`1.AddPredecessorCompletion
  isSpec: "True"
  fullName: ALE.ETLBox.DataFlow.MergeJoinTarget<TInput>.AddPredecessorCompletion
  fullName.vb: ALE.ETLBox.DataFlow.MergeJoinTarget(Of TInput).AddPredecessorCompletion
  nameWithType: MergeJoinTarget<TInput>.AddPredecessorCompletion
  nameWithType.vb: MergeJoinTarget(Of TInput).AddPredecessorCompletion
- uid: ALE.ETLBox.DataFlow.MergeJoinTarget`1.CheckCompleteAction
  name: CheckCompleteAction()
  href: api/ALE.ETLBox.DataFlow.MergeJoinTarget-1.html#ALE_ETLBox_DataFlow_MergeJoinTarget_1_CheckCompleteAction
  commentId: M:ALE.ETLBox.DataFlow.MergeJoinTarget`1.CheckCompleteAction
  fullName: ALE.ETLBox.DataFlow.MergeJoinTarget<TInput>.CheckCompleteAction()
  fullName.vb: ALE.ETLBox.DataFlow.MergeJoinTarget(Of TInput).CheckCompleteAction()
  nameWithType: MergeJoinTarget<TInput>.CheckCompleteAction()
  nameWithType.vb: MergeJoinTarget(Of TInput).CheckCompleteAction()
- uid: ALE.ETLBox.DataFlow.MergeJoinTarget`1.CheckCompleteAction*
  name: CheckCompleteAction
  href: api/ALE.ETLBox.DataFlow.MergeJoinTarget-1.html#ALE_ETLBox_DataFlow_MergeJoinTarget_1_CheckCompleteAction_
  commentId: Overload:ALE.ETLBox.DataFlow.MergeJoinTarget`1.CheckCompleteAction
  isSpec: "True"
  fullName: ALE.ETLBox.DataFlow.MergeJoinTarget<TInput>.CheckCompleteAction
  fullName.vb: ALE.ETLBox.DataFlow.MergeJoinTarget(Of TInput).CheckCompleteAction
  nameWithType: MergeJoinTarget<TInput>.CheckCompleteAction
  nameWithType.vb: MergeJoinTarget(Of TInput).CheckCompleteAction
- uid: ALE.ETLBox.DataFlow.MergeJoinTarget`1.Completion
  name: Completion
  href: api/ALE.ETLBox.DataFlow.MergeJoinTarget-1.html#ALE_ETLBox_DataFlow_MergeJoinTarget_1_Completion
  commentId: P:ALE.ETLBox.DataFlow.MergeJoinTarget`1.Completion
  fullName: ALE.ETLBox.DataFlow.MergeJoinTarget<TInput>.Completion
  fullName.vb: ALE.ETLBox.DataFlow.MergeJoinTarget(Of TInput).Completion
  nameWithType: MergeJoinTarget<TInput>.Completion
  nameWithType.vb: MergeJoinTarget(Of TInput).Completion
- uid: ALE.ETLBox.DataFlow.MergeJoinTarget`1.Completion*
  name: Completion
  href: api/ALE.ETLBox.DataFlow.MergeJoinTarget-1.html#ALE_ETLBox_DataFlow_MergeJoinTarget_1_Completion_
  commentId: Overload:ALE.ETLBox.DataFlow.MergeJoinTarget`1.Completion
  isSpec: "True"
  fullName: ALE.ETLBox.DataFlow.MergeJoinTarget<TInput>.Completion
  fullName.vb: ALE.ETLBox.DataFlow.MergeJoinTarget(Of TInput).Completion
  nameWithType: MergeJoinTarget<TInput>.Completion
  nameWithType.vb: MergeJoinTarget(Of TInput).Completion
- uid: ALE.ETLBox.DataFlow.MergeJoinTarget`1.PredecessorCompletions
  name: PredecessorCompletions
  href: api/ALE.ETLBox.DataFlow.MergeJoinTarget-1.html#ALE_ETLBox_DataFlow_MergeJoinTarget_1_PredecessorCompletions
  commentId: P:ALE.ETLBox.DataFlow.MergeJoinTarget`1.PredecessorCompletions
  fullName: ALE.ETLBox.DataFlow.MergeJoinTarget<TInput>.PredecessorCompletions
  fullName.vb: ALE.ETLBox.DataFlow.MergeJoinTarget(Of TInput).PredecessorCompletions
  nameWithType: MergeJoinTarget<TInput>.PredecessorCompletions
  nameWithType.vb: MergeJoinTarget(Of TInput).PredecessorCompletions
- uid: ALE.ETLBox.DataFlow.MergeJoinTarget`1.PredecessorCompletions*
  name: PredecessorCompletions
  href: api/ALE.ETLBox.DataFlow.MergeJoinTarget-1.html#ALE_ETLBox_DataFlow_MergeJoinTarget_1_PredecessorCompletions_
  commentId: Overload:ALE.ETLBox.DataFlow.MergeJoinTarget`1.PredecessorCompletions
  isSpec: "True"
  fullName: ALE.ETLBox.DataFlow.MergeJoinTarget<TInput>.PredecessorCompletions
  fullName.vb: ALE.ETLBox.DataFlow.MergeJoinTarget(Of TInput).PredecessorCompletions
  nameWithType: MergeJoinTarget<TInput>.PredecessorCompletions
  nameWithType.vb: MergeJoinTarget(Of TInput).PredecessorCompletions
- uid: ALE.ETLBox.DataFlow.MergeJoinTarget`1.TargetBlock
  name: TargetBlock
  href: api/ALE.ETLBox.DataFlow.MergeJoinTarget-1.html#ALE_ETLBox_DataFlow_MergeJoinTarget_1_TargetBlock
  commentId: P:ALE.ETLBox.DataFlow.MergeJoinTarget`1.TargetBlock
  fullName: ALE.ETLBox.DataFlow.MergeJoinTarget<TInput>.TargetBlock
  fullName.vb: ALE.ETLBox.DataFlow.MergeJoinTarget(Of TInput).TargetBlock
  nameWithType: MergeJoinTarget<TInput>.TargetBlock
  nameWithType.vb: MergeJoinTarget(Of TInput).TargetBlock
- uid: ALE.ETLBox.DataFlow.MergeJoinTarget`1.TargetBlock*
  name: TargetBlock
  href: api/ALE.ETLBox.DataFlow.MergeJoinTarget-1.html#ALE_ETLBox_DataFlow_MergeJoinTarget_1_TargetBlock_
  commentId: Overload:ALE.ETLBox.DataFlow.MergeJoinTarget`1.TargetBlock
  isSpec: "True"
  fullName: ALE.ETLBox.DataFlow.MergeJoinTarget<TInput>.TargetBlock
  fullName.vb: ALE.ETLBox.DataFlow.MergeJoinTarget(Of TInput).TargetBlock
  nameWithType: MergeJoinTarget<TInput>.TargetBlock
  nameWithType.vb: MergeJoinTarget(Of TInput).TargetBlock
- uid: ALE.ETLBox.DataFlow.MergeJoinTarget`1.Wait
  name: Wait()
  href: api/ALE.ETLBox.DataFlow.MergeJoinTarget-1.html#ALE_ETLBox_DataFlow_MergeJoinTarget_1_Wait
  commentId: M:ALE.ETLBox.DataFlow.MergeJoinTarget`1.Wait
  fullName: ALE.ETLBox.DataFlow.MergeJoinTarget<TInput>.Wait()
  fullName.vb: ALE.ETLBox.DataFlow.MergeJoinTarget(Of TInput).Wait()
  nameWithType: MergeJoinTarget<TInput>.Wait()
  nameWithType.vb: MergeJoinTarget(Of TInput).Wait()
- uid: ALE.ETLBox.DataFlow.MergeJoinTarget`1.Wait*
  name: Wait
  href: api/ALE.ETLBox.DataFlow.MergeJoinTarget-1.html#ALE_ETLBox_DataFlow_MergeJoinTarget_1_Wait_
  commentId: Overload:ALE.ETLBox.DataFlow.MergeJoinTarget`1.Wait
  isSpec: "True"
  fullName: ALE.ETLBox.DataFlow.MergeJoinTarget<TInput>.Wait
  fullName.vb: ALE.ETLBox.DataFlow.MergeJoinTarget(Of TInput).Wait
  nameWithType: MergeJoinTarget<TInput>.Wait
  nameWithType.vb: MergeJoinTarget(Of TInput).Wait
- uid: ALE.ETLBox.DataFlow.Multicast
  name: Multicast
  href: api/ALE.ETLBox.DataFlow.Multicast.html
  commentId: T:ALE.ETLBox.DataFlow.Multicast
  fullName: ALE.ETLBox.DataFlow.Multicast
  nameWithType: Multicast
- uid: ALE.ETLBox.DataFlow.Multicast.#ctor
  name: Multicast()
  href: api/ALE.ETLBox.DataFlow.Multicast.html#ALE_ETLBox_DataFlow_Multicast__ctor
  commentId: M:ALE.ETLBox.DataFlow.Multicast.#ctor
  fullName: ALE.ETLBox.DataFlow.Multicast.Multicast()
  nameWithType: Multicast.Multicast()
- uid: ALE.ETLBox.DataFlow.Multicast.#ctor(System.String)
  name: Multicast(String)
  href: api/ALE.ETLBox.DataFlow.Multicast.html#ALE_ETLBox_DataFlow_Multicast__ctor_System_String_
  commentId: M:ALE.ETLBox.DataFlow.Multicast.#ctor(System.String)
  fullName: ALE.ETLBox.DataFlow.Multicast.Multicast(System.String)
  nameWithType: Multicast.Multicast(String)
- uid: ALE.ETLBox.DataFlow.Multicast.#ctor*
  name: Multicast
  href: api/ALE.ETLBox.DataFlow.Multicast.html#ALE_ETLBox_DataFlow_Multicast__ctor_
  commentId: Overload:ALE.ETLBox.DataFlow.Multicast.#ctor
  isSpec: "True"
  fullName: ALE.ETLBox.DataFlow.Multicast.Multicast
  nameWithType: Multicast.Multicast
- uid: ALE.ETLBox.DataFlow.Multicast`1
  name: Multicast<TInput>
  href: api/ALE.ETLBox.DataFlow.Multicast-1.html
  commentId: T:ALE.ETLBox.DataFlow.Multicast`1
  name.vb: Multicast(Of TInput)
  fullName: ALE.ETLBox.DataFlow.Multicast<TInput>
  fullName.vb: ALE.ETLBox.DataFlow.Multicast(Of TInput)
  nameWithType: Multicast<TInput>
  nameWithType.vb: Multicast(Of TInput)
- uid: ALE.ETLBox.DataFlow.Multicast`1.#ctor
  name: Multicast()
  href: api/ALE.ETLBox.DataFlow.Multicast-1.html#ALE_ETLBox_DataFlow_Multicast_1__ctor
  commentId: M:ALE.ETLBox.DataFlow.Multicast`1.#ctor
  fullName: ALE.ETLBox.DataFlow.Multicast<TInput>.Multicast()
  fullName.vb: ALE.ETLBox.DataFlow.Multicast(Of TInput).Multicast()
  nameWithType: Multicast<TInput>.Multicast()
  nameWithType.vb: Multicast(Of TInput).Multicast()
- uid: ALE.ETLBox.DataFlow.Multicast`1.#ctor(System.String)
  name: Multicast(String)
  href: api/ALE.ETLBox.DataFlow.Multicast-1.html#ALE_ETLBox_DataFlow_Multicast_1__ctor_System_String_
  commentId: M:ALE.ETLBox.DataFlow.Multicast`1.#ctor(System.String)
  fullName: ALE.ETLBox.DataFlow.Multicast<TInput>.Multicast(System.String)
  fullName.vb: ALE.ETLBox.DataFlow.Multicast(Of TInput).Multicast(System.String)
  nameWithType: Multicast<TInput>.Multicast(String)
  nameWithType.vb: Multicast(Of TInput).Multicast(String)
- uid: ALE.ETLBox.DataFlow.Multicast`1.#ctor*
  name: Multicast
  href: api/ALE.ETLBox.DataFlow.Multicast-1.html#ALE_ETLBox_DataFlow_Multicast_1__ctor_
  commentId: Overload:ALE.ETLBox.DataFlow.Multicast`1.#ctor
  isSpec: "True"
  fullName: ALE.ETLBox.DataFlow.Multicast<TInput>.Multicast
  fullName.vb: ALE.ETLBox.DataFlow.Multicast(Of TInput).Multicast
  nameWithType: Multicast<TInput>.Multicast
  nameWithType.vb: Multicast(Of TInput).Multicast
- uid: ALE.ETLBox.DataFlow.Multicast`1.SourceBlock
  name: SourceBlock
  href: api/ALE.ETLBox.DataFlow.Multicast-1.html#ALE_ETLBox_DataFlow_Multicast_1_SourceBlock
  commentId: P:ALE.ETLBox.DataFlow.Multicast`1.SourceBlock
  fullName: ALE.ETLBox.DataFlow.Multicast<TInput>.SourceBlock
  fullName.vb: ALE.ETLBox.DataFlow.Multicast(Of TInput).SourceBlock
  nameWithType: Multicast<TInput>.SourceBlock
  nameWithType.vb: Multicast(Of TInput).SourceBlock
- uid: ALE.ETLBox.DataFlow.Multicast`1.SourceBlock*
  name: SourceBlock
  href: api/ALE.ETLBox.DataFlow.Multicast-1.html#ALE_ETLBox_DataFlow_Multicast_1_SourceBlock_
  commentId: Overload:ALE.ETLBox.DataFlow.Multicast`1.SourceBlock
  isSpec: "True"
  fullName: ALE.ETLBox.DataFlow.Multicast<TInput>.SourceBlock
  fullName.vb: ALE.ETLBox.DataFlow.Multicast(Of TInput).SourceBlock
  nameWithType: Multicast<TInput>.SourceBlock
  nameWithType.vb: Multicast(Of TInput).SourceBlock
- uid: ALE.ETLBox.DataFlow.Multicast`1.TargetBlock
  name: TargetBlock
  href: api/ALE.ETLBox.DataFlow.Multicast-1.html#ALE_ETLBox_DataFlow_Multicast_1_TargetBlock
  commentId: P:ALE.ETLBox.DataFlow.Multicast`1.TargetBlock
  fullName: ALE.ETLBox.DataFlow.Multicast<TInput>.TargetBlock
  fullName.vb: ALE.ETLBox.DataFlow.Multicast(Of TInput).TargetBlock
  nameWithType: Multicast<TInput>.TargetBlock
  nameWithType.vb: Multicast(Of TInput).TargetBlock
- uid: ALE.ETLBox.DataFlow.Multicast`1.TargetBlock*
  name: TargetBlock
  href: api/ALE.ETLBox.DataFlow.Multicast-1.html#ALE_ETLBox_DataFlow_Multicast_1_TargetBlock_
  commentId: Overload:ALE.ETLBox.DataFlow.Multicast`1.TargetBlock
  isSpec: "True"
  fullName: ALE.ETLBox.DataFlow.Multicast<TInput>.TargetBlock
  fullName.vb: ALE.ETLBox.DataFlow.Multicast(Of TInput).TargetBlock
  nameWithType: Multicast<TInput>.TargetBlock
  nameWithType.vb: Multicast(Of TInput).TargetBlock
- uid: ALE.ETLBox.DataFlow.Multicast`1.TaskName
  name: TaskName
  href: api/ALE.ETLBox.DataFlow.Multicast-1.html#ALE_ETLBox_DataFlow_Multicast_1_TaskName
  commentId: P:ALE.ETLBox.DataFlow.Multicast`1.TaskName
  fullName: ALE.ETLBox.DataFlow.Multicast<TInput>.TaskName
  fullName.vb: ALE.ETLBox.DataFlow.Multicast(Of TInput).TaskName
  nameWithType: Multicast<TInput>.TaskName
  nameWithType.vb: Multicast(Of TInput).TaskName
- uid: ALE.ETLBox.DataFlow.Multicast`1.TaskName*
  name: TaskName
  href: api/ALE.ETLBox.DataFlow.Multicast-1.html#ALE_ETLBox_DataFlow_Multicast_1_TaskName_
  commentId: Overload:ALE.ETLBox.DataFlow.Multicast`1.TaskName
  isSpec: "True"
  fullName: ALE.ETLBox.DataFlow.Multicast<TInput>.TaskName
  fullName.vb: ALE.ETLBox.DataFlow.Multicast(Of TInput).TaskName
  nameWithType: Multicast<TInput>.TaskName
  nameWithType.vb: Multicast(Of TInput).TaskName
- uid: ALE.ETLBox.DataFlow.ResourceType
  name: ResourceType
  href: api/ALE.ETLBox.DataFlow.ResourceType.html
  commentId: T:ALE.ETLBox.DataFlow.ResourceType
  fullName: ALE.ETLBox.DataFlow.ResourceType
  nameWithType: ResourceType
- uid: ALE.ETLBox.DataFlow.ResourceType.File
  name: File
  href: api/ALE.ETLBox.DataFlow.ResourceType.html#ALE_ETLBox_DataFlow_ResourceType_File
  commentId: F:ALE.ETLBox.DataFlow.ResourceType.File
  fullName: ALE.ETLBox.DataFlow.ResourceType.File
  nameWithType: ResourceType.File
- uid: ALE.ETLBox.DataFlow.ResourceType.Http
  name: Http
  href: api/ALE.ETLBox.DataFlow.ResourceType.html#ALE_ETLBox_DataFlow_ResourceType_Http
  commentId: F:ALE.ETLBox.DataFlow.ResourceType.Http
  fullName: ALE.ETLBox.DataFlow.ResourceType.Http
  nameWithType: ResourceType.Http
- uid: ALE.ETLBox.DataFlow.ResourceType.Unspecified
  name: Unspecified
  href: api/ALE.ETLBox.DataFlow.ResourceType.html#ALE_ETLBox_DataFlow_ResourceType_Unspecified
  commentId: F:ALE.ETLBox.DataFlow.ResourceType.Unspecified
  fullName: ALE.ETLBox.DataFlow.ResourceType.Unspecified
  nameWithType: ResourceType.Unspecified
- uid: ALE.ETLBox.DataFlow.RetrieveColumn
  name: RetrieveColumn
  href: api/ALE.ETLBox.DataFlow.RetrieveColumn.html
  commentId: T:ALE.ETLBox.DataFlow.RetrieveColumn
  fullName: ALE.ETLBox.DataFlow.RetrieveColumn
  nameWithType: RetrieveColumn
- uid: ALE.ETLBox.DataFlow.RetrieveColumn.#ctor(System.String)
  name: RetrieveColumn(String)
  href: api/ALE.ETLBox.DataFlow.RetrieveColumn.html#ALE_ETLBox_DataFlow_RetrieveColumn__ctor_System_String_
  commentId: M:ALE.ETLBox.DataFlow.RetrieveColumn.#ctor(System.String)
  fullName: ALE.ETLBox.DataFlow.RetrieveColumn.RetrieveColumn(System.String)
  nameWithType: RetrieveColumn.RetrieveColumn(String)
- uid: ALE.ETLBox.DataFlow.RetrieveColumn.#ctor*
  name: RetrieveColumn
  href: api/ALE.ETLBox.DataFlow.RetrieveColumn.html#ALE_ETLBox_DataFlow_RetrieveColumn__ctor_
  commentId: Overload:ALE.ETLBox.DataFlow.RetrieveColumn.#ctor
  isSpec: "True"
  fullName: ALE.ETLBox.DataFlow.RetrieveColumn.RetrieveColumn
  nameWithType: RetrieveColumn.RetrieveColumn
- uid: ALE.ETLBox.DataFlow.RetrieveColumn.LookupSourcePropertyName
  name: LookupSourcePropertyName
  href: api/ALE.ETLBox.DataFlow.RetrieveColumn.html#ALE_ETLBox_DataFlow_RetrieveColumn_LookupSourcePropertyName
  commentId: P:ALE.ETLBox.DataFlow.RetrieveColumn.LookupSourcePropertyName
  fullName: ALE.ETLBox.DataFlow.RetrieveColumn.LookupSourcePropertyName
  nameWithType: RetrieveColumn.LookupSourcePropertyName
- uid: ALE.ETLBox.DataFlow.RetrieveColumn.LookupSourcePropertyName*
  name: LookupSourcePropertyName
  href: api/ALE.ETLBox.DataFlow.RetrieveColumn.html#ALE_ETLBox_DataFlow_RetrieveColumn_LookupSourcePropertyName_
  commentId: Overload:ALE.ETLBox.DataFlow.RetrieveColumn.LookupSourcePropertyName
  isSpec: "True"
  fullName: ALE.ETLBox.DataFlow.RetrieveColumn.LookupSourcePropertyName
  nameWithType: RetrieveColumn.LookupSourcePropertyName
- uid: ALE.ETLBox.DataFlow.RowTransformation
  name: RowTransformation
  href: api/ALE.ETLBox.DataFlow.RowTransformation.html
  commentId: T:ALE.ETLBox.DataFlow.RowTransformation
  fullName: ALE.ETLBox.DataFlow.RowTransformation
  nameWithType: RowTransformation
- uid: ALE.ETLBox.DataFlow.RowTransformation.#ctor
  name: RowTransformation()
  href: api/ALE.ETLBox.DataFlow.RowTransformation.html#ALE_ETLBox_DataFlow_RowTransformation__ctor
  commentId: M:ALE.ETLBox.DataFlow.RowTransformation.#ctor
  fullName: ALE.ETLBox.DataFlow.RowTransformation.RowTransformation()
  nameWithType: RowTransformation.RowTransformation()
- uid: ALE.ETLBox.DataFlow.RowTransformation.#ctor(System.Func{System.Dynamic.ExpandoObject,System.Dynamic.ExpandoObject})
  name: RowTransformation(Func<ExpandoObject, ExpandoObject>)
  href: api/ALE.ETLBox.DataFlow.RowTransformation.html#ALE_ETLBox_DataFlow_RowTransformation__ctor_System_Func_System_Dynamic_ExpandoObject_System_Dynamic_ExpandoObject__
  commentId: M:ALE.ETLBox.DataFlow.RowTransformation.#ctor(System.Func{System.Dynamic.ExpandoObject,System.Dynamic.ExpandoObject})
  name.vb: RowTransformation(Func(Of ExpandoObject, ExpandoObject))
  fullName: ALE.ETLBox.DataFlow.RowTransformation.RowTransformation(System.Func<System.Dynamic.ExpandoObject, System.Dynamic.ExpandoObject>)
  fullName.vb: ALE.ETLBox.DataFlow.RowTransformation.RowTransformation(System.Func(Of System.Dynamic.ExpandoObject, System.Dynamic.ExpandoObject))
  nameWithType: RowTransformation.RowTransformation(Func<ExpandoObject, ExpandoObject>)
  nameWithType.vb: RowTransformation.RowTransformation(Func(Of ExpandoObject, ExpandoObject))
- uid: ALE.ETLBox.DataFlow.RowTransformation.#ctor(System.String,System.Func{System.Dynamic.ExpandoObject,System.Dynamic.ExpandoObject})
  name: RowTransformation(String, Func<ExpandoObject, ExpandoObject>)
  href: api/ALE.ETLBox.DataFlow.RowTransformation.html#ALE_ETLBox_DataFlow_RowTransformation__ctor_System_String_System_Func_System_Dynamic_ExpandoObject_System_Dynamic_ExpandoObject__
  commentId: M:ALE.ETLBox.DataFlow.RowTransformation.#ctor(System.String,System.Func{System.Dynamic.ExpandoObject,System.Dynamic.ExpandoObject})
  name.vb: RowTransformation(String, Func(Of ExpandoObject, ExpandoObject))
  fullName: ALE.ETLBox.DataFlow.RowTransformation.RowTransformation(System.String, System.Func<System.Dynamic.ExpandoObject, System.Dynamic.ExpandoObject>)
  fullName.vb: ALE.ETLBox.DataFlow.RowTransformation.RowTransformation(System.String, System.Func(Of System.Dynamic.ExpandoObject, System.Dynamic.ExpandoObject))
  nameWithType: RowTransformation.RowTransformation(String, Func<ExpandoObject, ExpandoObject>)
  nameWithType.vb: RowTransformation.RowTransformation(String, Func(Of ExpandoObject, ExpandoObject))
- uid: ALE.ETLBox.DataFlow.RowTransformation.#ctor(System.String,System.Func{System.Dynamic.ExpandoObject,System.Dynamic.ExpandoObject},System.Action)
  name: RowTransformation(String, Func<ExpandoObject, ExpandoObject>, Action)
  href: api/ALE.ETLBox.DataFlow.RowTransformation.html#ALE_ETLBox_DataFlow_RowTransformation__ctor_System_String_System_Func_System_Dynamic_ExpandoObject_System_Dynamic_ExpandoObject__System_Action_
  commentId: M:ALE.ETLBox.DataFlow.RowTransformation.#ctor(System.String,System.Func{System.Dynamic.ExpandoObject,System.Dynamic.ExpandoObject},System.Action)
  name.vb: RowTransformation(String, Func(Of ExpandoObject, ExpandoObject), Action)
  fullName: ALE.ETLBox.DataFlow.RowTransformation.RowTransformation(System.String, System.Func<System.Dynamic.ExpandoObject, System.Dynamic.ExpandoObject>, System.Action)
  fullName.vb: ALE.ETLBox.DataFlow.RowTransformation.RowTransformation(System.String, System.Func(Of System.Dynamic.ExpandoObject, System.Dynamic.ExpandoObject), System.Action)
  nameWithType: RowTransformation.RowTransformation(String, Func<ExpandoObject, ExpandoObject>, Action)
  nameWithType.vb: RowTransformation.RowTransformation(String, Func(Of ExpandoObject, ExpandoObject), Action)
- uid: ALE.ETLBox.DataFlow.RowTransformation.#ctor*
  name: RowTransformation
  href: api/ALE.ETLBox.DataFlow.RowTransformation.html#ALE_ETLBox_DataFlow_RowTransformation__ctor_
  commentId: Overload:ALE.ETLBox.DataFlow.RowTransformation.#ctor
  isSpec: "True"
  fullName: ALE.ETLBox.DataFlow.RowTransformation.RowTransformation
  nameWithType: RowTransformation.RowTransformation
- uid: ALE.ETLBox.DataFlow.RowTransformation`1
  name: RowTransformation<TInput>
  href: api/ALE.ETLBox.DataFlow.RowTransformation-1.html
  commentId: T:ALE.ETLBox.DataFlow.RowTransformation`1
  name.vb: RowTransformation(Of TInput)
  fullName: ALE.ETLBox.DataFlow.RowTransformation<TInput>
  fullName.vb: ALE.ETLBox.DataFlow.RowTransformation(Of TInput)
  nameWithType: RowTransformation<TInput>
  nameWithType.vb: RowTransformation(Of TInput)
- uid: ALE.ETLBox.DataFlow.RowTransformation`1.#ctor
  name: RowTransformation()
  href: api/ALE.ETLBox.DataFlow.RowTransformation-1.html#ALE_ETLBox_DataFlow_RowTransformation_1__ctor
  commentId: M:ALE.ETLBox.DataFlow.RowTransformation`1.#ctor
  fullName: ALE.ETLBox.DataFlow.RowTransformation<TInput>.RowTransformation()
  fullName.vb: ALE.ETLBox.DataFlow.RowTransformation(Of TInput).RowTransformation()
  nameWithType: RowTransformation<TInput>.RowTransformation()
  nameWithType.vb: RowTransformation(Of TInput).RowTransformation()
- uid: ALE.ETLBox.DataFlow.RowTransformation`1.#ctor(System.Func{`0,`0})
  name: RowTransformation(Func<TInput, TInput>)
  href: api/ALE.ETLBox.DataFlow.RowTransformation-1.html#ALE_ETLBox_DataFlow_RowTransformation_1__ctor_System_Func__0__0__
  commentId: M:ALE.ETLBox.DataFlow.RowTransformation`1.#ctor(System.Func{`0,`0})
  name.vb: RowTransformation(Func(Of TInput, TInput))
  fullName: ALE.ETLBox.DataFlow.RowTransformation<TInput>.RowTransformation(System.Func<TInput, TInput>)
  fullName.vb: ALE.ETLBox.DataFlow.RowTransformation(Of TInput).RowTransformation(System.Func(Of TInput, TInput))
  nameWithType: RowTransformation<TInput>.RowTransformation(Func<TInput, TInput>)
  nameWithType.vb: RowTransformation(Of TInput).RowTransformation(Func(Of TInput, TInput))
- uid: ALE.ETLBox.DataFlow.RowTransformation`1.#ctor(System.String,System.Func{`0,`0})
  name: RowTransformation(String, Func<TInput, TInput>)
  href: api/ALE.ETLBox.DataFlow.RowTransformation-1.html#ALE_ETLBox_DataFlow_RowTransformation_1__ctor_System_String_System_Func__0__0__
  commentId: M:ALE.ETLBox.DataFlow.RowTransformation`1.#ctor(System.String,System.Func{`0,`0})
  name.vb: RowTransformation(String, Func(Of TInput, TInput))
  fullName: ALE.ETLBox.DataFlow.RowTransformation<TInput>.RowTransformation(System.String, System.Func<TInput, TInput>)
  fullName.vb: ALE.ETLBox.DataFlow.RowTransformation(Of TInput).RowTransformation(System.String, System.Func(Of TInput, TInput))
  nameWithType: RowTransformation<TInput>.RowTransformation(String, Func<TInput, TInput>)
  nameWithType.vb: RowTransformation(Of TInput).RowTransformation(String, Func(Of TInput, TInput))
- uid: ALE.ETLBox.DataFlow.RowTransformation`1.#ctor(System.String,System.Func{`0,`0},System.Action)
  name: RowTransformation(String, Func<TInput, TInput>, Action)
  href: api/ALE.ETLBox.DataFlow.RowTransformation-1.html#ALE_ETLBox_DataFlow_RowTransformation_1__ctor_System_String_System_Func__0__0__System_Action_
  commentId: M:ALE.ETLBox.DataFlow.RowTransformation`1.#ctor(System.String,System.Func{`0,`0},System.Action)
  name.vb: RowTransformation(String, Func(Of TInput, TInput), Action)
  fullName: ALE.ETLBox.DataFlow.RowTransformation<TInput>.RowTransformation(System.String, System.Func<TInput, TInput>, System.Action)
  fullName.vb: ALE.ETLBox.DataFlow.RowTransformation(Of TInput).RowTransformation(System.String, System.Func(Of TInput, TInput), System.Action)
  nameWithType: RowTransformation<TInput>.RowTransformation(String, Func<TInput, TInput>, Action)
  nameWithType.vb: RowTransformation(Of TInput).RowTransformation(String, Func(Of TInput, TInput), Action)
- uid: ALE.ETLBox.DataFlow.RowTransformation`1.#ctor*
  name: RowTransformation
  href: api/ALE.ETLBox.DataFlow.RowTransformation-1.html#ALE_ETLBox_DataFlow_RowTransformation_1__ctor_
  commentId: Overload:ALE.ETLBox.DataFlow.RowTransformation`1.#ctor
  isSpec: "True"
  fullName: ALE.ETLBox.DataFlow.RowTransformation<TInput>.RowTransformation
  fullName.vb: ALE.ETLBox.DataFlow.RowTransformation(Of TInput).RowTransformation
  nameWithType: RowTransformation<TInput>.RowTransformation
  nameWithType.vb: RowTransformation(Of TInput).RowTransformation
- uid: ALE.ETLBox.DataFlow.RowTransformation`2
  name: RowTransformation<TInput, TOutput>
  href: api/ALE.ETLBox.DataFlow.RowTransformation-2.html
  commentId: T:ALE.ETLBox.DataFlow.RowTransformation`2
  name.vb: RowTransformation(Of TInput, TOutput)
  fullName: ALE.ETLBox.DataFlow.RowTransformation<TInput, TOutput>
  fullName.vb: ALE.ETLBox.DataFlow.RowTransformation(Of TInput, TOutput)
  nameWithType: RowTransformation<TInput, TOutput>
  nameWithType.vb: RowTransformation(Of TInput, TOutput)
- uid: ALE.ETLBox.DataFlow.RowTransformation`2.#ctor
  name: RowTransformation()
  href: api/ALE.ETLBox.DataFlow.RowTransformation-2.html#ALE_ETLBox_DataFlow_RowTransformation_2__ctor
  commentId: M:ALE.ETLBox.DataFlow.RowTransformation`2.#ctor
  fullName: ALE.ETLBox.DataFlow.RowTransformation<TInput, TOutput>.RowTransformation()
  fullName.vb: ALE.ETLBox.DataFlow.RowTransformation(Of TInput, TOutput).RowTransformation()
  nameWithType: RowTransformation<TInput, TOutput>.RowTransformation()
  nameWithType.vb: RowTransformation(Of TInput, TOutput).RowTransformation()
- uid: ALE.ETLBox.DataFlow.RowTransformation`2.#ctor(System.Func{`0,`1})
  name: RowTransformation(Func<TInput, TOutput>)
  href: api/ALE.ETLBox.DataFlow.RowTransformation-2.html#ALE_ETLBox_DataFlow_RowTransformation_2__ctor_System_Func__0__1__
  commentId: M:ALE.ETLBox.DataFlow.RowTransformation`2.#ctor(System.Func{`0,`1})
  name.vb: RowTransformation(Func(Of TInput, TOutput))
  fullName: ALE.ETLBox.DataFlow.RowTransformation<TInput, TOutput>.RowTransformation(System.Func<TInput, TOutput>)
  fullName.vb: ALE.ETLBox.DataFlow.RowTransformation(Of TInput, TOutput).RowTransformation(System.Func(Of TInput, TOutput))
  nameWithType: RowTransformation<TInput, TOutput>.RowTransformation(Func<TInput, TOutput>)
  nameWithType.vb: RowTransformation(Of TInput, TOutput).RowTransformation(Func(Of TInput, TOutput))
- uid: ALE.ETLBox.DataFlow.RowTransformation`2.#ctor(System.String,System.Func{`0,`1})
  name: RowTransformation(String, Func<TInput, TOutput>)
  href: api/ALE.ETLBox.DataFlow.RowTransformation-2.html#ALE_ETLBox_DataFlow_RowTransformation_2__ctor_System_String_System_Func__0__1__
  commentId: M:ALE.ETLBox.DataFlow.RowTransformation`2.#ctor(System.String,System.Func{`0,`1})
  name.vb: RowTransformation(String, Func(Of TInput, TOutput))
  fullName: ALE.ETLBox.DataFlow.RowTransformation<TInput, TOutput>.RowTransformation(System.String, System.Func<TInput, TOutput>)
  fullName.vb: ALE.ETLBox.DataFlow.RowTransformation(Of TInput, TOutput).RowTransformation(System.String, System.Func(Of TInput, TOutput))
  nameWithType: RowTransformation<TInput, TOutput>.RowTransformation(String, Func<TInput, TOutput>)
  nameWithType.vb: RowTransformation(Of TInput, TOutput).RowTransformation(String, Func(Of TInput, TOutput))
- uid: ALE.ETLBox.DataFlow.RowTransformation`2.#ctor(System.String,System.Func{`0,`1},System.Action)
  name: RowTransformation(String, Func<TInput, TOutput>, Action)
  href: api/ALE.ETLBox.DataFlow.RowTransformation-2.html#ALE_ETLBox_DataFlow_RowTransformation_2__ctor_System_String_System_Func__0__1__System_Action_
  commentId: M:ALE.ETLBox.DataFlow.RowTransformation`2.#ctor(System.String,System.Func{`0,`1},System.Action)
  name.vb: RowTransformation(String, Func(Of TInput, TOutput), Action)
  fullName: ALE.ETLBox.DataFlow.RowTransformation<TInput, TOutput>.RowTransformation(System.String, System.Func<TInput, TOutput>, System.Action)
  fullName.vb: ALE.ETLBox.DataFlow.RowTransformation(Of TInput, TOutput).RowTransformation(System.String, System.Func(Of TInput, TOutput), System.Action)
  nameWithType: RowTransformation<TInput, TOutput>.RowTransformation(String, Func<TInput, TOutput>, Action)
  nameWithType.vb: RowTransformation(Of TInput, TOutput).RowTransformation(String, Func(Of TInput, TOutput), Action)
- uid: ALE.ETLBox.DataFlow.RowTransformation`2.#ctor*
  name: RowTransformation
  href: api/ALE.ETLBox.DataFlow.RowTransformation-2.html#ALE_ETLBox_DataFlow_RowTransformation_2__ctor_
  commentId: Overload:ALE.ETLBox.DataFlow.RowTransformation`2.#ctor
  isSpec: "True"
  fullName: ALE.ETLBox.DataFlow.RowTransformation<TInput, TOutput>.RowTransformation
  fullName.vb: ALE.ETLBox.DataFlow.RowTransformation(Of TInput, TOutput).RowTransformation
  nameWithType: RowTransformation<TInput, TOutput>.RowTransformation
  nameWithType.vb: RowTransformation(Of TInput, TOutput).RowTransformation
- uid: ALE.ETLBox.DataFlow.RowTransformation`2.InitAction
  name: InitAction
  href: api/ALE.ETLBox.DataFlow.RowTransformation-2.html#ALE_ETLBox_DataFlow_RowTransformation_2_InitAction
  commentId: P:ALE.ETLBox.DataFlow.RowTransformation`2.InitAction
  fullName: ALE.ETLBox.DataFlow.RowTransformation<TInput, TOutput>.InitAction
  fullName.vb: ALE.ETLBox.DataFlow.RowTransformation(Of TInput, TOutput).InitAction
  nameWithType: RowTransformation<TInput, TOutput>.InitAction
  nameWithType.vb: RowTransformation(Of TInput, TOutput).InitAction
- uid: ALE.ETLBox.DataFlow.RowTransformation`2.InitAction*
  name: InitAction
  href: api/ALE.ETLBox.DataFlow.RowTransformation-2.html#ALE_ETLBox_DataFlow_RowTransformation_2_InitAction_
  commentId: Overload:ALE.ETLBox.DataFlow.RowTransformation`2.InitAction
  isSpec: "True"
  fullName: ALE.ETLBox.DataFlow.RowTransformation<TInput, TOutput>.InitAction
  fullName.vb: ALE.ETLBox.DataFlow.RowTransformation(Of TInput, TOutput).InitAction
  nameWithType: RowTransformation<TInput, TOutput>.InitAction
  nameWithType.vb: RowTransformation(Of TInput, TOutput).InitAction
- uid: ALE.ETLBox.DataFlow.RowTransformation`2.LinkErrorTo(ALE.ETLBox.DataFlow.IDataFlowLinkTarget{ALE.ETLBox.DataFlow.ETLBoxError})
  name: LinkErrorTo(IDataFlowLinkTarget<ETLBoxError>)
  href: api/ALE.ETLBox.DataFlow.RowTransformation-2.html#ALE_ETLBox_DataFlow_RowTransformation_2_LinkErrorTo_ALE_ETLBox_DataFlow_IDataFlowLinkTarget_ALE_ETLBox_DataFlow_ETLBoxError__
  commentId: M:ALE.ETLBox.DataFlow.RowTransformation`2.LinkErrorTo(ALE.ETLBox.DataFlow.IDataFlowLinkTarget{ALE.ETLBox.DataFlow.ETLBoxError})
  name.vb: LinkErrorTo(IDataFlowLinkTarget(Of ETLBoxError))
  fullName: ALE.ETLBox.DataFlow.RowTransformation<TInput, TOutput>.LinkErrorTo(ALE.ETLBox.DataFlow.IDataFlowLinkTarget<ALE.ETLBox.DataFlow.ETLBoxError>)
  fullName.vb: ALE.ETLBox.DataFlow.RowTransformation(Of TInput, TOutput).LinkErrorTo(ALE.ETLBox.DataFlow.IDataFlowLinkTarget(Of ALE.ETLBox.DataFlow.ETLBoxError))
  nameWithType: RowTransformation<TInput, TOutput>.LinkErrorTo(IDataFlowLinkTarget<ETLBoxError>)
  nameWithType.vb: RowTransformation(Of TInput, TOutput).LinkErrorTo(IDataFlowLinkTarget(Of ETLBoxError))
- uid: ALE.ETLBox.DataFlow.RowTransformation`2.LinkErrorTo*
  name: LinkErrorTo
  href: api/ALE.ETLBox.DataFlow.RowTransformation-2.html#ALE_ETLBox_DataFlow_RowTransformation_2_LinkErrorTo_
  commentId: Overload:ALE.ETLBox.DataFlow.RowTransformation`2.LinkErrorTo
  isSpec: "True"
  fullName: ALE.ETLBox.DataFlow.RowTransformation<TInput, TOutput>.LinkErrorTo
  fullName.vb: ALE.ETLBox.DataFlow.RowTransformation(Of TInput, TOutput).LinkErrorTo
  nameWithType: RowTransformation<TInput, TOutput>.LinkErrorTo
  nameWithType.vb: RowTransformation(Of TInput, TOutput).LinkErrorTo
- uid: ALE.ETLBox.DataFlow.RowTransformation`2.SourceBlock
  name: SourceBlock
  href: api/ALE.ETLBox.DataFlow.RowTransformation-2.html#ALE_ETLBox_DataFlow_RowTransformation_2_SourceBlock
  commentId: P:ALE.ETLBox.DataFlow.RowTransformation`2.SourceBlock
  fullName: ALE.ETLBox.DataFlow.RowTransformation<TInput, TOutput>.SourceBlock
  fullName.vb: ALE.ETLBox.DataFlow.RowTransformation(Of TInput, TOutput).SourceBlock
  nameWithType: RowTransformation<TInput, TOutput>.SourceBlock
  nameWithType.vb: RowTransformation(Of TInput, TOutput).SourceBlock
- uid: ALE.ETLBox.DataFlow.RowTransformation`2.SourceBlock*
  name: SourceBlock
  href: api/ALE.ETLBox.DataFlow.RowTransformation-2.html#ALE_ETLBox_DataFlow_RowTransformation_2_SourceBlock_
  commentId: Overload:ALE.ETLBox.DataFlow.RowTransformation`2.SourceBlock
  isSpec: "True"
  fullName: ALE.ETLBox.DataFlow.RowTransformation<TInput, TOutput>.SourceBlock
  fullName.vb: ALE.ETLBox.DataFlow.RowTransformation(Of TInput, TOutput).SourceBlock
  nameWithType: RowTransformation<TInput, TOutput>.SourceBlock
  nameWithType.vb: RowTransformation(Of TInput, TOutput).SourceBlock
- uid: ALE.ETLBox.DataFlow.RowTransformation`2.TargetBlock
  name: TargetBlock
  href: api/ALE.ETLBox.DataFlow.RowTransformation-2.html#ALE_ETLBox_DataFlow_RowTransformation_2_TargetBlock
  commentId: P:ALE.ETLBox.DataFlow.RowTransformation`2.TargetBlock
  fullName: ALE.ETLBox.DataFlow.RowTransformation<TInput, TOutput>.TargetBlock
  fullName.vb: ALE.ETLBox.DataFlow.RowTransformation(Of TInput, TOutput).TargetBlock
  nameWithType: RowTransformation<TInput, TOutput>.TargetBlock
  nameWithType.vb: RowTransformation(Of TInput, TOutput).TargetBlock
- uid: ALE.ETLBox.DataFlow.RowTransformation`2.TargetBlock*
  name: TargetBlock
  href: api/ALE.ETLBox.DataFlow.RowTransformation-2.html#ALE_ETLBox_DataFlow_RowTransformation_2_TargetBlock_
  commentId: Overload:ALE.ETLBox.DataFlow.RowTransformation`2.TargetBlock
  isSpec: "True"
  fullName: ALE.ETLBox.DataFlow.RowTransformation<TInput, TOutput>.TargetBlock
  fullName.vb: ALE.ETLBox.DataFlow.RowTransformation(Of TInput, TOutput).TargetBlock
  nameWithType: RowTransformation<TInput, TOutput>.TargetBlock
  nameWithType.vb: RowTransformation(Of TInput, TOutput).TargetBlock
- uid: ALE.ETLBox.DataFlow.RowTransformation`2.TaskName
  name: TaskName
  href: api/ALE.ETLBox.DataFlow.RowTransformation-2.html#ALE_ETLBox_DataFlow_RowTransformation_2_TaskName
  commentId: P:ALE.ETLBox.DataFlow.RowTransformation`2.TaskName
  fullName: ALE.ETLBox.DataFlow.RowTransformation<TInput, TOutput>.TaskName
  fullName.vb: ALE.ETLBox.DataFlow.RowTransformation(Of TInput, TOutput).TaskName
  nameWithType: RowTransformation<TInput, TOutput>.TaskName
  nameWithType.vb: RowTransformation(Of TInput, TOutput).TaskName
- uid: ALE.ETLBox.DataFlow.RowTransformation`2.TaskName*
  name: TaskName
  href: api/ALE.ETLBox.DataFlow.RowTransformation-2.html#ALE_ETLBox_DataFlow_RowTransformation_2_TaskName_
  commentId: Overload:ALE.ETLBox.DataFlow.RowTransformation`2.TaskName
  isSpec: "True"
  fullName: ALE.ETLBox.DataFlow.RowTransformation<TInput, TOutput>.TaskName
  fullName.vb: ALE.ETLBox.DataFlow.RowTransformation(Of TInput, TOutput).TaskName
  nameWithType: RowTransformation<TInput, TOutput>.TaskName
  nameWithType.vb: RowTransformation(Of TInput, TOutput).TaskName
- uid: ALE.ETLBox.DataFlow.RowTransformation`2.TransformationFunc
  name: TransformationFunc
  href: api/ALE.ETLBox.DataFlow.RowTransformation-2.html#ALE_ETLBox_DataFlow_RowTransformation_2_TransformationFunc
  commentId: P:ALE.ETLBox.DataFlow.RowTransformation`2.TransformationFunc
  fullName: ALE.ETLBox.DataFlow.RowTransformation<TInput, TOutput>.TransformationFunc
  fullName.vb: ALE.ETLBox.DataFlow.RowTransformation(Of TInput, TOutput).TransformationFunc
  nameWithType: RowTransformation<TInput, TOutput>.TransformationFunc
  nameWithType.vb: RowTransformation(Of TInput, TOutput).TransformationFunc
- uid: ALE.ETLBox.DataFlow.RowTransformation`2.TransformationFunc*
  name: TransformationFunc
  href: api/ALE.ETLBox.DataFlow.RowTransformation-2.html#ALE_ETLBox_DataFlow_RowTransformation_2_TransformationFunc_
  commentId: Overload:ALE.ETLBox.DataFlow.RowTransformation`2.TransformationFunc
  isSpec: "True"
  fullName: ALE.ETLBox.DataFlow.RowTransformation<TInput, TOutput>.TransformationFunc
  fullName.vb: ALE.ETLBox.DataFlow.RowTransformation(Of TInput, TOutput).TransformationFunc
  nameWithType: RowTransformation<TInput, TOutput>.TransformationFunc
  nameWithType.vb: RowTransformation(Of TInput, TOutput).TransformationFunc
- uid: ALE.ETLBox.DataFlow.RowTransformation`2.WasInitialized
  name: WasInitialized
  href: api/ALE.ETLBox.DataFlow.RowTransformation-2.html#ALE_ETLBox_DataFlow_RowTransformation_2_WasInitialized
  commentId: P:ALE.ETLBox.DataFlow.RowTransformation`2.WasInitialized
  fullName: ALE.ETLBox.DataFlow.RowTransformation<TInput, TOutput>.WasInitialized
  fullName.vb: ALE.ETLBox.DataFlow.RowTransformation(Of TInput, TOutput).WasInitialized
  nameWithType: RowTransformation<TInput, TOutput>.WasInitialized
  nameWithType.vb: RowTransformation(Of TInput, TOutput).WasInitialized
- uid: ALE.ETLBox.DataFlow.RowTransformation`2.WasInitialized*
  name: WasInitialized
  href: api/ALE.ETLBox.DataFlow.RowTransformation-2.html#ALE_ETLBox_DataFlow_RowTransformation_2_WasInitialized_
  commentId: Overload:ALE.ETLBox.DataFlow.RowTransformation`2.WasInitialized
  isSpec: "True"
  fullName: ALE.ETLBox.DataFlow.RowTransformation<TInput, TOutput>.WasInitialized
  fullName.vb: ALE.ETLBox.DataFlow.RowTransformation(Of TInput, TOutput).WasInitialized
  nameWithType: RowTransformation<TInput, TOutput>.WasInitialized
  nameWithType.vb: RowTransformation(Of TInput, TOutput).WasInitialized
- uid: ALE.ETLBox.DataFlow.Sort
  name: Sort
  href: api/ALE.ETLBox.DataFlow.Sort.html
  commentId: T:ALE.ETLBox.DataFlow.Sort
  fullName: ALE.ETLBox.DataFlow.Sort
  nameWithType: Sort
- uid: ALE.ETLBox.DataFlow.Sort.#ctor
  name: Sort()
  href: api/ALE.ETLBox.DataFlow.Sort.html#ALE_ETLBox_DataFlow_Sort__ctor
  commentId: M:ALE.ETLBox.DataFlow.Sort.#ctor
  fullName: ALE.ETLBox.DataFlow.Sort.Sort()
  nameWithType: Sort.Sort()
- uid: ALE.ETLBox.DataFlow.Sort.#ctor(System.Comparison{System.Dynamic.ExpandoObject})
  name: Sort(Comparison<ExpandoObject>)
  href: api/ALE.ETLBox.DataFlow.Sort.html#ALE_ETLBox_DataFlow_Sort__ctor_System_Comparison_System_Dynamic_ExpandoObject__
  commentId: M:ALE.ETLBox.DataFlow.Sort.#ctor(System.Comparison{System.Dynamic.ExpandoObject})
  name.vb: Sort(Comparison(Of ExpandoObject))
  fullName: ALE.ETLBox.DataFlow.Sort.Sort(System.Comparison<System.Dynamic.ExpandoObject>)
  fullName.vb: ALE.ETLBox.DataFlow.Sort.Sort(System.Comparison(Of System.Dynamic.ExpandoObject))
  nameWithType: Sort.Sort(Comparison<ExpandoObject>)
  nameWithType.vb: Sort.Sort(Comparison(Of ExpandoObject))
- uid: ALE.ETLBox.DataFlow.Sort.#ctor(System.String,System.Comparison{System.Dynamic.ExpandoObject})
  name: Sort(String, Comparison<ExpandoObject>)
  href: api/ALE.ETLBox.DataFlow.Sort.html#ALE_ETLBox_DataFlow_Sort__ctor_System_String_System_Comparison_System_Dynamic_ExpandoObject__
  commentId: M:ALE.ETLBox.DataFlow.Sort.#ctor(System.String,System.Comparison{System.Dynamic.ExpandoObject})
  name.vb: Sort(String, Comparison(Of ExpandoObject))
  fullName: ALE.ETLBox.DataFlow.Sort.Sort(System.String, System.Comparison<System.Dynamic.ExpandoObject>)
  fullName.vb: ALE.ETLBox.DataFlow.Sort.Sort(System.String, System.Comparison(Of System.Dynamic.ExpandoObject))
  nameWithType: Sort.Sort(String, Comparison<ExpandoObject>)
  nameWithType.vb: Sort.Sort(String, Comparison(Of ExpandoObject))
- uid: ALE.ETLBox.DataFlow.Sort.#ctor*
  name: Sort
  href: api/ALE.ETLBox.DataFlow.Sort.html#ALE_ETLBox_DataFlow_Sort__ctor_
  commentId: Overload:ALE.ETLBox.DataFlow.Sort.#ctor
  isSpec: "True"
  fullName: ALE.ETLBox.DataFlow.Sort.Sort
  nameWithType: Sort.Sort
- uid: ALE.ETLBox.DataFlow.Sort`1
  name: Sort<TInput>
  href: api/ALE.ETLBox.DataFlow.Sort-1.html
  commentId: T:ALE.ETLBox.DataFlow.Sort`1
  name.vb: Sort(Of TInput)
  fullName: ALE.ETLBox.DataFlow.Sort<TInput>
  fullName.vb: ALE.ETLBox.DataFlow.Sort(Of TInput)
  nameWithType: Sort<TInput>
  nameWithType.vb: Sort(Of TInput)
- uid: ALE.ETLBox.DataFlow.Sort`1.#ctor
  name: Sort()
  href: api/ALE.ETLBox.DataFlow.Sort-1.html#ALE_ETLBox_DataFlow_Sort_1__ctor
  commentId: M:ALE.ETLBox.DataFlow.Sort`1.#ctor
  fullName: ALE.ETLBox.DataFlow.Sort<TInput>.Sort()
  fullName.vb: ALE.ETLBox.DataFlow.Sort(Of TInput).Sort()
  nameWithType: Sort<TInput>.Sort()
  nameWithType.vb: Sort(Of TInput).Sort()
- uid: ALE.ETLBox.DataFlow.Sort`1.#ctor(System.Comparison{`0})
  name: Sort(Comparison<TInput>)
  href: api/ALE.ETLBox.DataFlow.Sort-1.html#ALE_ETLBox_DataFlow_Sort_1__ctor_System_Comparison__0__
  commentId: M:ALE.ETLBox.DataFlow.Sort`1.#ctor(System.Comparison{`0})
  name.vb: Sort(Comparison(Of TInput))
  fullName: ALE.ETLBox.DataFlow.Sort<TInput>.Sort(System.Comparison<TInput>)
  fullName.vb: ALE.ETLBox.DataFlow.Sort(Of TInput).Sort(System.Comparison(Of TInput))
  nameWithType: Sort<TInput>.Sort(Comparison<TInput>)
  nameWithType.vb: Sort(Of TInput).Sort(Comparison(Of TInput))
- uid: ALE.ETLBox.DataFlow.Sort`1.#ctor(System.String,System.Comparison{`0})
  name: Sort(String, Comparison<TInput>)
  href: api/ALE.ETLBox.DataFlow.Sort-1.html#ALE_ETLBox_DataFlow_Sort_1__ctor_System_String_System_Comparison__0__
  commentId: M:ALE.ETLBox.DataFlow.Sort`1.#ctor(System.String,System.Comparison{`0})
  name.vb: Sort(String, Comparison(Of TInput))
  fullName: ALE.ETLBox.DataFlow.Sort<TInput>.Sort(System.String, System.Comparison<TInput>)
  fullName.vb: ALE.ETLBox.DataFlow.Sort(Of TInput).Sort(System.String, System.Comparison(Of TInput))
  nameWithType: Sort<TInput>.Sort(String, Comparison<TInput>)
  nameWithType.vb: Sort(Of TInput).Sort(String, Comparison(Of TInput))
- uid: ALE.ETLBox.DataFlow.Sort`1.#ctor*
  name: Sort
  href: api/ALE.ETLBox.DataFlow.Sort-1.html#ALE_ETLBox_DataFlow_Sort_1__ctor_
  commentId: Overload:ALE.ETLBox.DataFlow.Sort`1.#ctor
  isSpec: "True"
  fullName: ALE.ETLBox.DataFlow.Sort<TInput>.Sort
  fullName.vb: ALE.ETLBox.DataFlow.Sort(Of TInput).Sort
  nameWithType: Sort<TInput>.Sort
  nameWithType.vb: Sort(Of TInput).Sort
- uid: ALE.ETLBox.DataFlow.Sort`1.SortFunction
  name: SortFunction
  href: api/ALE.ETLBox.DataFlow.Sort-1.html#ALE_ETLBox_DataFlow_Sort_1_SortFunction
  commentId: P:ALE.ETLBox.DataFlow.Sort`1.SortFunction
  fullName: ALE.ETLBox.DataFlow.Sort<TInput>.SortFunction
  fullName.vb: ALE.ETLBox.DataFlow.Sort(Of TInput).SortFunction
  nameWithType: Sort<TInput>.SortFunction
  nameWithType.vb: Sort(Of TInput).SortFunction
- uid: ALE.ETLBox.DataFlow.Sort`1.SortFunction*
  name: SortFunction
  href: api/ALE.ETLBox.DataFlow.Sort-1.html#ALE_ETLBox_DataFlow_Sort_1_SortFunction_
  commentId: Overload:ALE.ETLBox.DataFlow.Sort`1.SortFunction
  isSpec: "True"
  fullName: ALE.ETLBox.DataFlow.Sort<TInput>.SortFunction
  fullName.vb: ALE.ETLBox.DataFlow.Sort(Of TInput).SortFunction
  nameWithType: Sort<TInput>.SortFunction
  nameWithType.vb: Sort(Of TInput).SortFunction
- uid: ALE.ETLBox.DataFlow.Sort`1.SourceBlock
  name: SourceBlock
  href: api/ALE.ETLBox.DataFlow.Sort-1.html#ALE_ETLBox_DataFlow_Sort_1_SourceBlock
  commentId: P:ALE.ETLBox.DataFlow.Sort`1.SourceBlock
  fullName: ALE.ETLBox.DataFlow.Sort<TInput>.SourceBlock
  fullName.vb: ALE.ETLBox.DataFlow.Sort(Of TInput).SourceBlock
  nameWithType: Sort<TInput>.SourceBlock
  nameWithType.vb: Sort(Of TInput).SourceBlock
- uid: ALE.ETLBox.DataFlow.Sort`1.SourceBlock*
  name: SourceBlock
  href: api/ALE.ETLBox.DataFlow.Sort-1.html#ALE_ETLBox_DataFlow_Sort_1_SourceBlock_
  commentId: Overload:ALE.ETLBox.DataFlow.Sort`1.SourceBlock
  isSpec: "True"
  fullName: ALE.ETLBox.DataFlow.Sort<TInput>.SourceBlock
  fullName.vb: ALE.ETLBox.DataFlow.Sort(Of TInput).SourceBlock
  nameWithType: Sort<TInput>.SourceBlock
  nameWithType.vb: Sort(Of TInput).SourceBlock
- uid: ALE.ETLBox.DataFlow.Sort`1.TargetBlock
  name: TargetBlock
  href: api/ALE.ETLBox.DataFlow.Sort-1.html#ALE_ETLBox_DataFlow_Sort_1_TargetBlock
  commentId: P:ALE.ETLBox.DataFlow.Sort`1.TargetBlock
  fullName: ALE.ETLBox.DataFlow.Sort<TInput>.TargetBlock
  fullName.vb: ALE.ETLBox.DataFlow.Sort(Of TInput).TargetBlock
  nameWithType: Sort<TInput>.TargetBlock
  nameWithType.vb: Sort(Of TInput).TargetBlock
- uid: ALE.ETLBox.DataFlow.Sort`1.TargetBlock*
  name: TargetBlock
  href: api/ALE.ETLBox.DataFlow.Sort-1.html#ALE_ETLBox_DataFlow_Sort_1_TargetBlock_
  commentId: Overload:ALE.ETLBox.DataFlow.Sort`1.TargetBlock
  isSpec: "True"
  fullName: ALE.ETLBox.DataFlow.Sort<TInput>.TargetBlock
  fullName.vb: ALE.ETLBox.DataFlow.Sort(Of TInput).TargetBlock
  nameWithType: Sort<TInput>.TargetBlock
  nameWithType.vb: Sort(Of TInput).TargetBlock
- uid: ALE.ETLBox.DataFlow.Sort`1.TaskName
  name: TaskName
  href: api/ALE.ETLBox.DataFlow.Sort-1.html#ALE_ETLBox_DataFlow_Sort_1_TaskName
  commentId: P:ALE.ETLBox.DataFlow.Sort`1.TaskName
  fullName: ALE.ETLBox.DataFlow.Sort<TInput>.TaskName
  fullName.vb: ALE.ETLBox.DataFlow.Sort(Of TInput).TaskName
  nameWithType: Sort<TInput>.TaskName
  nameWithType.vb: Sort(Of TInput).TaskName
- uid: ALE.ETLBox.DataFlow.Sort`1.TaskName*
  name: TaskName
  href: api/ALE.ETLBox.DataFlow.Sort-1.html#ALE_ETLBox_DataFlow_Sort_1_TaskName_
  commentId: Overload:ALE.ETLBox.DataFlow.Sort`1.TaskName
  isSpec: "True"
  fullName: ALE.ETLBox.DataFlow.Sort<TInput>.TaskName
  fullName.vb: ALE.ETLBox.DataFlow.Sort(Of TInput).TaskName
  nameWithType: Sort<TInput>.TaskName
  nameWithType.vb: Sort(Of TInput).TaskName
- uid: ALE.ETLBox.DataFlow.VoidDestination
  name: VoidDestination
  href: api/ALE.ETLBox.DataFlow.VoidDestination.html
  commentId: T:ALE.ETLBox.DataFlow.VoidDestination
  fullName: ALE.ETLBox.DataFlow.VoidDestination
  nameWithType: VoidDestination
- uid: ALE.ETLBox.DataFlow.VoidDestination.#ctor
  name: VoidDestination()
  href: api/ALE.ETLBox.DataFlow.VoidDestination.html#ALE_ETLBox_DataFlow_VoidDestination__ctor
  commentId: M:ALE.ETLBox.DataFlow.VoidDestination.#ctor
  fullName: ALE.ETLBox.DataFlow.VoidDestination.VoidDestination()
  nameWithType: VoidDestination.VoidDestination()
- uid: ALE.ETLBox.DataFlow.VoidDestination.#ctor*
  name: VoidDestination
  href: api/ALE.ETLBox.DataFlow.VoidDestination.html#ALE_ETLBox_DataFlow_VoidDestination__ctor_
  commentId: Overload:ALE.ETLBox.DataFlow.VoidDestination.#ctor
  isSpec: "True"
  fullName: ALE.ETLBox.DataFlow.VoidDestination.VoidDestination
  nameWithType: VoidDestination.VoidDestination
- uid: ALE.ETLBox.DataFlow.VoidDestination`1
  name: VoidDestination<TInput>
  href: api/ALE.ETLBox.DataFlow.VoidDestination-1.html
  commentId: T:ALE.ETLBox.DataFlow.VoidDestination`1
  name.vb: VoidDestination(Of TInput)
  fullName: ALE.ETLBox.DataFlow.VoidDestination<TInput>
  fullName.vb: ALE.ETLBox.DataFlow.VoidDestination(Of TInput)
  nameWithType: VoidDestination<TInput>
  nameWithType.vb: VoidDestination(Of TInput)
- uid: ALE.ETLBox.DataFlow.VoidDestination`1.#ctor
  name: VoidDestination()
  href: api/ALE.ETLBox.DataFlow.VoidDestination-1.html#ALE_ETLBox_DataFlow_VoidDestination_1__ctor
  commentId: M:ALE.ETLBox.DataFlow.VoidDestination`1.#ctor
  fullName: ALE.ETLBox.DataFlow.VoidDestination<TInput>.VoidDestination()
  fullName.vb: ALE.ETLBox.DataFlow.VoidDestination(Of TInput).VoidDestination()
  nameWithType: VoidDestination<TInput>.VoidDestination()
  nameWithType.vb: VoidDestination(Of TInput).VoidDestination()
- uid: ALE.ETLBox.DataFlow.VoidDestination`1.#ctor*
  name: VoidDestination
  href: api/ALE.ETLBox.DataFlow.VoidDestination-1.html#ALE_ETLBox_DataFlow_VoidDestination_1__ctor_
  commentId: Overload:ALE.ETLBox.DataFlow.VoidDestination`1.#ctor
  isSpec: "True"
  fullName: ALE.ETLBox.DataFlow.VoidDestination<TInput>.VoidDestination
  fullName.vb: ALE.ETLBox.DataFlow.VoidDestination(Of TInput).VoidDestination
  nameWithType: VoidDestination<TInput>.VoidDestination
  nameWithType.vb: VoidDestination(Of TInput).VoidDestination
- uid: ALE.ETLBox.DataFlow.VoidDestination`1.AddPredecessorCompletion(System.Threading.Tasks.Task)
  name: AddPredecessorCompletion(Task)
  href: api/ALE.ETLBox.DataFlow.VoidDestination-1.html#ALE_ETLBox_DataFlow_VoidDestination_1_AddPredecessorCompletion_System_Threading_Tasks_Task_
  commentId: M:ALE.ETLBox.DataFlow.VoidDestination`1.AddPredecessorCompletion(System.Threading.Tasks.Task)
  fullName: ALE.ETLBox.DataFlow.VoidDestination<TInput>.AddPredecessorCompletion(System.Threading.Tasks.Task)
  fullName.vb: ALE.ETLBox.DataFlow.VoidDestination(Of TInput).AddPredecessorCompletion(System.Threading.Tasks.Task)
  nameWithType: VoidDestination<TInput>.AddPredecessorCompletion(Task)
  nameWithType.vb: VoidDestination(Of TInput).AddPredecessorCompletion(Task)
- uid: ALE.ETLBox.DataFlow.VoidDestination`1.AddPredecessorCompletion*
  name: AddPredecessorCompletion
  href: api/ALE.ETLBox.DataFlow.VoidDestination-1.html#ALE_ETLBox_DataFlow_VoidDestination_1_AddPredecessorCompletion_
  commentId: Overload:ALE.ETLBox.DataFlow.VoidDestination`1.AddPredecessorCompletion
  isSpec: "True"
  fullName: ALE.ETLBox.DataFlow.VoidDestination<TInput>.AddPredecessorCompletion
  fullName.vb: ALE.ETLBox.DataFlow.VoidDestination(Of TInput).AddPredecessorCompletion
  nameWithType: VoidDestination<TInput>.AddPredecessorCompletion
  nameWithType.vb: VoidDestination(Of TInput).AddPredecessorCompletion
- uid: ALE.ETLBox.DataFlow.VoidDestination`1.Completion
  name: Completion
  href: api/ALE.ETLBox.DataFlow.VoidDestination-1.html#ALE_ETLBox_DataFlow_VoidDestination_1_Completion
  commentId: P:ALE.ETLBox.DataFlow.VoidDestination`1.Completion
  fullName: ALE.ETLBox.DataFlow.VoidDestination<TInput>.Completion
  fullName.vb: ALE.ETLBox.DataFlow.VoidDestination(Of TInput).Completion
  nameWithType: VoidDestination<TInput>.Completion
  nameWithType.vb: VoidDestination(Of TInput).Completion
- uid: ALE.ETLBox.DataFlow.VoidDestination`1.Completion*
  name: Completion
  href: api/ALE.ETLBox.DataFlow.VoidDestination-1.html#ALE_ETLBox_DataFlow_VoidDestination_1_Completion_
  commentId: Overload:ALE.ETLBox.DataFlow.VoidDestination`1.Completion
  isSpec: "True"
  fullName: ALE.ETLBox.DataFlow.VoidDestination<TInput>.Completion
  fullName.vb: ALE.ETLBox.DataFlow.VoidDestination(Of TInput).Completion
  nameWithType: VoidDestination<TInput>.Completion
  nameWithType.vb: VoidDestination(Of TInput).Completion
- uid: ALE.ETLBox.DataFlow.VoidDestination`1.TargetBlock
  name: TargetBlock
  href: api/ALE.ETLBox.DataFlow.VoidDestination-1.html#ALE_ETLBox_DataFlow_VoidDestination_1_TargetBlock
  commentId: P:ALE.ETLBox.DataFlow.VoidDestination`1.TargetBlock
  fullName: ALE.ETLBox.DataFlow.VoidDestination<TInput>.TargetBlock
  fullName.vb: ALE.ETLBox.DataFlow.VoidDestination(Of TInput).TargetBlock
  nameWithType: VoidDestination<TInput>.TargetBlock
  nameWithType.vb: VoidDestination(Of TInput).TargetBlock
- uid: ALE.ETLBox.DataFlow.VoidDestination`1.TargetBlock*
  name: TargetBlock
  href: api/ALE.ETLBox.DataFlow.VoidDestination-1.html#ALE_ETLBox_DataFlow_VoidDestination_1_TargetBlock_
  commentId: Overload:ALE.ETLBox.DataFlow.VoidDestination`1.TargetBlock
  isSpec: "True"
  fullName: ALE.ETLBox.DataFlow.VoidDestination<TInput>.TargetBlock
  fullName.vb: ALE.ETLBox.DataFlow.VoidDestination(Of TInput).TargetBlock
  nameWithType: VoidDestination<TInput>.TargetBlock
  nameWithType.vb: VoidDestination(Of TInput).TargetBlock
- uid: ALE.ETLBox.DataFlow.VoidDestination`1.TaskName
  name: TaskName
  href: api/ALE.ETLBox.DataFlow.VoidDestination-1.html#ALE_ETLBox_DataFlow_VoidDestination_1_TaskName
  commentId: P:ALE.ETLBox.DataFlow.VoidDestination`1.TaskName
  fullName: ALE.ETLBox.DataFlow.VoidDestination<TInput>.TaskName
  fullName.vb: ALE.ETLBox.DataFlow.VoidDestination(Of TInput).TaskName
  nameWithType: VoidDestination<TInput>.TaskName
  nameWithType.vb: VoidDestination(Of TInput).TaskName
- uid: ALE.ETLBox.DataFlow.VoidDestination`1.TaskName*
  name: TaskName
  href: api/ALE.ETLBox.DataFlow.VoidDestination-1.html#ALE_ETLBox_DataFlow_VoidDestination_1_TaskName_
  commentId: Overload:ALE.ETLBox.DataFlow.VoidDestination`1.TaskName
  isSpec: "True"
  fullName: ALE.ETLBox.DataFlow.VoidDestination<TInput>.TaskName
  fullName.vb: ALE.ETLBox.DataFlow.VoidDestination(Of TInput).TaskName
  nameWithType: VoidDestination<TInput>.TaskName
  nameWithType.vb: VoidDestination(Of TInput).TaskName
- uid: ALE.ETLBox.DataFlow.VoidDestination`1.Wait
  name: Wait()
  href: api/ALE.ETLBox.DataFlow.VoidDestination-1.html#ALE_ETLBox_DataFlow_VoidDestination_1_Wait
  commentId: M:ALE.ETLBox.DataFlow.VoidDestination`1.Wait
  fullName: ALE.ETLBox.DataFlow.VoidDestination<TInput>.Wait()
  fullName.vb: ALE.ETLBox.DataFlow.VoidDestination(Of TInput).Wait()
  nameWithType: VoidDestination<TInput>.Wait()
  nameWithType.vb: VoidDestination(Of TInput).Wait()
- uid: ALE.ETLBox.DataFlow.VoidDestination`1.Wait*
  name: Wait
  href: api/ALE.ETLBox.DataFlow.VoidDestination-1.html#ALE_ETLBox_DataFlow_VoidDestination_1_Wait_
  commentId: Overload:ALE.ETLBox.DataFlow.VoidDestination`1.Wait
  isSpec: "True"
  fullName: ALE.ETLBox.DataFlow.VoidDestination<TInput>.Wait
  fullName.vb: ALE.ETLBox.DataFlow.VoidDestination(Of TInput).Wait
  nameWithType: VoidDestination<TInput>.Wait
  nameWithType.vb: VoidDestination(Of TInput).Wait
- uid: ALE.ETLBox.DataFlow.XmlDestination
  name: XmlDestination
  href: api/ALE.ETLBox.DataFlow.XmlDestination.html
  commentId: T:ALE.ETLBox.DataFlow.XmlDestination
  fullName: ALE.ETLBox.DataFlow.XmlDestination
  nameWithType: XmlDestination
- uid: ALE.ETLBox.DataFlow.XmlDestination.#ctor
  name: XmlDestination()
  href: api/ALE.ETLBox.DataFlow.XmlDestination.html#ALE_ETLBox_DataFlow_XmlDestination__ctor
  commentId: M:ALE.ETLBox.DataFlow.XmlDestination.#ctor
  fullName: ALE.ETLBox.DataFlow.XmlDestination.XmlDestination()
  nameWithType: XmlDestination.XmlDestination()
- uid: ALE.ETLBox.DataFlow.XmlDestination.#ctor(System.String)
  name: XmlDestination(String)
  href: api/ALE.ETLBox.DataFlow.XmlDestination.html#ALE_ETLBox_DataFlow_XmlDestination__ctor_System_String_
  commentId: M:ALE.ETLBox.DataFlow.XmlDestination.#ctor(System.String)
  fullName: ALE.ETLBox.DataFlow.XmlDestination.XmlDestination(System.String)
  nameWithType: XmlDestination.XmlDestination(String)
- uid: ALE.ETLBox.DataFlow.XmlDestination.#ctor*
  name: XmlDestination
  href: api/ALE.ETLBox.DataFlow.XmlDestination.html#ALE_ETLBox_DataFlow_XmlDestination__ctor_
  commentId: Overload:ALE.ETLBox.DataFlow.XmlDestination.#ctor
  isSpec: "True"
  fullName: ALE.ETLBox.DataFlow.XmlDestination.XmlDestination
  nameWithType: XmlDestination.XmlDestination
- uid: ALE.ETLBox.DataFlow.XmlDestination`1
  name: XmlDestination<TInput>
  href: api/ALE.ETLBox.DataFlow.XmlDestination-1.html
  commentId: T:ALE.ETLBox.DataFlow.XmlDestination`1
  name.vb: XmlDestination(Of TInput)
  fullName: ALE.ETLBox.DataFlow.XmlDestination<TInput>
  fullName.vb: ALE.ETLBox.DataFlow.XmlDestination(Of TInput)
  nameWithType: XmlDestination<TInput>
  nameWithType.vb: XmlDestination(Of TInput)
- uid: ALE.ETLBox.DataFlow.XmlDestination`1.#ctor
  name: XmlDestination()
  href: api/ALE.ETLBox.DataFlow.XmlDestination-1.html#ALE_ETLBox_DataFlow_XmlDestination_1__ctor
  commentId: M:ALE.ETLBox.DataFlow.XmlDestination`1.#ctor
  fullName: ALE.ETLBox.DataFlow.XmlDestination<TInput>.XmlDestination()
  fullName.vb: ALE.ETLBox.DataFlow.XmlDestination(Of TInput).XmlDestination()
  nameWithType: XmlDestination<TInput>.XmlDestination()
  nameWithType.vb: XmlDestination(Of TInput).XmlDestination()
- uid: ALE.ETLBox.DataFlow.XmlDestination`1.#ctor(System.String)
  name: XmlDestination(String)
  href: api/ALE.ETLBox.DataFlow.XmlDestination-1.html#ALE_ETLBox_DataFlow_XmlDestination_1__ctor_System_String_
  commentId: M:ALE.ETLBox.DataFlow.XmlDestination`1.#ctor(System.String)
  fullName: ALE.ETLBox.DataFlow.XmlDestination<TInput>.XmlDestination(System.String)
  fullName.vb: ALE.ETLBox.DataFlow.XmlDestination(Of TInput).XmlDestination(System.String)
  nameWithType: XmlDestination<TInput>.XmlDestination(String)
  nameWithType.vb: XmlDestination(Of TInput).XmlDestination(String)
- uid: ALE.ETLBox.DataFlow.XmlDestination`1.#ctor(System.String,ALE.ETLBox.DataFlow.ResourceType)
  name: XmlDestination(String, ResourceType)
  href: api/ALE.ETLBox.DataFlow.XmlDestination-1.html#ALE_ETLBox_DataFlow_XmlDestination_1__ctor_System_String_ALE_ETLBox_DataFlow_ResourceType_
  commentId: M:ALE.ETLBox.DataFlow.XmlDestination`1.#ctor(System.String,ALE.ETLBox.DataFlow.ResourceType)
  fullName: ALE.ETLBox.DataFlow.XmlDestination<TInput>.XmlDestination(System.String, ALE.ETLBox.DataFlow.ResourceType)
  fullName.vb: ALE.ETLBox.DataFlow.XmlDestination(Of TInput).XmlDestination(System.String, ALE.ETLBox.DataFlow.ResourceType)
  nameWithType: XmlDestination<TInput>.XmlDestination(String, ResourceType)
  nameWithType.vb: XmlDestination(Of TInput).XmlDestination(String, ResourceType)
- uid: ALE.ETLBox.DataFlow.XmlDestination`1.#ctor*
  name: XmlDestination
  href: api/ALE.ETLBox.DataFlow.XmlDestination-1.html#ALE_ETLBox_DataFlow_XmlDestination_1__ctor_
  commentId: Overload:ALE.ETLBox.DataFlow.XmlDestination`1.#ctor
  isSpec: "True"
  fullName: ALE.ETLBox.DataFlow.XmlDestination<TInput>.XmlDestination
  fullName.vb: ALE.ETLBox.DataFlow.XmlDestination(Of TInput).XmlDestination
  nameWithType: XmlDestination<TInput>.XmlDestination
  nameWithType.vb: XmlDestination(Of TInput).XmlDestination
- uid: ALE.ETLBox.DataFlow.XmlDestination`1.CloseStream
  name: CloseStream()
  href: api/ALE.ETLBox.DataFlow.XmlDestination-1.html#ALE_ETLBox_DataFlow_XmlDestination_1_CloseStream
  commentId: M:ALE.ETLBox.DataFlow.XmlDestination`1.CloseStream
  fullName: ALE.ETLBox.DataFlow.XmlDestination<TInput>.CloseStream()
  fullName.vb: ALE.ETLBox.DataFlow.XmlDestination(Of TInput).CloseStream()
  nameWithType: XmlDestination<TInput>.CloseStream()
  nameWithType.vb: XmlDestination(Of TInput).CloseStream()
- uid: ALE.ETLBox.DataFlow.XmlDestination`1.CloseStream*
  name: CloseStream
  href: api/ALE.ETLBox.DataFlow.XmlDestination-1.html#ALE_ETLBox_DataFlow_XmlDestination_1_CloseStream_
  commentId: Overload:ALE.ETLBox.DataFlow.XmlDestination`1.CloseStream
  isSpec: "True"
  fullName: ALE.ETLBox.DataFlow.XmlDestination<TInput>.CloseStream
  fullName.vb: ALE.ETLBox.DataFlow.XmlDestination(Of TInput).CloseStream
  nameWithType: XmlDestination<TInput>.CloseStream
  nameWithType.vb: XmlDestination(Of TInput).CloseStream
- uid: ALE.ETLBox.DataFlow.XmlDestination`1.DynamicElementName
  name: DynamicElementName
  href: api/ALE.ETLBox.DataFlow.XmlDestination-1.html#ALE_ETLBox_DataFlow_XmlDestination_1_DynamicElementName
  commentId: P:ALE.ETLBox.DataFlow.XmlDestination`1.DynamicElementName
  fullName: ALE.ETLBox.DataFlow.XmlDestination<TInput>.DynamicElementName
  fullName.vb: ALE.ETLBox.DataFlow.XmlDestination(Of TInput).DynamicElementName
  nameWithType: XmlDestination<TInput>.DynamicElementName
  nameWithType.vb: XmlDestination(Of TInput).DynamicElementName
- uid: ALE.ETLBox.DataFlow.XmlDestination`1.DynamicElementName*
  name: DynamicElementName
  href: api/ALE.ETLBox.DataFlow.XmlDestination-1.html#ALE_ETLBox_DataFlow_XmlDestination_1_DynamicElementName_
  commentId: Overload:ALE.ETLBox.DataFlow.XmlDestination`1.DynamicElementName
  isSpec: "True"
  fullName: ALE.ETLBox.DataFlow.XmlDestination<TInput>.DynamicElementName
  fullName.vb: ALE.ETLBox.DataFlow.XmlDestination(Of TInput).DynamicElementName
  nameWithType: XmlDestination<TInput>.DynamicElementName
  nameWithType.vb: XmlDestination(Of TInput).DynamicElementName
- uid: ALE.ETLBox.DataFlow.XmlDestination`1.InitStream
  name: InitStream()
  href: api/ALE.ETLBox.DataFlow.XmlDestination-1.html#ALE_ETLBox_DataFlow_XmlDestination_1_InitStream
  commentId: M:ALE.ETLBox.DataFlow.XmlDestination`1.InitStream
  fullName: ALE.ETLBox.DataFlow.XmlDestination<TInput>.InitStream()
  fullName.vb: ALE.ETLBox.DataFlow.XmlDestination(Of TInput).InitStream()
  nameWithType: XmlDestination<TInput>.InitStream()
  nameWithType.vb: XmlDestination(Of TInput).InitStream()
- uid: ALE.ETLBox.DataFlow.XmlDestination`1.InitStream*
  name: InitStream
  href: api/ALE.ETLBox.DataFlow.XmlDestination-1.html#ALE_ETLBox_DataFlow_XmlDestination_1_InitStream_
  commentId: Overload:ALE.ETLBox.DataFlow.XmlDestination`1.InitStream
  isSpec: "True"
  fullName: ALE.ETLBox.DataFlow.XmlDestination<TInput>.InitStream
  fullName.vb: ALE.ETLBox.DataFlow.XmlDestination(Of TInput).InitStream
  nameWithType: XmlDestination<TInput>.InitStream
  nameWithType.vb: XmlDestination(Of TInput).InitStream
- uid: ALE.ETLBox.DataFlow.XmlDestination`1.RootElementName
  name: RootElementName
  href: api/ALE.ETLBox.DataFlow.XmlDestination-1.html#ALE_ETLBox_DataFlow_XmlDestination_1_RootElementName
  commentId: P:ALE.ETLBox.DataFlow.XmlDestination`1.RootElementName
  fullName: ALE.ETLBox.DataFlow.XmlDestination<TInput>.RootElementName
  fullName.vb: ALE.ETLBox.DataFlow.XmlDestination(Of TInput).RootElementName
  nameWithType: XmlDestination<TInput>.RootElementName
  nameWithType.vb: XmlDestination(Of TInput).RootElementName
- uid: ALE.ETLBox.DataFlow.XmlDestination`1.RootElementName*
  name: RootElementName
  href: api/ALE.ETLBox.DataFlow.XmlDestination-1.html#ALE_ETLBox_DataFlow_XmlDestination_1_RootElementName_
  commentId: Overload:ALE.ETLBox.DataFlow.XmlDestination`1.RootElementName
  isSpec: "True"
  fullName: ALE.ETLBox.DataFlow.XmlDestination<TInput>.RootElementName
  fullName.vb: ALE.ETLBox.DataFlow.XmlDestination(Of TInput).RootElementName
  nameWithType: XmlDestination<TInput>.RootElementName
  nameWithType.vb: XmlDestination(Of TInput).RootElementName
- uid: ALE.ETLBox.DataFlow.XmlDestination`1.Settings
  name: Settings
  href: api/ALE.ETLBox.DataFlow.XmlDestination-1.html#ALE_ETLBox_DataFlow_XmlDestination_1_Settings
  commentId: P:ALE.ETLBox.DataFlow.XmlDestination`1.Settings
  fullName: ALE.ETLBox.DataFlow.XmlDestination<TInput>.Settings
  fullName.vb: ALE.ETLBox.DataFlow.XmlDestination(Of TInput).Settings
  nameWithType: XmlDestination<TInput>.Settings
  nameWithType.vb: XmlDestination(Of TInput).Settings
- uid: ALE.ETLBox.DataFlow.XmlDestination`1.Settings*
  name: Settings
  href: api/ALE.ETLBox.DataFlow.XmlDestination-1.html#ALE_ETLBox_DataFlow_XmlDestination_1_Settings_
  commentId: Overload:ALE.ETLBox.DataFlow.XmlDestination`1.Settings
  isSpec: "True"
  fullName: ALE.ETLBox.DataFlow.XmlDestination<TInput>.Settings
  fullName.vb: ALE.ETLBox.DataFlow.XmlDestination(Of TInput).Settings
  nameWithType: XmlDestination<TInput>.Settings
  nameWithType.vb: XmlDestination(Of TInput).Settings
- uid: ALE.ETLBox.DataFlow.XmlDestination`1.TaskName
  name: TaskName
  href: api/ALE.ETLBox.DataFlow.XmlDestination-1.html#ALE_ETLBox_DataFlow_XmlDestination_1_TaskName
  commentId: P:ALE.ETLBox.DataFlow.XmlDestination`1.TaskName
  fullName: ALE.ETLBox.DataFlow.XmlDestination<TInput>.TaskName
  fullName.vb: ALE.ETLBox.DataFlow.XmlDestination(Of TInput).TaskName
  nameWithType: XmlDestination<TInput>.TaskName
  nameWithType.vb: XmlDestination(Of TInput).TaskName
- uid: ALE.ETLBox.DataFlow.XmlDestination`1.TaskName*
  name: TaskName
  href: api/ALE.ETLBox.DataFlow.XmlDestination-1.html#ALE_ETLBox_DataFlow_XmlDestination_1_TaskName_
  commentId: Overload:ALE.ETLBox.DataFlow.XmlDestination`1.TaskName
  isSpec: "True"
  fullName: ALE.ETLBox.DataFlow.XmlDestination<TInput>.TaskName
  fullName.vb: ALE.ETLBox.DataFlow.XmlDestination(Of TInput).TaskName
  nameWithType: XmlDestination<TInput>.TaskName
  nameWithType.vb: XmlDestination(Of TInput).TaskName
- uid: ALE.ETLBox.DataFlow.XmlDestination`1.WriteIntoStream(`0)
  name: WriteIntoStream(TInput)
  href: api/ALE.ETLBox.DataFlow.XmlDestination-1.html#ALE_ETLBox_DataFlow_XmlDestination_1_WriteIntoStream__0_
  commentId: M:ALE.ETLBox.DataFlow.XmlDestination`1.WriteIntoStream(`0)
  fullName: ALE.ETLBox.DataFlow.XmlDestination<TInput>.WriteIntoStream(TInput)
  fullName.vb: ALE.ETLBox.DataFlow.XmlDestination(Of TInput).WriteIntoStream(TInput)
  nameWithType: XmlDestination<TInput>.WriteIntoStream(TInput)
  nameWithType.vb: XmlDestination(Of TInput).WriteIntoStream(TInput)
- uid: ALE.ETLBox.DataFlow.XmlDestination`1.WriteIntoStream*
  name: WriteIntoStream
  href: api/ALE.ETLBox.DataFlow.XmlDestination-1.html#ALE_ETLBox_DataFlow_XmlDestination_1_WriteIntoStream_
  commentId: Overload:ALE.ETLBox.DataFlow.XmlDestination`1.WriteIntoStream
  isSpec: "True"
  fullName: ALE.ETLBox.DataFlow.XmlDestination<TInput>.WriteIntoStream
  fullName.vb: ALE.ETLBox.DataFlow.XmlDestination(Of TInput).WriteIntoStream
  nameWithType: XmlDestination<TInput>.WriteIntoStream
  nameWithType.vb: XmlDestination(Of TInput).WriteIntoStream
- uid: ALE.ETLBox.DataFlow.XmlDestination`1.XmlWriter
  name: XmlWriter
  href: api/ALE.ETLBox.DataFlow.XmlDestination-1.html#ALE_ETLBox_DataFlow_XmlDestination_1_XmlWriter
  commentId: P:ALE.ETLBox.DataFlow.XmlDestination`1.XmlWriter
  fullName: ALE.ETLBox.DataFlow.XmlDestination<TInput>.XmlWriter
  fullName.vb: ALE.ETLBox.DataFlow.XmlDestination(Of TInput).XmlWriter
  nameWithType: XmlDestination<TInput>.XmlWriter
  nameWithType.vb: XmlDestination(Of TInput).XmlWriter
- uid: ALE.ETLBox.DataFlow.XmlDestination`1.XmlWriter*
  name: XmlWriter
  href: api/ALE.ETLBox.DataFlow.XmlDestination-1.html#ALE_ETLBox_DataFlow_XmlDestination_1_XmlWriter_
  commentId: Overload:ALE.ETLBox.DataFlow.XmlDestination`1.XmlWriter
  isSpec: "True"
  fullName: ALE.ETLBox.DataFlow.XmlDestination<TInput>.XmlWriter
  fullName.vb: ALE.ETLBox.DataFlow.XmlDestination(Of TInput).XmlWriter
  nameWithType: XmlDestination<TInput>.XmlWriter
  nameWithType.vb: XmlDestination(Of TInput).XmlWriter
- uid: ALE.ETLBox.DataFlow.XmlSource
  name: XmlSource
  href: api/ALE.ETLBox.DataFlow.XmlSource.html
  commentId: T:ALE.ETLBox.DataFlow.XmlSource
  fullName: ALE.ETLBox.DataFlow.XmlSource
  nameWithType: XmlSource
- uid: ALE.ETLBox.DataFlow.XmlSource.#ctor
  name: XmlSource()
  href: api/ALE.ETLBox.DataFlow.XmlSource.html#ALE_ETLBox_DataFlow_XmlSource__ctor
  commentId: M:ALE.ETLBox.DataFlow.XmlSource.#ctor
  fullName: ALE.ETLBox.DataFlow.XmlSource.XmlSource()
  nameWithType: XmlSource.XmlSource()
- uid: ALE.ETLBox.DataFlow.XmlSource.#ctor(System.String)
  name: XmlSource(String)
  href: api/ALE.ETLBox.DataFlow.XmlSource.html#ALE_ETLBox_DataFlow_XmlSource__ctor_System_String_
  commentId: M:ALE.ETLBox.DataFlow.XmlSource.#ctor(System.String)
  fullName: ALE.ETLBox.DataFlow.XmlSource.XmlSource(System.String)
  nameWithType: XmlSource.XmlSource(String)
- uid: ALE.ETLBox.DataFlow.XmlSource.#ctor(System.String,ALE.ETLBox.DataFlow.ResourceType)
  name: XmlSource(String, ResourceType)
  href: api/ALE.ETLBox.DataFlow.XmlSource.html#ALE_ETLBox_DataFlow_XmlSource__ctor_System_String_ALE_ETLBox_DataFlow_ResourceType_
  commentId: M:ALE.ETLBox.DataFlow.XmlSource.#ctor(System.String,ALE.ETLBox.DataFlow.ResourceType)
  fullName: ALE.ETLBox.DataFlow.XmlSource.XmlSource(System.String, ALE.ETLBox.DataFlow.ResourceType)
  nameWithType: XmlSource.XmlSource(String, ResourceType)
- uid: ALE.ETLBox.DataFlow.XmlSource.#ctor*
  name: XmlSource
  href: api/ALE.ETLBox.DataFlow.XmlSource.html#ALE_ETLBox_DataFlow_XmlSource__ctor_
  commentId: Overload:ALE.ETLBox.DataFlow.XmlSource.#ctor
  isSpec: "True"
  fullName: ALE.ETLBox.DataFlow.XmlSource.XmlSource
  nameWithType: XmlSource.XmlSource
- uid: ALE.ETLBox.DataFlow.XmlSource`1
  name: XmlSource<TOutput>
  href: api/ALE.ETLBox.DataFlow.XmlSource-1.html
  commentId: T:ALE.ETLBox.DataFlow.XmlSource`1
  name.vb: XmlSource(Of TOutput)
  fullName: ALE.ETLBox.DataFlow.XmlSource<TOutput>
  fullName.vb: ALE.ETLBox.DataFlow.XmlSource(Of TOutput)
  nameWithType: XmlSource<TOutput>
  nameWithType.vb: XmlSource(Of TOutput)
- uid: ALE.ETLBox.DataFlow.XmlSource`1.#ctor
  name: XmlSource()
  href: api/ALE.ETLBox.DataFlow.XmlSource-1.html#ALE_ETLBox_DataFlow_XmlSource_1__ctor
  commentId: M:ALE.ETLBox.DataFlow.XmlSource`1.#ctor
  fullName: ALE.ETLBox.DataFlow.XmlSource<TOutput>.XmlSource()
  fullName.vb: ALE.ETLBox.DataFlow.XmlSource(Of TOutput).XmlSource()
  nameWithType: XmlSource<TOutput>.XmlSource()
  nameWithType.vb: XmlSource(Of TOutput).XmlSource()
- uid: ALE.ETLBox.DataFlow.XmlSource`1.#ctor(System.String)
  name: XmlSource(String)
  href: api/ALE.ETLBox.DataFlow.XmlSource-1.html#ALE_ETLBox_DataFlow_XmlSource_1__ctor_System_String_
  commentId: M:ALE.ETLBox.DataFlow.XmlSource`1.#ctor(System.String)
  fullName: ALE.ETLBox.DataFlow.XmlSource<TOutput>.XmlSource(System.String)
  fullName.vb: ALE.ETLBox.DataFlow.XmlSource(Of TOutput).XmlSource(System.String)
  nameWithType: XmlSource<TOutput>.XmlSource(String)
  nameWithType.vb: XmlSource(Of TOutput).XmlSource(String)
- uid: ALE.ETLBox.DataFlow.XmlSource`1.#ctor(System.String,ALE.ETLBox.DataFlow.ResourceType)
  name: XmlSource(String, ResourceType)
  href: api/ALE.ETLBox.DataFlow.XmlSource-1.html#ALE_ETLBox_DataFlow_XmlSource_1__ctor_System_String_ALE_ETLBox_DataFlow_ResourceType_
  commentId: M:ALE.ETLBox.DataFlow.XmlSource`1.#ctor(System.String,ALE.ETLBox.DataFlow.ResourceType)
  fullName: ALE.ETLBox.DataFlow.XmlSource<TOutput>.XmlSource(System.String, ALE.ETLBox.DataFlow.ResourceType)
  fullName.vb: ALE.ETLBox.DataFlow.XmlSource(Of TOutput).XmlSource(System.String, ALE.ETLBox.DataFlow.ResourceType)
  nameWithType: XmlSource<TOutput>.XmlSource(String, ResourceType)
  nameWithType.vb: XmlSource(Of TOutput).XmlSource(String, ResourceType)
- uid: ALE.ETLBox.DataFlow.XmlSource`1.#ctor*
  name: XmlSource
  href: api/ALE.ETLBox.DataFlow.XmlSource-1.html#ALE_ETLBox_DataFlow_XmlSource_1__ctor_
  commentId: Overload:ALE.ETLBox.DataFlow.XmlSource`1.#ctor
  isSpec: "True"
  fullName: ALE.ETLBox.DataFlow.XmlSource<TOutput>.XmlSource
  fullName.vb: ALE.ETLBox.DataFlow.XmlSource(Of TOutput).XmlSource
  nameWithType: XmlSource<TOutput>.XmlSource
  nameWithType.vb: XmlSource(Of TOutput).XmlSource
- uid: ALE.ETLBox.DataFlow.XmlSource`1.CloseReader
  name: CloseReader()
  href: api/ALE.ETLBox.DataFlow.XmlSource-1.html#ALE_ETLBox_DataFlow_XmlSource_1_CloseReader
  commentId: M:ALE.ETLBox.DataFlow.XmlSource`1.CloseReader
  fullName: ALE.ETLBox.DataFlow.XmlSource<TOutput>.CloseReader()
  fullName.vb: ALE.ETLBox.DataFlow.XmlSource(Of TOutput).CloseReader()
  nameWithType: XmlSource<TOutput>.CloseReader()
  nameWithType.vb: XmlSource(Of TOutput).CloseReader()
- uid: ALE.ETLBox.DataFlow.XmlSource`1.CloseReader*
  name: CloseReader
  href: api/ALE.ETLBox.DataFlow.XmlSource-1.html#ALE_ETLBox_DataFlow_XmlSource_1_CloseReader_
  commentId: Overload:ALE.ETLBox.DataFlow.XmlSource`1.CloseReader
  isSpec: "True"
  fullName: ALE.ETLBox.DataFlow.XmlSource<TOutput>.CloseReader
  fullName.vb: ALE.ETLBox.DataFlow.XmlSource(Of TOutput).CloseReader
  nameWithType: XmlSource<TOutput>.CloseReader
  nameWithType.vb: XmlSource(Of TOutput).CloseReader
- uid: ALE.ETLBox.DataFlow.XmlSource`1.ElementName
  name: ElementName
  href: api/ALE.ETLBox.DataFlow.XmlSource-1.html#ALE_ETLBox_DataFlow_XmlSource_1_ElementName
  commentId: P:ALE.ETLBox.DataFlow.XmlSource`1.ElementName
  fullName: ALE.ETLBox.DataFlow.XmlSource<TOutput>.ElementName
  fullName.vb: ALE.ETLBox.DataFlow.XmlSource(Of TOutput).ElementName
  nameWithType: XmlSource<TOutput>.ElementName
  nameWithType.vb: XmlSource(Of TOutput).ElementName
- uid: ALE.ETLBox.DataFlow.XmlSource`1.ElementName*
  name: ElementName
  href: api/ALE.ETLBox.DataFlow.XmlSource-1.html#ALE_ETLBox_DataFlow_XmlSource_1_ElementName_
  commentId: Overload:ALE.ETLBox.DataFlow.XmlSource`1.ElementName
  isSpec: "True"
  fullName: ALE.ETLBox.DataFlow.XmlSource<TOutput>.ElementName
  fullName.vb: ALE.ETLBox.DataFlow.XmlSource(Of TOutput).ElementName
  nameWithType: XmlSource<TOutput>.ElementName
  nameWithType.vb: XmlSource(Of TOutput).ElementName
- uid: ALE.ETLBox.DataFlow.XmlSource`1.InitReader
  name: InitReader()
  href: api/ALE.ETLBox.DataFlow.XmlSource-1.html#ALE_ETLBox_DataFlow_XmlSource_1_InitReader
  commentId: M:ALE.ETLBox.DataFlow.XmlSource`1.InitReader
  fullName: ALE.ETLBox.DataFlow.XmlSource<TOutput>.InitReader()
  fullName.vb: ALE.ETLBox.DataFlow.XmlSource(Of TOutput).InitReader()
  nameWithType: XmlSource<TOutput>.InitReader()
  nameWithType.vb: XmlSource(Of TOutput).InitReader()
- uid: ALE.ETLBox.DataFlow.XmlSource`1.InitReader*
  name: InitReader
  href: api/ALE.ETLBox.DataFlow.XmlSource-1.html#ALE_ETLBox_DataFlow_XmlSource_1_InitReader_
  commentId: Overload:ALE.ETLBox.DataFlow.XmlSource`1.InitReader
  isSpec: "True"
  fullName: ALE.ETLBox.DataFlow.XmlSource<TOutput>.InitReader
  fullName.vb: ALE.ETLBox.DataFlow.XmlSource(Of TOutput).InitReader
  nameWithType: XmlSource<TOutput>.InitReader
  nameWithType.vb: XmlSource(Of TOutput).InitReader
- uid: ALE.ETLBox.DataFlow.XmlSource`1.ReadAll
  name: ReadAll()
  href: api/ALE.ETLBox.DataFlow.XmlSource-1.html#ALE_ETLBox_DataFlow_XmlSource_1_ReadAll
  commentId: M:ALE.ETLBox.DataFlow.XmlSource`1.ReadAll
  fullName: ALE.ETLBox.DataFlow.XmlSource<TOutput>.ReadAll()
  fullName.vb: ALE.ETLBox.DataFlow.XmlSource(Of TOutput).ReadAll()
  nameWithType: XmlSource<TOutput>.ReadAll()
  nameWithType.vb: XmlSource(Of TOutput).ReadAll()
- uid: ALE.ETLBox.DataFlow.XmlSource`1.ReadAll*
  name: ReadAll
  href: api/ALE.ETLBox.DataFlow.XmlSource-1.html#ALE_ETLBox_DataFlow_XmlSource_1_ReadAll_
  commentId: Overload:ALE.ETLBox.DataFlow.XmlSource`1.ReadAll
  isSpec: "True"
  fullName: ALE.ETLBox.DataFlow.XmlSource<TOutput>.ReadAll
  fullName.vb: ALE.ETLBox.DataFlow.XmlSource(Of TOutput).ReadAll
  nameWithType: XmlSource<TOutput>.ReadAll
  nameWithType.vb: XmlSource(Of TOutput).ReadAll
- uid: ALE.ETLBox.DataFlow.XmlSource`1.TaskName
  name: TaskName
  href: api/ALE.ETLBox.DataFlow.XmlSource-1.html#ALE_ETLBox_DataFlow_XmlSource_1_TaskName
  commentId: P:ALE.ETLBox.DataFlow.XmlSource`1.TaskName
  fullName: ALE.ETLBox.DataFlow.XmlSource<TOutput>.TaskName
  fullName.vb: ALE.ETLBox.DataFlow.XmlSource(Of TOutput).TaskName
  nameWithType: XmlSource<TOutput>.TaskName
  nameWithType.vb: XmlSource(Of TOutput).TaskName
- uid: ALE.ETLBox.DataFlow.XmlSource`1.TaskName*
  name: TaskName
  href: api/ALE.ETLBox.DataFlow.XmlSource-1.html#ALE_ETLBox_DataFlow_XmlSource_1_TaskName_
  commentId: Overload:ALE.ETLBox.DataFlow.XmlSource`1.TaskName
  isSpec: "True"
  fullName: ALE.ETLBox.DataFlow.XmlSource<TOutput>.TaskName
  fullName.vb: ALE.ETLBox.DataFlow.XmlSource(Of TOutput).TaskName
  nameWithType: XmlSource<TOutput>.TaskName
  nameWithType.vb: XmlSource(Of TOutput).TaskName
- uid: ALE.ETLBox.DataFlow.XmlSource`1.XmlSerializer
  name: XmlSerializer
  href: api/ALE.ETLBox.DataFlow.XmlSource-1.html#ALE_ETLBox_DataFlow_XmlSource_1_XmlSerializer
  commentId: P:ALE.ETLBox.DataFlow.XmlSource`1.XmlSerializer
  fullName: ALE.ETLBox.DataFlow.XmlSource<TOutput>.XmlSerializer
  fullName.vb: ALE.ETLBox.DataFlow.XmlSource(Of TOutput).XmlSerializer
  nameWithType: XmlSource<TOutput>.XmlSerializer
  nameWithType.vb: XmlSource(Of TOutput).XmlSerializer
- uid: ALE.ETLBox.DataFlow.XmlSource`1.XmlSerializer*
  name: XmlSerializer
  href: api/ALE.ETLBox.DataFlow.XmlSource-1.html#ALE_ETLBox_DataFlow_XmlSource_1_XmlSerializer_
  commentId: Overload:ALE.ETLBox.DataFlow.XmlSource`1.XmlSerializer
  isSpec: "True"
  fullName: ALE.ETLBox.DataFlow.XmlSource<TOutput>.XmlSerializer
  fullName.vb: ALE.ETLBox.DataFlow.XmlSource(Of TOutput).XmlSerializer
  nameWithType: XmlSource<TOutput>.XmlSerializer
  nameWithType.vb: XmlSource(Of TOutput).XmlSerializer
- uid: ALE.ETLBox.DataFlowTask
  name: DataFlowTask
  href: api/ALE.ETLBox.DataFlowTask.html
  commentId: T:ALE.ETLBox.DataFlowTask
  fullName: ALE.ETLBox.DataFlowTask
  nameWithType: DataFlowTask
- uid: ALE.ETLBox.DataFlowTask._loggingThresholdRows
  name: _loggingThresholdRows
  href: api/ALE.ETLBox.DataFlowTask.html#ALE_ETLBox_DataFlowTask__loggingThresholdRows
  commentId: F:ALE.ETLBox.DataFlowTask._loggingThresholdRows
  fullName: ALE.ETLBox.DataFlowTask._loggingThresholdRows
  nameWithType: DataFlowTask._loggingThresholdRows
- uid: ALE.ETLBox.DataFlowTask.HasLoggingThresholdRows
  name: HasLoggingThresholdRows
  href: api/ALE.ETLBox.DataFlowTask.html#ALE_ETLBox_DataFlowTask_HasLoggingThresholdRows
  commentId: P:ALE.ETLBox.DataFlowTask.HasLoggingThresholdRows
  fullName: ALE.ETLBox.DataFlowTask.HasLoggingThresholdRows
  nameWithType: DataFlowTask.HasLoggingThresholdRows
- uid: ALE.ETLBox.DataFlowTask.HasLoggingThresholdRows*
  name: HasLoggingThresholdRows
  href: api/ALE.ETLBox.DataFlowTask.html#ALE_ETLBox_DataFlowTask_HasLoggingThresholdRows_
  commentId: Overload:ALE.ETLBox.DataFlowTask.HasLoggingThresholdRows
  isSpec: "True"
  fullName: ALE.ETLBox.DataFlowTask.HasLoggingThresholdRows
  nameWithType: DataFlowTask.HasLoggingThresholdRows
- uid: ALE.ETLBox.DataFlowTask.LoggingThresholdRows
  name: LoggingThresholdRows
  href: api/ALE.ETLBox.DataFlowTask.html#ALE_ETLBox_DataFlowTask_LoggingThresholdRows
  commentId: P:ALE.ETLBox.DataFlowTask.LoggingThresholdRows
  fullName: ALE.ETLBox.DataFlowTask.LoggingThresholdRows
  nameWithType: DataFlowTask.LoggingThresholdRows
- uid: ALE.ETLBox.DataFlowTask.LoggingThresholdRows*
  name: LoggingThresholdRows
  href: api/ALE.ETLBox.DataFlowTask.html#ALE_ETLBox_DataFlowTask_LoggingThresholdRows_
  commentId: Overload:ALE.ETLBox.DataFlowTask.LoggingThresholdRows
  isSpec: "True"
  fullName: ALE.ETLBox.DataFlowTask.LoggingThresholdRows
  nameWithType: DataFlowTask.LoggingThresholdRows
- uid: ALE.ETLBox.DataFlowTask.LogProgress
  name: LogProgress()
  href: api/ALE.ETLBox.DataFlowTask.html#ALE_ETLBox_DataFlowTask_LogProgress
  commentId: M:ALE.ETLBox.DataFlowTask.LogProgress
  fullName: ALE.ETLBox.DataFlowTask.LogProgress()
  nameWithType: DataFlowTask.LogProgress()
- uid: ALE.ETLBox.DataFlowTask.LogProgress*
  name: LogProgress
  href: api/ALE.ETLBox.DataFlowTask.html#ALE_ETLBox_DataFlowTask_LogProgress_
  commentId: Overload:ALE.ETLBox.DataFlowTask.LogProgress
  isSpec: "True"
  fullName: ALE.ETLBox.DataFlowTask.LogProgress
  nameWithType: DataFlowTask.LogProgress
- uid: ALE.ETLBox.DataFlowTask.LogProgressBatch(System.Int32)
  name: LogProgressBatch(Int32)
  href: api/ALE.ETLBox.DataFlowTask.html#ALE_ETLBox_DataFlowTask_LogProgressBatch_System_Int32_
  commentId: M:ALE.ETLBox.DataFlowTask.LogProgressBatch(System.Int32)
  fullName: ALE.ETLBox.DataFlowTask.LogProgressBatch(System.Int32)
  nameWithType: DataFlowTask.LogProgressBatch(Int32)
- uid: ALE.ETLBox.DataFlowTask.LogProgressBatch*
  name: LogProgressBatch
  href: api/ALE.ETLBox.DataFlowTask.html#ALE_ETLBox_DataFlowTask_LogProgressBatch_
  commentId: Overload:ALE.ETLBox.DataFlowTask.LogProgressBatch
  isSpec: "True"
  fullName: ALE.ETLBox.DataFlowTask.LogProgressBatch
  nameWithType: DataFlowTask.LogProgressBatch
- uid: ALE.ETLBox.DataFlowTask.NLogFinish
  name: NLogFinish()
  href: api/ALE.ETLBox.DataFlowTask.html#ALE_ETLBox_DataFlowTask_NLogFinish
  commentId: M:ALE.ETLBox.DataFlowTask.NLogFinish
  fullName: ALE.ETLBox.DataFlowTask.NLogFinish()
  nameWithType: DataFlowTask.NLogFinish()
- uid: ALE.ETLBox.DataFlowTask.NLogFinish*
  name: NLogFinish
  href: api/ALE.ETLBox.DataFlowTask.html#ALE_ETLBox_DataFlowTask_NLogFinish_
  commentId: Overload:ALE.ETLBox.DataFlowTask.NLogFinish
  isSpec: "True"
  fullName: ALE.ETLBox.DataFlowTask.NLogFinish
  nameWithType: DataFlowTask.NLogFinish
- uid: ALE.ETLBox.DataFlowTask.NLogStart
  name: NLogStart()
  href: api/ALE.ETLBox.DataFlowTask.html#ALE_ETLBox_DataFlowTask_NLogStart
  commentId: M:ALE.ETLBox.DataFlowTask.NLogStart
  fullName: ALE.ETLBox.DataFlowTask.NLogStart()
  nameWithType: DataFlowTask.NLogStart()
- uid: ALE.ETLBox.DataFlowTask.NLogStart*
  name: NLogStart
  href: api/ALE.ETLBox.DataFlowTask.html#ALE_ETLBox_DataFlowTask_NLogStart_
  commentId: Overload:ALE.ETLBox.DataFlowTask.NLogStart
  isSpec: "True"
  fullName: ALE.ETLBox.DataFlowTask.NLogStart
  nameWithType: DataFlowTask.NLogStart
- uid: ALE.ETLBox.DataFlowTask.ProgressCount
  name: ProgressCount
  href: api/ALE.ETLBox.DataFlowTask.html#ALE_ETLBox_DataFlowTask_ProgressCount
  commentId: P:ALE.ETLBox.DataFlowTask.ProgressCount
  fullName: ALE.ETLBox.DataFlowTask.ProgressCount
  nameWithType: DataFlowTask.ProgressCount
- uid: ALE.ETLBox.DataFlowTask.ProgressCount*
  name: ProgressCount
  href: api/ALE.ETLBox.DataFlowTask.html#ALE_ETLBox_DataFlowTask_ProgressCount_
  commentId: Overload:ALE.ETLBox.DataFlowTask.ProgressCount
  isSpec: "True"
  fullName: ALE.ETLBox.DataFlowTask.ProgressCount
  nameWithType: DataFlowTask.ProgressCount
- uid: ALE.ETLBox.DataFlowTask.ThresholdCount
  name: ThresholdCount
  href: api/ALE.ETLBox.DataFlowTask.html#ALE_ETLBox_DataFlowTask_ThresholdCount
  commentId: P:ALE.ETLBox.DataFlowTask.ThresholdCount
  fullName: ALE.ETLBox.DataFlowTask.ThresholdCount
  nameWithType: DataFlowTask.ThresholdCount
- uid: ALE.ETLBox.DataFlowTask.ThresholdCount*
  name: ThresholdCount
  href: api/ALE.ETLBox.DataFlowTask.html#ALE_ETLBox_DataFlowTask_ThresholdCount_
  commentId: Overload:ALE.ETLBox.DataFlowTask.ThresholdCount
  isSpec: "True"
  fullName: ALE.ETLBox.DataFlowTask.ThresholdCount
  nameWithType: DataFlowTask.ThresholdCount
- uid: ALE.ETLBox.DataFlowTransformation`2
  name: DataFlowTransformation<TInput, TOutput>
  href: api/ALE.ETLBox.DataFlowTransformation-2.html
  commentId: T:ALE.ETLBox.DataFlowTransformation`2
  name.vb: DataFlowTransformation(Of TInput, TOutput)
  fullName: ALE.ETLBox.DataFlowTransformation<TInput, TOutput>
  fullName.vb: ALE.ETLBox.DataFlowTransformation(Of TInput, TOutput)
  nameWithType: DataFlowTransformation<TInput, TOutput>
  nameWithType.vb: DataFlowTransformation(Of TInput, TOutput)
- uid: ALE.ETLBox.DataFlowTransformation`2.AddPredecessorCompletion(System.Threading.Tasks.Task)
  name: AddPredecessorCompletion(Task)
  href: api/ALE.ETLBox.DataFlowTransformation-2.html#ALE_ETLBox_DataFlowTransformation_2_AddPredecessorCompletion_System_Threading_Tasks_Task_
  commentId: M:ALE.ETLBox.DataFlowTransformation`2.AddPredecessorCompletion(System.Threading.Tasks.Task)
  fullName: ALE.ETLBox.DataFlowTransformation<TInput, TOutput>.AddPredecessorCompletion(System.Threading.Tasks.Task)
  fullName.vb: ALE.ETLBox.DataFlowTransformation(Of TInput, TOutput).AddPredecessorCompletion(System.Threading.Tasks.Task)
  nameWithType: DataFlowTransformation<TInput, TOutput>.AddPredecessorCompletion(Task)
  nameWithType.vb: DataFlowTransformation(Of TInput, TOutput).AddPredecessorCompletion(Task)
- uid: ALE.ETLBox.DataFlowTransformation`2.AddPredecessorCompletion*
  name: AddPredecessorCompletion
  href: api/ALE.ETLBox.DataFlowTransformation-2.html#ALE_ETLBox_DataFlowTransformation_2_AddPredecessorCompletion_
  commentId: Overload:ALE.ETLBox.DataFlowTransformation`2.AddPredecessorCompletion
  isSpec: "True"
  fullName: ALE.ETLBox.DataFlowTransformation<TInput, TOutput>.AddPredecessorCompletion
  fullName.vb: ALE.ETLBox.DataFlowTransformation(Of TInput, TOutput).AddPredecessorCompletion
  nameWithType: DataFlowTransformation<TInput, TOutput>.AddPredecessorCompletion
  nameWithType.vb: DataFlowTransformation(Of TInput, TOutput).AddPredecessorCompletion
- uid: ALE.ETLBox.DataFlowTransformation`2.CheckCompleteAction
  name: CheckCompleteAction()
  href: api/ALE.ETLBox.DataFlowTransformation-2.html#ALE_ETLBox_DataFlowTransformation_2_CheckCompleteAction
  commentId: M:ALE.ETLBox.DataFlowTransformation`2.CheckCompleteAction
  fullName: ALE.ETLBox.DataFlowTransformation<TInput, TOutput>.CheckCompleteAction()
  fullName.vb: ALE.ETLBox.DataFlowTransformation(Of TInput, TOutput).CheckCompleteAction()
  nameWithType: DataFlowTransformation<TInput, TOutput>.CheckCompleteAction()
  nameWithType.vb: DataFlowTransformation(Of TInput, TOutput).CheckCompleteAction()
- uid: ALE.ETLBox.DataFlowTransformation`2.CheckCompleteAction*
  name: CheckCompleteAction
  href: api/ALE.ETLBox.DataFlowTransformation-2.html#ALE_ETLBox_DataFlowTransformation_2_CheckCompleteAction_
  commentId: Overload:ALE.ETLBox.DataFlowTransformation`2.CheckCompleteAction
  isSpec: "True"
  fullName: ALE.ETLBox.DataFlowTransformation<TInput, TOutput>.CheckCompleteAction
  fullName.vb: ALE.ETLBox.DataFlowTransformation(Of TInput, TOutput).CheckCompleteAction
  nameWithType: DataFlowTransformation<TInput, TOutput>.CheckCompleteAction
  nameWithType.vb: DataFlowTransformation(Of TInput, TOutput).CheckCompleteAction
- uid: ALE.ETLBox.DataFlowTransformation`2.LinkTo(ALE.ETLBox.DataFlow.IDataFlowLinkTarget{`1})
  name: LinkTo(IDataFlowLinkTarget<TOutput>)
  href: api/ALE.ETLBox.DataFlowTransformation-2.html#ALE_ETLBox_DataFlowTransformation_2_LinkTo_ALE_ETLBox_DataFlow_IDataFlowLinkTarget__1__
  commentId: M:ALE.ETLBox.DataFlowTransformation`2.LinkTo(ALE.ETLBox.DataFlow.IDataFlowLinkTarget{`1})
  name.vb: LinkTo(IDataFlowLinkTarget(Of TOutput))
  fullName: ALE.ETLBox.DataFlowTransformation<TInput, TOutput>.LinkTo(ALE.ETLBox.DataFlow.IDataFlowLinkTarget<TOutput>)
  fullName.vb: ALE.ETLBox.DataFlowTransformation(Of TInput, TOutput).LinkTo(ALE.ETLBox.DataFlow.IDataFlowLinkTarget(Of TOutput))
  nameWithType: DataFlowTransformation<TInput, TOutput>.LinkTo(IDataFlowLinkTarget<TOutput>)
  nameWithType.vb: DataFlowTransformation(Of TInput, TOutput).LinkTo(IDataFlowLinkTarget(Of TOutput))
- uid: ALE.ETLBox.DataFlowTransformation`2.LinkTo(ALE.ETLBox.DataFlow.IDataFlowLinkTarget{`1},System.Predicate{`1})
  name: LinkTo(IDataFlowLinkTarget<TOutput>, Predicate<TOutput>)
  href: api/ALE.ETLBox.DataFlowTransformation-2.html#ALE_ETLBox_DataFlowTransformation_2_LinkTo_ALE_ETLBox_DataFlow_IDataFlowLinkTarget__1__System_Predicate__1__
  commentId: M:ALE.ETLBox.DataFlowTransformation`2.LinkTo(ALE.ETLBox.DataFlow.IDataFlowLinkTarget{`1},System.Predicate{`1})
  name.vb: LinkTo(IDataFlowLinkTarget(Of TOutput), Predicate(Of TOutput))
  fullName: ALE.ETLBox.DataFlowTransformation<TInput, TOutput>.LinkTo(ALE.ETLBox.DataFlow.IDataFlowLinkTarget<TOutput>, System.Predicate<TOutput>)
  fullName.vb: ALE.ETLBox.DataFlowTransformation(Of TInput, TOutput).LinkTo(ALE.ETLBox.DataFlow.IDataFlowLinkTarget(Of TOutput), System.Predicate(Of TOutput))
  nameWithType: DataFlowTransformation<TInput, TOutput>.LinkTo(IDataFlowLinkTarget<TOutput>, Predicate<TOutput>)
  nameWithType.vb: DataFlowTransformation(Of TInput, TOutput).LinkTo(IDataFlowLinkTarget(Of TOutput), Predicate(Of TOutput))
- uid: ALE.ETLBox.DataFlowTransformation`2.LinkTo(ALE.ETLBox.DataFlow.IDataFlowLinkTarget{`1},System.Predicate{`1},System.Predicate{`1})
  name: LinkTo(IDataFlowLinkTarget<TOutput>, Predicate<TOutput>, Predicate<TOutput>)
  href: api/ALE.ETLBox.DataFlowTransformation-2.html#ALE_ETLBox_DataFlowTransformation_2_LinkTo_ALE_ETLBox_DataFlow_IDataFlowLinkTarget__1__System_Predicate__1__System_Predicate__1__
  commentId: M:ALE.ETLBox.DataFlowTransformation`2.LinkTo(ALE.ETLBox.DataFlow.IDataFlowLinkTarget{`1},System.Predicate{`1},System.Predicate{`1})
  name.vb: LinkTo(IDataFlowLinkTarget(Of TOutput), Predicate(Of TOutput), Predicate(Of TOutput))
  fullName: ALE.ETLBox.DataFlowTransformation<TInput, TOutput>.LinkTo(ALE.ETLBox.DataFlow.IDataFlowLinkTarget<TOutput>, System.Predicate<TOutput>, System.Predicate<TOutput>)
  fullName.vb: ALE.ETLBox.DataFlowTransformation(Of TInput, TOutput).LinkTo(ALE.ETLBox.DataFlow.IDataFlowLinkTarget(Of TOutput), System.Predicate(Of TOutput), System.Predicate(Of TOutput))
  nameWithType: DataFlowTransformation<TInput, TOutput>.LinkTo(IDataFlowLinkTarget<TOutput>, Predicate<TOutput>, Predicate<TOutput>)
  nameWithType.vb: DataFlowTransformation(Of TInput, TOutput).LinkTo(IDataFlowLinkTarget(Of TOutput), Predicate(Of TOutput), Predicate(Of TOutput))
- uid: ALE.ETLBox.DataFlowTransformation`2.LinkTo*
  name: LinkTo
  href: api/ALE.ETLBox.DataFlowTransformation-2.html#ALE_ETLBox_DataFlowTransformation_2_LinkTo_
  commentId: Overload:ALE.ETLBox.DataFlowTransformation`2.LinkTo
  isSpec: "True"
  fullName: ALE.ETLBox.DataFlowTransformation<TInput, TOutput>.LinkTo
  fullName.vb: ALE.ETLBox.DataFlowTransformation(Of TInput, TOutput).LinkTo
  nameWithType: DataFlowTransformation<TInput, TOutput>.LinkTo
  nameWithType.vb: DataFlowTransformation(Of TInput, TOutput).LinkTo
- uid: ALE.ETLBox.DataFlowTransformation`2.LinkTo``1(ALE.ETLBox.DataFlow.IDataFlowLinkTarget{`1})
  name: LinkTo<TConvert>(IDataFlowLinkTarget<TOutput>)
  href: api/ALE.ETLBox.DataFlowTransformation-2.html#ALE_ETLBox_DataFlowTransformation_2_LinkTo__1_ALE_ETLBox_DataFlow_IDataFlowLinkTarget__1__
  commentId: M:ALE.ETLBox.DataFlowTransformation`2.LinkTo``1(ALE.ETLBox.DataFlow.IDataFlowLinkTarget{`1})
  name.vb: LinkTo(Of TConvert)(IDataFlowLinkTarget(Of TOutput))
  fullName: ALE.ETLBox.DataFlowTransformation<TInput, TOutput>.LinkTo<TConvert>(ALE.ETLBox.DataFlow.IDataFlowLinkTarget<TOutput>)
  fullName.vb: ALE.ETLBox.DataFlowTransformation(Of TInput, TOutput).LinkTo(Of TConvert)(ALE.ETLBox.DataFlow.IDataFlowLinkTarget(Of TOutput))
  nameWithType: DataFlowTransformation<TInput, TOutput>.LinkTo<TConvert>(IDataFlowLinkTarget<TOutput>)
  nameWithType.vb: DataFlowTransformation(Of TInput, TOutput).LinkTo(Of TConvert)(IDataFlowLinkTarget(Of TOutput))
- uid: ALE.ETLBox.DataFlowTransformation`2.LinkTo``1(ALE.ETLBox.DataFlow.IDataFlowLinkTarget{`1},System.Predicate{`1})
  name: LinkTo<TConvert>(IDataFlowLinkTarget<TOutput>, Predicate<TOutput>)
  href: api/ALE.ETLBox.DataFlowTransformation-2.html#ALE_ETLBox_DataFlowTransformation_2_LinkTo__1_ALE_ETLBox_DataFlow_IDataFlowLinkTarget__1__System_Predicate__1__
  commentId: M:ALE.ETLBox.DataFlowTransformation`2.LinkTo``1(ALE.ETLBox.DataFlow.IDataFlowLinkTarget{`1},System.Predicate{`1})
  name.vb: LinkTo(Of TConvert)(IDataFlowLinkTarget(Of TOutput), Predicate(Of TOutput))
  fullName: ALE.ETLBox.DataFlowTransformation<TInput, TOutput>.LinkTo<TConvert>(ALE.ETLBox.DataFlow.IDataFlowLinkTarget<TOutput>, System.Predicate<TOutput>)
  fullName.vb: ALE.ETLBox.DataFlowTransformation(Of TInput, TOutput).LinkTo(Of TConvert)(ALE.ETLBox.DataFlow.IDataFlowLinkTarget(Of TOutput), System.Predicate(Of TOutput))
  nameWithType: DataFlowTransformation<TInput, TOutput>.LinkTo<TConvert>(IDataFlowLinkTarget<TOutput>, Predicate<TOutput>)
  nameWithType.vb: DataFlowTransformation(Of TInput, TOutput).LinkTo(Of TConvert)(IDataFlowLinkTarget(Of TOutput), Predicate(Of TOutput))
- uid: ALE.ETLBox.DataFlowTransformation`2.LinkTo``1(ALE.ETLBox.DataFlow.IDataFlowLinkTarget{`1},System.Predicate{`1},System.Predicate{`1})
  name: LinkTo<TConvert>(IDataFlowLinkTarget<TOutput>, Predicate<TOutput>, Predicate<TOutput>)
  href: api/ALE.ETLBox.DataFlowTransformation-2.html#ALE_ETLBox_DataFlowTransformation_2_LinkTo__1_ALE_ETLBox_DataFlow_IDataFlowLinkTarget__1__System_Predicate__1__System_Predicate__1__
  commentId: M:ALE.ETLBox.DataFlowTransformation`2.LinkTo``1(ALE.ETLBox.DataFlow.IDataFlowLinkTarget{`1},System.Predicate{`1},System.Predicate{`1})
  name.vb: LinkTo(Of TConvert)(IDataFlowLinkTarget(Of TOutput), Predicate(Of TOutput), Predicate(Of TOutput))
  fullName: ALE.ETLBox.DataFlowTransformation<TInput, TOutput>.LinkTo<TConvert>(ALE.ETLBox.DataFlow.IDataFlowLinkTarget<TOutput>, System.Predicate<TOutput>, System.Predicate<TOutput>)
  fullName.vb: ALE.ETLBox.DataFlowTransformation(Of TInput, TOutput).LinkTo(Of TConvert)(ALE.ETLBox.DataFlow.IDataFlowLinkTarget(Of TOutput), System.Predicate(Of TOutput), System.Predicate(Of TOutput))
  nameWithType: DataFlowTransformation<TInput, TOutput>.LinkTo<TConvert>(IDataFlowLinkTarget<TOutput>, Predicate<TOutput>, Predicate<TOutput>)
  nameWithType.vb: DataFlowTransformation(Of TInput, TOutput).LinkTo(Of TConvert)(IDataFlowLinkTarget(Of TOutput), Predicate(Of TOutput), Predicate(Of TOutput))
- uid: ALE.ETLBox.DataFlowTransformation`2.PredecessorCompletions
  name: PredecessorCompletions
  href: api/ALE.ETLBox.DataFlowTransformation-2.html#ALE_ETLBox_DataFlowTransformation_2_PredecessorCompletions
  commentId: P:ALE.ETLBox.DataFlowTransformation`2.PredecessorCompletions
  fullName: ALE.ETLBox.DataFlowTransformation<TInput, TOutput>.PredecessorCompletions
  fullName.vb: ALE.ETLBox.DataFlowTransformation(Of TInput, TOutput).PredecessorCompletions
  nameWithType: DataFlowTransformation<TInput, TOutput>.PredecessorCompletions
  nameWithType.vb: DataFlowTransformation(Of TInput, TOutput).PredecessorCompletions
- uid: ALE.ETLBox.DataFlowTransformation`2.PredecessorCompletions*
  name: PredecessorCompletions
  href: api/ALE.ETLBox.DataFlowTransformation-2.html#ALE_ETLBox_DataFlowTransformation_2_PredecessorCompletions_
  commentId: Overload:ALE.ETLBox.DataFlowTransformation`2.PredecessorCompletions
  isSpec: "True"
  fullName: ALE.ETLBox.DataFlowTransformation<TInput, TOutput>.PredecessorCompletions
  fullName.vb: ALE.ETLBox.DataFlowTransformation(Of TInput, TOutput).PredecessorCompletions
  nameWithType: DataFlowTransformation<TInput, TOutput>.PredecessorCompletions
  nameWithType.vb: DataFlowTransformation(Of TInput, TOutput).PredecessorCompletions
- uid: ALE.ETLBox.DataFlowTransformation`2.SourceBlock
  name: SourceBlock
  href: api/ALE.ETLBox.DataFlowTransformation-2.html#ALE_ETLBox_DataFlowTransformation_2_SourceBlock
  commentId: P:ALE.ETLBox.DataFlowTransformation`2.SourceBlock
  fullName: ALE.ETLBox.DataFlowTransformation<TInput, TOutput>.SourceBlock
  fullName.vb: ALE.ETLBox.DataFlowTransformation(Of TInput, TOutput).SourceBlock
  nameWithType: DataFlowTransformation<TInput, TOutput>.SourceBlock
  nameWithType.vb: DataFlowTransformation(Of TInput, TOutput).SourceBlock
- uid: ALE.ETLBox.DataFlowTransformation`2.SourceBlock*
  name: SourceBlock
  href: api/ALE.ETLBox.DataFlowTransformation-2.html#ALE_ETLBox_DataFlowTransformation_2_SourceBlock_
  commentId: Overload:ALE.ETLBox.DataFlowTransformation`2.SourceBlock
  isSpec: "True"
  fullName: ALE.ETLBox.DataFlowTransformation<TInput, TOutput>.SourceBlock
  fullName.vb: ALE.ETLBox.DataFlowTransformation(Of TInput, TOutput).SourceBlock
  nameWithType: DataFlowTransformation<TInput, TOutput>.SourceBlock
  nameWithType.vb: DataFlowTransformation(Of TInput, TOutput).SourceBlock
- uid: ALE.ETLBox.DataFlowTransformation`2.TargetBlock
  name: TargetBlock
  href: api/ALE.ETLBox.DataFlowTransformation-2.html#ALE_ETLBox_DataFlowTransformation_2_TargetBlock
  commentId: P:ALE.ETLBox.DataFlowTransformation`2.TargetBlock
  fullName: ALE.ETLBox.DataFlowTransformation<TInput, TOutput>.TargetBlock
  fullName.vb: ALE.ETLBox.DataFlowTransformation(Of TInput, TOutput).TargetBlock
  nameWithType: DataFlowTransformation<TInput, TOutput>.TargetBlock
  nameWithType.vb: DataFlowTransformation(Of TInput, TOutput).TargetBlock
- uid: ALE.ETLBox.DataFlowTransformation`2.TargetBlock*
  name: TargetBlock
  href: api/ALE.ETLBox.DataFlowTransformation-2.html#ALE_ETLBox_DataFlowTransformation_2_TargetBlock_
  commentId: Overload:ALE.ETLBox.DataFlowTransformation`2.TargetBlock
  isSpec: "True"
  fullName: ALE.ETLBox.DataFlowTransformation<TInput, TOutput>.TargetBlock
  fullName.vb: ALE.ETLBox.DataFlowTransformation(Of TInput, TOutput).TargetBlock
  nameWithType: DataFlowTransformation<TInput, TOutput>.TargetBlock
  nameWithType.vb: DataFlowTransformation(Of TInput, TOutput).TargetBlock
- uid: ALE.ETLBox.ETLBoxException
  name: ETLBoxException
  href: api/ALE.ETLBox.ETLBoxException.html
  commentId: T:ALE.ETLBox.ETLBoxException
  fullName: ALE.ETLBox.ETLBoxException
  nameWithType: ETLBoxException
- uid: ALE.ETLBox.ETLBoxException.#ctor
  name: ETLBoxException()
  href: api/ALE.ETLBox.ETLBoxException.html#ALE_ETLBox_ETLBoxException__ctor
  commentId: M:ALE.ETLBox.ETLBoxException.#ctor
  fullName: ALE.ETLBox.ETLBoxException.ETLBoxException()
  nameWithType: ETLBoxException.ETLBoxException()
- uid: ALE.ETLBox.ETLBoxException.#ctor(System.String)
  name: ETLBoxException(String)
  href: api/ALE.ETLBox.ETLBoxException.html#ALE_ETLBox_ETLBoxException__ctor_System_String_
  commentId: M:ALE.ETLBox.ETLBoxException.#ctor(System.String)
  fullName: ALE.ETLBox.ETLBoxException.ETLBoxException(System.String)
  nameWithType: ETLBoxException.ETLBoxException(String)
- uid: ALE.ETLBox.ETLBoxException.#ctor(System.String,System.Exception)
  name: ETLBoxException(String, Exception)
  href: api/ALE.ETLBox.ETLBoxException.html#ALE_ETLBox_ETLBoxException__ctor_System_String_System_Exception_
  commentId: M:ALE.ETLBox.ETLBoxException.#ctor(System.String,System.Exception)
  fullName: ALE.ETLBox.ETLBoxException.ETLBoxException(System.String, System.Exception)
  nameWithType: ETLBoxException.ETLBoxException(String, Exception)
- uid: ALE.ETLBox.ETLBoxException.#ctor*
  name: ETLBoxException
  href: api/ALE.ETLBox.ETLBoxException.html#ALE_ETLBox_ETLBoxException__ctor_
  commentId: Overload:ALE.ETLBox.ETLBoxException.#ctor
  isSpec: "True"
  fullName: ALE.ETLBox.ETLBoxException.ETLBoxException
  nameWithType: ETLBoxException.ETLBoxException
- uid: ALE.ETLBox.ETLBoxNotSupportedException
  name: ETLBoxNotSupportedException
  href: api/ALE.ETLBox.ETLBoxNotSupportedException.html
  commentId: T:ALE.ETLBox.ETLBoxNotSupportedException
  fullName: ALE.ETLBox.ETLBoxNotSupportedException
  nameWithType: ETLBoxNotSupportedException
- uid: ALE.ETLBox.ETLBoxNotSupportedException.#ctor
  name: ETLBoxNotSupportedException()
  href: api/ALE.ETLBox.ETLBoxNotSupportedException.html#ALE_ETLBox_ETLBoxNotSupportedException__ctor
  commentId: M:ALE.ETLBox.ETLBoxNotSupportedException.#ctor
  fullName: ALE.ETLBox.ETLBoxNotSupportedException.ETLBoxNotSupportedException()
  nameWithType: ETLBoxNotSupportedException.ETLBoxNotSupportedException()
- uid: ALE.ETLBox.ETLBoxNotSupportedException.#ctor(System.String)
  name: ETLBoxNotSupportedException(String)
  href: api/ALE.ETLBox.ETLBoxNotSupportedException.html#ALE_ETLBox_ETLBoxNotSupportedException__ctor_System_String_
  commentId: M:ALE.ETLBox.ETLBoxNotSupportedException.#ctor(System.String)
  fullName: ALE.ETLBox.ETLBoxNotSupportedException.ETLBoxNotSupportedException(System.String)
  nameWithType: ETLBoxNotSupportedException.ETLBoxNotSupportedException(String)
- uid: ALE.ETLBox.ETLBoxNotSupportedException.#ctor(System.String,System.Exception)
  name: ETLBoxNotSupportedException(String, Exception)
  href: api/ALE.ETLBox.ETLBoxNotSupportedException.html#ALE_ETLBox_ETLBoxNotSupportedException__ctor_System_String_System_Exception_
  commentId: M:ALE.ETLBox.ETLBoxNotSupportedException.#ctor(System.String,System.Exception)
  fullName: ALE.ETLBox.ETLBoxNotSupportedException.ETLBoxNotSupportedException(System.String, System.Exception)
  nameWithType: ETLBoxNotSupportedException.ETLBoxNotSupportedException(String, Exception)
- uid: ALE.ETLBox.ETLBoxNotSupportedException.#ctor*
  name: ETLBoxNotSupportedException
  href: api/ALE.ETLBox.ETLBoxNotSupportedException.html#ALE_ETLBox_ETLBoxNotSupportedException__ctor_
  commentId: Overload:ALE.ETLBox.ETLBoxNotSupportedException.#ctor
  isSpec: "True"
  fullName: ALE.ETLBox.ETLBoxNotSupportedException.ETLBoxNotSupportedException
  nameWithType: ETLBoxNotSupportedException.ETLBoxNotSupportedException
- uid: ALE.ETLBox.GenericTask
  name: GenericTask
  href: api/ALE.ETLBox.GenericTask.html
  commentId: T:ALE.ETLBox.GenericTask
  fullName: ALE.ETLBox.GenericTask
  nameWithType: GenericTask
- uid: ALE.ETLBox.GenericTask.#ctor
  name: GenericTask()
  href: api/ALE.ETLBox.GenericTask.html#ALE_ETLBox_GenericTask__ctor
  commentId: M:ALE.ETLBox.GenericTask.#ctor
  fullName: ALE.ETLBox.GenericTask.GenericTask()
  nameWithType: GenericTask.GenericTask()
- uid: ALE.ETLBox.GenericTask.#ctor*
  name: GenericTask
  href: api/ALE.ETLBox.GenericTask.html#ALE_ETLBox_GenericTask__ctor_
  commentId: Overload:ALE.ETLBox.GenericTask.#ctor
  isSpec: "True"
  fullName: ALE.ETLBox.GenericTask.GenericTask
  nameWithType: GenericTask.GenericTask
- uid: ALE.ETLBox.GenericTask._disableLogging
  name: _disableLogging
  href: api/ALE.ETLBox.GenericTask.html#ALE_ETLBox_GenericTask__disableLogging
  commentId: F:ALE.ETLBox.GenericTask._disableLogging
  fullName: ALE.ETLBox.GenericTask._disableLogging
  nameWithType: GenericTask._disableLogging
- uid: ALE.ETLBox.GenericTask.ConnectionManager
  name: ConnectionManager
  href: api/ALE.ETLBox.GenericTask.html#ALE_ETLBox_GenericTask_ConnectionManager
  commentId: P:ALE.ETLBox.GenericTask.ConnectionManager
  fullName: ALE.ETLBox.GenericTask.ConnectionManager
  nameWithType: GenericTask.ConnectionManager
- uid: ALE.ETLBox.GenericTask.ConnectionManager*
  name: ConnectionManager
  href: api/ALE.ETLBox.GenericTask.html#ALE_ETLBox_GenericTask_ConnectionManager_
  commentId: Overload:ALE.ETLBox.GenericTask.ConnectionManager
  isSpec: "True"
  fullName: ALE.ETLBox.GenericTask.ConnectionManager
  nameWithType: GenericTask.ConnectionManager
- uid: ALE.ETLBox.GenericTask.ConnectionType
  name: ConnectionType
  href: api/ALE.ETLBox.GenericTask.html#ALE_ETLBox_GenericTask_ConnectionType
  commentId: P:ALE.ETLBox.GenericTask.ConnectionType
  fullName: ALE.ETLBox.GenericTask.ConnectionType
  nameWithType: GenericTask.ConnectionType
- uid: ALE.ETLBox.GenericTask.ConnectionType*
  name: ConnectionType
  href: api/ALE.ETLBox.GenericTask.html#ALE_ETLBox_GenericTask_ConnectionType_
  commentId: Overload:ALE.ETLBox.GenericTask.ConnectionType
  isSpec: "True"
  fullName: ALE.ETLBox.GenericTask.ConnectionType
  nameWithType: GenericTask.ConnectionType
- uid: ALE.ETLBox.GenericTask.CopyTaskProperties(ALE.ETLBox.ITask)
  name: CopyTaskProperties(ITask)
  href: api/ALE.ETLBox.GenericTask.html#ALE_ETLBox_GenericTask_CopyTaskProperties_ALE_ETLBox_ITask_
  commentId: M:ALE.ETLBox.GenericTask.CopyTaskProperties(ALE.ETLBox.ITask)
  fullName: ALE.ETLBox.GenericTask.CopyTaskProperties(ALE.ETLBox.ITask)
  nameWithType: GenericTask.CopyTaskProperties(ITask)
- uid: ALE.ETLBox.GenericTask.CopyTaskProperties*
  name: CopyTaskProperties
  href: api/ALE.ETLBox.GenericTask.html#ALE_ETLBox_GenericTask_CopyTaskProperties_
  commentId: Overload:ALE.ETLBox.GenericTask.CopyTaskProperties
  isSpec: "True"
  fullName: ALE.ETLBox.GenericTask.CopyTaskProperties
  nameWithType: GenericTask.CopyTaskProperties
- uid: ALE.ETLBox.GenericTask.DisableLogging
  name: DisableLogging
  href: api/ALE.ETLBox.GenericTask.html#ALE_ETLBox_GenericTask_DisableLogging
  commentId: P:ALE.ETLBox.GenericTask.DisableLogging
  fullName: ALE.ETLBox.GenericTask.DisableLogging
  nameWithType: GenericTask.DisableLogging
- uid: ALE.ETLBox.GenericTask.DisableLogging*
  name: DisableLogging
  href: api/ALE.ETLBox.GenericTask.html#ALE_ETLBox_GenericTask_DisableLogging_
  commentId: Overload:ALE.ETLBox.GenericTask.DisableLogging
  isSpec: "True"
  fullName: ALE.ETLBox.GenericTask.DisableLogging
  nameWithType: GenericTask.DisableLogging
- uid: ALE.ETLBox.GenericTask.NLogger
  name: NLogger
  href: api/ALE.ETLBox.GenericTask.html#ALE_ETLBox_GenericTask_NLogger
  commentId: P:ALE.ETLBox.GenericTask.NLogger
  fullName: ALE.ETLBox.GenericTask.NLogger
  nameWithType: GenericTask.NLogger
- uid: ALE.ETLBox.GenericTask.NLogger*
  name: NLogger
  href: api/ALE.ETLBox.GenericTask.html#ALE_ETLBox_GenericTask_NLogger_
  commentId: Overload:ALE.ETLBox.GenericTask.NLogger
  isSpec: "True"
  fullName: ALE.ETLBox.GenericTask.NLogger
  nameWithType: GenericTask.NLogger
- uid: ALE.ETLBox.GenericTask.QB
  name: QB
  href: api/ALE.ETLBox.GenericTask.html#ALE_ETLBox_GenericTask_QB
  commentId: P:ALE.ETLBox.GenericTask.QB
  fullName: ALE.ETLBox.GenericTask.QB
  nameWithType: GenericTask.QB
- uid: ALE.ETLBox.GenericTask.QB*
  name: QB
  href: api/ALE.ETLBox.GenericTask.html#ALE_ETLBox_GenericTask_QB_
  commentId: Overload:ALE.ETLBox.GenericTask.QB
  isSpec: "True"
  fullName: ALE.ETLBox.GenericTask.QB
  nameWithType: GenericTask.QB
- uid: ALE.ETLBox.GenericTask.QE
  name: QE
  href: api/ALE.ETLBox.GenericTask.html#ALE_ETLBox_GenericTask_QE
  commentId: P:ALE.ETLBox.GenericTask.QE
  fullName: ALE.ETLBox.GenericTask.QE
  nameWithType: GenericTask.QE
- uid: ALE.ETLBox.GenericTask.QE*
  name: QE
  href: api/ALE.ETLBox.GenericTask.html#ALE_ETLBox_GenericTask_QE_
  commentId: Overload:ALE.ETLBox.GenericTask.QE
  isSpec: "True"
  fullName: ALE.ETLBox.GenericTask.QE
  nameWithType: GenericTask.QE
- uid: ALE.ETLBox.GenericTask.TaskHash
  name: TaskHash
  href: api/ALE.ETLBox.GenericTask.html#ALE_ETLBox_GenericTask_TaskHash
  commentId: P:ALE.ETLBox.GenericTask.TaskHash
  fullName: ALE.ETLBox.GenericTask.TaskHash
  nameWithType: GenericTask.TaskHash
- uid: ALE.ETLBox.GenericTask.TaskHash*
  name: TaskHash
  href: api/ALE.ETLBox.GenericTask.html#ALE_ETLBox_GenericTask_TaskHash_
  commentId: Overload:ALE.ETLBox.GenericTask.TaskHash
  isSpec: "True"
  fullName: ALE.ETLBox.GenericTask.TaskHash
  nameWithType: GenericTask.TaskHash
- uid: ALE.ETLBox.GenericTask.TaskName
  name: TaskName
  href: api/ALE.ETLBox.GenericTask.html#ALE_ETLBox_GenericTask_TaskName
  commentId: P:ALE.ETLBox.GenericTask.TaskName
  fullName: ALE.ETLBox.GenericTask.TaskName
  nameWithType: GenericTask.TaskName
- uid: ALE.ETLBox.GenericTask.TaskName*
  name: TaskName
  href: api/ALE.ETLBox.GenericTask.html#ALE_ETLBox_GenericTask_TaskName_
  commentId: Overload:ALE.ETLBox.GenericTask.TaskName
  isSpec: "True"
  fullName: ALE.ETLBox.GenericTask.TaskName
  nameWithType: GenericTask.TaskName
- uid: ALE.ETLBox.GenericTask.TaskType
  name: TaskType
  href: api/ALE.ETLBox.GenericTask.html#ALE_ETLBox_GenericTask_TaskType
  commentId: P:ALE.ETLBox.GenericTask.TaskType
  fullName: ALE.ETLBox.GenericTask.TaskType
  nameWithType: GenericTask.TaskType
- uid: ALE.ETLBox.GenericTask.TaskType*
  name: TaskType
  href: api/ALE.ETLBox.GenericTask.html#ALE_ETLBox_GenericTask_TaskType_
  commentId: Overload:ALE.ETLBox.GenericTask.TaskType
  isSpec: "True"
  fullName: ALE.ETLBox.GenericTask.TaskType
  nameWithType: GenericTask.TaskType
- uid: ALE.ETLBox.Helper
  name: ALE.ETLBox.Helper
  href: api/ALE.ETLBox.Helper.html
  commentId: N:ALE.ETLBox.Helper
  fullName: ALE.ETLBox.Helper
  nameWithType: ALE.ETLBox.Helper
- uid: ALE.ETLBox.Helper.BigDataHelper
  name: BigDataHelper
  href: api/ALE.ETLBox.Helper.BigDataHelper.html
  commentId: T:ALE.ETLBox.Helper.BigDataHelper
  fullName: ALE.ETLBox.Helper.BigDataHelper
  nameWithType: BigDataHelper
- uid: ALE.ETLBox.Helper.BigDataHelper.CreateBigDataCSV
  name: CreateBigDataCSV()
  href: api/ALE.ETLBox.Helper.BigDataHelper.html#ALE_ETLBox_Helper_BigDataHelper_CreateBigDataCSV
  commentId: M:ALE.ETLBox.Helper.BigDataHelper.CreateBigDataCSV
  fullName: ALE.ETLBox.Helper.BigDataHelper.CreateBigDataCSV()
  nameWithType: BigDataHelper.CreateBigDataCSV()
- uid: ALE.ETLBox.Helper.BigDataHelper.CreateBigDataCSV*
  name: CreateBigDataCSV
  href: api/ALE.ETLBox.Helper.BigDataHelper.html#ALE_ETLBox_Helper_BigDataHelper_CreateBigDataCSV_
  commentId: Overload:ALE.ETLBox.Helper.BigDataHelper.CreateBigDataCSV
  isSpec: "True"
  fullName: ALE.ETLBox.Helper.BigDataHelper.CreateBigDataCSV
  nameWithType: BigDataHelper.CreateBigDataCSV
- uid: ALE.ETLBox.Helper.BigDataHelper.FileName
  name: FileName
  href: api/ALE.ETLBox.Helper.BigDataHelper.html#ALE_ETLBox_Helper_BigDataHelper_FileName
  commentId: P:ALE.ETLBox.Helper.BigDataHelper.FileName
  fullName: ALE.ETLBox.Helper.BigDataHelper.FileName
  nameWithType: BigDataHelper.FileName
- uid: ALE.ETLBox.Helper.BigDataHelper.FileName*
  name: FileName
  href: api/ALE.ETLBox.Helper.BigDataHelper.html#ALE_ETLBox_Helper_BigDataHelper_FileName_
  commentId: Overload:ALE.ETLBox.Helper.BigDataHelper.FileName
  isSpec: "True"
  fullName: ALE.ETLBox.Helper.BigDataHelper.FileName
  nameWithType: BigDataHelper.FileName
- uid: ALE.ETLBox.Helper.BigDataHelper.LogExecutionTime(System.String,System.Action)
  name: LogExecutionTime(String, Action)
  href: api/ALE.ETLBox.Helper.BigDataHelper.html#ALE_ETLBox_Helper_BigDataHelper_LogExecutionTime_System_String_System_Action_
  commentId: M:ALE.ETLBox.Helper.BigDataHelper.LogExecutionTime(System.String,System.Action)
  fullName: ALE.ETLBox.Helper.BigDataHelper.LogExecutionTime(System.String, System.Action)
  nameWithType: BigDataHelper.LogExecutionTime(String, Action)
- uid: ALE.ETLBox.Helper.BigDataHelper.LogExecutionTime*
  name: LogExecutionTime
  href: api/ALE.ETLBox.Helper.BigDataHelper.html#ALE_ETLBox_Helper_BigDataHelper_LogExecutionTime_
  commentId: Overload:ALE.ETLBox.Helper.BigDataHelper.LogExecutionTime
  isSpec: "True"
  fullName: ALE.ETLBox.Helper.BigDataHelper.LogExecutionTime
  nameWithType: BigDataHelper.LogExecutionTime
- uid: ALE.ETLBox.Helper.BigDataHelper.NumberOfRows
  name: NumberOfRows
  href: api/ALE.ETLBox.Helper.BigDataHelper.html#ALE_ETLBox_Helper_BigDataHelper_NumberOfRows
  commentId: P:ALE.ETLBox.Helper.BigDataHelper.NumberOfRows
  fullName: ALE.ETLBox.Helper.BigDataHelper.NumberOfRows
  nameWithType: BigDataHelper.NumberOfRows
- uid: ALE.ETLBox.Helper.BigDataHelper.NumberOfRows*
  name: NumberOfRows
  href: api/ALE.ETLBox.Helper.BigDataHelper.html#ALE_ETLBox_Helper_BigDataHelper_NumberOfRows_
  commentId: Overload:ALE.ETLBox.Helper.BigDataHelper.NumberOfRows
  isSpec: "True"
  fullName: ALE.ETLBox.Helper.BigDataHelper.NumberOfRows
  nameWithType: BigDataHelper.NumberOfRows
- uid: ALE.ETLBox.Helper.BigDataHelper.TableDefinition
  name: TableDefinition
  href: api/ALE.ETLBox.Helper.BigDataHelper.html#ALE_ETLBox_Helper_BigDataHelper_TableDefinition
  commentId: P:ALE.ETLBox.Helper.BigDataHelper.TableDefinition
  fullName: ALE.ETLBox.Helper.BigDataHelper.TableDefinition
  nameWithType: BigDataHelper.TableDefinition
- uid: ALE.ETLBox.Helper.BigDataHelper.TableDefinition*
  name: TableDefinition
  href: api/ALE.ETLBox.Helper.BigDataHelper.html#ALE_ETLBox_Helper_BigDataHelper_TableDefinition_
  commentId: Overload:ALE.ETLBox.Helper.BigDataHelper.TableDefinition
  isSpec: "True"
  fullName: ALE.ETLBox.Helper.BigDataHelper.TableDefinition
  nameWithType: BigDataHelper.TableDefinition
- uid: ALE.ETLBox.Helper.Config
  name: Config
  href: api/ALE.ETLBox.Helper.Config.html
  commentId: T:ALE.ETLBox.Helper.Config
  fullName: ALE.ETLBox.Helper.Config
  nameWithType: Config
- uid: ALE.ETLBox.Helper.Config.AccessConnection(System.String)
  name: AccessConnection(String)
  href: api/ALE.ETLBox.Helper.Config.html#ALE_ETLBox_Helper_Config_AccessConnection_System_String_
  commentId: M:ALE.ETLBox.Helper.Config.AccessConnection(System.String)
  fullName: ALE.ETLBox.Helper.Config.AccessConnection(System.String)
  nameWithType: Config.AccessConnection(String)
- uid: ALE.ETLBox.Helper.Config.AccessConnection*
  name: AccessConnection
  href: api/ALE.ETLBox.Helper.Config.html#ALE_ETLBox_Helper_Config_AccessConnection_
  commentId: Overload:ALE.ETLBox.Helper.Config.AccessConnection
  isSpec: "True"
  fullName: ALE.ETLBox.Helper.Config.AccessConnection
  nameWithType: Config.AccessConnection
- uid: ALE.ETLBox.Helper.Config.AccessOdbcConnection
  name: AccessOdbcConnection
  href: api/ALE.ETLBox.Helper.Config.html#ALE_ETLBox_Helper_Config_AccessOdbcConnection
  commentId: P:ALE.ETLBox.Helper.Config.AccessOdbcConnection
  fullName: ALE.ETLBox.Helper.Config.AccessOdbcConnection
  nameWithType: Config.AccessOdbcConnection
- uid: ALE.ETLBox.Helper.Config.AccessOdbcConnection*
  name: AccessOdbcConnection
  href: api/ALE.ETLBox.Helper.Config.html#ALE_ETLBox_Helper_Config_AccessOdbcConnection_
  commentId: Overload:ALE.ETLBox.Helper.Config.AccessOdbcConnection
  isSpec: "True"
  fullName: ALE.ETLBox.Helper.Config.AccessOdbcConnection
  nameWithType: Config.AccessOdbcConnection
- uid: ALE.ETLBox.Helper.Config.AllConnectionsWithoutSQLite(System.String)
  name: AllConnectionsWithoutSQLite(String)
  href: api/ALE.ETLBox.Helper.Config.html#ALE_ETLBox_Helper_Config_AllConnectionsWithoutSQLite_System_String_
  commentId: M:ALE.ETLBox.Helper.Config.AllConnectionsWithoutSQLite(System.String)
  fullName: ALE.ETLBox.Helper.Config.AllConnectionsWithoutSQLite(System.String)
  nameWithType: Config.AllConnectionsWithoutSQLite(String)
- uid: ALE.ETLBox.Helper.Config.AllConnectionsWithoutSQLite*
  name: AllConnectionsWithoutSQLite
  href: api/ALE.ETLBox.Helper.Config.html#ALE_ETLBox_Helper_Config_AllConnectionsWithoutSQLite_
  commentId: Overload:ALE.ETLBox.Helper.Config.AllConnectionsWithoutSQLite
  isSpec: "True"
  fullName: ALE.ETLBox.Helper.Config.AllConnectionsWithoutSQLite
  nameWithType: Config.AllConnectionsWithoutSQLite
- uid: ALE.ETLBox.Helper.Config.AllOdbcConnections(System.String)
  name: AllOdbcConnections(String)
  href: api/ALE.ETLBox.Helper.Config.html#ALE_ETLBox_Helper_Config_AllOdbcConnections_System_String_
  commentId: M:ALE.ETLBox.Helper.Config.AllOdbcConnections(System.String)
  fullName: ALE.ETLBox.Helper.Config.AllOdbcConnections(System.String)
  nameWithType: Config.AllOdbcConnections(String)
- uid: ALE.ETLBox.Helper.Config.AllOdbcConnections*
  name: AllOdbcConnections
  href: api/ALE.ETLBox.Helper.Config.html#ALE_ETLBox_Helper_Config_AllOdbcConnections_
  commentId: Overload:ALE.ETLBox.Helper.Config.AllOdbcConnections
  isSpec: "True"
  fullName: ALE.ETLBox.Helper.Config.AllOdbcConnections
  nameWithType: Config.AllOdbcConnections
- uid: ALE.ETLBox.Helper.Config.AllSqlConnections(System.String)
  name: AllSqlConnections(String)
  href: api/ALE.ETLBox.Helper.Config.html#ALE_ETLBox_Helper_Config_AllSqlConnections_System_String_
  commentId: M:ALE.ETLBox.Helper.Config.AllSqlConnections(System.String)
  fullName: ALE.ETLBox.Helper.Config.AllSqlConnections(System.String)
  nameWithType: Config.AllSqlConnections(String)
- uid: ALE.ETLBox.Helper.Config.AllSqlConnections*
  name: AllSqlConnections
  href: api/ALE.ETLBox.Helper.Config.html#ALE_ETLBox_Helper_Config_AllSqlConnections_
  commentId: Overload:ALE.ETLBox.Helper.Config.AllSqlConnections
  isSpec: "True"
  fullName: ALE.ETLBox.Helper.Config.AllSqlConnections
  nameWithType: Config.AllSqlConnections
- uid: ALE.ETLBox.Helper.Config.AllSqlConnectionsWithValue(System.String,System.Int32)
  name: AllSqlConnectionsWithValue(String, Int32)
  href: api/ALE.ETLBox.Helper.Config.html#ALE_ETLBox_Helper_Config_AllSqlConnectionsWithValue_System_String_System_Int32_
  commentId: M:ALE.ETLBox.Helper.Config.AllSqlConnectionsWithValue(System.String,System.Int32)
  fullName: ALE.ETLBox.Helper.Config.AllSqlConnectionsWithValue(System.String, System.Int32)
  nameWithType: Config.AllSqlConnectionsWithValue(String, Int32)
- uid: ALE.ETLBox.Helper.Config.AllSqlConnectionsWithValue(System.String,System.String)
  name: AllSqlConnectionsWithValue(String, String)
  href: api/ALE.ETLBox.Helper.Config.html#ALE_ETLBox_Helper_Config_AllSqlConnectionsWithValue_System_String_System_String_
  commentId: M:ALE.ETLBox.Helper.Config.AllSqlConnectionsWithValue(System.String,System.String)
  fullName: ALE.ETLBox.Helper.Config.AllSqlConnectionsWithValue(System.String, System.String)
  nameWithType: Config.AllSqlConnectionsWithValue(String, String)
- uid: ALE.ETLBox.Helper.Config.AllSqlConnectionsWithValue*
  name: AllSqlConnectionsWithValue
  href: api/ALE.ETLBox.Helper.Config.html#ALE_ETLBox_Helper_Config_AllSqlConnectionsWithValue_
  commentId: Overload:ALE.ETLBox.Helper.Config.AllSqlConnectionsWithValue
  isSpec: "True"
  fullName: ALE.ETLBox.Helper.Config.AllSqlConnectionsWithValue
  nameWithType: Config.AllSqlConnectionsWithValue
- uid: ALE.ETLBox.Helper.Config.AzureSqlConnection
  name: AzureSqlConnection
  href: api/ALE.ETLBox.Helper.Config.html#ALE_ETLBox_Helper_Config_AzureSqlConnection
  commentId: P:ALE.ETLBox.Helper.Config.AzureSqlConnection
  fullName: ALE.ETLBox.Helper.Config.AzureSqlConnection
  nameWithType: Config.AzureSqlConnection
- uid: ALE.ETLBox.Helper.Config.AzureSqlConnection*
  name: AzureSqlConnection
  href: api/ALE.ETLBox.Helper.Config.html#ALE_ETLBox_Helper_Config_AzureSqlConnection_
  commentId: Overload:ALE.ETLBox.Helper.Config.AzureSqlConnection
  isSpec: "True"
  fullName: ALE.ETLBox.Helper.Config.AzureSqlConnection
  nameWithType: Config.AzureSqlConnection
- uid: ALE.ETLBox.Helper.Config.ConnectionDetails`2
  name: Config.ConnectionDetails<TConnectionString, TConnectionManager>
  href: api/ALE.ETLBox.Helper.Config.ConnectionDetails-2.html
  commentId: T:ALE.ETLBox.Helper.Config.ConnectionDetails`2
  name.vb: Config.ConnectionDetails(Of TConnectionString, TConnectionManager)
  fullName: ALE.ETLBox.Helper.Config.ConnectionDetails<TConnectionString, TConnectionManager>
  fullName.vb: ALE.ETLBox.Helper.Config.ConnectionDetails(Of TConnectionString, TConnectionManager)
  nameWithType: Config.ConnectionDetails<TConnectionString, TConnectionManager>
  nameWithType.vb: Config.ConnectionDetails(Of TConnectionString, TConnectionManager)
- uid: ALE.ETLBox.Helper.Config.ConnectionDetails`2.#ctor(System.String)
  name: ConnectionDetails(String)
  href: api/ALE.ETLBox.Helper.Config.ConnectionDetails-2.html#ALE_ETLBox_Helper_Config_ConnectionDetails_2__ctor_System_String_
  commentId: M:ALE.ETLBox.Helper.Config.ConnectionDetails`2.#ctor(System.String)
  fullName: ALE.ETLBox.Helper.Config.ConnectionDetails<TConnectionString, TConnectionManager>.ConnectionDetails(System.String)
  fullName.vb: ALE.ETLBox.Helper.Config.ConnectionDetails(Of TConnectionString, TConnectionManager).ConnectionDetails(System.String)
  nameWithType: Config.ConnectionDetails<TConnectionString, TConnectionManager>.ConnectionDetails(String)
  nameWithType.vb: Config.ConnectionDetails(Of TConnectionString, TConnectionManager).ConnectionDetails(String)
- uid: ALE.ETLBox.Helper.Config.ConnectionDetails`2.#ctor*
  name: ConnectionDetails
  href: api/ALE.ETLBox.Helper.Config.ConnectionDetails-2.html#ALE_ETLBox_Helper_Config_ConnectionDetails_2__ctor_
  commentId: Overload:ALE.ETLBox.Helper.Config.ConnectionDetails`2.#ctor
  isSpec: "True"
  fullName: ALE.ETLBox.Helper.Config.ConnectionDetails<TConnectionString, TConnectionManager>.ConnectionDetails
  fullName.vb: ALE.ETLBox.Helper.Config.ConnectionDetails(Of TConnectionString, TConnectionManager).ConnectionDetails
  nameWithType: Config.ConnectionDetails<TConnectionString, TConnectionManager>.ConnectionDetails
  nameWithType.vb: Config.ConnectionDetails(Of TConnectionString, TConnectionManager).ConnectionDetails
- uid: ALE.ETLBox.Helper.Config.ConnectionDetails`2.ConnectionManager(System.String)
  name: ConnectionManager(String)
  href: api/ALE.ETLBox.Helper.Config.ConnectionDetails-2.html#ALE_ETLBox_Helper_Config_ConnectionDetails_2_ConnectionManager_System_String_
  commentId: M:ALE.ETLBox.Helper.Config.ConnectionDetails`2.ConnectionManager(System.String)
  fullName: ALE.ETLBox.Helper.Config.ConnectionDetails<TConnectionString, TConnectionManager>.ConnectionManager(System.String)
  fullName.vb: ALE.ETLBox.Helper.Config.ConnectionDetails(Of TConnectionString, TConnectionManager).ConnectionManager(System.String)
  nameWithType: Config.ConnectionDetails<TConnectionString, TConnectionManager>.ConnectionManager(String)
  nameWithType.vb: Config.ConnectionDetails(Of TConnectionString, TConnectionManager).ConnectionManager(String)
- uid: ALE.ETLBox.Helper.Config.ConnectionDetails`2.ConnectionManager*
  name: ConnectionManager
  href: api/ALE.ETLBox.Helper.Config.ConnectionDetails-2.html#ALE_ETLBox_Helper_Config_ConnectionDetails_2_ConnectionManager_
  commentId: Overload:ALE.ETLBox.Helper.Config.ConnectionDetails`2.ConnectionManager
  isSpec: "True"
  fullName: ALE.ETLBox.Helper.Config.ConnectionDetails<TConnectionString, TConnectionManager>.ConnectionManager
  fullName.vb: ALE.ETLBox.Helper.Config.ConnectionDetails(Of TConnectionString, TConnectionManager).ConnectionManager
  nameWithType: Config.ConnectionDetails<TConnectionString, TConnectionManager>.ConnectionManager
  nameWithType.vb: Config.ConnectionDetails(Of TConnectionString, TConnectionManager).ConnectionManager
- uid: ALE.ETLBox.Helper.Config.ConnectionDetails`2.ConnectionString(System.String)
  name: ConnectionString(String)
  href: api/ALE.ETLBox.Helper.Config.ConnectionDetails-2.html#ALE_ETLBox_Helper_Config_ConnectionDetails_2_ConnectionString_System_String_
  commentId: M:ALE.ETLBox.Helper.Config.ConnectionDetails`2.ConnectionString(System.String)
  fullName: ALE.ETLBox.Helper.Config.ConnectionDetails<TConnectionString, TConnectionManager>.ConnectionString(System.String)
  fullName.vb: ALE.ETLBox.Helper.Config.ConnectionDetails(Of TConnectionString, TConnectionManager).ConnectionString(System.String)
  nameWithType: Config.ConnectionDetails<TConnectionString, TConnectionManager>.ConnectionString(String)
  nameWithType.vb: Config.ConnectionDetails(Of TConnectionString, TConnectionManager).ConnectionString(String)
- uid: ALE.ETLBox.Helper.Config.ConnectionDetails`2.ConnectionString*
  name: ConnectionString
  href: api/ALE.ETLBox.Helper.Config.ConnectionDetails-2.html#ALE_ETLBox_Helper_Config_ConnectionDetails_2_ConnectionString_
  commentId: Overload:ALE.ETLBox.Helper.Config.ConnectionDetails`2.ConnectionString
  isSpec: "True"
  fullName: ALE.ETLBox.Helper.Config.ConnectionDetails<TConnectionString, TConnectionManager>.ConnectionString
  fullName.vb: ALE.ETLBox.Helper.Config.ConnectionDetails(Of TConnectionString, TConnectionManager).ConnectionString
  nameWithType: Config.ConnectionDetails<TConnectionString, TConnectionManager>.ConnectionString
  nameWithType.vb: Config.ConnectionDetails(Of TConnectionString, TConnectionManager).ConnectionString
- uid: ALE.ETLBox.Helper.Config.ConnectionDetails`2.ConnectionStringName
  name: ConnectionStringName
  href: api/ALE.ETLBox.Helper.Config.ConnectionDetails-2.html#ALE_ETLBox_Helper_Config_ConnectionDetails_2_ConnectionStringName
  commentId: P:ALE.ETLBox.Helper.Config.ConnectionDetails`2.ConnectionStringName
  fullName: ALE.ETLBox.Helper.Config.ConnectionDetails<TConnectionString, TConnectionManager>.ConnectionStringName
  fullName.vb: ALE.ETLBox.Helper.Config.ConnectionDetails(Of TConnectionString, TConnectionManager).ConnectionStringName
  nameWithType: Config.ConnectionDetails<TConnectionString, TConnectionManager>.ConnectionStringName
  nameWithType.vb: Config.ConnectionDetails(Of TConnectionString, TConnectionManager).ConnectionStringName
- uid: ALE.ETLBox.Helper.Config.ConnectionDetails`2.ConnectionStringName*
  name: ConnectionStringName
  href: api/ALE.ETLBox.Helper.Config.ConnectionDetails-2.html#ALE_ETLBox_Helper_Config_ConnectionDetails_2_ConnectionStringName_
  commentId: Overload:ALE.ETLBox.Helper.Config.ConnectionDetails`2.ConnectionStringName
  isSpec: "True"
  fullName: ALE.ETLBox.Helper.Config.ConnectionDetails<TConnectionString, TConnectionManager>.ConnectionStringName
  fullName.vb: ALE.ETLBox.Helper.Config.ConnectionDetails(Of TConnectionString, TConnectionManager).ConnectionStringName
  nameWithType: Config.ConnectionDetails<TConnectionString, TConnectionManager>.ConnectionStringName
  nameWithType.vb: Config.ConnectionDetails(Of TConnectionString, TConnectionManager).ConnectionStringName
- uid: ALE.ETLBox.Helper.Config.ConnectionDetails`2.RawConnectionString(System.String)
  name: RawConnectionString(String)
  href: api/ALE.ETLBox.Helper.Config.ConnectionDetails-2.html#ALE_ETLBox_Helper_Config_ConnectionDetails_2_RawConnectionString_System_String_
  commentId: M:ALE.ETLBox.Helper.Config.ConnectionDetails`2.RawConnectionString(System.String)
  fullName: ALE.ETLBox.Helper.Config.ConnectionDetails<TConnectionString, TConnectionManager>.RawConnectionString(System.String)
  fullName.vb: ALE.ETLBox.Helper.Config.ConnectionDetails(Of TConnectionString, TConnectionManager).RawConnectionString(System.String)
  nameWithType: Config.ConnectionDetails<TConnectionString, TConnectionManager>.RawConnectionString(String)
  nameWithType.vb: Config.ConnectionDetails(Of TConnectionString, TConnectionManager).RawConnectionString(String)
- uid: ALE.ETLBox.Helper.Config.ConnectionDetails`2.RawConnectionString*
  name: RawConnectionString
  href: api/ALE.ETLBox.Helper.Config.ConnectionDetails-2.html#ALE_ETLBox_Helper_Config_ConnectionDetails_2_RawConnectionString_
  commentId: Overload:ALE.ETLBox.Helper.Config.ConnectionDetails`2.RawConnectionString
  isSpec: "True"
  fullName: ALE.ETLBox.Helper.Config.ConnectionDetails<TConnectionString, TConnectionManager>.RawConnectionString
  fullName.vb: ALE.ETLBox.Helper.Config.ConnectionDetails(Of TConnectionString, TConnectionManager).RawConnectionString
  nameWithType: Config.ConnectionDetails<TConnectionString, TConnectionManager>.RawConnectionString
  nameWithType.vb: Config.ConnectionDetails(Of TConnectionString, TConnectionManager).RawConnectionString
- uid: ALE.ETLBox.Helper.Config.DefaultConfigFile
  name: DefaultConfigFile
  href: api/ALE.ETLBox.Helper.Config.html#ALE_ETLBox_Helper_Config_DefaultConfigFile
  commentId: P:ALE.ETLBox.Helper.Config.DefaultConfigFile
  fullName: ALE.ETLBox.Helper.Config.DefaultConfigFile
  nameWithType: Config.DefaultConfigFile
- uid: ALE.ETLBox.Helper.Config.DefaultConfigFile*
  name: DefaultConfigFile
  href: api/ALE.ETLBox.Helper.Config.html#ALE_ETLBox_Helper_Config_DefaultConfigFile_
  commentId: Overload:ALE.ETLBox.Helper.Config.DefaultConfigFile
  isSpec: "True"
  fullName: ALE.ETLBox.Helper.Config.DefaultConfigFile
  nameWithType: Config.DefaultConfigFile
- uid: ALE.ETLBox.Helper.Config.Load(System.String)
  name: Load(String)
  href: api/ALE.ETLBox.Helper.Config.html#ALE_ETLBox_Helper_Config_Load_System_String_
  commentId: M:ALE.ETLBox.Helper.Config.Load(System.String)
  fullName: ALE.ETLBox.Helper.Config.Load(System.String)
  nameWithType: Config.Load(String)
- uid: ALE.ETLBox.Helper.Config.Load*
  name: Load
  href: api/ALE.ETLBox.Helper.Config.html#ALE_ETLBox_Helper_Config_Load_
  commentId: Overload:ALE.ETLBox.Helper.Config.Load
  isSpec: "True"
  fullName: ALE.ETLBox.Helper.Config.Load
  nameWithType: Config.Load
- uid: ALE.ETLBox.Helper.Config.MySqlConnection
  name: MySqlConnection
  href: api/ALE.ETLBox.Helper.Config.html#ALE_ETLBox_Helper_Config_MySqlConnection
  commentId: P:ALE.ETLBox.Helper.Config.MySqlConnection
  fullName: ALE.ETLBox.Helper.Config.MySqlConnection
  nameWithType: Config.MySqlConnection
- uid: ALE.ETLBox.Helper.Config.MySqlConnection*
  name: MySqlConnection
  href: api/ALE.ETLBox.Helper.Config.html#ALE_ETLBox_Helper_Config_MySqlConnection_
  commentId: Overload:ALE.ETLBox.Helper.Config.MySqlConnection
  isSpec: "True"
  fullName: ALE.ETLBox.Helper.Config.MySqlConnection
  nameWithType: Config.MySqlConnection
- uid: ALE.ETLBox.Helper.Config.PostgresConnection
  name: PostgresConnection
  href: api/ALE.ETLBox.Helper.Config.html#ALE_ETLBox_Helper_Config_PostgresConnection
  commentId: P:ALE.ETLBox.Helper.Config.PostgresConnection
  fullName: ALE.ETLBox.Helper.Config.PostgresConnection
  nameWithType: Config.PostgresConnection
- uid: ALE.ETLBox.Helper.Config.PostgresConnection*
  name: PostgresConnection
  href: api/ALE.ETLBox.Helper.Config.html#ALE_ETLBox_Helper_Config_PostgresConnection_
  commentId: Overload:ALE.ETLBox.Helper.Config.PostgresConnection
  isSpec: "True"
  fullName: ALE.ETLBox.Helper.Config.PostgresConnection
  nameWithType: Config.PostgresConnection
- uid: ALE.ETLBox.Helper.Config.SqlConnection
  name: SqlConnection
  href: api/ALE.ETLBox.Helper.Config.html#ALE_ETLBox_Helper_Config_SqlConnection
  commentId: P:ALE.ETLBox.Helper.Config.SqlConnection
  fullName: ALE.ETLBox.Helper.Config.SqlConnection
  nameWithType: Config.SqlConnection
- uid: ALE.ETLBox.Helper.Config.SqlConnection*
  name: SqlConnection
  href: api/ALE.ETLBox.Helper.Config.html#ALE_ETLBox_Helper_Config_SqlConnection_
  commentId: Overload:ALE.ETLBox.Helper.Config.SqlConnection
  isSpec: "True"
  fullName: ALE.ETLBox.Helper.Config.SqlConnection
  nameWithType: Config.SqlConnection
- uid: ALE.ETLBox.Helper.Config.SQLiteConnection
  name: SQLiteConnection
  href: api/ALE.ETLBox.Helper.Config.html#ALE_ETLBox_Helper_Config_SQLiteConnection
  commentId: P:ALE.ETLBox.Helper.Config.SQLiteConnection
  fullName: ALE.ETLBox.Helper.Config.SQLiteConnection
  nameWithType: Config.SQLiteConnection
- uid: ALE.ETLBox.Helper.Config.SQLiteConnection*
  name: SQLiteConnection
  href: api/ALE.ETLBox.Helper.Config.html#ALE_ETLBox_Helper_Config_SQLiteConnection_
  commentId: Overload:ALE.ETLBox.Helper.Config.SQLiteConnection
  isSpec: "True"
  fullName: ALE.ETLBox.Helper.Config.SQLiteConnection
  nameWithType: Config.SQLiteConnection
- uid: ALE.ETLBox.Helper.Config.SqlOdbcConnection
  name: SqlOdbcConnection
  href: api/ALE.ETLBox.Helper.Config.html#ALE_ETLBox_Helper_Config_SqlOdbcConnection
  commentId: P:ALE.ETLBox.Helper.Config.SqlOdbcConnection
  fullName: ALE.ETLBox.Helper.Config.SqlOdbcConnection
  nameWithType: Config.SqlOdbcConnection
- uid: ALE.ETLBox.Helper.Config.SqlOdbcConnection*
  name: SqlOdbcConnection
  href: api/ALE.ETLBox.Helper.Config.html#ALE_ETLBox_Helper_Config_SqlOdbcConnection_
  commentId: Overload:ALE.ETLBox.Helper.Config.SqlOdbcConnection
  isSpec: "True"
  fullName: ALE.ETLBox.Helper.Config.SqlOdbcConnection
  nameWithType: Config.SqlOdbcConnection
- uid: ALE.ETLBox.Helper.Config.SSASConnection
  name: SSASConnection
  href: api/ALE.ETLBox.Helper.Config.html#ALE_ETLBox_Helper_Config_SSASConnection
  commentId: P:ALE.ETLBox.Helper.Config.SSASConnection
  fullName: ALE.ETLBox.Helper.Config.SSASConnection
  nameWithType: Config.SSASConnection
- uid: ALE.ETLBox.Helper.Config.SSASConnection*
  name: SSASConnection
  href: api/ALE.ETLBox.Helper.Config.html#ALE_ETLBox_Helper_Config_SSASConnection_
  commentId: Overload:ALE.ETLBox.Helper.Config.SSASConnection
  isSpec: "True"
  fullName: ALE.ETLBox.Helper.Config.SSASConnection
  nameWithType: Config.SSASConnection
- uid: ALE.ETLBox.Helper.DatabaseHelper
  name: DatabaseHelper
  href: api/ALE.ETLBox.Helper.DatabaseHelper.html
  commentId: T:ALE.ETLBox.Helper.DatabaseHelper
  fullName: ALE.ETLBox.Helper.DatabaseHelper
  nameWithType: DatabaseHelper
- uid: ALE.ETLBox.Helper.DatabaseHelper.RecreateMySqlDatabase(System.String)
  name: RecreateMySqlDatabase(String)
  href: api/ALE.ETLBox.Helper.DatabaseHelper.html#ALE_ETLBox_Helper_DatabaseHelper_RecreateMySqlDatabase_System_String_
  commentId: M:ALE.ETLBox.Helper.DatabaseHelper.RecreateMySqlDatabase(System.String)
  fullName: ALE.ETLBox.Helper.DatabaseHelper.RecreateMySqlDatabase(System.String)
  nameWithType: DatabaseHelper.RecreateMySqlDatabase(String)
- uid: ALE.ETLBox.Helper.DatabaseHelper.RecreateMySqlDatabase*
  name: RecreateMySqlDatabase
  href: api/ALE.ETLBox.Helper.DatabaseHelper.html#ALE_ETLBox_Helper_DatabaseHelper_RecreateMySqlDatabase_
  commentId: Overload:ALE.ETLBox.Helper.DatabaseHelper.RecreateMySqlDatabase
  isSpec: "True"
  fullName: ALE.ETLBox.Helper.DatabaseHelper.RecreateMySqlDatabase
  nameWithType: DatabaseHelper.RecreateMySqlDatabase
- uid: ALE.ETLBox.Helper.DatabaseHelper.RecreatePostgresDatabase(System.String)
  name: RecreatePostgresDatabase(String)
  href: api/ALE.ETLBox.Helper.DatabaseHelper.html#ALE_ETLBox_Helper_DatabaseHelper_RecreatePostgresDatabase_System_String_
  commentId: M:ALE.ETLBox.Helper.DatabaseHelper.RecreatePostgresDatabase(System.String)
  fullName: ALE.ETLBox.Helper.DatabaseHelper.RecreatePostgresDatabase(System.String)
  nameWithType: DatabaseHelper.RecreatePostgresDatabase(String)
- uid: ALE.ETLBox.Helper.DatabaseHelper.RecreatePostgresDatabase*
  name: RecreatePostgresDatabase
  href: api/ALE.ETLBox.Helper.DatabaseHelper.html#ALE_ETLBox_Helper_DatabaseHelper_RecreatePostgresDatabase_
  commentId: Overload:ALE.ETLBox.Helper.DatabaseHelper.RecreatePostgresDatabase
  isSpec: "True"
  fullName: ALE.ETLBox.Helper.DatabaseHelper.RecreatePostgresDatabase
  nameWithType: DatabaseHelper.RecreatePostgresDatabase
- uid: ALE.ETLBox.Helper.DatabaseHelper.RecreateSqlDatabase(System.String)
  name: RecreateSqlDatabase(String)
  href: api/ALE.ETLBox.Helper.DatabaseHelper.html#ALE_ETLBox_Helper_DatabaseHelper_RecreateSqlDatabase_System_String_
  commentId: M:ALE.ETLBox.Helper.DatabaseHelper.RecreateSqlDatabase(System.String)
  fullName: ALE.ETLBox.Helper.DatabaseHelper.RecreateSqlDatabase(System.String)
  nameWithType: DatabaseHelper.RecreateSqlDatabase(String)
- uid: ALE.ETLBox.Helper.DatabaseHelper.RecreateSqlDatabase*
  name: RecreateSqlDatabase
  href: api/ALE.ETLBox.Helper.DatabaseHelper.html#ALE_ETLBox_Helper_DatabaseHelper_RecreateSqlDatabase_
  commentId: Overload:ALE.ETLBox.Helper.DatabaseHelper.RecreateSqlDatabase
  isSpec: "True"
  fullName: ALE.ETLBox.Helper.DatabaseHelper.RecreateSqlDatabase
  nameWithType: DatabaseHelper.RecreateSqlDatabase
- uid: ALE.ETLBox.Helper.HashHelper
  name: HashHelper
  href: api/ALE.ETLBox.Helper.HashHelper.html
  commentId: T:ALE.ETLBox.Helper.HashHelper
  fullName: ALE.ETLBox.Helper.HashHelper
  nameWithType: HashHelper
- uid: ALE.ETLBox.Helper.HashHelper.Encrypt_Char40(ALE.ETLBox.ITask)
  name: Encrypt_Char40(ITask)
  href: api/ALE.ETLBox.Helper.HashHelper.html#ALE_ETLBox_Helper_HashHelper_Encrypt_Char40_ALE_ETLBox_ITask_
  commentId: M:ALE.ETLBox.Helper.HashHelper.Encrypt_Char40(ALE.ETLBox.ITask)
  fullName: ALE.ETLBox.Helper.HashHelper.Encrypt_Char40(ALE.ETLBox.ITask)
  nameWithType: HashHelper.Encrypt_Char40(ITask)
- uid: ALE.ETLBox.Helper.HashHelper.Encrypt_Char40(ALE.ETLBox.ITask,System.String)
  name: Encrypt_Char40(ITask, String)
  href: api/ALE.ETLBox.Helper.HashHelper.html#ALE_ETLBox_Helper_HashHelper_Encrypt_Char40_ALE_ETLBox_ITask_System_String_
  commentId: M:ALE.ETLBox.Helper.HashHelper.Encrypt_Char40(ALE.ETLBox.ITask,System.String)
  fullName: ALE.ETLBox.Helper.HashHelper.Encrypt_Char40(ALE.ETLBox.ITask, System.String)
  nameWithType: HashHelper.Encrypt_Char40(ITask, String)
- uid: ALE.ETLBox.Helper.HashHelper.Encrypt_Char40(System.String)
  name: Encrypt_Char40(String)
  href: api/ALE.ETLBox.Helper.HashHelper.html#ALE_ETLBox_Helper_HashHelper_Encrypt_Char40_System_String_
  commentId: M:ALE.ETLBox.Helper.HashHelper.Encrypt_Char40(System.String)
  fullName: ALE.ETLBox.Helper.HashHelper.Encrypt_Char40(System.String)
  nameWithType: HashHelper.Encrypt_Char40(String)
- uid: ALE.ETLBox.Helper.HashHelper.Encrypt_Char40*
  name: Encrypt_Char40
  href: api/ALE.ETLBox.Helper.HashHelper.html#ALE_ETLBox_Helper_HashHelper_Encrypt_Char40_
  commentId: Overload:ALE.ETLBox.Helper.HashHelper.Encrypt_Char40
  isSpec: "True"
  fullName: ALE.ETLBox.Helper.HashHelper.Encrypt_Char40
  nameWithType: HashHelper.Encrypt_Char40
- uid: ALE.ETLBox.Helper.HashHelper.RandomString(System.Int32)
  name: RandomString(Int32)
  href: api/ALE.ETLBox.Helper.HashHelper.html#ALE_ETLBox_Helper_HashHelper_RandomString_System_Int32_
  commentId: M:ALE.ETLBox.Helper.HashHelper.RandomString(System.Int32)
  fullName: ALE.ETLBox.Helper.HashHelper.RandomString(System.Int32)
  nameWithType: HashHelper.RandomString(Int32)
- uid: ALE.ETLBox.Helper.HashHelper.RandomString*
  name: RandomString
  href: api/ALE.ETLBox.Helper.HashHelper.html#ALE_ETLBox_Helper_HashHelper_RandomString_
  commentId: Overload:ALE.ETLBox.Helper.HashHelper.RandomString
  isSpec: "True"
  fullName: ALE.ETLBox.Helper.HashHelper.RandomString
  nameWithType: HashHelper.RandomString
- uid: ALE.ETLBox.Helper.PropertyInfoExtension
  name: PropertyInfoExtension
  href: api/ALE.ETLBox.Helper.PropertyInfoExtension.html
  commentId: T:ALE.ETLBox.Helper.PropertyInfoExtension
  fullName: ALE.ETLBox.Helper.PropertyInfoExtension
  nameWithType: PropertyInfoExtension
- uid: ALE.ETLBox.Helper.PropertyInfoExtension.SetValueOrThrow(System.Reflection.PropertyInfo,System.Object,System.Object)
  name: SetValueOrThrow(PropertyInfo, Object, Object)
  href: api/ALE.ETLBox.Helper.PropertyInfoExtension.html#ALE_ETLBox_Helper_PropertyInfoExtension_SetValueOrThrow_System_Reflection_PropertyInfo_System_Object_System_Object_
  commentId: M:ALE.ETLBox.Helper.PropertyInfoExtension.SetValueOrThrow(System.Reflection.PropertyInfo,System.Object,System.Object)
  fullName: ALE.ETLBox.Helper.PropertyInfoExtension.SetValueOrThrow(System.Reflection.PropertyInfo, System.Object, System.Object)
  nameWithType: PropertyInfoExtension.SetValueOrThrow(PropertyInfo, Object, Object)
- uid: ALE.ETLBox.Helper.PropertyInfoExtension.SetValueOrThrow*
  name: SetValueOrThrow
  href: api/ALE.ETLBox.Helper.PropertyInfoExtension.html#ALE_ETLBox_Helper_PropertyInfoExtension_SetValueOrThrow_
  commentId: Overload:ALE.ETLBox.Helper.PropertyInfoExtension.SetValueOrThrow
  isSpec: "True"
  fullName: ALE.ETLBox.Helper.PropertyInfoExtension.SetValueOrThrow
  nameWithType: PropertyInfoExtension.SetValueOrThrow
- uid: ALE.ETLBox.Helper.PropertyInfoExtension.TrySetValue(System.Reflection.PropertyInfo,System.Object,System.Object)
  name: TrySetValue(PropertyInfo, Object, Object)
  href: api/ALE.ETLBox.Helper.PropertyInfoExtension.html#ALE_ETLBox_Helper_PropertyInfoExtension_TrySetValue_System_Reflection_PropertyInfo_System_Object_System_Object_
  commentId: M:ALE.ETLBox.Helper.PropertyInfoExtension.TrySetValue(System.Reflection.PropertyInfo,System.Object,System.Object)
  fullName: ALE.ETLBox.Helper.PropertyInfoExtension.TrySetValue(System.Reflection.PropertyInfo, System.Object, System.Object)
  nameWithType: PropertyInfoExtension.TrySetValue(PropertyInfo, Object, Object)
- uid: ALE.ETLBox.Helper.PropertyInfoExtension.TrySetValue*
  name: TrySetValue
  href: api/ALE.ETLBox.Helper.PropertyInfoExtension.html#ALE_ETLBox_Helper_PropertyInfoExtension_TrySetValue_
  commentId: Overload:ALE.ETLBox.Helper.PropertyInfoExtension.TrySetValue
  isSpec: "True"
  fullName: ALE.ETLBox.Helper.PropertyInfoExtension.TrySetValue
  nameWithType: PropertyInfoExtension.TrySetValue
- uid: ALE.ETLBox.Helper.SqlHelper
  name: SqlHelper
  href: api/ALE.ETLBox.Helper.SqlHelper.html
  commentId: T:ALE.ETLBox.Helper.SqlHelper
  fullName: ALE.ETLBox.Helper.SqlHelper
  nameWithType: SqlHelper
- uid: ALE.ETLBox.Helper.SqlHelper.Comment(System.String)
  name: Comment(String)
  href: api/ALE.ETLBox.Helper.SqlHelper.html#ALE_ETLBox_Helper_SqlHelper_Comment_System_String_
  commentId: M:ALE.ETLBox.Helper.SqlHelper.Comment(System.String)
  fullName: ALE.ETLBox.Helper.SqlHelper.Comment(System.String)
  nameWithType: SqlHelper.Comment(String)
- uid: ALE.ETLBox.Helper.SqlHelper.Comment*
  name: Comment
  href: api/ALE.ETLBox.Helper.SqlHelper.html#ALE_ETLBox_Helper_SqlHelper_Comment_
  commentId: Overload:ALE.ETLBox.Helper.SqlHelper.Comment
  isSpec: "True"
  fullName: ALE.ETLBox.Helper.SqlHelper.Comment
  nameWithType: SqlHelper.Comment
- uid: ALE.ETLBox.Helper.SqlHelper.DropTablesIfExists(System.String[])
  name: DropTablesIfExists(String[])
  href: api/ALE.ETLBox.Helper.SqlHelper.html#ALE_ETLBox_Helper_SqlHelper_DropTablesIfExists_System_String___
  commentId: M:ALE.ETLBox.Helper.SqlHelper.DropTablesIfExists(System.String[])
  name.vb: DropTablesIfExists(String())
  fullName: ALE.ETLBox.Helper.SqlHelper.DropTablesIfExists(System.String[])
  fullName.vb: ALE.ETLBox.Helper.SqlHelper.DropTablesIfExists(System.String())
  nameWithType: SqlHelper.DropTablesIfExists(String[])
  nameWithType.vb: SqlHelper.DropTablesIfExists(String())
- uid: ALE.ETLBox.Helper.SqlHelper.DropTablesIfExists*
  name: DropTablesIfExists
  href: api/ALE.ETLBox.Helper.SqlHelper.html#ALE_ETLBox_Helper_SqlHelper_DropTablesIfExists_
  commentId: Overload:ALE.ETLBox.Helper.SqlHelper.DropTablesIfExists
  isSpec: "True"
  fullName: ALE.ETLBox.Helper.SqlHelper.DropTablesIfExists
  nameWithType: SqlHelper.DropTablesIfExists
- uid: ALE.ETLBox.Helper.SqlHelper.Headline1(System.String)
  name: Headline1(String)
  href: api/ALE.ETLBox.Helper.SqlHelper.html#ALE_ETLBox_Helper_SqlHelper_Headline1_System_String_
  commentId: M:ALE.ETLBox.Helper.SqlHelper.Headline1(System.String)
  fullName: ALE.ETLBox.Helper.SqlHelper.Headline1(System.String)
  nameWithType: SqlHelper.Headline1(String)
- uid: ALE.ETLBox.Helper.SqlHelper.Headline1*
  name: Headline1
  href: api/ALE.ETLBox.Helper.SqlHelper.html#ALE_ETLBox_Helper_SqlHelper_Headline1_
  commentId: Overload:ALE.ETLBox.Helper.SqlHelper.Headline1
  isSpec: "True"
  fullName: ALE.ETLBox.Helper.SqlHelper.Headline1
  nameWithType: SqlHelper.Headline1
- uid: ALE.ETLBox.Helper.SqlHelper.Headline2(System.String)
  name: Headline2(String)
  href: api/ALE.ETLBox.Helper.SqlHelper.html#ALE_ETLBox_Helper_SqlHelper_Headline2_System_String_
  commentId: M:ALE.ETLBox.Helper.SqlHelper.Headline2(System.String)
  fullName: ALE.ETLBox.Helper.SqlHelper.Headline2(System.String)
  nameWithType: SqlHelper.Headline2(String)
- uid: ALE.ETLBox.Helper.SqlHelper.Headline2*
  name: Headline2
  href: api/ALE.ETLBox.Helper.SqlHelper.html#ALE_ETLBox_Helper_SqlHelper_Headline2_
  commentId: Overload:ALE.ETLBox.Helper.SqlHelper.Headline2
  isSpec: "True"
  fullName: ALE.ETLBox.Helper.SqlHelper.Headline2
  nameWithType: SqlHelper.Headline2
- uid: ALE.ETLBox.Helper.SqlHelper.Sequence(System.String,System.String,System.Int32,System.String,System.String)
  name: Sequence(String, String, Int32, String, String)
  href: api/ALE.ETLBox.Helper.SqlHelper.html#ALE_ETLBox_Helper_SqlHelper_Sequence_System_String_System_String_System_Int32_System_String_System_String_
  commentId: M:ALE.ETLBox.Helper.SqlHelper.Sequence(System.String,System.String,System.Int32,System.String,System.String)
  fullName: ALE.ETLBox.Helper.SqlHelper.Sequence(System.String, System.String, System.Int32, System.String, System.String)
  nameWithType: SqlHelper.Sequence(String, String, Int32, String, String)
- uid: ALE.ETLBox.Helper.SqlHelper.Sequence*
  name: Sequence
  href: api/ALE.ETLBox.Helper.SqlHelper.html#ALE_ETLBox_Helper_SqlHelper_Sequence_
  commentId: Overload:ALE.ETLBox.Helper.SqlHelper.Sequence
  isSpec: "True"
  fullName: ALE.ETLBox.Helper.SqlHelper.Sequence
  nameWithType: SqlHelper.Sequence
- uid: ALE.ETLBox.Helper.SqlHelperExtensions
  name: SqlHelperExtensions
  href: api/ALE.ETLBox.Helper.SqlHelperExtensions.html
  commentId: T:ALE.ETLBox.Helper.SqlHelperExtensions
  fullName: ALE.ETLBox.Helper.SqlHelperExtensions
  nameWithType: SqlHelperExtensions
- uid: ALE.ETLBox.Helper.SqlHelperExtensions.AsString(ALE.ETLBox.ITableColumn,System.String,System.String,System.String)
  name: AsString(ITableColumn, String, String, String)
  href: api/ALE.ETLBox.Helper.SqlHelperExtensions.html#ALE_ETLBox_Helper_SqlHelperExtensions_AsString_ALE_ETLBox_ITableColumn_System_String_System_String_System_String_
  commentId: M:ALE.ETLBox.Helper.SqlHelperExtensions.AsString(ALE.ETLBox.ITableColumn,System.String,System.String,System.String)
  fullName: ALE.ETLBox.Helper.SqlHelperExtensions.AsString(ALE.ETLBox.ITableColumn, System.String, System.String, System.String)
  nameWithType: SqlHelperExtensions.AsString(ITableColumn, String, String, String)
- uid: ALE.ETLBox.Helper.SqlHelperExtensions.AsString(System.Collections.Generic.IEnumerable{ALE.ETLBox.ITableColumn},System.String,System.String,System.String)
  name: AsString(IEnumerable<ITableColumn>, String, String, String)
  href: api/ALE.ETLBox.Helper.SqlHelperExtensions.html#ALE_ETLBox_Helper_SqlHelperExtensions_AsString_System_Collections_Generic_IEnumerable_ALE_ETLBox_ITableColumn__System_String_System_String_System_String_
  commentId: M:ALE.ETLBox.Helper.SqlHelperExtensions.AsString(System.Collections.Generic.IEnumerable{ALE.ETLBox.ITableColumn},System.String,System.String,System.String)
  name.vb: AsString(IEnumerable(Of ITableColumn), String, String, String)
  fullName: ALE.ETLBox.Helper.SqlHelperExtensions.AsString(System.Collections.Generic.IEnumerable<ALE.ETLBox.ITableColumn>, System.String, System.String, System.String)
  fullName.vb: ALE.ETLBox.Helper.SqlHelperExtensions.AsString(System.Collections.Generic.IEnumerable(Of ALE.ETLBox.ITableColumn), System.String, System.String, System.String)
  nameWithType: SqlHelperExtensions.AsString(IEnumerable<ITableColumn>, String, String, String)
  nameWithType.vb: SqlHelperExtensions.AsString(IEnumerable(Of ITableColumn), String, String, String)
- uid: ALE.ETLBox.Helper.SqlHelperExtensions.AsString*
  name: AsString
  href: api/ALE.ETLBox.Helper.SqlHelperExtensions.html#ALE_ETLBox_Helper_SqlHelperExtensions_AsString_
  commentId: Overload:ALE.ETLBox.Helper.SqlHelperExtensions.AsString
  isSpec: "True"
  fullName: ALE.ETLBox.Helper.SqlHelperExtensions.AsString
  nameWithType: SqlHelperExtensions.AsString
- uid: ALE.ETLBox.Helper.SqlHelperExtensions.AsStringWithNewLine(System.Collections.Generic.IEnumerable{ALE.ETLBox.ITableColumn},System.String,System.String,System.String)
  name: AsStringWithNewLine(IEnumerable<ITableColumn>, String, String, String)
  href: api/ALE.ETLBox.Helper.SqlHelperExtensions.html#ALE_ETLBox_Helper_SqlHelperExtensions_AsStringWithNewLine_System_Collections_Generic_IEnumerable_ALE_ETLBox_ITableColumn__System_String_System_String_System_String_
  commentId: M:ALE.ETLBox.Helper.SqlHelperExtensions.AsStringWithNewLine(System.Collections.Generic.IEnumerable{ALE.ETLBox.ITableColumn},System.String,System.String,System.String)
  name.vb: AsStringWithNewLine(IEnumerable(Of ITableColumn), String, String, String)
  fullName: ALE.ETLBox.Helper.SqlHelperExtensions.AsStringWithNewLine(System.Collections.Generic.IEnumerable<ALE.ETLBox.ITableColumn>, System.String, System.String, System.String)
  fullName.vb: ALE.ETLBox.Helper.SqlHelperExtensions.AsStringWithNewLine(System.Collections.Generic.IEnumerable(Of ALE.ETLBox.ITableColumn), System.String, System.String, System.String)
  nameWithType: SqlHelperExtensions.AsStringWithNewLine(IEnumerable<ITableColumn>, String, String, String)
  nameWithType.vb: SqlHelperExtensions.AsStringWithNewLine(IEnumerable(Of ITableColumn), String, String, String)
- uid: ALE.ETLBox.Helper.SqlHelperExtensions.AsStringWithNewLine*
  name: AsStringWithNewLine
  href: api/ALE.ETLBox.Helper.SqlHelperExtensions.html#ALE_ETLBox_Helper_SqlHelperExtensions_AsStringWithNewLine_
  commentId: Overload:ALE.ETLBox.Helper.SqlHelperExtensions.AsStringWithNewLine
  isSpec: "True"
  fullName: ALE.ETLBox.Helper.SqlHelperExtensions.AsStringWithNewLine
  nameWithType: SqlHelperExtensions.AsStringWithNewLine
- uid: ALE.ETLBox.Helper.SqlParser
  name: SqlParser
  href: api/ALE.ETLBox.Helper.SqlParser.html
  commentId: T:ALE.ETLBox.Helper.SqlParser
  fullName: ALE.ETLBox.Helper.SqlParser
  nameWithType: SqlParser
- uid: ALE.ETLBox.Helper.SqlParser.ParseColumnNames(System.String)
  name: ParseColumnNames(String)
  href: api/ALE.ETLBox.Helper.SqlParser.html#ALE_ETLBox_Helper_SqlParser_ParseColumnNames_System_String_
  commentId: M:ALE.ETLBox.Helper.SqlParser.ParseColumnNames(System.String)
  fullName: ALE.ETLBox.Helper.SqlParser.ParseColumnNames(System.String)
  nameWithType: SqlParser.ParseColumnNames(String)
- uid: ALE.ETLBox.Helper.SqlParser.ParseColumnNames*
  name: ParseColumnNames
  href: api/ALE.ETLBox.Helper.SqlParser.html#ALE_ETLBox_Helper_SqlParser_ParseColumnNames_
  commentId: Overload:ALE.ETLBox.Helper.SqlParser.ParseColumnNames
  isSpec: "True"
  fullName: ALE.ETLBox.Helper.SqlParser.ParseColumnNames
  nameWithType: SqlParser.ParseColumnNames
- uid: ALE.ETLBox.Helper.StringExtension
  name: StringExtension
  href: api/ALE.ETLBox.Helper.StringExtension.html
  commentId: T:ALE.ETLBox.Helper.StringExtension
  fullName: ALE.ETLBox.Helper.StringExtension
  nameWithType: StringExtension
- uid: ALE.ETLBox.Helper.StringExtension.NullOrSqlString(System.String)
  name: NullOrSqlString(String)
  href: api/ALE.ETLBox.Helper.StringExtension.html#ALE_ETLBox_Helper_StringExtension_NullOrSqlString_System_String_
  commentId: M:ALE.ETLBox.Helper.StringExtension.NullOrSqlString(System.String)
  fullName: ALE.ETLBox.Helper.StringExtension.NullOrSqlString(System.String)
  nameWithType: StringExtension.NullOrSqlString(String)
- uid: ALE.ETLBox.Helper.StringExtension.NullOrSqlString*
  name: NullOrSqlString
  href: api/ALE.ETLBox.Helper.StringExtension.html#ALE_ETLBox_Helper_StringExtension_NullOrSqlString_
  commentId: Overload:ALE.ETLBox.Helper.StringExtension.NullOrSqlString
  isSpec: "True"
  fullName: ALE.ETLBox.Helper.StringExtension.NullOrSqlString
  nameWithType: StringExtension.NullOrSqlString
- uid: ALE.ETLBox.Helper.StringExtension.ReplaceIgnoreCase(System.String,System.String,System.String)
  name: ReplaceIgnoreCase(String, String, String)
  href: api/ALE.ETLBox.Helper.StringExtension.html#ALE_ETLBox_Helper_StringExtension_ReplaceIgnoreCase_System_String_System_String_System_String_
  commentId: M:ALE.ETLBox.Helper.StringExtension.ReplaceIgnoreCase(System.String,System.String,System.String)
  fullName: ALE.ETLBox.Helper.StringExtension.ReplaceIgnoreCase(System.String, System.String, System.String)
  nameWithType: StringExtension.ReplaceIgnoreCase(String, String, String)
- uid: ALE.ETLBox.Helper.StringExtension.ReplaceIgnoreCase*
  name: ReplaceIgnoreCase
  href: api/ALE.ETLBox.Helper.StringExtension.html#ALE_ETLBox_Helper_StringExtension_ReplaceIgnoreCase_
  commentId: Overload:ALE.ETLBox.Helper.StringExtension.ReplaceIgnoreCase
  isSpec: "True"
  fullName: ALE.ETLBox.Helper.StringExtension.ReplaceIgnoreCase
  nameWithType: StringExtension.ReplaceIgnoreCase
- uid: ALE.ETLBox.IDbConnectionString
  name: IDbConnectionString
  href: api/ALE.ETLBox.IDbConnectionString.html
  commentId: T:ALE.ETLBox.IDbConnectionString
  fullName: ALE.ETLBox.IDbConnectionString
  nameWithType: IDbConnectionString
- uid: ALE.ETLBox.IDbConnectionString.ToString
  name: ToString()
  href: api/ALE.ETLBox.IDbConnectionString.html#ALE_ETLBox_IDbConnectionString_ToString
  commentId: M:ALE.ETLBox.IDbConnectionString.ToString
  fullName: ALE.ETLBox.IDbConnectionString.ToString()
  nameWithType: IDbConnectionString.ToString()
- uid: ALE.ETLBox.IDbConnectionString.ToString*
  name: ToString
  href: api/ALE.ETLBox.IDbConnectionString.html#ALE_ETLBox_IDbConnectionString_ToString_
  commentId: Overload:ALE.ETLBox.IDbConnectionString.ToString
  isSpec: "True"
  fullName: ALE.ETLBox.IDbConnectionString.ToString
  nameWithType: IDbConnectionString.ToString
- uid: ALE.ETLBox.IDbConnectionString.Value
  name: Value
  href: api/ALE.ETLBox.IDbConnectionString.html#ALE_ETLBox_IDbConnectionString_Value
  commentId: P:ALE.ETLBox.IDbConnectionString.Value
  fullName: ALE.ETLBox.IDbConnectionString.Value
  nameWithType: IDbConnectionString.Value
- uid: ALE.ETLBox.IDbConnectionString.Value*
  name: Value
  href: api/ALE.ETLBox.IDbConnectionString.html#ALE_ETLBox_IDbConnectionString_Value_
  commentId: Overload:ALE.ETLBox.IDbConnectionString.Value
  isSpec: "True"
  fullName: ALE.ETLBox.IDbConnectionString.Value
  nameWithType: IDbConnectionString.Value
- uid: ALE.ETLBox.ITableColumn
  name: ITableColumn
  href: api/ALE.ETLBox.ITableColumn.html
  commentId: T:ALE.ETLBox.ITableColumn
  fullName: ALE.ETLBox.ITableColumn
  nameWithType: ITableColumn
- uid: ALE.ETLBox.ITableColumn.AllowNulls
  name: AllowNulls
  href: api/ALE.ETLBox.ITableColumn.html#ALE_ETLBox_ITableColumn_AllowNulls
  commentId: P:ALE.ETLBox.ITableColumn.AllowNulls
  fullName: ALE.ETLBox.ITableColumn.AllowNulls
  nameWithType: ITableColumn.AllowNulls
- uid: ALE.ETLBox.ITableColumn.AllowNulls*
  name: AllowNulls
  href: api/ALE.ETLBox.ITableColumn.html#ALE_ETLBox_ITableColumn_AllowNulls_
  commentId: Overload:ALE.ETLBox.ITableColumn.AllowNulls
  isSpec: "True"
  fullName: ALE.ETLBox.ITableColumn.AllowNulls
  nameWithType: ITableColumn.AllowNulls
- uid: ALE.ETLBox.ITableColumn.Collation
  name: Collation
  href: api/ALE.ETLBox.ITableColumn.html#ALE_ETLBox_ITableColumn_Collation
  commentId: P:ALE.ETLBox.ITableColumn.Collation
  fullName: ALE.ETLBox.ITableColumn.Collation
  nameWithType: ITableColumn.Collation
- uid: ALE.ETLBox.ITableColumn.Collation*
  name: Collation
  href: api/ALE.ETLBox.ITableColumn.html#ALE_ETLBox_ITableColumn_Collation_
  commentId: Overload:ALE.ETLBox.ITableColumn.Collation
  isSpec: "True"
  fullName: ALE.ETLBox.ITableColumn.Collation
  nameWithType: ITableColumn.Collation
- uid: ALE.ETLBox.ITableColumn.ComputedColumn
  name: ComputedColumn
  href: api/ALE.ETLBox.ITableColumn.html#ALE_ETLBox_ITableColumn_ComputedColumn
  commentId: P:ALE.ETLBox.ITableColumn.ComputedColumn
  fullName: ALE.ETLBox.ITableColumn.ComputedColumn
  nameWithType: ITableColumn.ComputedColumn
- uid: ALE.ETLBox.ITableColumn.ComputedColumn*
  name: ComputedColumn
  href: api/ALE.ETLBox.ITableColumn.html#ALE_ETLBox_ITableColumn_ComputedColumn_
  commentId: Overload:ALE.ETLBox.ITableColumn.ComputedColumn
  isSpec: "True"
  fullName: ALE.ETLBox.ITableColumn.ComputedColumn
  nameWithType: ITableColumn.ComputedColumn
- uid: ALE.ETLBox.ITableColumn.DataType
  name: DataType
  href: api/ALE.ETLBox.ITableColumn.html#ALE_ETLBox_ITableColumn_DataType
  commentId: P:ALE.ETLBox.ITableColumn.DataType
  fullName: ALE.ETLBox.ITableColumn.DataType
  nameWithType: ITableColumn.DataType
- uid: ALE.ETLBox.ITableColumn.DataType*
  name: DataType
  href: api/ALE.ETLBox.ITableColumn.html#ALE_ETLBox_ITableColumn_DataType_
  commentId: Overload:ALE.ETLBox.ITableColumn.DataType
  isSpec: "True"
  fullName: ALE.ETLBox.ITableColumn.DataType
  nameWithType: ITableColumn.DataType
- uid: ALE.ETLBox.ITableColumn.DefaultValue
  name: DefaultValue
  href: api/ALE.ETLBox.ITableColumn.html#ALE_ETLBox_ITableColumn_DefaultValue
  commentId: P:ALE.ETLBox.ITableColumn.DefaultValue
  fullName: ALE.ETLBox.ITableColumn.DefaultValue
  nameWithType: ITableColumn.DefaultValue
- uid: ALE.ETLBox.ITableColumn.DefaultValue*
  name: DefaultValue
  href: api/ALE.ETLBox.ITableColumn.html#ALE_ETLBox_ITableColumn_DefaultValue_
  commentId: Overload:ALE.ETLBox.ITableColumn.DefaultValue
  isSpec: "True"
  fullName: ALE.ETLBox.ITableColumn.DefaultValue
  nameWithType: ITableColumn.DefaultValue
- uid: ALE.ETLBox.ITableColumn.HasComputedColumn
  name: HasComputedColumn
  href: api/ALE.ETLBox.ITableColumn.html#ALE_ETLBox_ITableColumn_HasComputedColumn
  commentId: P:ALE.ETLBox.ITableColumn.HasComputedColumn
  fullName: ALE.ETLBox.ITableColumn.HasComputedColumn
  nameWithType: ITableColumn.HasComputedColumn
- uid: ALE.ETLBox.ITableColumn.HasComputedColumn*
  name: HasComputedColumn
  href: api/ALE.ETLBox.ITableColumn.html#ALE_ETLBox_ITableColumn_HasComputedColumn_
  commentId: Overload:ALE.ETLBox.ITableColumn.HasComputedColumn
  isSpec: "True"
  fullName: ALE.ETLBox.ITableColumn.HasComputedColumn
  nameWithType: ITableColumn.HasComputedColumn
- uid: ALE.ETLBox.ITableColumn.IdentityIncrement
  name: IdentityIncrement
  href: api/ALE.ETLBox.ITableColumn.html#ALE_ETLBox_ITableColumn_IdentityIncrement
  commentId: P:ALE.ETLBox.ITableColumn.IdentityIncrement
  fullName: ALE.ETLBox.ITableColumn.IdentityIncrement
  nameWithType: ITableColumn.IdentityIncrement
- uid: ALE.ETLBox.ITableColumn.IdentityIncrement*
  name: IdentityIncrement
  href: api/ALE.ETLBox.ITableColumn.html#ALE_ETLBox_ITableColumn_IdentityIncrement_
  commentId: Overload:ALE.ETLBox.ITableColumn.IdentityIncrement
  isSpec: "True"
  fullName: ALE.ETLBox.ITableColumn.IdentityIncrement
  nameWithType: ITableColumn.IdentityIncrement
- uid: ALE.ETLBox.ITableColumn.IdentitySeed
  name: IdentitySeed
  href: api/ALE.ETLBox.ITableColumn.html#ALE_ETLBox_ITableColumn_IdentitySeed
  commentId: P:ALE.ETLBox.ITableColumn.IdentitySeed
  fullName: ALE.ETLBox.ITableColumn.IdentitySeed
  nameWithType: ITableColumn.IdentitySeed
- uid: ALE.ETLBox.ITableColumn.IdentitySeed*
  name: IdentitySeed
  href: api/ALE.ETLBox.ITableColumn.html#ALE_ETLBox_ITableColumn_IdentitySeed_
  commentId: Overload:ALE.ETLBox.ITableColumn.IdentitySeed
  isSpec: "True"
  fullName: ALE.ETLBox.ITableColumn.IdentitySeed
  nameWithType: ITableColumn.IdentitySeed
- uid: ALE.ETLBox.ITableColumn.IsIdentity
  name: IsIdentity
  href: api/ALE.ETLBox.ITableColumn.html#ALE_ETLBox_ITableColumn_IsIdentity
  commentId: P:ALE.ETLBox.ITableColumn.IsIdentity
  fullName: ALE.ETLBox.ITableColumn.IsIdentity
  nameWithType: ITableColumn.IsIdentity
- uid: ALE.ETLBox.ITableColumn.IsIdentity*
  name: IsIdentity
  href: api/ALE.ETLBox.ITableColumn.html#ALE_ETLBox_ITableColumn_IsIdentity_
  commentId: Overload:ALE.ETLBox.ITableColumn.IsIdentity
  isSpec: "True"
  fullName: ALE.ETLBox.ITableColumn.IsIdentity
  nameWithType: ITableColumn.IsIdentity
- uid: ALE.ETLBox.ITableColumn.IsPrimaryKey
  name: IsPrimaryKey
  href: api/ALE.ETLBox.ITableColumn.html#ALE_ETLBox_ITableColumn_IsPrimaryKey
  commentId: P:ALE.ETLBox.ITableColumn.IsPrimaryKey
  fullName: ALE.ETLBox.ITableColumn.IsPrimaryKey
  nameWithType: ITableColumn.IsPrimaryKey
- uid: ALE.ETLBox.ITableColumn.IsPrimaryKey*
  name: IsPrimaryKey
  href: api/ALE.ETLBox.ITableColumn.html#ALE_ETLBox_ITableColumn_IsPrimaryKey_
  commentId: Overload:ALE.ETLBox.ITableColumn.IsPrimaryKey
  isSpec: "True"
  fullName: ALE.ETLBox.ITableColumn.IsPrimaryKey
  nameWithType: ITableColumn.IsPrimaryKey
- uid: ALE.ETLBox.ITableColumn.Name
  name: Name
  href: api/ALE.ETLBox.ITableColumn.html#ALE_ETLBox_ITableColumn_Name
  commentId: P:ALE.ETLBox.ITableColumn.Name
  fullName: ALE.ETLBox.ITableColumn.Name
  nameWithType: ITableColumn.Name
- uid: ALE.ETLBox.ITableColumn.Name*
  name: Name
  href: api/ALE.ETLBox.ITableColumn.html#ALE_ETLBox_ITableColumn_Name_
  commentId: Overload:ALE.ETLBox.ITableColumn.Name
  isSpec: "True"
  fullName: ALE.ETLBox.ITableColumn.Name
  nameWithType: ITableColumn.Name
- uid: ALE.ETLBox.ITableData
  name: ITableData
  href: api/ALE.ETLBox.ITableData.html
  commentId: T:ALE.ETLBox.ITableData
  fullName: ALE.ETLBox.ITableData
  nameWithType: ITableData
- uid: ALE.ETLBox.ITableData.ColumnMapping
  name: ColumnMapping
  href: api/ALE.ETLBox.ITableData.html#ALE_ETLBox_ITableData_ColumnMapping
  commentId: P:ALE.ETLBox.ITableData.ColumnMapping
  fullName: ALE.ETLBox.ITableData.ColumnMapping
  nameWithType: ITableData.ColumnMapping
- uid: ALE.ETLBox.ITableData.ColumnMapping*
  name: ColumnMapping
  href: api/ALE.ETLBox.ITableData.html#ALE_ETLBox_ITableData_ColumnMapping_
  commentId: Overload:ALE.ETLBox.ITableData.ColumnMapping
  isSpec: "True"
  fullName: ALE.ETLBox.ITableData.ColumnMapping
  nameWithType: ITableData.ColumnMapping
- uid: ALE.ETLBox.ITableData.Rows
  name: Rows
  href: api/ALE.ETLBox.ITableData.html#ALE_ETLBox_ITableData_Rows
  commentId: P:ALE.ETLBox.ITableData.Rows
  fullName: ALE.ETLBox.ITableData.Rows
  nameWithType: ITableData.Rows
- uid: ALE.ETLBox.ITableData.Rows*
  name: Rows
  href: api/ALE.ETLBox.ITableData.html#ALE_ETLBox_ITableData_Rows_
  commentId: Overload:ALE.ETLBox.ITableData.Rows
  isSpec: "True"
  fullName: ALE.ETLBox.ITableData.Rows
  nameWithType: ITableData.Rows
- uid: ALE.ETLBox.ITask
  name: ITask
  href: api/ALE.ETLBox.ITask.html
  commentId: T:ALE.ETLBox.ITask
  fullName: ALE.ETLBox.ITask
  nameWithType: ITask
- uid: ALE.ETLBox.ITask.ConnectionManager
  name: ConnectionManager
  href: api/ALE.ETLBox.ITask.html#ALE_ETLBox_ITask_ConnectionManager
  commentId: P:ALE.ETLBox.ITask.ConnectionManager
  fullName: ALE.ETLBox.ITask.ConnectionManager
  nameWithType: ITask.ConnectionManager
- uid: ALE.ETLBox.ITask.ConnectionManager*
  name: ConnectionManager
  href: api/ALE.ETLBox.ITask.html#ALE_ETLBox_ITask_ConnectionManager_
  commentId: Overload:ALE.ETLBox.ITask.ConnectionManager
  isSpec: "True"
  fullName: ALE.ETLBox.ITask.ConnectionManager
  nameWithType: ITask.ConnectionManager
- uid: ALE.ETLBox.ITask.DisableLogging
  name: DisableLogging
  href: api/ALE.ETLBox.ITask.html#ALE_ETLBox_ITask_DisableLogging
  commentId: P:ALE.ETLBox.ITask.DisableLogging
  fullName: ALE.ETLBox.ITask.DisableLogging
  nameWithType: ITask.DisableLogging
- uid: ALE.ETLBox.ITask.DisableLogging*
  name: DisableLogging
  href: api/ALE.ETLBox.ITask.html#ALE_ETLBox_ITask_DisableLogging_
  commentId: Overload:ALE.ETLBox.ITask.DisableLogging
  isSpec: "True"
  fullName: ALE.ETLBox.ITask.DisableLogging
  nameWithType: ITask.DisableLogging
- uid: ALE.ETLBox.ITask.TaskHash
  name: TaskHash
  href: api/ALE.ETLBox.ITask.html#ALE_ETLBox_ITask_TaskHash
  commentId: P:ALE.ETLBox.ITask.TaskHash
  fullName: ALE.ETLBox.ITask.TaskHash
  nameWithType: ITask.TaskHash
- uid: ALE.ETLBox.ITask.TaskHash*
  name: TaskHash
  href: api/ALE.ETLBox.ITask.html#ALE_ETLBox_ITask_TaskHash_
  commentId: Overload:ALE.ETLBox.ITask.TaskHash
  isSpec: "True"
  fullName: ALE.ETLBox.ITask.TaskHash
  nameWithType: ITask.TaskHash
- uid: ALE.ETLBox.ITask.TaskName
  name: TaskName
  href: api/ALE.ETLBox.ITask.html#ALE_ETLBox_ITask_TaskName
  commentId: P:ALE.ETLBox.ITask.TaskName
  fullName: ALE.ETLBox.ITask.TaskName
  nameWithType: ITask.TaskName
- uid: ALE.ETLBox.ITask.TaskName*
  name: TaskName
  href: api/ALE.ETLBox.ITask.html#ALE_ETLBox_ITask_TaskName_
  commentId: Overload:ALE.ETLBox.ITask.TaskName
  isSpec: "True"
  fullName: ALE.ETLBox.ITask.TaskName
  nameWithType: ITask.TaskName
- uid: ALE.ETLBox.ITask.TaskType
  name: TaskType
  href: api/ALE.ETLBox.ITask.html#ALE_ETLBox_ITask_TaskType
  commentId: P:ALE.ETLBox.ITask.TaskType
  fullName: ALE.ETLBox.ITask.TaskType
  nameWithType: ITask.TaskType
- uid: ALE.ETLBox.ITask.TaskType*
  name: TaskType
  href: api/ALE.ETLBox.ITask.html#ALE_ETLBox_ITask_TaskType_
  commentId: Overload:ALE.ETLBox.ITask.TaskType
  isSpec: "True"
  fullName: ALE.ETLBox.ITask.TaskType
  nameWithType: ITask.TaskType
- uid: ALE.ETLBox.Logging
  name: ALE.ETLBox.Logging
  href: api/ALE.ETLBox.Logging.html
  commentId: N:ALE.ETLBox.Logging
  fullName: ALE.ETLBox.Logging
  nameWithType: ALE.ETLBox.Logging
- uid: ALE.ETLBox.Logging.AbortLoadProcessTask
  name: AbortLoadProcessTask
  href: api/ALE.ETLBox.Logging.AbortLoadProcessTask.html
  commentId: T:ALE.ETLBox.Logging.AbortLoadProcessTask
  fullName: ALE.ETLBox.Logging.AbortLoadProcessTask
  nameWithType: AbortLoadProcessTask
- uid: ALE.ETLBox.Logging.AbortLoadProcessTask.#ctor
  name: AbortLoadProcessTask()
  href: api/ALE.ETLBox.Logging.AbortLoadProcessTask.html#ALE_ETLBox_Logging_AbortLoadProcessTask__ctor
  commentId: M:ALE.ETLBox.Logging.AbortLoadProcessTask.#ctor
  fullName: ALE.ETLBox.Logging.AbortLoadProcessTask.AbortLoadProcessTask()
  nameWithType: AbortLoadProcessTask.AbortLoadProcessTask()
- uid: ALE.ETLBox.Logging.AbortLoadProcessTask.#ctor(System.Nullable{System.Int64})
  name: AbortLoadProcessTask(Nullable<Int64>)
  href: api/ALE.ETLBox.Logging.AbortLoadProcessTask.html#ALE_ETLBox_Logging_AbortLoadProcessTask__ctor_System_Nullable_System_Int64__
  commentId: M:ALE.ETLBox.Logging.AbortLoadProcessTask.#ctor(System.Nullable{System.Int64})
  name.vb: AbortLoadProcessTask(Nullable(Of Int64))
  fullName: ALE.ETLBox.Logging.AbortLoadProcessTask.AbortLoadProcessTask(System.Nullable<System.Int64>)
  fullName.vb: ALE.ETLBox.Logging.AbortLoadProcessTask.AbortLoadProcessTask(System.Nullable(Of System.Int64))
  nameWithType: AbortLoadProcessTask.AbortLoadProcessTask(Nullable<Int64>)
  nameWithType.vb: AbortLoadProcessTask.AbortLoadProcessTask(Nullable(Of Int64))
- uid: ALE.ETLBox.Logging.AbortLoadProcessTask.#ctor(System.Nullable{System.Int64},System.String)
  name: AbortLoadProcessTask(Nullable<Int64>, String)
  href: api/ALE.ETLBox.Logging.AbortLoadProcessTask.html#ALE_ETLBox_Logging_AbortLoadProcessTask__ctor_System_Nullable_System_Int64__System_String_
  commentId: M:ALE.ETLBox.Logging.AbortLoadProcessTask.#ctor(System.Nullable{System.Int64},System.String)
  name.vb: AbortLoadProcessTask(Nullable(Of Int64), String)
  fullName: ALE.ETLBox.Logging.AbortLoadProcessTask.AbortLoadProcessTask(System.Nullable<System.Int64>, System.String)
  fullName.vb: ALE.ETLBox.Logging.AbortLoadProcessTask.AbortLoadProcessTask(System.Nullable(Of System.Int64), System.String)
  nameWithType: AbortLoadProcessTask.AbortLoadProcessTask(Nullable<Int64>, String)
  nameWithType.vb: AbortLoadProcessTask.AbortLoadProcessTask(Nullable(Of Int64), String)
- uid: ALE.ETLBox.Logging.AbortLoadProcessTask.#ctor(System.String)
  name: AbortLoadProcessTask(String)
  href: api/ALE.ETLBox.Logging.AbortLoadProcessTask.html#ALE_ETLBox_Logging_AbortLoadProcessTask__ctor_System_String_
  commentId: M:ALE.ETLBox.Logging.AbortLoadProcessTask.#ctor(System.String)
  fullName: ALE.ETLBox.Logging.AbortLoadProcessTask.AbortLoadProcessTask(System.String)
  nameWithType: AbortLoadProcessTask.AbortLoadProcessTask(String)
- uid: ALE.ETLBox.Logging.AbortLoadProcessTask.#ctor*
  name: AbortLoadProcessTask
  href: api/ALE.ETLBox.Logging.AbortLoadProcessTask.html#ALE_ETLBox_Logging_AbortLoadProcessTask__ctor_
  commentId: Overload:ALE.ETLBox.Logging.AbortLoadProcessTask.#ctor
  isSpec: "True"
  fullName: ALE.ETLBox.Logging.AbortLoadProcessTask.AbortLoadProcessTask
  nameWithType: AbortLoadProcessTask.AbortLoadProcessTask
- uid: ALE.ETLBox.Logging.AbortLoadProcessTask._loadProcessId
  name: _loadProcessId
  href: api/ALE.ETLBox.Logging.AbortLoadProcessTask.html#ALE_ETLBox_Logging_AbortLoadProcessTask__loadProcessId
  commentId: F:ALE.ETLBox.Logging.AbortLoadProcessTask._loadProcessId
  fullName: ALE.ETLBox.Logging.AbortLoadProcessTask._loadProcessId
  nameWithType: AbortLoadProcessTask._loadProcessId
- uid: ALE.ETLBox.Logging.AbortLoadProcessTask.Abort
  name: Abort()
  href: api/ALE.ETLBox.Logging.AbortLoadProcessTask.html#ALE_ETLBox_Logging_AbortLoadProcessTask_Abort
  commentId: M:ALE.ETLBox.Logging.AbortLoadProcessTask.Abort
  fullName: ALE.ETLBox.Logging.AbortLoadProcessTask.Abort()
  nameWithType: AbortLoadProcessTask.Abort()
- uid: ALE.ETLBox.Logging.AbortLoadProcessTask.Abort(ALE.ETLBox.ConnectionManager.IConnectionManager)
  name: Abort(IConnectionManager)
  href: api/ALE.ETLBox.Logging.AbortLoadProcessTask.html#ALE_ETLBox_Logging_AbortLoadProcessTask_Abort_ALE_ETLBox_ConnectionManager_IConnectionManager_
  commentId: M:ALE.ETLBox.Logging.AbortLoadProcessTask.Abort(ALE.ETLBox.ConnectionManager.IConnectionManager)
  fullName: ALE.ETLBox.Logging.AbortLoadProcessTask.Abort(ALE.ETLBox.ConnectionManager.IConnectionManager)
  nameWithType: AbortLoadProcessTask.Abort(IConnectionManager)
- uid: ALE.ETLBox.Logging.AbortLoadProcessTask.Abort(ALE.ETLBox.ConnectionManager.IConnectionManager,System.Nullable{System.Int64})
  name: Abort(IConnectionManager, Nullable<Int64>)
  href: api/ALE.ETLBox.Logging.AbortLoadProcessTask.html#ALE_ETLBox_Logging_AbortLoadProcessTask_Abort_ALE_ETLBox_ConnectionManager_IConnectionManager_System_Nullable_System_Int64__
  commentId: M:ALE.ETLBox.Logging.AbortLoadProcessTask.Abort(ALE.ETLBox.ConnectionManager.IConnectionManager,System.Nullable{System.Int64})
  name.vb: Abort(IConnectionManager, Nullable(Of Int64))
  fullName: ALE.ETLBox.Logging.AbortLoadProcessTask.Abort(ALE.ETLBox.ConnectionManager.IConnectionManager, System.Nullable<System.Int64>)
  fullName.vb: ALE.ETLBox.Logging.AbortLoadProcessTask.Abort(ALE.ETLBox.ConnectionManager.IConnectionManager, System.Nullable(Of System.Int64))
  nameWithType: AbortLoadProcessTask.Abort(IConnectionManager, Nullable<Int64>)
  nameWithType.vb: AbortLoadProcessTask.Abort(IConnectionManager, Nullable(Of Int64))
- uid: ALE.ETLBox.Logging.AbortLoadProcessTask.Abort(ALE.ETLBox.ConnectionManager.IConnectionManager,System.Nullable{System.Int64},System.String)
  name: Abort(IConnectionManager, Nullable<Int64>, String)
  href: api/ALE.ETLBox.Logging.AbortLoadProcessTask.html#ALE_ETLBox_Logging_AbortLoadProcessTask_Abort_ALE_ETLBox_ConnectionManager_IConnectionManager_System_Nullable_System_Int64__System_String_
  commentId: M:ALE.ETLBox.Logging.AbortLoadProcessTask.Abort(ALE.ETLBox.ConnectionManager.IConnectionManager,System.Nullable{System.Int64},System.String)
  name.vb: Abort(IConnectionManager, Nullable(Of Int64), String)
  fullName: ALE.ETLBox.Logging.AbortLoadProcessTask.Abort(ALE.ETLBox.ConnectionManager.IConnectionManager, System.Nullable<System.Int64>, System.String)
  fullName.vb: ALE.ETLBox.Logging.AbortLoadProcessTask.Abort(ALE.ETLBox.ConnectionManager.IConnectionManager, System.Nullable(Of System.Int64), System.String)
  nameWithType: AbortLoadProcessTask.Abort(IConnectionManager, Nullable<Int64>, String)
  nameWithType.vb: AbortLoadProcessTask.Abort(IConnectionManager, Nullable(Of Int64), String)
- uid: ALE.ETLBox.Logging.AbortLoadProcessTask.Abort(ALE.ETLBox.ConnectionManager.IConnectionManager,System.String)
  name: Abort(IConnectionManager, String)
  href: api/ALE.ETLBox.Logging.AbortLoadProcessTask.html#ALE_ETLBox_Logging_AbortLoadProcessTask_Abort_ALE_ETLBox_ConnectionManager_IConnectionManager_System_String_
  commentId: M:ALE.ETLBox.Logging.AbortLoadProcessTask.Abort(ALE.ETLBox.ConnectionManager.IConnectionManager,System.String)
  fullName: ALE.ETLBox.Logging.AbortLoadProcessTask.Abort(ALE.ETLBox.ConnectionManager.IConnectionManager, System.String)
  nameWithType: AbortLoadProcessTask.Abort(IConnectionManager, String)
- uid: ALE.ETLBox.Logging.AbortLoadProcessTask.Abort(System.Nullable{System.Int64})
  name: Abort(Nullable<Int64>)
  href: api/ALE.ETLBox.Logging.AbortLoadProcessTask.html#ALE_ETLBox_Logging_AbortLoadProcessTask_Abort_System_Nullable_System_Int64__
  commentId: M:ALE.ETLBox.Logging.AbortLoadProcessTask.Abort(System.Nullable{System.Int64})
  name.vb: Abort(Nullable(Of Int64))
  fullName: ALE.ETLBox.Logging.AbortLoadProcessTask.Abort(System.Nullable<System.Int64>)
  fullName.vb: ALE.ETLBox.Logging.AbortLoadProcessTask.Abort(System.Nullable(Of System.Int64))
  nameWithType: AbortLoadProcessTask.Abort(Nullable<Int64>)
  nameWithType.vb: AbortLoadProcessTask.Abort(Nullable(Of Int64))
- uid: ALE.ETLBox.Logging.AbortLoadProcessTask.Abort(System.Nullable{System.Int64},System.String)
  name: Abort(Nullable<Int64>, String)
  href: api/ALE.ETLBox.Logging.AbortLoadProcessTask.html#ALE_ETLBox_Logging_AbortLoadProcessTask_Abort_System_Nullable_System_Int64__System_String_
  commentId: M:ALE.ETLBox.Logging.AbortLoadProcessTask.Abort(System.Nullable{System.Int64},System.String)
  name.vb: Abort(Nullable(Of Int64), String)
  fullName: ALE.ETLBox.Logging.AbortLoadProcessTask.Abort(System.Nullable<System.Int64>, System.String)
  fullName.vb: ALE.ETLBox.Logging.AbortLoadProcessTask.Abort(System.Nullable(Of System.Int64), System.String)
  nameWithType: AbortLoadProcessTask.Abort(Nullable<Int64>, String)
  nameWithType.vb: AbortLoadProcessTask.Abort(Nullable(Of Int64), String)
- uid: ALE.ETLBox.Logging.AbortLoadProcessTask.Abort(System.String)
  name: Abort(String)
  href: api/ALE.ETLBox.Logging.AbortLoadProcessTask.html#ALE_ETLBox_Logging_AbortLoadProcessTask_Abort_System_String_
  commentId: M:ALE.ETLBox.Logging.AbortLoadProcessTask.Abort(System.String)
  fullName: ALE.ETLBox.Logging.AbortLoadProcessTask.Abort(System.String)
  nameWithType: AbortLoadProcessTask.Abort(String)
- uid: ALE.ETLBox.Logging.AbortLoadProcessTask.Abort*
  name: Abort
  href: api/ALE.ETLBox.Logging.AbortLoadProcessTask.html#ALE_ETLBox_Logging_AbortLoadProcessTask_Abort_
  commentId: Overload:ALE.ETLBox.Logging.AbortLoadProcessTask.Abort
  isSpec: "True"
  fullName: ALE.ETLBox.Logging.AbortLoadProcessTask.Abort
  nameWithType: AbortLoadProcessTask.Abort
- uid: ALE.ETLBox.Logging.AbortLoadProcessTask.AbortMessage
  name: AbortMessage
  href: api/ALE.ETLBox.Logging.AbortLoadProcessTask.html#ALE_ETLBox_Logging_AbortLoadProcessTask_AbortMessage
  commentId: P:ALE.ETLBox.Logging.AbortLoadProcessTask.AbortMessage
  fullName: ALE.ETLBox.Logging.AbortLoadProcessTask.AbortMessage
  nameWithType: AbortLoadProcessTask.AbortMessage
- uid: ALE.ETLBox.Logging.AbortLoadProcessTask.AbortMessage*
  name: AbortMessage
  href: api/ALE.ETLBox.Logging.AbortLoadProcessTask.html#ALE_ETLBox_Logging_AbortLoadProcessTask_AbortMessage_
  commentId: Overload:ALE.ETLBox.Logging.AbortLoadProcessTask.AbortMessage
  isSpec: "True"
  fullName: ALE.ETLBox.Logging.AbortLoadProcessTask.AbortMessage
  nameWithType: AbortLoadProcessTask.AbortMessage
- uid: ALE.ETLBox.Logging.AbortLoadProcessTask.Execute
  name: Execute()
  href: api/ALE.ETLBox.Logging.AbortLoadProcessTask.html#ALE_ETLBox_Logging_AbortLoadProcessTask_Execute
  commentId: M:ALE.ETLBox.Logging.AbortLoadProcessTask.Execute
  fullName: ALE.ETLBox.Logging.AbortLoadProcessTask.Execute()
  nameWithType: AbortLoadProcessTask.Execute()
- uid: ALE.ETLBox.Logging.AbortLoadProcessTask.Execute*
  name: Execute
  href: api/ALE.ETLBox.Logging.AbortLoadProcessTask.html#ALE_ETLBox_Logging_AbortLoadProcessTask_Execute_
  commentId: Overload:ALE.ETLBox.Logging.AbortLoadProcessTask.Execute
  isSpec: "True"
  fullName: ALE.ETLBox.Logging.AbortLoadProcessTask.Execute
  nameWithType: AbortLoadProcessTask.Execute
- uid: ALE.ETLBox.Logging.AbortLoadProcessTask.LoadProcessId
  name: LoadProcessId
  href: api/ALE.ETLBox.Logging.AbortLoadProcessTask.html#ALE_ETLBox_Logging_AbortLoadProcessTask_LoadProcessId
  commentId: P:ALE.ETLBox.Logging.AbortLoadProcessTask.LoadProcessId
  fullName: ALE.ETLBox.Logging.AbortLoadProcessTask.LoadProcessId
  nameWithType: AbortLoadProcessTask.LoadProcessId
- uid: ALE.ETLBox.Logging.AbortLoadProcessTask.LoadProcessId*
  name: LoadProcessId
  href: api/ALE.ETLBox.Logging.AbortLoadProcessTask.html#ALE_ETLBox_Logging_AbortLoadProcessTask_LoadProcessId_
  commentId: Overload:ALE.ETLBox.Logging.AbortLoadProcessTask.LoadProcessId
  isSpec: "True"
  fullName: ALE.ETLBox.Logging.AbortLoadProcessTask.LoadProcessId
  nameWithType: AbortLoadProcessTask.LoadProcessId
- uid: ALE.ETLBox.Logging.AbortLoadProcessTask.Sql
  name: Sql
  href: api/ALE.ETLBox.Logging.AbortLoadProcessTask.html#ALE_ETLBox_Logging_AbortLoadProcessTask_Sql
  commentId: P:ALE.ETLBox.Logging.AbortLoadProcessTask.Sql
  fullName: ALE.ETLBox.Logging.AbortLoadProcessTask.Sql
  nameWithType: AbortLoadProcessTask.Sql
- uid: ALE.ETLBox.Logging.AbortLoadProcessTask.Sql*
  name: Sql
  href: api/ALE.ETLBox.Logging.AbortLoadProcessTask.html#ALE_ETLBox_Logging_AbortLoadProcessTask_Sql_
  commentId: Overload:ALE.ETLBox.Logging.AbortLoadProcessTask.Sql
  isSpec: "True"
  fullName: ALE.ETLBox.Logging.AbortLoadProcessTask.Sql
  nameWithType: AbortLoadProcessTask.Sql
- uid: ALE.ETLBox.Logging.AbortLoadProcessTask.TaskName
  name: TaskName
  href: api/ALE.ETLBox.Logging.AbortLoadProcessTask.html#ALE_ETLBox_Logging_AbortLoadProcessTask_TaskName
  commentId: P:ALE.ETLBox.Logging.AbortLoadProcessTask.TaskName
  fullName: ALE.ETLBox.Logging.AbortLoadProcessTask.TaskName
  nameWithType: AbortLoadProcessTask.TaskName
- uid: ALE.ETLBox.Logging.AbortLoadProcessTask.TaskName*
  name: TaskName
  href: api/ALE.ETLBox.Logging.AbortLoadProcessTask.html#ALE_ETLBox_Logging_AbortLoadProcessTask_TaskName_
  commentId: Overload:ALE.ETLBox.Logging.AbortLoadProcessTask.TaskName
  isSpec: "True"
  fullName: ALE.ETLBox.Logging.AbortLoadProcessTask.TaskName
  nameWithType: AbortLoadProcessTask.TaskName
- uid: ALE.ETLBox.Logging.CreateDatabaseTarget
  name: CreateDatabaseTarget
  href: api/ALE.ETLBox.Logging.CreateDatabaseTarget.html
  commentId: T:ALE.ETLBox.Logging.CreateDatabaseTarget
  fullName: ALE.ETLBox.Logging.CreateDatabaseTarget
  nameWithType: CreateDatabaseTarget
- uid: ALE.ETLBox.Logging.CreateDatabaseTarget.#ctor(ALE.ETLBox.ConnectionManager.IConnectionManager,System.String)
  name: CreateDatabaseTarget(IConnectionManager, String)
  href: api/ALE.ETLBox.Logging.CreateDatabaseTarget.html#ALE_ETLBox_Logging_CreateDatabaseTarget__ctor_ALE_ETLBox_ConnectionManager_IConnectionManager_System_String_
  commentId: M:ALE.ETLBox.Logging.CreateDatabaseTarget.#ctor(ALE.ETLBox.ConnectionManager.IConnectionManager,System.String)
  fullName: ALE.ETLBox.Logging.CreateDatabaseTarget.CreateDatabaseTarget(ALE.ETLBox.ConnectionManager.IConnectionManager, System.String)
  nameWithType: CreateDatabaseTarget.CreateDatabaseTarget(IConnectionManager, String)
- uid: ALE.ETLBox.Logging.CreateDatabaseTarget.#ctor*
  name: CreateDatabaseTarget
  href: api/ALE.ETLBox.Logging.CreateDatabaseTarget.html#ALE_ETLBox_Logging_CreateDatabaseTarget__ctor_
  commentId: Overload:ALE.ETLBox.Logging.CreateDatabaseTarget.#ctor
  isSpec: "True"
  fullName: ALE.ETLBox.Logging.CreateDatabaseTarget.CreateDatabaseTarget
  nameWithType: CreateDatabaseTarget.CreateDatabaseTarget
- uid: ALE.ETLBox.Logging.CreateDatabaseTarget.CommandText
  name: CommandText
  href: api/ALE.ETLBox.Logging.CreateDatabaseTarget.html#ALE_ETLBox_Logging_CreateDatabaseTarget_CommandText
  commentId: P:ALE.ETLBox.Logging.CreateDatabaseTarget.CommandText
  fullName: ALE.ETLBox.Logging.CreateDatabaseTarget.CommandText
  nameWithType: CreateDatabaseTarget.CommandText
- uid: ALE.ETLBox.Logging.CreateDatabaseTarget.CommandText*
  name: CommandText
  href: api/ALE.ETLBox.Logging.CreateDatabaseTarget.html#ALE_ETLBox_Logging_CreateDatabaseTarget_CommandText_
  commentId: Overload:ALE.ETLBox.Logging.CreateDatabaseTarget.CommandText
  isSpec: "True"
  fullName: ALE.ETLBox.Logging.CreateDatabaseTarget.CommandText
  nameWithType: CreateDatabaseTarget.CommandText
- uid: ALE.ETLBox.Logging.CreateDatabaseTarget.ConnectionManager
  name: ConnectionManager
  href: api/ALE.ETLBox.Logging.CreateDatabaseTarget.html#ALE_ETLBox_Logging_CreateDatabaseTarget_ConnectionManager
  commentId: P:ALE.ETLBox.Logging.CreateDatabaseTarget.ConnectionManager
  fullName: ALE.ETLBox.Logging.CreateDatabaseTarget.ConnectionManager
  nameWithType: CreateDatabaseTarget.ConnectionManager
- uid: ALE.ETLBox.Logging.CreateDatabaseTarget.ConnectionManager*
  name: ConnectionManager
  href: api/ALE.ETLBox.Logging.CreateDatabaseTarget.html#ALE_ETLBox_Logging_CreateDatabaseTarget_ConnectionManager_
  commentId: Overload:ALE.ETLBox.Logging.CreateDatabaseTarget.ConnectionManager
  isSpec: "True"
  fullName: ALE.ETLBox.Logging.CreateDatabaseTarget.ConnectionManager
  nameWithType: CreateDatabaseTarget.ConnectionManager
- uid: ALE.ETLBox.Logging.CreateDatabaseTarget.ConnectionType
  name: ConnectionType
  href: api/ALE.ETLBox.Logging.CreateDatabaseTarget.html#ALE_ETLBox_Logging_CreateDatabaseTarget_ConnectionType
  commentId: P:ALE.ETLBox.Logging.CreateDatabaseTarget.ConnectionType
  fullName: ALE.ETLBox.Logging.CreateDatabaseTarget.ConnectionType
  nameWithType: CreateDatabaseTarget.ConnectionType
- uid: ALE.ETLBox.Logging.CreateDatabaseTarget.ConnectionType*
  name: ConnectionType
  href: api/ALE.ETLBox.Logging.CreateDatabaseTarget.html#ALE_ETLBox_Logging_CreateDatabaseTarget_ConnectionType_
  commentId: Overload:ALE.ETLBox.Logging.CreateDatabaseTarget.ConnectionType
  isSpec: "True"
  fullName: ALE.ETLBox.Logging.CreateDatabaseTarget.ConnectionType
  nameWithType: CreateDatabaseTarget.ConnectionType
- uid: ALE.ETLBox.Logging.CreateDatabaseTarget.GetNLogDatabaseTarget
  name: GetNLogDatabaseTarget()
  href: api/ALE.ETLBox.Logging.CreateDatabaseTarget.html#ALE_ETLBox_Logging_CreateDatabaseTarget_GetNLogDatabaseTarget
  commentId: M:ALE.ETLBox.Logging.CreateDatabaseTarget.GetNLogDatabaseTarget
  fullName: ALE.ETLBox.Logging.CreateDatabaseTarget.GetNLogDatabaseTarget()
  nameWithType: CreateDatabaseTarget.GetNLogDatabaseTarget()
- uid: ALE.ETLBox.Logging.CreateDatabaseTarget.GetNLogDatabaseTarget*
  name: GetNLogDatabaseTarget
  href: api/ALE.ETLBox.Logging.CreateDatabaseTarget.html#ALE_ETLBox_Logging_CreateDatabaseTarget_GetNLogDatabaseTarget_
  commentId: Overload:ALE.ETLBox.Logging.CreateDatabaseTarget.GetNLogDatabaseTarget
  isSpec: "True"
  fullName: ALE.ETLBox.Logging.CreateDatabaseTarget.GetNLogDatabaseTarget
  nameWithType: CreateDatabaseTarget.GetNLogDatabaseTarget
- uid: ALE.ETLBox.Logging.CreateDatabaseTarget.INT
  name: INT
  href: api/ALE.ETLBox.Logging.CreateDatabaseTarget.html#ALE_ETLBox_Logging_CreateDatabaseTarget_INT
  commentId: P:ALE.ETLBox.Logging.CreateDatabaseTarget.INT
  fullName: ALE.ETLBox.Logging.CreateDatabaseTarget.INT
  nameWithType: CreateDatabaseTarget.INT
- uid: ALE.ETLBox.Logging.CreateDatabaseTarget.INT*
  name: INT
  href: api/ALE.ETLBox.Logging.CreateDatabaseTarget.html#ALE_ETLBox_Logging_CreateDatabaseTarget_INT_
  commentId: Overload:ALE.ETLBox.Logging.CreateDatabaseTarget.INT
  isSpec: "True"
  fullName: ALE.ETLBox.Logging.CreateDatabaseTarget.INT
  nameWithType: CreateDatabaseTarget.INT
- uid: ALE.ETLBox.Logging.CreateDatabaseTarget.LogDate
  name: LogDate
  href: api/ALE.ETLBox.Logging.CreateDatabaseTarget.html#ALE_ETLBox_Logging_CreateDatabaseTarget_LogDate
  commentId: P:ALE.ETLBox.Logging.CreateDatabaseTarget.LogDate
  fullName: ALE.ETLBox.Logging.CreateDatabaseTarget.LogDate
  nameWithType: CreateDatabaseTarget.LogDate
- uid: ALE.ETLBox.Logging.CreateDatabaseTarget.LogDate*
  name: LogDate
  href: api/ALE.ETLBox.Logging.CreateDatabaseTarget.html#ALE_ETLBox_Logging_CreateDatabaseTarget_LogDate_
  commentId: Overload:ALE.ETLBox.Logging.CreateDatabaseTarget.LogDate
  isSpec: "True"
  fullName: ALE.ETLBox.Logging.CreateDatabaseTarget.LogDate
  nameWithType: CreateDatabaseTarget.LogDate
- uid: ALE.ETLBox.Logging.CreateDatabaseTarget.LogTableName
  name: LogTableName
  href: api/ALE.ETLBox.Logging.CreateDatabaseTarget.html#ALE_ETLBox_Logging_CreateDatabaseTarget_LogTableName
  commentId: P:ALE.ETLBox.Logging.CreateDatabaseTarget.LogTableName
  fullName: ALE.ETLBox.Logging.CreateDatabaseTarget.LogTableName
  nameWithType: CreateDatabaseTarget.LogTableName
- uid: ALE.ETLBox.Logging.CreateDatabaseTarget.LogTableName*
  name: LogTableName
  href: api/ALE.ETLBox.Logging.CreateDatabaseTarget.html#ALE_ETLBox_Logging_CreateDatabaseTarget_LogTableName_
  commentId: Overload:ALE.ETLBox.Logging.CreateDatabaseTarget.LogTableName
  isSpec: "True"
  fullName: ALE.ETLBox.Logging.CreateDatabaseTarget.LogTableName
  nameWithType: CreateDatabaseTarget.LogTableName
- uid: ALE.ETLBox.Logging.CreateDatabaseTarget.QB
  name: QB
  href: api/ALE.ETLBox.Logging.CreateDatabaseTarget.html#ALE_ETLBox_Logging_CreateDatabaseTarget_QB
  commentId: P:ALE.ETLBox.Logging.CreateDatabaseTarget.QB
  fullName: ALE.ETLBox.Logging.CreateDatabaseTarget.QB
  nameWithType: CreateDatabaseTarget.QB
- uid: ALE.ETLBox.Logging.CreateDatabaseTarget.QB*
  name: QB
  href: api/ALE.ETLBox.Logging.CreateDatabaseTarget.html#ALE_ETLBox_Logging_CreateDatabaseTarget_QB_
  commentId: Overload:ALE.ETLBox.Logging.CreateDatabaseTarget.QB
  isSpec: "True"
  fullName: ALE.ETLBox.Logging.CreateDatabaseTarget.QB
  nameWithType: CreateDatabaseTarget.QB
- uid: ALE.ETLBox.Logging.CreateDatabaseTarget.QE
  name: QE
  href: api/ALE.ETLBox.Logging.CreateDatabaseTarget.html#ALE_ETLBox_Logging_CreateDatabaseTarget_QE
  commentId: P:ALE.ETLBox.Logging.CreateDatabaseTarget.QE
  fullName: ALE.ETLBox.Logging.CreateDatabaseTarget.QE
  nameWithType: CreateDatabaseTarget.QE
- uid: ALE.ETLBox.Logging.CreateDatabaseTarget.QE*
  name: QE
  href: api/ALE.ETLBox.Logging.CreateDatabaseTarget.html#ALE_ETLBox_Logging_CreateDatabaseTarget_QE_
  commentId: Overload:ALE.ETLBox.Logging.CreateDatabaseTarget.QE
  isSpec: "True"
  fullName: ALE.ETLBox.Logging.CreateDatabaseTarget.QE
  nameWithType: CreateDatabaseTarget.QE
- uid: ALE.ETLBox.Logging.CreateDatabaseTarget.TN
  name: TN
  href: api/ALE.ETLBox.Logging.CreateDatabaseTarget.html#ALE_ETLBox_Logging_CreateDatabaseTarget_TN
  commentId: P:ALE.ETLBox.Logging.CreateDatabaseTarget.TN
  fullName: ALE.ETLBox.Logging.CreateDatabaseTarget.TN
  nameWithType: CreateDatabaseTarget.TN
- uid: ALE.ETLBox.Logging.CreateDatabaseTarget.TN*
  name: TN
  href: api/ALE.ETLBox.Logging.CreateDatabaseTarget.html#ALE_ETLBox_Logging_CreateDatabaseTarget_TN_
  commentId: Overload:ALE.ETLBox.Logging.CreateDatabaseTarget.TN
  isSpec: "True"
  fullName: ALE.ETLBox.Logging.CreateDatabaseTarget.TN
  nameWithType: CreateDatabaseTarget.TN
- uid: ALE.ETLBox.Logging.CreateDatabaseTarget.VARCHAR
  name: VARCHAR
  href: api/ALE.ETLBox.Logging.CreateDatabaseTarget.html#ALE_ETLBox_Logging_CreateDatabaseTarget_VARCHAR
  commentId: P:ALE.ETLBox.Logging.CreateDatabaseTarget.VARCHAR
  fullName: ALE.ETLBox.Logging.CreateDatabaseTarget.VARCHAR
  nameWithType: CreateDatabaseTarget.VARCHAR
- uid: ALE.ETLBox.Logging.CreateDatabaseTarget.VARCHAR*
  name: VARCHAR
  href: api/ALE.ETLBox.Logging.CreateDatabaseTarget.html#ALE_ETLBox_Logging_CreateDatabaseTarget_VARCHAR_
  commentId: Overload:ALE.ETLBox.Logging.CreateDatabaseTarget.VARCHAR
  isSpec: "True"
  fullName: ALE.ETLBox.Logging.CreateDatabaseTarget.VARCHAR
  nameWithType: CreateDatabaseTarget.VARCHAR
- uid: ALE.ETLBox.Logging.CreateErrorTableTask
  name: CreateErrorTableTask
  href: api/ALE.ETLBox.Logging.CreateErrorTableTask.html
  commentId: T:ALE.ETLBox.Logging.CreateErrorTableTask
  fullName: ALE.ETLBox.Logging.CreateErrorTableTask
  nameWithType: CreateErrorTableTask
- uid: ALE.ETLBox.Logging.CreateErrorTableTask.#ctor
  name: CreateErrorTableTask()
  href: api/ALE.ETLBox.Logging.CreateErrorTableTask.html#ALE_ETLBox_Logging_CreateErrorTableTask__ctor
  commentId: M:ALE.ETLBox.Logging.CreateErrorTableTask.#ctor
  fullName: ALE.ETLBox.Logging.CreateErrorTableTask.CreateErrorTableTask()
  nameWithType: CreateErrorTableTask.CreateErrorTableTask()
- uid: ALE.ETLBox.Logging.CreateErrorTableTask.#ctor(ALE.ETLBox.ConnectionManager.IConnectionManager,System.String)
  name: CreateErrorTableTask(IConnectionManager, String)
  href: api/ALE.ETLBox.Logging.CreateErrorTableTask.html#ALE_ETLBox_Logging_CreateErrorTableTask__ctor_ALE_ETLBox_ConnectionManager_IConnectionManager_System_String_
  commentId: M:ALE.ETLBox.Logging.CreateErrorTableTask.#ctor(ALE.ETLBox.ConnectionManager.IConnectionManager,System.String)
  fullName: ALE.ETLBox.Logging.CreateErrorTableTask.CreateErrorTableTask(ALE.ETLBox.ConnectionManager.IConnectionManager, System.String)
  nameWithType: CreateErrorTableTask.CreateErrorTableTask(IConnectionManager, String)
- uid: ALE.ETLBox.Logging.CreateErrorTableTask.#ctor(System.String)
  name: CreateErrorTableTask(String)
  href: api/ALE.ETLBox.Logging.CreateErrorTableTask.html#ALE_ETLBox_Logging_CreateErrorTableTask__ctor_System_String_
  commentId: M:ALE.ETLBox.Logging.CreateErrorTableTask.#ctor(System.String)
  fullName: ALE.ETLBox.Logging.CreateErrorTableTask.CreateErrorTableTask(System.String)
  nameWithType: CreateErrorTableTask.CreateErrorTableTask(String)
- uid: ALE.ETLBox.Logging.CreateErrorTableTask.#ctor*
  name: CreateErrorTableTask
  href: api/ALE.ETLBox.Logging.CreateErrorTableTask.html#ALE_ETLBox_Logging_CreateErrorTableTask__ctor_
  commentId: Overload:ALE.ETLBox.Logging.CreateErrorTableTask.#ctor
  isSpec: "True"
  fullName: ALE.ETLBox.Logging.CreateErrorTableTask.CreateErrorTableTask
  nameWithType: CreateErrorTableTask.CreateErrorTableTask
- uid: ALE.ETLBox.Logging.CreateErrorTableTask.Create(ALE.ETLBox.ConnectionManager.IConnectionManager,System.String)
  name: Create(IConnectionManager, String)
  href: api/ALE.ETLBox.Logging.CreateErrorTableTask.html#ALE_ETLBox_Logging_CreateErrorTableTask_Create_ALE_ETLBox_ConnectionManager_IConnectionManager_System_String_
  commentId: M:ALE.ETLBox.Logging.CreateErrorTableTask.Create(ALE.ETLBox.ConnectionManager.IConnectionManager,System.String)
  fullName: ALE.ETLBox.Logging.CreateErrorTableTask.Create(ALE.ETLBox.ConnectionManager.IConnectionManager, System.String)
  nameWithType: CreateErrorTableTask.Create(IConnectionManager, String)
- uid: ALE.ETLBox.Logging.CreateErrorTableTask.Create(System.String)
  name: Create(String)
  href: api/ALE.ETLBox.Logging.CreateErrorTableTask.html#ALE_ETLBox_Logging_CreateErrorTableTask_Create_System_String_
  commentId: M:ALE.ETLBox.Logging.CreateErrorTableTask.Create(System.String)
  fullName: ALE.ETLBox.Logging.CreateErrorTableTask.Create(System.String)
  nameWithType: CreateErrorTableTask.Create(String)
- uid: ALE.ETLBox.Logging.CreateErrorTableTask.Create*
  name: Create
  href: api/ALE.ETLBox.Logging.CreateErrorTableTask.html#ALE_ETLBox_Logging_CreateErrorTableTask_Create_
  commentId: Overload:ALE.ETLBox.Logging.CreateErrorTableTask.Create
  isSpec: "True"
  fullName: ALE.ETLBox.Logging.CreateErrorTableTask.Create
  nameWithType: CreateErrorTableTask.Create
- uid: ALE.ETLBox.Logging.CreateErrorTableTask.DropAndCreate(ALE.ETLBox.ConnectionManager.IConnectionManager,System.String)
  name: DropAndCreate(IConnectionManager, String)
  href: api/ALE.ETLBox.Logging.CreateErrorTableTask.html#ALE_ETLBox_Logging_CreateErrorTableTask_DropAndCreate_ALE_ETLBox_ConnectionManager_IConnectionManager_System_String_
  commentId: M:ALE.ETLBox.Logging.CreateErrorTableTask.DropAndCreate(ALE.ETLBox.ConnectionManager.IConnectionManager,System.String)
  fullName: ALE.ETLBox.Logging.CreateErrorTableTask.DropAndCreate(ALE.ETLBox.ConnectionManager.IConnectionManager, System.String)
  nameWithType: CreateErrorTableTask.DropAndCreate(IConnectionManager, String)
- uid: ALE.ETLBox.Logging.CreateErrorTableTask.DropAndCreate(System.String)
  name: DropAndCreate(String)
  href: api/ALE.ETLBox.Logging.CreateErrorTableTask.html#ALE_ETLBox_Logging_CreateErrorTableTask_DropAndCreate_System_String_
  commentId: M:ALE.ETLBox.Logging.CreateErrorTableTask.DropAndCreate(System.String)
  fullName: ALE.ETLBox.Logging.CreateErrorTableTask.DropAndCreate(System.String)
  nameWithType: CreateErrorTableTask.DropAndCreate(String)
- uid: ALE.ETLBox.Logging.CreateErrorTableTask.DropAndCreate*
  name: DropAndCreate
  href: api/ALE.ETLBox.Logging.CreateErrorTableTask.html#ALE_ETLBox_Logging_CreateErrorTableTask_DropAndCreate_
  commentId: Overload:ALE.ETLBox.Logging.CreateErrorTableTask.DropAndCreate
  isSpec: "True"
  fullName: ALE.ETLBox.Logging.CreateErrorTableTask.DropAndCreate
  nameWithType: CreateErrorTableTask.DropAndCreate
- uid: ALE.ETLBox.Logging.CreateErrorTableTask.DropAndCreateTable
  name: DropAndCreateTable
  href: api/ALE.ETLBox.Logging.CreateErrorTableTask.html#ALE_ETLBox_Logging_CreateErrorTableTask_DropAndCreateTable
  commentId: P:ALE.ETLBox.Logging.CreateErrorTableTask.DropAndCreateTable
  fullName: ALE.ETLBox.Logging.CreateErrorTableTask.DropAndCreateTable
  nameWithType: CreateErrorTableTask.DropAndCreateTable
- uid: ALE.ETLBox.Logging.CreateErrorTableTask.DropAndCreateTable*
  name: DropAndCreateTable
  href: api/ALE.ETLBox.Logging.CreateErrorTableTask.html#ALE_ETLBox_Logging_CreateErrorTableTask_DropAndCreateTable_
  commentId: Overload:ALE.ETLBox.Logging.CreateErrorTableTask.DropAndCreateTable
  isSpec: "True"
  fullName: ALE.ETLBox.Logging.CreateErrorTableTask.DropAndCreateTable
  nameWithType: CreateErrorTableTask.DropAndCreateTable
- uid: ALE.ETLBox.Logging.CreateErrorTableTask.Execute
  name: Execute()
  href: api/ALE.ETLBox.Logging.CreateErrorTableTask.html#ALE_ETLBox_Logging_CreateErrorTableTask_Execute
  commentId: M:ALE.ETLBox.Logging.CreateErrorTableTask.Execute
  fullName: ALE.ETLBox.Logging.CreateErrorTableTask.Execute()
  nameWithType: CreateErrorTableTask.Execute()
- uid: ALE.ETLBox.Logging.CreateErrorTableTask.Execute*
  name: Execute
  href: api/ALE.ETLBox.Logging.CreateErrorTableTask.html#ALE_ETLBox_Logging_CreateErrorTableTask_Execute_
  commentId: Overload:ALE.ETLBox.Logging.CreateErrorTableTask.Execute
  isSpec: "True"
  fullName: ALE.ETLBox.Logging.CreateErrorTableTask.Execute
  nameWithType: CreateErrorTableTask.Execute
- uid: ALE.ETLBox.Logging.CreateErrorTableTask.TableName
  name: TableName
  href: api/ALE.ETLBox.Logging.CreateErrorTableTask.html#ALE_ETLBox_Logging_CreateErrorTableTask_TableName
  commentId: P:ALE.ETLBox.Logging.CreateErrorTableTask.TableName
  fullName: ALE.ETLBox.Logging.CreateErrorTableTask.TableName
  nameWithType: CreateErrorTableTask.TableName
- uid: ALE.ETLBox.Logging.CreateErrorTableTask.TableName*
  name: TableName
  href: api/ALE.ETLBox.Logging.CreateErrorTableTask.html#ALE_ETLBox_Logging_CreateErrorTableTask_TableName_
  commentId: Overload:ALE.ETLBox.Logging.CreateErrorTableTask.TableName
  isSpec: "True"
  fullName: ALE.ETLBox.Logging.CreateErrorTableTask.TableName
  nameWithType: CreateErrorTableTask.TableName
- uid: ALE.ETLBox.Logging.CreateErrorTableTask.TaskName
  name: TaskName
  href: api/ALE.ETLBox.Logging.CreateErrorTableTask.html#ALE_ETLBox_Logging_CreateErrorTableTask_TaskName
  commentId: P:ALE.ETLBox.Logging.CreateErrorTableTask.TaskName
  fullName: ALE.ETLBox.Logging.CreateErrorTableTask.TaskName
  nameWithType: CreateErrorTableTask.TaskName
- uid: ALE.ETLBox.Logging.CreateErrorTableTask.TaskName*
  name: TaskName
  href: api/ALE.ETLBox.Logging.CreateErrorTableTask.html#ALE_ETLBox_Logging_CreateErrorTableTask_TaskName_
  commentId: Overload:ALE.ETLBox.Logging.CreateErrorTableTask.TaskName
  isSpec: "True"
  fullName: ALE.ETLBox.Logging.CreateErrorTableTask.TaskName
  nameWithType: CreateErrorTableTask.TaskName
- uid: ALE.ETLBox.Logging.CreateLoadProcessTableTask
  name: CreateLoadProcessTableTask
  href: api/ALE.ETLBox.Logging.CreateLoadProcessTableTask.html
  commentId: T:ALE.ETLBox.Logging.CreateLoadProcessTableTask
  fullName: ALE.ETLBox.Logging.CreateLoadProcessTableTask
  nameWithType: CreateLoadProcessTableTask
- uid: ALE.ETLBox.Logging.CreateLoadProcessTableTask.#ctor(ALE.ETLBox.ConnectionManager.IConnectionManager,System.String)
  name: CreateLoadProcessTableTask(IConnectionManager, String)
  href: api/ALE.ETLBox.Logging.CreateLoadProcessTableTask.html#ALE_ETLBox_Logging_CreateLoadProcessTableTask__ctor_ALE_ETLBox_ConnectionManager_IConnectionManager_System_String_
  commentId: M:ALE.ETLBox.Logging.CreateLoadProcessTableTask.#ctor(ALE.ETLBox.ConnectionManager.IConnectionManager,System.String)
  fullName: ALE.ETLBox.Logging.CreateLoadProcessTableTask.CreateLoadProcessTableTask(ALE.ETLBox.ConnectionManager.IConnectionManager, System.String)
  nameWithType: CreateLoadProcessTableTask.CreateLoadProcessTableTask(IConnectionManager, String)
- uid: ALE.ETLBox.Logging.CreateLoadProcessTableTask.#ctor(System.String)
  name: CreateLoadProcessTableTask(String)
  href: api/ALE.ETLBox.Logging.CreateLoadProcessTableTask.html#ALE_ETLBox_Logging_CreateLoadProcessTableTask__ctor_System_String_
  commentId: M:ALE.ETLBox.Logging.CreateLoadProcessTableTask.#ctor(System.String)
  fullName: ALE.ETLBox.Logging.CreateLoadProcessTableTask.CreateLoadProcessTableTask(System.String)
  nameWithType: CreateLoadProcessTableTask.CreateLoadProcessTableTask(String)
- uid: ALE.ETLBox.Logging.CreateLoadProcessTableTask.#ctor*
  name: CreateLoadProcessTableTask
  href: api/ALE.ETLBox.Logging.CreateLoadProcessTableTask.html#ALE_ETLBox_Logging_CreateLoadProcessTableTask__ctor_
  commentId: Overload:ALE.ETLBox.Logging.CreateLoadProcessTableTask.#ctor
  isSpec: "True"
  fullName: ALE.ETLBox.Logging.CreateLoadProcessTableTask.CreateLoadProcessTableTask
  nameWithType: CreateLoadProcessTableTask.CreateLoadProcessTableTask
- uid: ALE.ETLBox.Logging.CreateLoadProcessTableTask.Create(ALE.ETLBox.ConnectionManager.IConnectionManager,System.String)
  name: Create(IConnectionManager, String)
  href: api/ALE.ETLBox.Logging.CreateLoadProcessTableTask.html#ALE_ETLBox_Logging_CreateLoadProcessTableTask_Create_ALE_ETLBox_ConnectionManager_IConnectionManager_System_String_
  commentId: M:ALE.ETLBox.Logging.CreateLoadProcessTableTask.Create(ALE.ETLBox.ConnectionManager.IConnectionManager,System.String)
  fullName: ALE.ETLBox.Logging.CreateLoadProcessTableTask.Create(ALE.ETLBox.ConnectionManager.IConnectionManager, System.String)
  nameWithType: CreateLoadProcessTableTask.Create(IConnectionManager, String)
- uid: ALE.ETLBox.Logging.CreateLoadProcessTableTask.Create(System.String)
  name: Create(String)
  href: api/ALE.ETLBox.Logging.CreateLoadProcessTableTask.html#ALE_ETLBox_Logging_CreateLoadProcessTableTask_Create_System_String_
  commentId: M:ALE.ETLBox.Logging.CreateLoadProcessTableTask.Create(System.String)
  fullName: ALE.ETLBox.Logging.CreateLoadProcessTableTask.Create(System.String)
  nameWithType: CreateLoadProcessTableTask.Create(String)
- uid: ALE.ETLBox.Logging.CreateLoadProcessTableTask.Create*
  name: Create
  href: api/ALE.ETLBox.Logging.CreateLoadProcessTableTask.html#ALE_ETLBox_Logging_CreateLoadProcessTableTask_Create_
  commentId: Overload:ALE.ETLBox.Logging.CreateLoadProcessTableTask.Create
  isSpec: "True"
  fullName: ALE.ETLBox.Logging.CreateLoadProcessTableTask.Create
  nameWithType: CreateLoadProcessTableTask.Create
- uid: ALE.ETLBox.Logging.CreateLoadProcessTableTask.Execute
  name: Execute()
  href: api/ALE.ETLBox.Logging.CreateLoadProcessTableTask.html#ALE_ETLBox_Logging_CreateLoadProcessTableTask_Execute
  commentId: M:ALE.ETLBox.Logging.CreateLoadProcessTableTask.Execute
  fullName: ALE.ETLBox.Logging.CreateLoadProcessTableTask.Execute()
  nameWithType: CreateLoadProcessTableTask.Execute()
- uid: ALE.ETLBox.Logging.CreateLoadProcessTableTask.Execute*
  name: Execute
  href: api/ALE.ETLBox.Logging.CreateLoadProcessTableTask.html#ALE_ETLBox_Logging_CreateLoadProcessTableTask_Execute_
  commentId: Overload:ALE.ETLBox.Logging.CreateLoadProcessTableTask.Execute
  isSpec: "True"
  fullName: ALE.ETLBox.Logging.CreateLoadProcessTableTask.Execute
  nameWithType: CreateLoadProcessTableTask.Execute
- uid: ALE.ETLBox.Logging.CreateLoadProcessTableTask.LoadProcessTable
  name: LoadProcessTable
  href: api/ALE.ETLBox.Logging.CreateLoadProcessTableTask.html#ALE_ETLBox_Logging_CreateLoadProcessTableTask_LoadProcessTable
  commentId: P:ALE.ETLBox.Logging.CreateLoadProcessTableTask.LoadProcessTable
  fullName: ALE.ETLBox.Logging.CreateLoadProcessTableTask.LoadProcessTable
  nameWithType: CreateLoadProcessTableTask.LoadProcessTable
- uid: ALE.ETLBox.Logging.CreateLoadProcessTableTask.LoadProcessTable*
  name: LoadProcessTable
  href: api/ALE.ETLBox.Logging.CreateLoadProcessTableTask.html#ALE_ETLBox_Logging_CreateLoadProcessTableTask_LoadProcessTable_
  commentId: Overload:ALE.ETLBox.Logging.CreateLoadProcessTableTask.LoadProcessTable
  isSpec: "True"
  fullName: ALE.ETLBox.Logging.CreateLoadProcessTableTask.LoadProcessTable
  nameWithType: CreateLoadProcessTableTask.LoadProcessTable
- uid: ALE.ETLBox.Logging.CreateLoadProcessTableTask.LoadProcessTableName
  name: LoadProcessTableName
  href: api/ALE.ETLBox.Logging.CreateLoadProcessTableTask.html#ALE_ETLBox_Logging_CreateLoadProcessTableTask_LoadProcessTableName
  commentId: P:ALE.ETLBox.Logging.CreateLoadProcessTableTask.LoadProcessTableName
  fullName: ALE.ETLBox.Logging.CreateLoadProcessTableTask.LoadProcessTableName
  nameWithType: CreateLoadProcessTableTask.LoadProcessTableName
- uid: ALE.ETLBox.Logging.CreateLoadProcessTableTask.LoadProcessTableName*
  name: LoadProcessTableName
  href: api/ALE.ETLBox.Logging.CreateLoadProcessTableTask.html#ALE_ETLBox_Logging_CreateLoadProcessTableTask_LoadProcessTableName_
  commentId: Overload:ALE.ETLBox.Logging.CreateLoadProcessTableTask.LoadProcessTableName
  isSpec: "True"
  fullName: ALE.ETLBox.Logging.CreateLoadProcessTableTask.LoadProcessTableName
  nameWithType: CreateLoadProcessTableTask.LoadProcessTableName
- uid: ALE.ETLBox.Logging.CreateLoadProcessTableTask.Sql
  name: Sql
  href: api/ALE.ETLBox.Logging.CreateLoadProcessTableTask.html#ALE_ETLBox_Logging_CreateLoadProcessTableTask_Sql
  commentId: P:ALE.ETLBox.Logging.CreateLoadProcessTableTask.Sql
  fullName: ALE.ETLBox.Logging.CreateLoadProcessTableTask.Sql
  nameWithType: CreateLoadProcessTableTask.Sql
- uid: ALE.ETLBox.Logging.CreateLoadProcessTableTask.Sql*
  name: Sql
  href: api/ALE.ETLBox.Logging.CreateLoadProcessTableTask.html#ALE_ETLBox_Logging_CreateLoadProcessTableTask_Sql_
  commentId: Overload:ALE.ETLBox.Logging.CreateLoadProcessTableTask.Sql
  isSpec: "True"
  fullName: ALE.ETLBox.Logging.CreateLoadProcessTableTask.Sql
  nameWithType: CreateLoadProcessTableTask.Sql
- uid: ALE.ETLBox.Logging.CreateLoadProcessTableTask.TaskName
  name: TaskName
  href: api/ALE.ETLBox.Logging.CreateLoadProcessTableTask.html#ALE_ETLBox_Logging_CreateLoadProcessTableTask_TaskName
  commentId: P:ALE.ETLBox.Logging.CreateLoadProcessTableTask.TaskName
  fullName: ALE.ETLBox.Logging.CreateLoadProcessTableTask.TaskName
  nameWithType: CreateLoadProcessTableTask.TaskName
- uid: ALE.ETLBox.Logging.CreateLoadProcessTableTask.TaskName*
  name: TaskName
  href: api/ALE.ETLBox.Logging.CreateLoadProcessTableTask.html#ALE_ETLBox_Logging_CreateLoadProcessTableTask_TaskName_
  commentId: Overload:ALE.ETLBox.Logging.CreateLoadProcessTableTask.TaskName
  isSpec: "True"
  fullName: ALE.ETLBox.Logging.CreateLoadProcessTableTask.TaskName
  nameWithType: CreateLoadProcessTableTask.TaskName
- uid: ALE.ETLBox.Logging.CreateLogTableTask
  name: CreateLogTableTask
  href: api/ALE.ETLBox.Logging.CreateLogTableTask.html
  commentId: T:ALE.ETLBox.Logging.CreateLogTableTask
  fullName: ALE.ETLBox.Logging.CreateLogTableTask
  nameWithType: CreateLogTableTask
- uid: ALE.ETLBox.Logging.CreateLogTableTask.#ctor(ALE.ETLBox.ConnectionManager.IConnectionManager,System.String)
  name: CreateLogTableTask(IConnectionManager, String)
  href: api/ALE.ETLBox.Logging.CreateLogTableTask.html#ALE_ETLBox_Logging_CreateLogTableTask__ctor_ALE_ETLBox_ConnectionManager_IConnectionManager_System_String_
  commentId: M:ALE.ETLBox.Logging.CreateLogTableTask.#ctor(ALE.ETLBox.ConnectionManager.IConnectionManager,System.String)
  fullName: ALE.ETLBox.Logging.CreateLogTableTask.CreateLogTableTask(ALE.ETLBox.ConnectionManager.IConnectionManager, System.String)
  nameWithType: CreateLogTableTask.CreateLogTableTask(IConnectionManager, String)
- uid: ALE.ETLBox.Logging.CreateLogTableTask.#ctor(System.String)
  name: CreateLogTableTask(String)
  href: api/ALE.ETLBox.Logging.CreateLogTableTask.html#ALE_ETLBox_Logging_CreateLogTableTask__ctor_System_String_
  commentId: M:ALE.ETLBox.Logging.CreateLogTableTask.#ctor(System.String)
  fullName: ALE.ETLBox.Logging.CreateLogTableTask.CreateLogTableTask(System.String)
  nameWithType: CreateLogTableTask.CreateLogTableTask(String)
- uid: ALE.ETLBox.Logging.CreateLogTableTask.#ctor*
  name: CreateLogTableTask
  href: api/ALE.ETLBox.Logging.CreateLogTableTask.html#ALE_ETLBox_Logging_CreateLogTableTask__ctor_
  commentId: Overload:ALE.ETLBox.Logging.CreateLogTableTask.#ctor
  isSpec: "True"
  fullName: ALE.ETLBox.Logging.CreateLogTableTask.CreateLogTableTask
  nameWithType: CreateLogTableTask.CreateLogTableTask
- uid: ALE.ETLBox.Logging.CreateLogTableTask.Create(ALE.ETLBox.ConnectionManager.IConnectionManager,System.String)
  name: Create(IConnectionManager, String)
  href: api/ALE.ETLBox.Logging.CreateLogTableTask.html#ALE_ETLBox_Logging_CreateLogTableTask_Create_ALE_ETLBox_ConnectionManager_IConnectionManager_System_String_
  commentId: M:ALE.ETLBox.Logging.CreateLogTableTask.Create(ALE.ETLBox.ConnectionManager.IConnectionManager,System.String)
  fullName: ALE.ETLBox.Logging.CreateLogTableTask.Create(ALE.ETLBox.ConnectionManager.IConnectionManager, System.String)
  nameWithType: CreateLogTableTask.Create(IConnectionManager, String)
- uid: ALE.ETLBox.Logging.CreateLogTableTask.Create(System.String)
  name: Create(String)
  href: api/ALE.ETLBox.Logging.CreateLogTableTask.html#ALE_ETLBox_Logging_CreateLogTableTask_Create_System_String_
  commentId: M:ALE.ETLBox.Logging.CreateLogTableTask.Create(System.String)
  fullName: ALE.ETLBox.Logging.CreateLogTableTask.Create(System.String)
  nameWithType: CreateLogTableTask.Create(String)
- uid: ALE.ETLBox.Logging.CreateLogTableTask.Create*
  name: Create
  href: api/ALE.ETLBox.Logging.CreateLogTableTask.html#ALE_ETLBox_Logging_CreateLogTableTask_Create_
  commentId: Overload:ALE.ETLBox.Logging.CreateLogTableTask.Create
  isSpec: "True"
  fullName: ALE.ETLBox.Logging.CreateLogTableTask.Create
  nameWithType: CreateLogTableTask.Create
- uid: ALE.ETLBox.Logging.CreateLogTableTask.Execute
  name: Execute()
  href: api/ALE.ETLBox.Logging.CreateLogTableTask.html#ALE_ETLBox_Logging_CreateLogTableTask_Execute
  commentId: M:ALE.ETLBox.Logging.CreateLogTableTask.Execute
  fullName: ALE.ETLBox.Logging.CreateLogTableTask.Execute()
  nameWithType: CreateLogTableTask.Execute()
- uid: ALE.ETLBox.Logging.CreateLogTableTask.Execute*
  name: Execute
  href: api/ALE.ETLBox.Logging.CreateLogTableTask.html#ALE_ETLBox_Logging_CreateLogTableTask_Execute_
  commentId: Overload:ALE.ETLBox.Logging.CreateLogTableTask.Execute
  isSpec: "True"
  fullName: ALE.ETLBox.Logging.CreateLogTableTask.Execute
  nameWithType: CreateLogTableTask.Execute
- uid: ALE.ETLBox.Logging.CreateLogTableTask.LogTable
  name: LogTable
  href: api/ALE.ETLBox.Logging.CreateLogTableTask.html#ALE_ETLBox_Logging_CreateLogTableTask_LogTable
  commentId: P:ALE.ETLBox.Logging.CreateLogTableTask.LogTable
  fullName: ALE.ETLBox.Logging.CreateLogTableTask.LogTable
  nameWithType: CreateLogTableTask.LogTable
- uid: ALE.ETLBox.Logging.CreateLogTableTask.LogTable*
  name: LogTable
  href: api/ALE.ETLBox.Logging.CreateLogTableTask.html#ALE_ETLBox_Logging_CreateLogTableTask_LogTable_
  commentId: Overload:ALE.ETLBox.Logging.CreateLogTableTask.LogTable
  isSpec: "True"
  fullName: ALE.ETLBox.Logging.CreateLogTableTask.LogTable
  nameWithType: CreateLogTableTask.LogTable
- uid: ALE.ETLBox.Logging.CreateLogTableTask.LogTableName
  name: LogTableName
  href: api/ALE.ETLBox.Logging.CreateLogTableTask.html#ALE_ETLBox_Logging_CreateLogTableTask_LogTableName
  commentId: P:ALE.ETLBox.Logging.CreateLogTableTask.LogTableName
  fullName: ALE.ETLBox.Logging.CreateLogTableTask.LogTableName
  nameWithType: CreateLogTableTask.LogTableName
- uid: ALE.ETLBox.Logging.CreateLogTableTask.LogTableName*
  name: LogTableName
  href: api/ALE.ETLBox.Logging.CreateLogTableTask.html#ALE_ETLBox_Logging_CreateLogTableTask_LogTableName_
  commentId: Overload:ALE.ETLBox.Logging.CreateLogTableTask.LogTableName
  isSpec: "True"
  fullName: ALE.ETLBox.Logging.CreateLogTableTask.LogTableName
  nameWithType: CreateLogTableTask.LogTableName
- uid: ALE.ETLBox.Logging.CreateLogTableTask.Sql
  name: Sql
  href: api/ALE.ETLBox.Logging.CreateLogTableTask.html#ALE_ETLBox_Logging_CreateLogTableTask_Sql
  commentId: P:ALE.ETLBox.Logging.CreateLogTableTask.Sql
  fullName: ALE.ETLBox.Logging.CreateLogTableTask.Sql
  nameWithType: CreateLogTableTask.Sql
- uid: ALE.ETLBox.Logging.CreateLogTableTask.Sql*
  name: Sql
  href: api/ALE.ETLBox.Logging.CreateLogTableTask.html#ALE_ETLBox_Logging_CreateLogTableTask_Sql_
  commentId: Overload:ALE.ETLBox.Logging.CreateLogTableTask.Sql
  isSpec: "True"
  fullName: ALE.ETLBox.Logging.CreateLogTableTask.Sql
  nameWithType: CreateLogTableTask.Sql
- uid: ALE.ETLBox.Logging.CreateLogTableTask.TaskName
  name: TaskName
  href: api/ALE.ETLBox.Logging.CreateLogTableTask.html#ALE_ETLBox_Logging_CreateLogTableTask_TaskName
  commentId: P:ALE.ETLBox.Logging.CreateLogTableTask.TaskName
  fullName: ALE.ETLBox.Logging.CreateLogTableTask.TaskName
  nameWithType: CreateLogTableTask.TaskName
- uid: ALE.ETLBox.Logging.CreateLogTableTask.TaskName*
  name: TaskName
  href: api/ALE.ETLBox.Logging.CreateLogTableTask.html#ALE_ETLBox_Logging_CreateLogTableTask_TaskName_
  commentId: Overload:ALE.ETLBox.Logging.CreateLogTableTask.TaskName
  isSpec: "True"
  fullName: ALE.ETLBox.Logging.CreateLogTableTask.TaskName
  nameWithType: CreateLogTableTask.TaskName
- uid: ALE.ETLBox.Logging.EndLoadProcessTask
  name: EndLoadProcessTask
  href: api/ALE.ETLBox.Logging.EndLoadProcessTask.html
  commentId: T:ALE.ETLBox.Logging.EndLoadProcessTask
  fullName: ALE.ETLBox.Logging.EndLoadProcessTask
  nameWithType: EndLoadProcessTask
- uid: ALE.ETLBox.Logging.EndLoadProcessTask.#ctor
  name: EndLoadProcessTask()
  href: api/ALE.ETLBox.Logging.EndLoadProcessTask.html#ALE_ETLBox_Logging_EndLoadProcessTask__ctor
  commentId: M:ALE.ETLBox.Logging.EndLoadProcessTask.#ctor
  fullName: ALE.ETLBox.Logging.EndLoadProcessTask.EndLoadProcessTask()
  nameWithType: EndLoadProcessTask.EndLoadProcessTask()
- uid: ALE.ETLBox.Logging.EndLoadProcessTask.#ctor(System.Nullable{System.Int64})
  name: EndLoadProcessTask(Nullable<Int64>)
  href: api/ALE.ETLBox.Logging.EndLoadProcessTask.html#ALE_ETLBox_Logging_EndLoadProcessTask__ctor_System_Nullable_System_Int64__
  commentId: M:ALE.ETLBox.Logging.EndLoadProcessTask.#ctor(System.Nullable{System.Int64})
  name.vb: EndLoadProcessTask(Nullable(Of Int64))
  fullName: ALE.ETLBox.Logging.EndLoadProcessTask.EndLoadProcessTask(System.Nullable<System.Int64>)
  fullName.vb: ALE.ETLBox.Logging.EndLoadProcessTask.EndLoadProcessTask(System.Nullable(Of System.Int64))
  nameWithType: EndLoadProcessTask.EndLoadProcessTask(Nullable<Int64>)
  nameWithType.vb: EndLoadProcessTask.EndLoadProcessTask(Nullable(Of Int64))
- uid: ALE.ETLBox.Logging.EndLoadProcessTask.#ctor(System.Nullable{System.Int64},System.String)
  name: EndLoadProcessTask(Nullable<Int64>, String)
  href: api/ALE.ETLBox.Logging.EndLoadProcessTask.html#ALE_ETLBox_Logging_EndLoadProcessTask__ctor_System_Nullable_System_Int64__System_String_
  commentId: M:ALE.ETLBox.Logging.EndLoadProcessTask.#ctor(System.Nullable{System.Int64},System.String)
  name.vb: EndLoadProcessTask(Nullable(Of Int64), String)
  fullName: ALE.ETLBox.Logging.EndLoadProcessTask.EndLoadProcessTask(System.Nullable<System.Int64>, System.String)
  fullName.vb: ALE.ETLBox.Logging.EndLoadProcessTask.EndLoadProcessTask(System.Nullable(Of System.Int64), System.String)
  nameWithType: EndLoadProcessTask.EndLoadProcessTask(Nullable<Int64>, String)
  nameWithType.vb: EndLoadProcessTask.EndLoadProcessTask(Nullable(Of Int64), String)
- uid: ALE.ETLBox.Logging.EndLoadProcessTask.#ctor(System.String)
  name: EndLoadProcessTask(String)
  href: api/ALE.ETLBox.Logging.EndLoadProcessTask.html#ALE_ETLBox_Logging_EndLoadProcessTask__ctor_System_String_
  commentId: M:ALE.ETLBox.Logging.EndLoadProcessTask.#ctor(System.String)
  fullName: ALE.ETLBox.Logging.EndLoadProcessTask.EndLoadProcessTask(System.String)
  nameWithType: EndLoadProcessTask.EndLoadProcessTask(String)
- uid: ALE.ETLBox.Logging.EndLoadProcessTask.#ctor*
  name: EndLoadProcessTask
  href: api/ALE.ETLBox.Logging.EndLoadProcessTask.html#ALE_ETLBox_Logging_EndLoadProcessTask__ctor_
  commentId: Overload:ALE.ETLBox.Logging.EndLoadProcessTask.#ctor
  isSpec: "True"
  fullName: ALE.ETLBox.Logging.EndLoadProcessTask.EndLoadProcessTask
  nameWithType: EndLoadProcessTask.EndLoadProcessTask
- uid: ALE.ETLBox.Logging.EndLoadProcessTask._loadProcessId
  name: _loadProcessId
  href: api/ALE.ETLBox.Logging.EndLoadProcessTask.html#ALE_ETLBox_Logging_EndLoadProcessTask__loadProcessId
  commentId: F:ALE.ETLBox.Logging.EndLoadProcessTask._loadProcessId
  fullName: ALE.ETLBox.Logging.EndLoadProcessTask._loadProcessId
  nameWithType: EndLoadProcessTask._loadProcessId
- uid: ALE.ETLBox.Logging.EndLoadProcessTask.End
  name: End()
  href: api/ALE.ETLBox.Logging.EndLoadProcessTask.html#ALE_ETLBox_Logging_EndLoadProcessTask_End
  commentId: M:ALE.ETLBox.Logging.EndLoadProcessTask.End
  fullName: ALE.ETLBox.Logging.EndLoadProcessTask.End()
  nameWithType: EndLoadProcessTask.End()
- uid: ALE.ETLBox.Logging.EndLoadProcessTask.End(ALE.ETLBox.ConnectionManager.IConnectionManager)
  name: End(IConnectionManager)
  href: api/ALE.ETLBox.Logging.EndLoadProcessTask.html#ALE_ETLBox_Logging_EndLoadProcessTask_End_ALE_ETLBox_ConnectionManager_IConnectionManager_
  commentId: M:ALE.ETLBox.Logging.EndLoadProcessTask.End(ALE.ETLBox.ConnectionManager.IConnectionManager)
  fullName: ALE.ETLBox.Logging.EndLoadProcessTask.End(ALE.ETLBox.ConnectionManager.IConnectionManager)
  nameWithType: EndLoadProcessTask.End(IConnectionManager)
- uid: ALE.ETLBox.Logging.EndLoadProcessTask.End(ALE.ETLBox.ConnectionManager.IConnectionManager,System.Nullable{System.Int64})
  name: End(IConnectionManager, Nullable<Int64>)
  href: api/ALE.ETLBox.Logging.EndLoadProcessTask.html#ALE_ETLBox_Logging_EndLoadProcessTask_End_ALE_ETLBox_ConnectionManager_IConnectionManager_System_Nullable_System_Int64__
  commentId: M:ALE.ETLBox.Logging.EndLoadProcessTask.End(ALE.ETLBox.ConnectionManager.IConnectionManager,System.Nullable{System.Int64})
  name.vb: End(IConnectionManager, Nullable(Of Int64))
  fullName: ALE.ETLBox.Logging.EndLoadProcessTask.End(ALE.ETLBox.ConnectionManager.IConnectionManager, System.Nullable<System.Int64>)
  fullName.vb: ALE.ETLBox.Logging.EndLoadProcessTask.End(ALE.ETLBox.ConnectionManager.IConnectionManager, System.Nullable(Of System.Int64))
  nameWithType: EndLoadProcessTask.End(IConnectionManager, Nullable<Int64>)
  nameWithType.vb: EndLoadProcessTask.End(IConnectionManager, Nullable(Of Int64))
- uid: ALE.ETLBox.Logging.EndLoadProcessTask.End(ALE.ETLBox.ConnectionManager.IConnectionManager,System.Nullable{System.Int64},System.String)
  name: End(IConnectionManager, Nullable<Int64>, String)
  href: api/ALE.ETLBox.Logging.EndLoadProcessTask.html#ALE_ETLBox_Logging_EndLoadProcessTask_End_ALE_ETLBox_ConnectionManager_IConnectionManager_System_Nullable_System_Int64__System_String_
  commentId: M:ALE.ETLBox.Logging.EndLoadProcessTask.End(ALE.ETLBox.ConnectionManager.IConnectionManager,System.Nullable{System.Int64},System.String)
  name.vb: End(IConnectionManager, Nullable(Of Int64), String)
  fullName: ALE.ETLBox.Logging.EndLoadProcessTask.End(ALE.ETLBox.ConnectionManager.IConnectionManager, System.Nullable<System.Int64>, System.String)
  fullName.vb: ALE.ETLBox.Logging.EndLoadProcessTask.End(ALE.ETLBox.ConnectionManager.IConnectionManager, System.Nullable(Of System.Int64), System.String)
  nameWithType: EndLoadProcessTask.End(IConnectionManager, Nullable<Int64>, String)
  nameWithType.vb: EndLoadProcessTask.End(IConnectionManager, Nullable(Of Int64), String)
- uid: ALE.ETLBox.Logging.EndLoadProcessTask.End(ALE.ETLBox.ConnectionManager.IConnectionManager,System.String)
  name: End(IConnectionManager, String)
  href: api/ALE.ETLBox.Logging.EndLoadProcessTask.html#ALE_ETLBox_Logging_EndLoadProcessTask_End_ALE_ETLBox_ConnectionManager_IConnectionManager_System_String_
  commentId: M:ALE.ETLBox.Logging.EndLoadProcessTask.End(ALE.ETLBox.ConnectionManager.IConnectionManager,System.String)
  fullName: ALE.ETLBox.Logging.EndLoadProcessTask.End(ALE.ETLBox.ConnectionManager.IConnectionManager, System.String)
  nameWithType: EndLoadProcessTask.End(IConnectionManager, String)
- uid: ALE.ETLBox.Logging.EndLoadProcessTask.End(System.Nullable{System.Int64})
  name: End(Nullable<Int64>)
  href: api/ALE.ETLBox.Logging.EndLoadProcessTask.html#ALE_ETLBox_Logging_EndLoadProcessTask_End_System_Nullable_System_Int64__
  commentId: M:ALE.ETLBox.Logging.EndLoadProcessTask.End(System.Nullable{System.Int64})
  name.vb: End(Nullable(Of Int64))
  fullName: ALE.ETLBox.Logging.EndLoadProcessTask.End(System.Nullable<System.Int64>)
  fullName.vb: ALE.ETLBox.Logging.EndLoadProcessTask.End(System.Nullable(Of System.Int64))
  nameWithType: EndLoadProcessTask.End(Nullable<Int64>)
  nameWithType.vb: EndLoadProcessTask.End(Nullable(Of Int64))
- uid: ALE.ETLBox.Logging.EndLoadProcessTask.End(System.Nullable{System.Int64},System.String)
  name: End(Nullable<Int64>, String)
  href: api/ALE.ETLBox.Logging.EndLoadProcessTask.html#ALE_ETLBox_Logging_EndLoadProcessTask_End_System_Nullable_System_Int64__System_String_
  commentId: M:ALE.ETLBox.Logging.EndLoadProcessTask.End(System.Nullable{System.Int64},System.String)
  name.vb: End(Nullable(Of Int64), String)
  fullName: ALE.ETLBox.Logging.EndLoadProcessTask.End(System.Nullable<System.Int64>, System.String)
  fullName.vb: ALE.ETLBox.Logging.EndLoadProcessTask.End(System.Nullable(Of System.Int64), System.String)
  nameWithType: EndLoadProcessTask.End(Nullable<Int64>, String)
  nameWithType.vb: EndLoadProcessTask.End(Nullable(Of Int64), String)
- uid: ALE.ETLBox.Logging.EndLoadProcessTask.End(System.String)
  name: End(String)
  href: api/ALE.ETLBox.Logging.EndLoadProcessTask.html#ALE_ETLBox_Logging_EndLoadProcessTask_End_System_String_
  commentId: M:ALE.ETLBox.Logging.EndLoadProcessTask.End(System.String)
  fullName: ALE.ETLBox.Logging.EndLoadProcessTask.End(System.String)
  nameWithType: EndLoadProcessTask.End(String)
- uid: ALE.ETLBox.Logging.EndLoadProcessTask.End*
  name: End
  href: api/ALE.ETLBox.Logging.EndLoadProcessTask.html#ALE_ETLBox_Logging_EndLoadProcessTask_End_
  commentId: Overload:ALE.ETLBox.Logging.EndLoadProcessTask.End
  isSpec: "True"
  fullName: ALE.ETLBox.Logging.EndLoadProcessTask.End
  nameWithType: EndLoadProcessTask.End
- uid: ALE.ETLBox.Logging.EndLoadProcessTask.EndMessage
  name: EndMessage
  href: api/ALE.ETLBox.Logging.EndLoadProcessTask.html#ALE_ETLBox_Logging_EndLoadProcessTask_EndMessage
  commentId: P:ALE.ETLBox.Logging.EndLoadProcessTask.EndMessage
  fullName: ALE.ETLBox.Logging.EndLoadProcessTask.EndMessage
  nameWithType: EndLoadProcessTask.EndMessage
- uid: ALE.ETLBox.Logging.EndLoadProcessTask.EndMessage*
  name: EndMessage
  href: api/ALE.ETLBox.Logging.EndLoadProcessTask.html#ALE_ETLBox_Logging_EndLoadProcessTask_EndMessage_
  commentId: Overload:ALE.ETLBox.Logging.EndLoadProcessTask.EndMessage
  isSpec: "True"
  fullName: ALE.ETLBox.Logging.EndLoadProcessTask.EndMessage
  nameWithType: EndLoadProcessTask.EndMessage
- uid: ALE.ETLBox.Logging.EndLoadProcessTask.Execute
  name: Execute()
  href: api/ALE.ETLBox.Logging.EndLoadProcessTask.html#ALE_ETLBox_Logging_EndLoadProcessTask_Execute
  commentId: M:ALE.ETLBox.Logging.EndLoadProcessTask.Execute
  fullName: ALE.ETLBox.Logging.EndLoadProcessTask.Execute()
  nameWithType: EndLoadProcessTask.Execute()
- uid: ALE.ETLBox.Logging.EndLoadProcessTask.Execute*
  name: Execute
  href: api/ALE.ETLBox.Logging.EndLoadProcessTask.html#ALE_ETLBox_Logging_EndLoadProcessTask_Execute_
  commentId: Overload:ALE.ETLBox.Logging.EndLoadProcessTask.Execute
  isSpec: "True"
  fullName: ALE.ETLBox.Logging.EndLoadProcessTask.Execute
  nameWithType: EndLoadProcessTask.Execute
- uid: ALE.ETLBox.Logging.EndLoadProcessTask.LoadProcessId
  name: LoadProcessId
  href: api/ALE.ETLBox.Logging.EndLoadProcessTask.html#ALE_ETLBox_Logging_EndLoadProcessTask_LoadProcessId
  commentId: P:ALE.ETLBox.Logging.EndLoadProcessTask.LoadProcessId
  fullName: ALE.ETLBox.Logging.EndLoadProcessTask.LoadProcessId
  nameWithType: EndLoadProcessTask.LoadProcessId
- uid: ALE.ETLBox.Logging.EndLoadProcessTask.LoadProcessId*
  name: LoadProcessId
  href: api/ALE.ETLBox.Logging.EndLoadProcessTask.html#ALE_ETLBox_Logging_EndLoadProcessTask_LoadProcessId_
  commentId: Overload:ALE.ETLBox.Logging.EndLoadProcessTask.LoadProcessId
  isSpec: "True"
  fullName: ALE.ETLBox.Logging.EndLoadProcessTask.LoadProcessId
  nameWithType: EndLoadProcessTask.LoadProcessId
- uid: ALE.ETLBox.Logging.EndLoadProcessTask.Sql
  name: Sql
  href: api/ALE.ETLBox.Logging.EndLoadProcessTask.html#ALE_ETLBox_Logging_EndLoadProcessTask_Sql
  commentId: P:ALE.ETLBox.Logging.EndLoadProcessTask.Sql
  fullName: ALE.ETLBox.Logging.EndLoadProcessTask.Sql
  nameWithType: EndLoadProcessTask.Sql
- uid: ALE.ETLBox.Logging.EndLoadProcessTask.Sql*
  name: Sql
  href: api/ALE.ETLBox.Logging.EndLoadProcessTask.html#ALE_ETLBox_Logging_EndLoadProcessTask_Sql_
  commentId: Overload:ALE.ETLBox.Logging.EndLoadProcessTask.Sql
  isSpec: "True"
  fullName: ALE.ETLBox.Logging.EndLoadProcessTask.Sql
  nameWithType: EndLoadProcessTask.Sql
- uid: ALE.ETLBox.Logging.EndLoadProcessTask.TaskName
  name: TaskName
  href: api/ALE.ETLBox.Logging.EndLoadProcessTask.html#ALE_ETLBox_Logging_EndLoadProcessTask_TaskName
  commentId: P:ALE.ETLBox.Logging.EndLoadProcessTask.TaskName
  fullName: ALE.ETLBox.Logging.EndLoadProcessTask.TaskName
  nameWithType: EndLoadProcessTask.TaskName
- uid: ALE.ETLBox.Logging.EndLoadProcessTask.TaskName*
  name: TaskName
  href: api/ALE.ETLBox.Logging.EndLoadProcessTask.html#ALE_ETLBox_Logging_EndLoadProcessTask_TaskName_
  commentId: Overload:ALE.ETLBox.Logging.EndLoadProcessTask.TaskName
  isSpec: "True"
  fullName: ALE.ETLBox.Logging.EndLoadProcessTask.TaskName
  nameWithType: EndLoadProcessTask.TaskName
- uid: ALE.ETLBox.Logging.ETLLogLayoutRenderer
  name: ETLLogLayoutRenderer
  href: api/ALE.ETLBox.Logging.ETLLogLayoutRenderer.html
  commentId: T:ALE.ETLBox.Logging.ETLLogLayoutRenderer
  fullName: ALE.ETLBox.Logging.ETLLogLayoutRenderer
  nameWithType: ETLLogLayoutRenderer
- uid: ALE.ETLBox.Logging.ETLLogLayoutRenderer.Append(System.Text.StringBuilder,NLog.LogEventInfo)
  name: Append(StringBuilder, LogEventInfo)
  href: api/ALE.ETLBox.Logging.ETLLogLayoutRenderer.html#ALE_ETLBox_Logging_ETLLogLayoutRenderer_Append_System_Text_StringBuilder_NLog_LogEventInfo_
  commentId: M:ALE.ETLBox.Logging.ETLLogLayoutRenderer.Append(System.Text.StringBuilder,NLog.LogEventInfo)
  fullName: ALE.ETLBox.Logging.ETLLogLayoutRenderer.Append(System.Text.StringBuilder, NLog.LogEventInfo)
  nameWithType: ETLLogLayoutRenderer.Append(StringBuilder, LogEventInfo)
- uid: ALE.ETLBox.Logging.ETLLogLayoutRenderer.Append*
  name: Append
  href: api/ALE.ETLBox.Logging.ETLLogLayoutRenderer.html#ALE_ETLBox_Logging_ETLLogLayoutRenderer_Append_
  commentId: Overload:ALE.ETLBox.Logging.ETLLogLayoutRenderer.Append
  isSpec: "True"
  fullName: ALE.ETLBox.Logging.ETLLogLayoutRenderer.Append
  nameWithType: ETLLogLayoutRenderer.Append
- uid: ALE.ETLBox.Logging.ETLLogLayoutRenderer.LogType
  name: LogType
  href: api/ALE.ETLBox.Logging.ETLLogLayoutRenderer.html#ALE_ETLBox_Logging_ETLLogLayoutRenderer_LogType
  commentId: P:ALE.ETLBox.Logging.ETLLogLayoutRenderer.LogType
  fullName: ALE.ETLBox.Logging.ETLLogLayoutRenderer.LogType
  nameWithType: ETLLogLayoutRenderer.LogType
- uid: ALE.ETLBox.Logging.ETLLogLayoutRenderer.LogType*
  name: LogType
  href: api/ALE.ETLBox.Logging.ETLLogLayoutRenderer.html#ALE_ETLBox_Logging_ETLLogLayoutRenderer_LogType_
  commentId: Overload:ALE.ETLBox.Logging.ETLLogLayoutRenderer.LogType
  isSpec: "True"
  fullName: ALE.ETLBox.Logging.ETLLogLayoutRenderer.LogType
  nameWithType: ETLLogLayoutRenderer.LogType
- uid: ALE.ETLBox.Logging.GetLoadProcessAsJSONTask
  name: GetLoadProcessAsJSONTask
  href: api/ALE.ETLBox.Logging.GetLoadProcessAsJSONTask.html
  commentId: T:ALE.ETLBox.Logging.GetLoadProcessAsJSONTask
  fullName: ALE.ETLBox.Logging.GetLoadProcessAsJSONTask
  nameWithType: GetLoadProcessAsJSONTask
- uid: ALE.ETLBox.Logging.GetLoadProcessAsJSONTask.#ctor
  name: GetLoadProcessAsJSONTask()
  href: api/ALE.ETLBox.Logging.GetLoadProcessAsJSONTask.html#ALE_ETLBox_Logging_GetLoadProcessAsJSONTask__ctor
  commentId: M:ALE.ETLBox.Logging.GetLoadProcessAsJSONTask.#ctor
  fullName: ALE.ETLBox.Logging.GetLoadProcessAsJSONTask.GetLoadProcessAsJSONTask()
  nameWithType: GetLoadProcessAsJSONTask.GetLoadProcessAsJSONTask()
- uid: ALE.ETLBox.Logging.GetLoadProcessAsJSONTask.#ctor*
  name: GetLoadProcessAsJSONTask
  href: api/ALE.ETLBox.Logging.GetLoadProcessAsJSONTask.html#ALE_ETLBox_Logging_GetLoadProcessAsJSONTask__ctor_
  commentId: Overload:ALE.ETLBox.Logging.GetLoadProcessAsJSONTask.#ctor
  isSpec: "True"
  fullName: ALE.ETLBox.Logging.GetLoadProcessAsJSONTask.GetLoadProcessAsJSONTask
  nameWithType: GetLoadProcessAsJSONTask.GetLoadProcessAsJSONTask
- uid: ALE.ETLBox.Logging.GetLoadProcessAsJSONTask.Create
  name: Create()
  href: api/ALE.ETLBox.Logging.GetLoadProcessAsJSONTask.html#ALE_ETLBox_Logging_GetLoadProcessAsJSONTask_Create
  commentId: M:ALE.ETLBox.Logging.GetLoadProcessAsJSONTask.Create
  fullName: ALE.ETLBox.Logging.GetLoadProcessAsJSONTask.Create()
  nameWithType: GetLoadProcessAsJSONTask.Create()
- uid: ALE.ETLBox.Logging.GetLoadProcessAsJSONTask.Create*
  name: Create
  href: api/ALE.ETLBox.Logging.GetLoadProcessAsJSONTask.html#ALE_ETLBox_Logging_GetLoadProcessAsJSONTask_Create_
  commentId: Overload:ALE.ETLBox.Logging.GetLoadProcessAsJSONTask.Create
  isSpec: "True"
  fullName: ALE.ETLBox.Logging.GetLoadProcessAsJSONTask.Create
  nameWithType: GetLoadProcessAsJSONTask.Create
- uid: ALE.ETLBox.Logging.GetLoadProcessAsJSONTask.Execute
  name: Execute()
  href: api/ALE.ETLBox.Logging.GetLoadProcessAsJSONTask.html#ALE_ETLBox_Logging_GetLoadProcessAsJSONTask_Execute
  commentId: M:ALE.ETLBox.Logging.GetLoadProcessAsJSONTask.Execute
  fullName: ALE.ETLBox.Logging.GetLoadProcessAsJSONTask.Execute()
  nameWithType: GetLoadProcessAsJSONTask.Execute()
- uid: ALE.ETLBox.Logging.GetLoadProcessAsJSONTask.Execute*
  name: Execute
  href: api/ALE.ETLBox.Logging.GetLoadProcessAsJSONTask.html#ALE_ETLBox_Logging_GetLoadProcessAsJSONTask_Execute_
  commentId: Overload:ALE.ETLBox.Logging.GetLoadProcessAsJSONTask.Execute
  isSpec: "True"
  fullName: ALE.ETLBox.Logging.GetLoadProcessAsJSONTask.Execute
  nameWithType: GetLoadProcessAsJSONTask.Execute
- uid: ALE.ETLBox.Logging.GetLoadProcessAsJSONTask.GetJSON
  name: GetJSON()
  href: api/ALE.ETLBox.Logging.GetLoadProcessAsJSONTask.html#ALE_ETLBox_Logging_GetLoadProcessAsJSONTask_GetJSON
  commentId: M:ALE.ETLBox.Logging.GetLoadProcessAsJSONTask.GetJSON
  fullName: ALE.ETLBox.Logging.GetLoadProcessAsJSONTask.GetJSON()
  nameWithType: GetLoadProcessAsJSONTask.GetJSON()
- uid: ALE.ETLBox.Logging.GetLoadProcessAsJSONTask.GetJSON(ALE.ETLBox.ConnectionManager.IConnectionManager)
  name: GetJSON(IConnectionManager)
  href: api/ALE.ETLBox.Logging.GetLoadProcessAsJSONTask.html#ALE_ETLBox_Logging_GetLoadProcessAsJSONTask_GetJSON_ALE_ETLBox_ConnectionManager_IConnectionManager_
  commentId: M:ALE.ETLBox.Logging.GetLoadProcessAsJSONTask.GetJSON(ALE.ETLBox.ConnectionManager.IConnectionManager)
  fullName: ALE.ETLBox.Logging.GetLoadProcessAsJSONTask.GetJSON(ALE.ETLBox.ConnectionManager.IConnectionManager)
  nameWithType: GetLoadProcessAsJSONTask.GetJSON(IConnectionManager)
- uid: ALE.ETLBox.Logging.GetLoadProcessAsJSONTask.GetJSON*
  name: GetJSON
  href: api/ALE.ETLBox.Logging.GetLoadProcessAsJSONTask.html#ALE_ETLBox_Logging_GetLoadProcessAsJSONTask_GetJSON_
  commentId: Overload:ALE.ETLBox.Logging.GetLoadProcessAsJSONTask.GetJSON
  isSpec: "True"
  fullName: ALE.ETLBox.Logging.GetLoadProcessAsJSONTask.GetJSON
  nameWithType: GetLoadProcessAsJSONTask.GetJSON
- uid: ALE.ETLBox.Logging.GetLoadProcessAsJSONTask.JSON
  name: JSON
  href: api/ALE.ETLBox.Logging.GetLoadProcessAsJSONTask.html#ALE_ETLBox_Logging_GetLoadProcessAsJSONTask_JSON
  commentId: P:ALE.ETLBox.Logging.GetLoadProcessAsJSONTask.JSON
  fullName: ALE.ETLBox.Logging.GetLoadProcessAsJSONTask.JSON
  nameWithType: GetLoadProcessAsJSONTask.JSON
- uid: ALE.ETLBox.Logging.GetLoadProcessAsJSONTask.JSON*
  name: JSON
  href: api/ALE.ETLBox.Logging.GetLoadProcessAsJSONTask.html#ALE_ETLBox_Logging_GetLoadProcessAsJSONTask_JSON_
  commentId: Overload:ALE.ETLBox.Logging.GetLoadProcessAsJSONTask.JSON
  isSpec: "True"
  fullName: ALE.ETLBox.Logging.GetLoadProcessAsJSONTask.JSON
  nameWithType: GetLoadProcessAsJSONTask.JSON
- uid: ALE.ETLBox.Logging.GetLoadProcessAsJSONTask.TaskName
  name: TaskName
  href: api/ALE.ETLBox.Logging.GetLoadProcessAsJSONTask.html#ALE_ETLBox_Logging_GetLoadProcessAsJSONTask_TaskName
  commentId: P:ALE.ETLBox.Logging.GetLoadProcessAsJSONTask.TaskName
  fullName: ALE.ETLBox.Logging.GetLoadProcessAsJSONTask.TaskName
  nameWithType: GetLoadProcessAsJSONTask.TaskName
- uid: ALE.ETLBox.Logging.GetLoadProcessAsJSONTask.TaskName*
  name: TaskName
  href: api/ALE.ETLBox.Logging.GetLoadProcessAsJSONTask.html#ALE_ETLBox_Logging_GetLoadProcessAsJSONTask_TaskName_
  commentId: Overload:ALE.ETLBox.Logging.GetLoadProcessAsJSONTask.TaskName
  isSpec: "True"
  fullName: ALE.ETLBox.Logging.GetLoadProcessAsJSONTask.TaskName
  nameWithType: GetLoadProcessAsJSONTask.TaskName
- uid: ALE.ETLBox.Logging.GetLogAsJSONTask
  name: GetLogAsJSONTask
  href: api/ALE.ETLBox.Logging.GetLogAsJSONTask.html
  commentId: T:ALE.ETLBox.Logging.GetLogAsJSONTask
  fullName: ALE.ETLBox.Logging.GetLogAsJSONTask
  nameWithType: GetLogAsJSONTask
- uid: ALE.ETLBox.Logging.GetLogAsJSONTask.#ctor
  name: GetLogAsJSONTask()
  href: api/ALE.ETLBox.Logging.GetLogAsJSONTask.html#ALE_ETLBox_Logging_GetLogAsJSONTask__ctor
  commentId: M:ALE.ETLBox.Logging.GetLogAsJSONTask.#ctor
  fullName: ALE.ETLBox.Logging.GetLogAsJSONTask.GetLogAsJSONTask()
  nameWithType: GetLogAsJSONTask.GetLogAsJSONTask()
- uid: ALE.ETLBox.Logging.GetLogAsJSONTask.#ctor(System.Nullable{System.Int64})
  name: GetLogAsJSONTask(Nullable<Int64>)
  href: api/ALE.ETLBox.Logging.GetLogAsJSONTask.html#ALE_ETLBox_Logging_GetLogAsJSONTask__ctor_System_Nullable_System_Int64__
  commentId: M:ALE.ETLBox.Logging.GetLogAsJSONTask.#ctor(System.Nullable{System.Int64})
  name.vb: GetLogAsJSONTask(Nullable(Of Int64))
  fullName: ALE.ETLBox.Logging.GetLogAsJSONTask.GetLogAsJSONTask(System.Nullable<System.Int64>)
  fullName.vb: ALE.ETLBox.Logging.GetLogAsJSONTask.GetLogAsJSONTask(System.Nullable(Of System.Int64))
  nameWithType: GetLogAsJSONTask.GetLogAsJSONTask(Nullable<Int64>)
  nameWithType.vb: GetLogAsJSONTask.GetLogAsJSONTask(Nullable(Of Int64))
- uid: ALE.ETLBox.Logging.GetLogAsJSONTask.#ctor*
  name: GetLogAsJSONTask
  href: api/ALE.ETLBox.Logging.GetLogAsJSONTask.html#ALE_ETLBox_Logging_GetLogAsJSONTask__ctor_
  commentId: Overload:ALE.ETLBox.Logging.GetLogAsJSONTask.#ctor
  isSpec: "True"
  fullName: ALE.ETLBox.Logging.GetLogAsJSONTask.GetLogAsJSONTask
  nameWithType: GetLogAsJSONTask.GetLogAsJSONTask
- uid: ALE.ETLBox.Logging.GetLogAsJSONTask._loadProcessKey
  name: _loadProcessKey
  href: api/ALE.ETLBox.Logging.GetLogAsJSONTask.html#ALE_ETLBox_Logging_GetLogAsJSONTask__loadProcessKey
  commentId: F:ALE.ETLBox.Logging.GetLogAsJSONTask._loadProcessKey
  fullName: ALE.ETLBox.Logging.GetLogAsJSONTask._loadProcessKey
  nameWithType: GetLogAsJSONTask._loadProcessKey
- uid: ALE.ETLBox.Logging.GetLogAsJSONTask.ContainerTypes
  name: ContainerTypes
  href: api/ALE.ETLBox.Logging.GetLogAsJSONTask.html#ALE_ETLBox_Logging_GetLogAsJSONTask_ContainerTypes
  commentId: P:ALE.ETLBox.Logging.GetLogAsJSONTask.ContainerTypes
  fullName: ALE.ETLBox.Logging.GetLogAsJSONTask.ContainerTypes
  nameWithType: GetLogAsJSONTask.ContainerTypes
- uid: ALE.ETLBox.Logging.GetLogAsJSONTask.ContainerTypes*
  name: ContainerTypes
  href: api/ALE.ETLBox.Logging.GetLogAsJSONTask.html#ALE_ETLBox_Logging_GetLogAsJSONTask_ContainerTypes_
  commentId: Overload:ALE.ETLBox.Logging.GetLogAsJSONTask.ContainerTypes
  isSpec: "True"
  fullName: ALE.ETLBox.Logging.GetLogAsJSONTask.ContainerTypes
  nameWithType: GetLogAsJSONTask.ContainerTypes
- uid: ALE.ETLBox.Logging.GetLogAsJSONTask.Create
  name: Create()
  href: api/ALE.ETLBox.Logging.GetLogAsJSONTask.html#ALE_ETLBox_Logging_GetLogAsJSONTask_Create
  commentId: M:ALE.ETLBox.Logging.GetLogAsJSONTask.Create
  fullName: ALE.ETLBox.Logging.GetLogAsJSONTask.Create()
  nameWithType: GetLogAsJSONTask.Create()
- uid: ALE.ETLBox.Logging.GetLogAsJSONTask.Create*
  name: Create
  href: api/ALE.ETLBox.Logging.GetLogAsJSONTask.html#ALE_ETLBox_Logging_GetLogAsJSONTask_Create_
  commentId: Overload:ALE.ETLBox.Logging.GetLogAsJSONTask.Create
  isSpec: "True"
  fullName: ALE.ETLBox.Logging.GetLogAsJSONTask.Create
  nameWithType: GetLogAsJSONTask.Create
- uid: ALE.ETLBox.Logging.GetLogAsJSONTask.Execute
  name: Execute()
  href: api/ALE.ETLBox.Logging.GetLogAsJSONTask.html#ALE_ETLBox_Logging_GetLogAsJSONTask_Execute
  commentId: M:ALE.ETLBox.Logging.GetLogAsJSONTask.Execute
  fullName: ALE.ETLBox.Logging.GetLogAsJSONTask.Execute()
  nameWithType: GetLogAsJSONTask.Execute()
- uid: ALE.ETLBox.Logging.GetLogAsJSONTask.Execute*
  name: Execute
  href: api/ALE.ETLBox.Logging.GetLogAsJSONTask.html#ALE_ETLBox_Logging_GetLogAsJSONTask_Execute_
  commentId: Overload:ALE.ETLBox.Logging.GetLogAsJSONTask.Execute
  isSpec: "True"
  fullName: ALE.ETLBox.Logging.GetLogAsJSONTask.Execute
  nameWithType: GetLogAsJSONTask.Execute
- uid: ALE.ETLBox.Logging.GetLogAsJSONTask.GetJSON
  name: GetJSON()
  href: api/ALE.ETLBox.Logging.GetLogAsJSONTask.html#ALE_ETLBox_Logging_GetLogAsJSONTask_GetJSON
  commentId: M:ALE.ETLBox.Logging.GetLogAsJSONTask.GetJSON
  fullName: ALE.ETLBox.Logging.GetLogAsJSONTask.GetJSON()
  nameWithType: GetLogAsJSONTask.GetJSON()
- uid: ALE.ETLBox.Logging.GetLogAsJSONTask.GetJSON(ALE.ETLBox.ConnectionManager.IConnectionManager)
  name: GetJSON(IConnectionManager)
  href: api/ALE.ETLBox.Logging.GetLogAsJSONTask.html#ALE_ETLBox_Logging_GetLogAsJSONTask_GetJSON_ALE_ETLBox_ConnectionManager_IConnectionManager_
  commentId: M:ALE.ETLBox.Logging.GetLogAsJSONTask.GetJSON(ALE.ETLBox.ConnectionManager.IConnectionManager)
  fullName: ALE.ETLBox.Logging.GetLogAsJSONTask.GetJSON(ALE.ETLBox.ConnectionManager.IConnectionManager)
  nameWithType: GetLogAsJSONTask.GetJSON(IConnectionManager)
- uid: ALE.ETLBox.Logging.GetLogAsJSONTask.GetJSON(ALE.ETLBox.ConnectionManager.IConnectionManager,System.Nullable{System.Int32})
  name: GetJSON(IConnectionManager, Nullable<Int32>)
  href: api/ALE.ETLBox.Logging.GetLogAsJSONTask.html#ALE_ETLBox_Logging_GetLogAsJSONTask_GetJSON_ALE_ETLBox_ConnectionManager_IConnectionManager_System_Nullable_System_Int32__
  commentId: M:ALE.ETLBox.Logging.GetLogAsJSONTask.GetJSON(ALE.ETLBox.ConnectionManager.IConnectionManager,System.Nullable{System.Int32})
  name.vb: GetJSON(IConnectionManager, Nullable(Of Int32))
  fullName: ALE.ETLBox.Logging.GetLogAsJSONTask.GetJSON(ALE.ETLBox.ConnectionManager.IConnectionManager, System.Nullable<System.Int32>)
  fullName.vb: ALE.ETLBox.Logging.GetLogAsJSONTask.GetJSON(ALE.ETLBox.ConnectionManager.IConnectionManager, System.Nullable(Of System.Int32))
  nameWithType: GetLogAsJSONTask.GetJSON(IConnectionManager, Nullable<Int32>)
  nameWithType.vb: GetLogAsJSONTask.GetJSON(IConnectionManager, Nullable(Of Int32))
- uid: ALE.ETLBox.Logging.GetLogAsJSONTask.GetJSON(System.Nullable{System.Int64})
  name: GetJSON(Nullable<Int64>)
  href: api/ALE.ETLBox.Logging.GetLogAsJSONTask.html#ALE_ETLBox_Logging_GetLogAsJSONTask_GetJSON_System_Nullable_System_Int64__
  commentId: M:ALE.ETLBox.Logging.GetLogAsJSONTask.GetJSON(System.Nullable{System.Int64})
  name.vb: GetJSON(Nullable(Of Int64))
  fullName: ALE.ETLBox.Logging.GetLogAsJSONTask.GetJSON(System.Nullable<System.Int64>)
  fullName.vb: ALE.ETLBox.Logging.GetLogAsJSONTask.GetJSON(System.Nullable(Of System.Int64))
  nameWithType: GetLogAsJSONTask.GetJSON(Nullable<Int64>)
  nameWithType.vb: GetLogAsJSONTask.GetJSON(Nullable(Of Int64))
- uid: ALE.ETLBox.Logging.GetLogAsJSONTask.GetJSON*
  name: GetJSON
  href: api/ALE.ETLBox.Logging.GetLogAsJSONTask.html#ALE_ETLBox_Logging_GetLogAsJSONTask_GetJSON_
  commentId: Overload:ALE.ETLBox.Logging.GetLogAsJSONTask.GetJSON
  isSpec: "True"
  fullName: ALE.ETLBox.Logging.GetLogAsJSONTask.GetJSON
  nameWithType: GetLogAsJSONTask.GetJSON
- uid: ALE.ETLBox.Logging.GetLogAsJSONTask.JSON
  name: JSON
  href: api/ALE.ETLBox.Logging.GetLogAsJSONTask.html#ALE_ETLBox_Logging_GetLogAsJSONTask_JSON
  commentId: P:ALE.ETLBox.Logging.GetLogAsJSONTask.JSON
  fullName: ALE.ETLBox.Logging.GetLogAsJSONTask.JSON
  nameWithType: GetLogAsJSONTask.JSON
- uid: ALE.ETLBox.Logging.GetLogAsJSONTask.JSON*
  name: JSON
  href: api/ALE.ETLBox.Logging.GetLogAsJSONTask.html#ALE_ETLBox_Logging_GetLogAsJSONTask_JSON_
  commentId: Overload:ALE.ETLBox.Logging.GetLogAsJSONTask.JSON
  isSpec: "True"
  fullName: ALE.ETLBox.Logging.GetLogAsJSONTask.JSON
  nameWithType: GetLogAsJSONTask.JSON
- uid: ALE.ETLBox.Logging.GetLogAsJSONTask.LoadProcessKey
  name: LoadProcessKey
  href: api/ALE.ETLBox.Logging.GetLogAsJSONTask.html#ALE_ETLBox_Logging_GetLogAsJSONTask_LoadProcessKey
  commentId: P:ALE.ETLBox.Logging.GetLogAsJSONTask.LoadProcessKey
  fullName: ALE.ETLBox.Logging.GetLogAsJSONTask.LoadProcessKey
  nameWithType: GetLogAsJSONTask.LoadProcessKey
- uid: ALE.ETLBox.Logging.GetLogAsJSONTask.LoadProcessKey*
  name: LoadProcessKey
  href: api/ALE.ETLBox.Logging.GetLogAsJSONTask.html#ALE_ETLBox_Logging_GetLogAsJSONTask_LoadProcessKey_
  commentId: Overload:ALE.ETLBox.Logging.GetLogAsJSONTask.LoadProcessKey
  isSpec: "True"
  fullName: ALE.ETLBox.Logging.GetLogAsJSONTask.LoadProcessKey
  nameWithType: GetLogAsJSONTask.LoadProcessKey
- uid: ALE.ETLBox.Logging.GetLogAsJSONTask.LogEntryHierarchy
  name: LogEntryHierarchy
  href: api/ALE.ETLBox.Logging.GetLogAsJSONTask.html#ALE_ETLBox_Logging_GetLogAsJSONTask_LogEntryHierarchy
  commentId: P:ALE.ETLBox.Logging.GetLogAsJSONTask.LogEntryHierarchy
  fullName: ALE.ETLBox.Logging.GetLogAsJSONTask.LogEntryHierarchy
  nameWithType: GetLogAsJSONTask.LogEntryHierarchy
- uid: ALE.ETLBox.Logging.GetLogAsJSONTask.LogEntryHierarchy*
  name: LogEntryHierarchy
  href: api/ALE.ETLBox.Logging.GetLogAsJSONTask.html#ALE_ETLBox_Logging_GetLogAsJSONTask_LogEntryHierarchy_
  commentId: Overload:ALE.ETLBox.Logging.GetLogAsJSONTask.LogEntryHierarchy
  isSpec: "True"
  fullName: ALE.ETLBox.Logging.GetLogAsJSONTask.LogEntryHierarchy
  nameWithType: GetLogAsJSONTask.LogEntryHierarchy
- uid: ALE.ETLBox.Logging.GetLogAsJSONTask.TaskName
  name: TaskName
  href: api/ALE.ETLBox.Logging.GetLogAsJSONTask.html#ALE_ETLBox_Logging_GetLogAsJSONTask_TaskName
  commentId: P:ALE.ETLBox.Logging.GetLogAsJSONTask.TaskName
  fullName: ALE.ETLBox.Logging.GetLogAsJSONTask.TaskName
  nameWithType: GetLogAsJSONTask.TaskName
- uid: ALE.ETLBox.Logging.GetLogAsJSONTask.TaskName*
  name: TaskName
  href: api/ALE.ETLBox.Logging.GetLogAsJSONTask.html#ALE_ETLBox_Logging_GetLogAsJSONTask_TaskName_
  commentId: Overload:ALE.ETLBox.Logging.GetLogAsJSONTask.TaskName
  isSpec: "True"
  fullName: ALE.ETLBox.Logging.GetLogAsJSONTask.TaskName
  nameWithType: GetLogAsJSONTask.TaskName
- uid: ALE.ETLBox.Logging.LoadProcess
  name: LoadProcess
  href: api/ALE.ETLBox.Logging.LoadProcess.html
  commentId: T:ALE.ETLBox.Logging.LoadProcess
  fullName: ALE.ETLBox.Logging.LoadProcess
  nameWithType: LoadProcess
- uid: ALE.ETLBox.Logging.LoadProcess.AbortMessage
  name: AbortMessage
  href: api/ALE.ETLBox.Logging.LoadProcess.html#ALE_ETLBox_Logging_LoadProcess_AbortMessage
  commentId: P:ALE.ETLBox.Logging.LoadProcess.AbortMessage
  fullName: ALE.ETLBox.Logging.LoadProcess.AbortMessage
  nameWithType: LoadProcess.AbortMessage
- uid: ALE.ETLBox.Logging.LoadProcess.AbortMessage*
  name: AbortMessage
  href: api/ALE.ETLBox.Logging.LoadProcess.html#ALE_ETLBox_Logging_LoadProcess_AbortMessage_
  commentId: Overload:ALE.ETLBox.Logging.LoadProcess.AbortMessage
  isSpec: "True"
  fullName: ALE.ETLBox.Logging.LoadProcess.AbortMessage
  nameWithType: LoadProcess.AbortMessage
- uid: ALE.ETLBox.Logging.LoadProcess.EndDate
  name: EndDate
  href: api/ALE.ETLBox.Logging.LoadProcess.html#ALE_ETLBox_Logging_LoadProcess_EndDate
  commentId: P:ALE.ETLBox.Logging.LoadProcess.EndDate
  fullName: ALE.ETLBox.Logging.LoadProcess.EndDate
  nameWithType: LoadProcess.EndDate
- uid: ALE.ETLBox.Logging.LoadProcess.EndDate*
  name: EndDate
  href: api/ALE.ETLBox.Logging.LoadProcess.html#ALE_ETLBox_Logging_LoadProcess_EndDate_
  commentId: Overload:ALE.ETLBox.Logging.LoadProcess.EndDate
  isSpec: "True"
  fullName: ALE.ETLBox.Logging.LoadProcess.EndDate
  nameWithType: LoadProcess.EndDate
- uid: ALE.ETLBox.Logging.LoadProcess.EndMessage
  name: EndMessage
  href: api/ALE.ETLBox.Logging.LoadProcess.html#ALE_ETLBox_Logging_LoadProcess_EndMessage
  commentId: P:ALE.ETLBox.Logging.LoadProcess.EndMessage
  fullName: ALE.ETLBox.Logging.LoadProcess.EndMessage
  nameWithType: LoadProcess.EndMessage
- uid: ALE.ETLBox.Logging.LoadProcess.EndMessage*
  name: EndMessage
  href: api/ALE.ETLBox.Logging.LoadProcess.html#ALE_ETLBox_Logging_LoadProcess_EndMessage_
  commentId: Overload:ALE.ETLBox.Logging.LoadProcess.EndMessage
  isSpec: "True"
  fullName: ALE.ETLBox.Logging.LoadProcess.EndMessage
  nameWithType: LoadProcess.EndMessage
- uid: ALE.ETLBox.Logging.LoadProcess.Id
  name: Id
  href: api/ALE.ETLBox.Logging.LoadProcess.html#ALE_ETLBox_Logging_LoadProcess_Id
  commentId: P:ALE.ETLBox.Logging.LoadProcess.Id
  fullName: ALE.ETLBox.Logging.LoadProcess.Id
  nameWithType: LoadProcess.Id
- uid: ALE.ETLBox.Logging.LoadProcess.Id*
  name: Id
  href: api/ALE.ETLBox.Logging.LoadProcess.html#ALE_ETLBox_Logging_LoadProcess_Id_
  commentId: Overload:ALE.ETLBox.Logging.LoadProcess.Id
  isSpec: "True"
  fullName: ALE.ETLBox.Logging.LoadProcess.Id
  nameWithType: LoadProcess.Id
- uid: ALE.ETLBox.Logging.LoadProcess.IsFinished
  name: IsFinished
  href: api/ALE.ETLBox.Logging.LoadProcess.html#ALE_ETLBox_Logging_LoadProcess_IsFinished
  commentId: P:ALE.ETLBox.Logging.LoadProcess.IsFinished
  fullName: ALE.ETLBox.Logging.LoadProcess.IsFinished
  nameWithType: LoadProcess.IsFinished
- uid: ALE.ETLBox.Logging.LoadProcess.IsFinished*
  name: IsFinished
  href: api/ALE.ETLBox.Logging.LoadProcess.html#ALE_ETLBox_Logging_LoadProcess_IsFinished_
  commentId: Overload:ALE.ETLBox.Logging.LoadProcess.IsFinished
  isSpec: "True"
  fullName: ALE.ETLBox.Logging.LoadProcess.IsFinished
  nameWithType: LoadProcess.IsFinished
- uid: ALE.ETLBox.Logging.LoadProcess.IsRunning
  name: IsRunning
  href: api/ALE.ETLBox.Logging.LoadProcess.html#ALE_ETLBox_Logging_LoadProcess_IsRunning
  commentId: P:ALE.ETLBox.Logging.LoadProcess.IsRunning
  fullName: ALE.ETLBox.Logging.LoadProcess.IsRunning
  nameWithType: LoadProcess.IsRunning
- uid: ALE.ETLBox.Logging.LoadProcess.IsRunning*
  name: IsRunning
  href: api/ALE.ETLBox.Logging.LoadProcess.html#ALE_ETLBox_Logging_LoadProcess_IsRunning_
  commentId: Overload:ALE.ETLBox.Logging.LoadProcess.IsRunning
  isSpec: "True"
  fullName: ALE.ETLBox.Logging.LoadProcess.IsRunning
  nameWithType: LoadProcess.IsRunning
- uid: ALE.ETLBox.Logging.LoadProcess.ProcessName
  name: ProcessName
  href: api/ALE.ETLBox.Logging.LoadProcess.html#ALE_ETLBox_Logging_LoadProcess_ProcessName
  commentId: P:ALE.ETLBox.Logging.LoadProcess.ProcessName
  fullName: ALE.ETLBox.Logging.LoadProcess.ProcessName
  nameWithType: LoadProcess.ProcessName
- uid: ALE.ETLBox.Logging.LoadProcess.ProcessName*
  name: ProcessName
  href: api/ALE.ETLBox.Logging.LoadProcess.html#ALE_ETLBox_Logging_LoadProcess_ProcessName_
  commentId: Overload:ALE.ETLBox.Logging.LoadProcess.ProcessName
  isSpec: "True"
  fullName: ALE.ETLBox.Logging.LoadProcess.ProcessName
  nameWithType: LoadProcess.ProcessName
- uid: ALE.ETLBox.Logging.LoadProcess.Source
  name: Source
  href: api/ALE.ETLBox.Logging.LoadProcess.html#ALE_ETLBox_Logging_LoadProcess_Source
  commentId: P:ALE.ETLBox.Logging.LoadProcess.Source
  fullName: ALE.ETLBox.Logging.LoadProcess.Source
  nameWithType: LoadProcess.Source
- uid: ALE.ETLBox.Logging.LoadProcess.Source*
  name: Source
  href: api/ALE.ETLBox.Logging.LoadProcess.html#ALE_ETLBox_Logging_LoadProcess_Source_
  commentId: Overload:ALE.ETLBox.Logging.LoadProcess.Source
  isSpec: "True"
  fullName: ALE.ETLBox.Logging.LoadProcess.Source
  nameWithType: LoadProcess.Source
- uid: ALE.ETLBox.Logging.LoadProcess.StartDate
  name: StartDate
  href: api/ALE.ETLBox.Logging.LoadProcess.html#ALE_ETLBox_Logging_LoadProcess_StartDate
  commentId: P:ALE.ETLBox.Logging.LoadProcess.StartDate
  fullName: ALE.ETLBox.Logging.LoadProcess.StartDate
  nameWithType: LoadProcess.StartDate
- uid: ALE.ETLBox.Logging.LoadProcess.StartDate*
  name: StartDate
  href: api/ALE.ETLBox.Logging.LoadProcess.html#ALE_ETLBox_Logging_LoadProcess_StartDate_
  commentId: Overload:ALE.ETLBox.Logging.LoadProcess.StartDate
  isSpec: "True"
  fullName: ALE.ETLBox.Logging.LoadProcess.StartDate
  nameWithType: LoadProcess.StartDate
- uid: ALE.ETLBox.Logging.LoadProcess.StartMessage
  name: StartMessage
  href: api/ALE.ETLBox.Logging.LoadProcess.html#ALE_ETLBox_Logging_LoadProcess_StartMessage
  commentId: P:ALE.ETLBox.Logging.LoadProcess.StartMessage
  fullName: ALE.ETLBox.Logging.LoadProcess.StartMessage
  nameWithType: LoadProcess.StartMessage
- uid: ALE.ETLBox.Logging.LoadProcess.StartMessage*
  name: StartMessage
  href: api/ALE.ETLBox.Logging.LoadProcess.html#ALE_ETLBox_Logging_LoadProcess_StartMessage_
  commentId: Overload:ALE.ETLBox.Logging.LoadProcess.StartMessage
  isSpec: "True"
  fullName: ALE.ETLBox.Logging.LoadProcess.StartMessage
  nameWithType: LoadProcess.StartMessage
- uid: ALE.ETLBox.Logging.LoadProcess.WasAborted
  name: WasAborted
  href: api/ALE.ETLBox.Logging.LoadProcess.html#ALE_ETLBox_Logging_LoadProcess_WasAborted
  commentId: P:ALE.ETLBox.Logging.LoadProcess.WasAborted
  fullName: ALE.ETLBox.Logging.LoadProcess.WasAborted
  nameWithType: LoadProcess.WasAborted
- uid: ALE.ETLBox.Logging.LoadProcess.WasAborted*
  name: WasAborted
  href: api/ALE.ETLBox.Logging.LoadProcess.html#ALE_ETLBox_Logging_LoadProcess_WasAborted_
  commentId: Overload:ALE.ETLBox.Logging.LoadProcess.WasAborted
  isSpec: "True"
  fullName: ALE.ETLBox.Logging.LoadProcess.WasAborted
  nameWithType: LoadProcess.WasAborted
- uid: ALE.ETLBox.Logging.LoadProcess.WasSuccessful
  name: WasSuccessful
  href: api/ALE.ETLBox.Logging.LoadProcess.html#ALE_ETLBox_Logging_LoadProcess_WasSuccessful
  commentId: P:ALE.ETLBox.Logging.LoadProcess.WasSuccessful
  fullName: ALE.ETLBox.Logging.LoadProcess.WasSuccessful
  nameWithType: LoadProcess.WasSuccessful
- uid: ALE.ETLBox.Logging.LoadProcess.WasSuccessful*
  name: WasSuccessful
  href: api/ALE.ETLBox.Logging.LoadProcess.html#ALE_ETLBox_Logging_LoadProcess_WasSuccessful_
  commentId: Overload:ALE.ETLBox.Logging.LoadProcess.WasSuccessful
  isSpec: "True"
  fullName: ALE.ETLBox.Logging.LoadProcess.WasSuccessful
  nameWithType: LoadProcess.WasSuccessful
- uid: ALE.ETLBox.Logging.LogEntry
  name: LogEntry
  href: api/ALE.ETLBox.Logging.LogEntry.html
  commentId: T:ALE.ETLBox.Logging.LogEntry
  fullName: ALE.ETLBox.Logging.LogEntry
  nameWithType: LogEntry
- uid: ALE.ETLBox.Logging.LogEntry.EndDate
  name: EndDate
  href: api/ALE.ETLBox.Logging.LogEntry.html#ALE_ETLBox_Logging_LogEntry_EndDate
  commentId: P:ALE.ETLBox.Logging.LogEntry.EndDate
  fullName: ALE.ETLBox.Logging.LogEntry.EndDate
  nameWithType: LogEntry.EndDate
- uid: ALE.ETLBox.Logging.LogEntry.EndDate*
  name: EndDate
  href: api/ALE.ETLBox.Logging.LogEntry.html#ALE_ETLBox_Logging_LogEntry_EndDate_
  commentId: Overload:ALE.ETLBox.Logging.LogEntry.EndDate
  isSpec: "True"
  fullName: ALE.ETLBox.Logging.LogEntry.EndDate
  nameWithType: LogEntry.EndDate
- uid: ALE.ETLBox.Logging.LogEntry.Id
  name: Id
  href: api/ALE.ETLBox.Logging.LogEntry.html#ALE_ETLBox_Logging_LogEntry_Id
  commentId: P:ALE.ETLBox.Logging.LogEntry.Id
  fullName: ALE.ETLBox.Logging.LogEntry.Id
  nameWithType: LogEntry.Id
- uid: ALE.ETLBox.Logging.LogEntry.Id*
  name: Id
  href: api/ALE.ETLBox.Logging.LogEntry.html#ALE_ETLBox_Logging_LogEntry_Id_
  commentId: Overload:ALE.ETLBox.Logging.LogEntry.Id
  isSpec: "True"
  fullName: ALE.ETLBox.Logging.LogEntry.Id
  nameWithType: LogEntry.Id
- uid: ALE.ETLBox.Logging.LogEntry.Level
  name: Level
  href: api/ALE.ETLBox.Logging.LogEntry.html#ALE_ETLBox_Logging_LogEntry_Level
  commentId: P:ALE.ETLBox.Logging.LogEntry.Level
  fullName: ALE.ETLBox.Logging.LogEntry.Level
  nameWithType: LogEntry.Level
- uid: ALE.ETLBox.Logging.LogEntry.Level*
  name: Level
  href: api/ALE.ETLBox.Logging.LogEntry.html#ALE_ETLBox_Logging_LogEntry_Level_
  commentId: Overload:ALE.ETLBox.Logging.LogEntry.Level
  isSpec: "True"
  fullName: ALE.ETLBox.Logging.LogEntry.Level
  nameWithType: LogEntry.Level
- uid: ALE.ETLBox.Logging.LogEntry.LoadProcessId
  name: LoadProcessId
  href: api/ALE.ETLBox.Logging.LogEntry.html#ALE_ETLBox_Logging_LogEntry_LoadProcessId
  commentId: P:ALE.ETLBox.Logging.LogEntry.LoadProcessId
  fullName: ALE.ETLBox.Logging.LogEntry.LoadProcessId
  nameWithType: LogEntry.LoadProcessId
- uid: ALE.ETLBox.Logging.LogEntry.LoadProcessId*
  name: LoadProcessId
  href: api/ALE.ETLBox.Logging.LogEntry.html#ALE_ETLBox_Logging_LogEntry_LoadProcessId_
  commentId: Overload:ALE.ETLBox.Logging.LogEntry.LoadProcessId
  isSpec: "True"
  fullName: ALE.ETLBox.Logging.LogEntry.LoadProcessId
  nameWithType: LogEntry.LoadProcessId
- uid: ALE.ETLBox.Logging.LogEntry.LogDate
  name: LogDate
  href: api/ALE.ETLBox.Logging.LogEntry.html#ALE_ETLBox_Logging_LogEntry_LogDate
  commentId: P:ALE.ETLBox.Logging.LogEntry.LogDate
  fullName: ALE.ETLBox.Logging.LogEntry.LogDate
  nameWithType: LogEntry.LogDate
- uid: ALE.ETLBox.Logging.LogEntry.LogDate*
  name: LogDate
  href: api/ALE.ETLBox.Logging.LogEntry.html#ALE_ETLBox_Logging_LogEntry_LogDate_
  commentId: Overload:ALE.ETLBox.Logging.LogEntry.LogDate
  isSpec: "True"
  fullName: ALE.ETLBox.Logging.LogEntry.LogDate
  nameWithType: LogEntry.LogDate
- uid: ALE.ETLBox.Logging.LogEntry.Message
  name: Message
  href: api/ALE.ETLBox.Logging.LogEntry.html#ALE_ETLBox_Logging_LogEntry_Message
  commentId: P:ALE.ETLBox.Logging.LogEntry.Message
  fullName: ALE.ETLBox.Logging.LogEntry.Message
  nameWithType: LogEntry.Message
- uid: ALE.ETLBox.Logging.LogEntry.Message*
  name: Message
  href: api/ALE.ETLBox.Logging.LogEntry.html#ALE_ETLBox_Logging_LogEntry_Message_
  commentId: Overload:ALE.ETLBox.Logging.LogEntry.Message
  isSpec: "True"
  fullName: ALE.ETLBox.Logging.LogEntry.Message
  nameWithType: LogEntry.Message
- uid: ALE.ETLBox.Logging.LogEntry.Source
  name: Source
  href: api/ALE.ETLBox.Logging.LogEntry.html#ALE_ETLBox_Logging_LogEntry_Source
  commentId: P:ALE.ETLBox.Logging.LogEntry.Source
  fullName: ALE.ETLBox.Logging.LogEntry.Source
  nameWithType: LogEntry.Source
- uid: ALE.ETLBox.Logging.LogEntry.Source*
  name: Source
  href: api/ALE.ETLBox.Logging.LogEntry.html#ALE_ETLBox_Logging_LogEntry_Source_
  commentId: Overload:ALE.ETLBox.Logging.LogEntry.Source
  isSpec: "True"
  fullName: ALE.ETLBox.Logging.LogEntry.Source
  nameWithType: LogEntry.Source
- uid: ALE.ETLBox.Logging.LogEntry.Stage
  name: Stage
  href: api/ALE.ETLBox.Logging.LogEntry.html#ALE_ETLBox_Logging_LogEntry_Stage
  commentId: P:ALE.ETLBox.Logging.LogEntry.Stage
  fullName: ALE.ETLBox.Logging.LogEntry.Stage
  nameWithType: LogEntry.Stage
- uid: ALE.ETLBox.Logging.LogEntry.Stage*
  name: Stage
  href: api/ALE.ETLBox.Logging.LogEntry.html#ALE_ETLBox_Logging_LogEntry_Stage_
  commentId: Overload:ALE.ETLBox.Logging.LogEntry.Stage
  isSpec: "True"
  fullName: ALE.ETLBox.Logging.LogEntry.Stage
  nameWithType: LogEntry.Stage
- uid: ALE.ETLBox.Logging.LogEntry.StartDate
  name: StartDate
  href: api/ALE.ETLBox.Logging.LogEntry.html#ALE_ETLBox_Logging_LogEntry_StartDate
  commentId: P:ALE.ETLBox.Logging.LogEntry.StartDate
  fullName: ALE.ETLBox.Logging.LogEntry.StartDate
  nameWithType: LogEntry.StartDate
- uid: ALE.ETLBox.Logging.LogEntry.StartDate*
  name: StartDate
  href: api/ALE.ETLBox.Logging.LogEntry.html#ALE_ETLBox_Logging_LogEntry_StartDate_
  commentId: Overload:ALE.ETLBox.Logging.LogEntry.StartDate
  isSpec: "True"
  fullName: ALE.ETLBox.Logging.LogEntry.StartDate
  nameWithType: LogEntry.StartDate
- uid: ALE.ETLBox.Logging.LogEntry.TaskAction
  name: TaskAction
  href: api/ALE.ETLBox.Logging.LogEntry.html#ALE_ETLBox_Logging_LogEntry_TaskAction
  commentId: P:ALE.ETLBox.Logging.LogEntry.TaskAction
  fullName: ALE.ETLBox.Logging.LogEntry.TaskAction
  nameWithType: LogEntry.TaskAction
- uid: ALE.ETLBox.Logging.LogEntry.TaskAction*
  name: TaskAction
  href: api/ALE.ETLBox.Logging.LogEntry.html#ALE_ETLBox_Logging_LogEntry_TaskAction_
  commentId: Overload:ALE.ETLBox.Logging.LogEntry.TaskAction
  isSpec: "True"
  fullName: ALE.ETLBox.Logging.LogEntry.TaskAction
  nameWithType: LogEntry.TaskAction
- uid: ALE.ETLBox.Logging.LogEntry.TaskHash
  name: TaskHash
  href: api/ALE.ETLBox.Logging.LogEntry.html#ALE_ETLBox_Logging_LogEntry_TaskHash
  commentId: P:ALE.ETLBox.Logging.LogEntry.TaskHash
  fullName: ALE.ETLBox.Logging.LogEntry.TaskHash
  nameWithType: LogEntry.TaskHash
- uid: ALE.ETLBox.Logging.LogEntry.TaskHash*
  name: TaskHash
  href: api/ALE.ETLBox.Logging.LogEntry.html#ALE_ETLBox_Logging_LogEntry_TaskHash_
  commentId: Overload:ALE.ETLBox.Logging.LogEntry.TaskHash
  isSpec: "True"
  fullName: ALE.ETLBox.Logging.LogEntry.TaskHash
  nameWithType: LogEntry.TaskHash
- uid: ALE.ETLBox.Logging.LogEntry.TaskType
  name: TaskType
  href: api/ALE.ETLBox.Logging.LogEntry.html#ALE_ETLBox_Logging_LogEntry_TaskType
  commentId: P:ALE.ETLBox.Logging.LogEntry.TaskType
  fullName: ALE.ETLBox.Logging.LogEntry.TaskType
  nameWithType: LogEntry.TaskType
- uid: ALE.ETLBox.Logging.LogEntry.TaskType*
  name: TaskType
  href: api/ALE.ETLBox.Logging.LogEntry.html#ALE_ETLBox_Logging_LogEntry_TaskType_
  commentId: Overload:ALE.ETLBox.Logging.LogEntry.TaskType
  isSpec: "True"
  fullName: ALE.ETLBox.Logging.LogEntry.TaskType
  nameWithType: LogEntry.TaskType
- uid: ALE.ETLBox.Logging.LogHierarchyEntry
  name: LogHierarchyEntry
  href: api/ALE.ETLBox.Logging.LogHierarchyEntry.html
  commentId: T:ALE.ETLBox.Logging.LogHierarchyEntry
  fullName: ALE.ETLBox.Logging.LogHierarchyEntry
  nameWithType: LogHierarchyEntry
- uid: ALE.ETLBox.Logging.LogHierarchyEntry.#ctor
  name: LogHierarchyEntry()
  href: api/ALE.ETLBox.Logging.LogHierarchyEntry.html#ALE_ETLBox_Logging_LogHierarchyEntry__ctor
  commentId: M:ALE.ETLBox.Logging.LogHierarchyEntry.#ctor
  fullName: ALE.ETLBox.Logging.LogHierarchyEntry.LogHierarchyEntry()
  nameWithType: LogHierarchyEntry.LogHierarchyEntry()
- uid: ALE.ETLBox.Logging.LogHierarchyEntry.#ctor(ALE.ETLBox.Logging.LogEntry)
  name: LogHierarchyEntry(LogEntry)
  href: api/ALE.ETLBox.Logging.LogHierarchyEntry.html#ALE_ETLBox_Logging_LogHierarchyEntry__ctor_ALE_ETLBox_Logging_LogEntry_
  commentId: M:ALE.ETLBox.Logging.LogHierarchyEntry.#ctor(ALE.ETLBox.Logging.LogEntry)
  fullName: ALE.ETLBox.Logging.LogHierarchyEntry.LogHierarchyEntry(ALE.ETLBox.Logging.LogEntry)
  nameWithType: LogHierarchyEntry.LogHierarchyEntry(LogEntry)
- uid: ALE.ETLBox.Logging.LogHierarchyEntry.#ctor*
  name: LogHierarchyEntry
  href: api/ALE.ETLBox.Logging.LogHierarchyEntry.html#ALE_ETLBox_Logging_LogHierarchyEntry__ctor_
  commentId: Overload:ALE.ETLBox.Logging.LogHierarchyEntry.#ctor
  isSpec: "True"
  fullName: ALE.ETLBox.Logging.LogHierarchyEntry.LogHierarchyEntry
  nameWithType: LogHierarchyEntry.LogHierarchyEntry
- uid: ALE.ETLBox.Logging.LogHierarchyEntry.Children
  name: Children
  href: api/ALE.ETLBox.Logging.LogHierarchyEntry.html#ALE_ETLBox_Logging_LogHierarchyEntry_Children
  commentId: P:ALE.ETLBox.Logging.LogHierarchyEntry.Children
  fullName: ALE.ETLBox.Logging.LogHierarchyEntry.Children
  nameWithType: LogHierarchyEntry.Children
- uid: ALE.ETLBox.Logging.LogHierarchyEntry.Children*
  name: Children
  href: api/ALE.ETLBox.Logging.LogHierarchyEntry.html#ALE_ETLBox_Logging_LogHierarchyEntry_Children_
  commentId: Overload:ALE.ETLBox.Logging.LogHierarchyEntry.Children
  isSpec: "True"
  fullName: ALE.ETLBox.Logging.LogHierarchyEntry.Children
  nameWithType: LogHierarchyEntry.Children
- uid: ALE.ETLBox.Logging.LogHierarchyEntry.Parent
  name: Parent
  href: api/ALE.ETLBox.Logging.LogHierarchyEntry.html#ALE_ETLBox_Logging_LogHierarchyEntry_Parent
  commentId: P:ALE.ETLBox.Logging.LogHierarchyEntry.Parent
  fullName: ALE.ETLBox.Logging.LogHierarchyEntry.Parent
  nameWithType: LogHierarchyEntry.Parent
- uid: ALE.ETLBox.Logging.LogHierarchyEntry.Parent*
  name: Parent
  href: api/ALE.ETLBox.Logging.LogHierarchyEntry.html#ALE_ETLBox_Logging_LogHierarchyEntry_Parent_
  commentId: Overload:ALE.ETLBox.Logging.LogHierarchyEntry.Parent
  isSpec: "True"
  fullName: ALE.ETLBox.Logging.LogHierarchyEntry.Parent
  nameWithType: LogHierarchyEntry.Parent
- uid: ALE.ETLBox.Logging.LogTask
  name: LogTask
  href: api/ALE.ETLBox.Logging.LogTask.html
  commentId: T:ALE.ETLBox.Logging.LogTask
  fullName: ALE.ETLBox.Logging.LogTask
  nameWithType: LogTask
- uid: ALE.ETLBox.Logging.LogTask.#ctor
  name: LogTask()
  href: api/ALE.ETLBox.Logging.LogTask.html#ALE_ETLBox_Logging_LogTask__ctor
  commentId: M:ALE.ETLBox.Logging.LogTask.#ctor
  fullName: ALE.ETLBox.Logging.LogTask.LogTask()
  nameWithType: LogTask.LogTask()
- uid: ALE.ETLBox.Logging.LogTask.#ctor(System.String)
  name: LogTask(String)
  href: api/ALE.ETLBox.Logging.LogTask.html#ALE_ETLBox_Logging_LogTask__ctor_System_String_
  commentId: M:ALE.ETLBox.Logging.LogTask.#ctor(System.String)
  fullName: ALE.ETLBox.Logging.LogTask.LogTask(System.String)
  nameWithType: LogTask.LogTask(String)
- uid: ALE.ETLBox.Logging.LogTask.#ctor*
  name: LogTask
  href: api/ALE.ETLBox.Logging.LogTask.html#ALE_ETLBox_Logging_LogTask__ctor_
  commentId: Overload:ALE.ETLBox.Logging.LogTask.#ctor
  isSpec: "True"
  fullName: ALE.ETLBox.Logging.LogTask.LogTask
  nameWithType: LogTask.LogTask
- uid: ALE.ETLBox.Logging.LogTask.Debug
  name: Debug()
  href: api/ALE.ETLBox.Logging.LogTask.html#ALE_ETLBox_Logging_LogTask_Debug
  commentId: M:ALE.ETLBox.Logging.LogTask.Debug
  fullName: ALE.ETLBox.Logging.LogTask.Debug()
  nameWithType: LogTask.Debug()
- uid: ALE.ETLBox.Logging.LogTask.Debug(ALE.ETLBox.ConnectionManager.IConnectionManager,System.String)
  name: Debug(IConnectionManager, String)
  href: api/ALE.ETLBox.Logging.LogTask.html#ALE_ETLBox_Logging_LogTask_Debug_ALE_ETLBox_ConnectionManager_IConnectionManager_System_String_
  commentId: M:ALE.ETLBox.Logging.LogTask.Debug(ALE.ETLBox.ConnectionManager.IConnectionManager,System.String)
  fullName: ALE.ETLBox.Logging.LogTask.Debug(ALE.ETLBox.ConnectionManager.IConnectionManager, System.String)
  nameWithType: LogTask.Debug(IConnectionManager, String)
- uid: ALE.ETLBox.Logging.LogTask.Debug(System.String)
  name: Debug(String)
  href: api/ALE.ETLBox.Logging.LogTask.html#ALE_ETLBox_Logging_LogTask_Debug_System_String_
  commentId: M:ALE.ETLBox.Logging.LogTask.Debug(System.String)
  fullName: ALE.ETLBox.Logging.LogTask.Debug(System.String)
  nameWithType: LogTask.Debug(String)
- uid: ALE.ETLBox.Logging.LogTask.Debug*
  name: Debug
  href: api/ALE.ETLBox.Logging.LogTask.html#ALE_ETLBox_Logging_LogTask_Debug_
  commentId: Overload:ALE.ETLBox.Logging.LogTask.Debug
  isSpec: "True"
  fullName: ALE.ETLBox.Logging.LogTask.Debug
  nameWithType: LogTask.Debug
- uid: ALE.ETLBox.Logging.LogTask.Error
  name: Error()
  href: api/ALE.ETLBox.Logging.LogTask.html#ALE_ETLBox_Logging_LogTask_Error
  commentId: M:ALE.ETLBox.Logging.LogTask.Error
  fullName: ALE.ETLBox.Logging.LogTask.Error()
  nameWithType: LogTask.Error()
- uid: ALE.ETLBox.Logging.LogTask.Error(ALE.ETLBox.ConnectionManager.IConnectionManager,System.String)
  name: Error(IConnectionManager, String)
  href: api/ALE.ETLBox.Logging.LogTask.html#ALE_ETLBox_Logging_LogTask_Error_ALE_ETLBox_ConnectionManager_IConnectionManager_System_String_
  commentId: M:ALE.ETLBox.Logging.LogTask.Error(ALE.ETLBox.ConnectionManager.IConnectionManager,System.String)
  fullName: ALE.ETLBox.Logging.LogTask.Error(ALE.ETLBox.ConnectionManager.IConnectionManager, System.String)
  nameWithType: LogTask.Error(IConnectionManager, String)
- uid: ALE.ETLBox.Logging.LogTask.Error(System.String)
  name: Error(String)
  href: api/ALE.ETLBox.Logging.LogTask.html#ALE_ETLBox_Logging_LogTask_Error_System_String_
  commentId: M:ALE.ETLBox.Logging.LogTask.Error(System.String)
  fullName: ALE.ETLBox.Logging.LogTask.Error(System.String)
  nameWithType: LogTask.Error(String)
- uid: ALE.ETLBox.Logging.LogTask.Error*
  name: Error
  href: api/ALE.ETLBox.Logging.LogTask.html#ALE_ETLBox_Logging_LogTask_Error_
  commentId: Overload:ALE.ETLBox.Logging.LogTask.Error
  isSpec: "True"
  fullName: ALE.ETLBox.Logging.LogTask.Error
  nameWithType: LogTask.Error
- uid: ALE.ETLBox.Logging.LogTask.Execute
  name: Execute()
  href: api/ALE.ETLBox.Logging.LogTask.html#ALE_ETLBox_Logging_LogTask_Execute
  commentId: M:ALE.ETLBox.Logging.LogTask.Execute
  fullName: ALE.ETLBox.Logging.LogTask.Execute()
  nameWithType: LogTask.Execute()
- uid: ALE.ETLBox.Logging.LogTask.Execute*
  name: Execute
  href: api/ALE.ETLBox.Logging.LogTask.html#ALE_ETLBox_Logging_LogTask_Execute_
  commentId: Overload:ALE.ETLBox.Logging.LogTask.Execute
  isSpec: "True"
  fullName: ALE.ETLBox.Logging.LogTask.Execute
  nameWithType: LogTask.Execute
- uid: ALE.ETLBox.Logging.LogTask.Fatal
  name: Fatal()
  href: api/ALE.ETLBox.Logging.LogTask.html#ALE_ETLBox_Logging_LogTask_Fatal
  commentId: M:ALE.ETLBox.Logging.LogTask.Fatal
  fullName: ALE.ETLBox.Logging.LogTask.Fatal()
  nameWithType: LogTask.Fatal()
- uid: ALE.ETLBox.Logging.LogTask.Fatal(ALE.ETLBox.ConnectionManager.IConnectionManager,System.String)
  name: Fatal(IConnectionManager, String)
  href: api/ALE.ETLBox.Logging.LogTask.html#ALE_ETLBox_Logging_LogTask_Fatal_ALE_ETLBox_ConnectionManager_IConnectionManager_System_String_
  commentId: M:ALE.ETLBox.Logging.LogTask.Fatal(ALE.ETLBox.ConnectionManager.IConnectionManager,System.String)
  fullName: ALE.ETLBox.Logging.LogTask.Fatal(ALE.ETLBox.ConnectionManager.IConnectionManager, System.String)
  nameWithType: LogTask.Fatal(IConnectionManager, String)
- uid: ALE.ETLBox.Logging.LogTask.Fatal(System.String)
  name: Fatal(String)
  href: api/ALE.ETLBox.Logging.LogTask.html#ALE_ETLBox_Logging_LogTask_Fatal_System_String_
  commentId: M:ALE.ETLBox.Logging.LogTask.Fatal(System.String)
  fullName: ALE.ETLBox.Logging.LogTask.Fatal(System.String)
  nameWithType: LogTask.Fatal(String)
- uid: ALE.ETLBox.Logging.LogTask.Fatal*
  name: Fatal
  href: api/ALE.ETLBox.Logging.LogTask.html#ALE_ETLBox_Logging_LogTask_Fatal_
  commentId: Overload:ALE.ETLBox.Logging.LogTask.Fatal
  isSpec: "True"
  fullName: ALE.ETLBox.Logging.LogTask.Fatal
  nameWithType: LogTask.Fatal
- uid: ALE.ETLBox.Logging.LogTask.Info
  name: Info()
  href: api/ALE.ETLBox.Logging.LogTask.html#ALE_ETLBox_Logging_LogTask_Info
  commentId: M:ALE.ETLBox.Logging.LogTask.Info
  fullName: ALE.ETLBox.Logging.LogTask.Info()
  nameWithType: LogTask.Info()
- uid: ALE.ETLBox.Logging.LogTask.Info(ALE.ETLBox.ConnectionManager.IConnectionManager,System.String)
  name: Info(IConnectionManager, String)
  href: api/ALE.ETLBox.Logging.LogTask.html#ALE_ETLBox_Logging_LogTask_Info_ALE_ETLBox_ConnectionManager_IConnectionManager_System_String_
  commentId: M:ALE.ETLBox.Logging.LogTask.Info(ALE.ETLBox.ConnectionManager.IConnectionManager,System.String)
  fullName: ALE.ETLBox.Logging.LogTask.Info(ALE.ETLBox.ConnectionManager.IConnectionManager, System.String)
  nameWithType: LogTask.Info(IConnectionManager, String)
- uid: ALE.ETLBox.Logging.LogTask.Info(System.String)
  name: Info(String)
  href: api/ALE.ETLBox.Logging.LogTask.html#ALE_ETLBox_Logging_LogTask_Info_System_String_
  commentId: M:ALE.ETLBox.Logging.LogTask.Info(System.String)
  fullName: ALE.ETLBox.Logging.LogTask.Info(System.String)
  nameWithType: LogTask.Info(String)
- uid: ALE.ETLBox.Logging.LogTask.Info*
  name: Info
  href: api/ALE.ETLBox.Logging.LogTask.html#ALE_ETLBox_Logging_LogTask_Info_
  commentId: Overload:ALE.ETLBox.Logging.LogTask.Info
  isSpec: "True"
  fullName: ALE.ETLBox.Logging.LogTask.Info
  nameWithType: LogTask.Info
- uid: ALE.ETLBox.Logging.LogTask.Message
  name: Message
  href: api/ALE.ETLBox.Logging.LogTask.html#ALE_ETLBox_Logging_LogTask_Message
  commentId: P:ALE.ETLBox.Logging.LogTask.Message
  fullName: ALE.ETLBox.Logging.LogTask.Message
  nameWithType: LogTask.Message
- uid: ALE.ETLBox.Logging.LogTask.Message*
  name: Message
  href: api/ALE.ETLBox.Logging.LogTask.html#ALE_ETLBox_Logging_LogTask_Message_
  commentId: Overload:ALE.ETLBox.Logging.LogTask.Message
  isSpec: "True"
  fullName: ALE.ETLBox.Logging.LogTask.Message
  nameWithType: LogTask.Message
- uid: ALE.ETLBox.Logging.LogTask.TaskName
  name: TaskName
  href: api/ALE.ETLBox.Logging.LogTask.html#ALE_ETLBox_Logging_LogTask_TaskName
  commentId: P:ALE.ETLBox.Logging.LogTask.TaskName
  fullName: ALE.ETLBox.Logging.LogTask.TaskName
  nameWithType: LogTask.TaskName
- uid: ALE.ETLBox.Logging.LogTask.TaskName*
  name: TaskName
  href: api/ALE.ETLBox.Logging.LogTask.html#ALE_ETLBox_Logging_LogTask_TaskName_
  commentId: Overload:ALE.ETLBox.Logging.LogTask.TaskName
  isSpec: "True"
  fullName: ALE.ETLBox.Logging.LogTask.TaskName
  nameWithType: LogTask.TaskName
- uid: ALE.ETLBox.Logging.LogTask.Trace
  name: Trace()
  href: api/ALE.ETLBox.Logging.LogTask.html#ALE_ETLBox_Logging_LogTask_Trace
  commentId: M:ALE.ETLBox.Logging.LogTask.Trace
  fullName: ALE.ETLBox.Logging.LogTask.Trace()
  nameWithType: LogTask.Trace()
- uid: ALE.ETLBox.Logging.LogTask.Trace(ALE.ETLBox.ConnectionManager.IConnectionManager,System.String)
  name: Trace(IConnectionManager, String)
  href: api/ALE.ETLBox.Logging.LogTask.html#ALE_ETLBox_Logging_LogTask_Trace_ALE_ETLBox_ConnectionManager_IConnectionManager_System_String_
  commentId: M:ALE.ETLBox.Logging.LogTask.Trace(ALE.ETLBox.ConnectionManager.IConnectionManager,System.String)
  fullName: ALE.ETLBox.Logging.LogTask.Trace(ALE.ETLBox.ConnectionManager.IConnectionManager, System.String)
  nameWithType: LogTask.Trace(IConnectionManager, String)
- uid: ALE.ETLBox.Logging.LogTask.Trace(System.String)
  name: Trace(String)
  href: api/ALE.ETLBox.Logging.LogTask.html#ALE_ETLBox_Logging_LogTask_Trace_System_String_
  commentId: M:ALE.ETLBox.Logging.LogTask.Trace(System.String)
  fullName: ALE.ETLBox.Logging.LogTask.Trace(System.String)
  nameWithType: LogTask.Trace(String)
- uid: ALE.ETLBox.Logging.LogTask.Trace*
  name: Trace
  href: api/ALE.ETLBox.Logging.LogTask.html#ALE_ETLBox_Logging_LogTask_Trace_
  commentId: Overload:ALE.ETLBox.Logging.LogTask.Trace
  isSpec: "True"
  fullName: ALE.ETLBox.Logging.LogTask.Trace
  nameWithType: LogTask.Trace
- uid: ALE.ETLBox.Logging.LogTask.Warn
  name: Warn()
  href: api/ALE.ETLBox.Logging.LogTask.html#ALE_ETLBox_Logging_LogTask_Warn
  commentId: M:ALE.ETLBox.Logging.LogTask.Warn
  fullName: ALE.ETLBox.Logging.LogTask.Warn()
  nameWithType: LogTask.Warn()
- uid: ALE.ETLBox.Logging.LogTask.Warn(ALE.ETLBox.ConnectionManager.IConnectionManager,System.String)
  name: Warn(IConnectionManager, String)
  href: api/ALE.ETLBox.Logging.LogTask.html#ALE_ETLBox_Logging_LogTask_Warn_ALE_ETLBox_ConnectionManager_IConnectionManager_System_String_
  commentId: M:ALE.ETLBox.Logging.LogTask.Warn(ALE.ETLBox.ConnectionManager.IConnectionManager,System.String)
  fullName: ALE.ETLBox.Logging.LogTask.Warn(ALE.ETLBox.ConnectionManager.IConnectionManager, System.String)
  nameWithType: LogTask.Warn(IConnectionManager, String)
- uid: ALE.ETLBox.Logging.LogTask.Warn(System.String)
  name: Warn(String)
  href: api/ALE.ETLBox.Logging.LogTask.html#ALE_ETLBox_Logging_LogTask_Warn_System_String_
  commentId: M:ALE.ETLBox.Logging.LogTask.Warn(System.String)
  fullName: ALE.ETLBox.Logging.LogTask.Warn(System.String)
  nameWithType: LogTask.Warn(String)
- uid: ALE.ETLBox.Logging.LogTask.Warn*
  name: Warn
  href: api/ALE.ETLBox.Logging.LogTask.html#ALE_ETLBox_Logging_LogTask_Warn_
  commentId: Overload:ALE.ETLBox.Logging.LogTask.Warn
  isSpec: "True"
  fullName: ALE.ETLBox.Logging.LogTask.Warn
  nameWithType: LogTask.Warn
- uid: ALE.ETLBox.Logging.ReadLoadProcessTableTask
  name: ReadLoadProcessTableTask
  href: api/ALE.ETLBox.Logging.ReadLoadProcessTableTask.html
  commentId: T:ALE.ETLBox.Logging.ReadLoadProcessTableTask
  fullName: ALE.ETLBox.Logging.ReadLoadProcessTableTask
  nameWithType: ReadLoadProcessTableTask
- uid: ALE.ETLBox.Logging.ReadLoadProcessTableTask.#ctor
  name: ReadLoadProcessTableTask()
  href: api/ALE.ETLBox.Logging.ReadLoadProcessTableTask.html#ALE_ETLBox_Logging_ReadLoadProcessTableTask__ctor
  commentId: M:ALE.ETLBox.Logging.ReadLoadProcessTableTask.#ctor
  fullName: ALE.ETLBox.Logging.ReadLoadProcessTableTask.ReadLoadProcessTableTask()
  nameWithType: ReadLoadProcessTableTask.ReadLoadProcessTableTask()
- uid: ALE.ETLBox.Logging.ReadLoadProcessTableTask.#ctor(ALE.ETLBox.ITask,System.Nullable{System.Int64})
  name: ReadLoadProcessTableTask(ITask, Nullable<Int64>)
  href: api/ALE.ETLBox.Logging.ReadLoadProcessTableTask.html#ALE_ETLBox_Logging_ReadLoadProcessTableTask__ctor_ALE_ETLBox_ITask_System_Nullable_System_Int64__
  commentId: M:ALE.ETLBox.Logging.ReadLoadProcessTableTask.#ctor(ALE.ETLBox.ITask,System.Nullable{System.Int64})
  name.vb: ReadLoadProcessTableTask(ITask, Nullable(Of Int64))
  fullName: ALE.ETLBox.Logging.ReadLoadProcessTableTask.ReadLoadProcessTableTask(ALE.ETLBox.ITask, System.Nullable<System.Int64>)
  fullName.vb: ALE.ETLBox.Logging.ReadLoadProcessTableTask.ReadLoadProcessTableTask(ALE.ETLBox.ITask, System.Nullable(Of System.Int64))
  nameWithType: ReadLoadProcessTableTask.ReadLoadProcessTableTask(ITask, Nullable<Int64>)
  nameWithType.vb: ReadLoadProcessTableTask.ReadLoadProcessTableTask(ITask, Nullable(Of Int64))
- uid: ALE.ETLBox.Logging.ReadLoadProcessTableTask.#ctor(System.Nullable{System.Int64})
  name: ReadLoadProcessTableTask(Nullable<Int64>)
  href: api/ALE.ETLBox.Logging.ReadLoadProcessTableTask.html#ALE_ETLBox_Logging_ReadLoadProcessTableTask__ctor_System_Nullable_System_Int64__
  commentId: M:ALE.ETLBox.Logging.ReadLoadProcessTableTask.#ctor(System.Nullable{System.Int64})
  name.vb: ReadLoadProcessTableTask(Nullable(Of Int64))
  fullName: ALE.ETLBox.Logging.ReadLoadProcessTableTask.ReadLoadProcessTableTask(System.Nullable<System.Int64>)
  fullName.vb: ALE.ETLBox.Logging.ReadLoadProcessTableTask.ReadLoadProcessTableTask(System.Nullable(Of System.Int64))
  nameWithType: ReadLoadProcessTableTask.ReadLoadProcessTableTask(Nullable<Int64>)
  nameWithType.vb: ReadLoadProcessTableTask.ReadLoadProcessTableTask(Nullable(Of Int64))
- uid: ALE.ETLBox.Logging.ReadLoadProcessTableTask.#ctor*
  name: ReadLoadProcessTableTask
  href: api/ALE.ETLBox.Logging.ReadLoadProcessTableTask.html#ALE_ETLBox_Logging_ReadLoadProcessTableTask__ctor_
  commentId: Overload:ALE.ETLBox.Logging.ReadLoadProcessTableTask.#ctor
  isSpec: "True"
  fullName: ALE.ETLBox.Logging.ReadLoadProcessTableTask.ReadLoadProcessTableTask
  nameWithType: ReadLoadProcessTableTask.ReadLoadProcessTableTask
- uid: ALE.ETLBox.Logging.ReadLoadProcessTableTask._loadProcessId
  name: _loadProcessId
  href: api/ALE.ETLBox.Logging.ReadLoadProcessTableTask.html#ALE_ETLBox_Logging_ReadLoadProcessTableTask__loadProcessId
  commentId: F:ALE.ETLBox.Logging.ReadLoadProcessTableTask._loadProcessId
  fullName: ALE.ETLBox.Logging.ReadLoadProcessTableTask._loadProcessId
  nameWithType: ReadLoadProcessTableTask._loadProcessId
- uid: ALE.ETLBox.Logging.ReadLoadProcessTableTask.AllLoadProcesses
  name: AllLoadProcesses
  href: api/ALE.ETLBox.Logging.ReadLoadProcessTableTask.html#ALE_ETLBox_Logging_ReadLoadProcessTableTask_AllLoadProcesses
  commentId: P:ALE.ETLBox.Logging.ReadLoadProcessTableTask.AllLoadProcesses
  fullName: ALE.ETLBox.Logging.ReadLoadProcessTableTask.AllLoadProcesses
  nameWithType: ReadLoadProcessTableTask.AllLoadProcesses
- uid: ALE.ETLBox.Logging.ReadLoadProcessTableTask.AllLoadProcesses*
  name: AllLoadProcesses
  href: api/ALE.ETLBox.Logging.ReadLoadProcessTableTask.html#ALE_ETLBox_Logging_ReadLoadProcessTableTask_AllLoadProcesses_
  commentId: Overload:ALE.ETLBox.Logging.ReadLoadProcessTableTask.AllLoadProcesses
  isSpec: "True"
  fullName: ALE.ETLBox.Logging.ReadLoadProcessTableTask.AllLoadProcesses
  nameWithType: ReadLoadProcessTableTask.AllLoadProcesses
- uid: ALE.ETLBox.Logging.ReadLoadProcessTableTask.Execute
  name: Execute()
  href: api/ALE.ETLBox.Logging.ReadLoadProcessTableTask.html#ALE_ETLBox_Logging_ReadLoadProcessTableTask_Execute
  commentId: M:ALE.ETLBox.Logging.ReadLoadProcessTableTask.Execute
  fullName: ALE.ETLBox.Logging.ReadLoadProcessTableTask.Execute()
  nameWithType: ReadLoadProcessTableTask.Execute()
- uid: ALE.ETLBox.Logging.ReadLoadProcessTableTask.Execute*
  name: Execute
  href: api/ALE.ETLBox.Logging.ReadLoadProcessTableTask.html#ALE_ETLBox_Logging_ReadLoadProcessTableTask_Execute_
  commentId: Overload:ALE.ETLBox.Logging.ReadLoadProcessTableTask.Execute
  isSpec: "True"
  fullName: ALE.ETLBox.Logging.ReadLoadProcessTableTask.Execute
  nameWithType: ReadLoadProcessTableTask.Execute
- uid: ALE.ETLBox.Logging.ReadLoadProcessTableTask.LastFinished
  name: LastFinished
  href: api/ALE.ETLBox.Logging.ReadLoadProcessTableTask.html#ALE_ETLBox_Logging_ReadLoadProcessTableTask_LastFinished
  commentId: P:ALE.ETLBox.Logging.ReadLoadProcessTableTask.LastFinished
  fullName: ALE.ETLBox.Logging.ReadLoadProcessTableTask.LastFinished
  nameWithType: ReadLoadProcessTableTask.LastFinished
- uid: ALE.ETLBox.Logging.ReadLoadProcessTableTask.LastFinished*
  name: LastFinished
  href: api/ALE.ETLBox.Logging.ReadLoadProcessTableTask.html#ALE_ETLBox_Logging_ReadLoadProcessTableTask_LastFinished_
  commentId: Overload:ALE.ETLBox.Logging.ReadLoadProcessTableTask.LastFinished
  isSpec: "True"
  fullName: ALE.ETLBox.Logging.ReadLoadProcessTableTask.LastFinished
  nameWithType: ReadLoadProcessTableTask.LastFinished
- uid: ALE.ETLBox.Logging.ReadLoadProcessTableTask.LastTransfered
  name: LastTransfered
  href: api/ALE.ETLBox.Logging.ReadLoadProcessTableTask.html#ALE_ETLBox_Logging_ReadLoadProcessTableTask_LastTransfered
  commentId: P:ALE.ETLBox.Logging.ReadLoadProcessTableTask.LastTransfered
  fullName: ALE.ETLBox.Logging.ReadLoadProcessTableTask.LastTransfered
  nameWithType: ReadLoadProcessTableTask.LastTransfered
- uid: ALE.ETLBox.Logging.ReadLoadProcessTableTask.LastTransfered*
  name: LastTransfered
  href: api/ALE.ETLBox.Logging.ReadLoadProcessTableTask.html#ALE_ETLBox_Logging_ReadLoadProcessTableTask_LastTransfered_
  commentId: Overload:ALE.ETLBox.Logging.ReadLoadProcessTableTask.LastTransfered
  isSpec: "True"
  fullName: ALE.ETLBox.Logging.ReadLoadProcessTableTask.LastTransfered
  nameWithType: ReadLoadProcessTableTask.LastTransfered
- uid: ALE.ETLBox.Logging.ReadLoadProcessTableTask.LoadProcess
  name: LoadProcess
  href: api/ALE.ETLBox.Logging.ReadLoadProcessTableTask.html#ALE_ETLBox_Logging_ReadLoadProcessTableTask_LoadProcess
  commentId: P:ALE.ETLBox.Logging.ReadLoadProcessTableTask.LoadProcess
  fullName: ALE.ETLBox.Logging.ReadLoadProcessTableTask.LoadProcess
  nameWithType: ReadLoadProcessTableTask.LoadProcess
- uid: ALE.ETLBox.Logging.ReadLoadProcessTableTask.LoadProcess*
  name: LoadProcess
  href: api/ALE.ETLBox.Logging.ReadLoadProcessTableTask.html#ALE_ETLBox_Logging_ReadLoadProcessTableTask_LoadProcess_
  commentId: Overload:ALE.ETLBox.Logging.ReadLoadProcessTableTask.LoadProcess
  isSpec: "True"
  fullName: ALE.ETLBox.Logging.ReadLoadProcessTableTask.LoadProcess
  nameWithType: ReadLoadProcessTableTask.LoadProcess
- uid: ALE.ETLBox.Logging.ReadLoadProcessTableTask.LoadProcessId
  name: LoadProcessId
  href: api/ALE.ETLBox.Logging.ReadLoadProcessTableTask.html#ALE_ETLBox_Logging_ReadLoadProcessTableTask_LoadProcessId
  commentId: P:ALE.ETLBox.Logging.ReadLoadProcessTableTask.LoadProcessId
  fullName: ALE.ETLBox.Logging.ReadLoadProcessTableTask.LoadProcessId
  nameWithType: ReadLoadProcessTableTask.LoadProcessId
- uid: ALE.ETLBox.Logging.ReadLoadProcessTableTask.LoadProcessId*
  name: LoadProcessId
  href: api/ALE.ETLBox.Logging.ReadLoadProcessTableTask.html#ALE_ETLBox_Logging_ReadLoadProcessTableTask_LoadProcessId_
  commentId: Overload:ALE.ETLBox.Logging.ReadLoadProcessTableTask.LoadProcessId
  isSpec: "True"
  fullName: ALE.ETLBox.Logging.ReadLoadProcessTableTask.LoadProcessId
  nameWithType: ReadLoadProcessTableTask.LoadProcessId
- uid: ALE.ETLBox.Logging.ReadLoadProcessTableTask.Read(System.Nullable{System.Int64})
  name: Read(Nullable<Int64>)
  href: api/ALE.ETLBox.Logging.ReadLoadProcessTableTask.html#ALE_ETLBox_Logging_ReadLoadProcessTableTask_Read_System_Nullable_System_Int64__
  commentId: M:ALE.ETLBox.Logging.ReadLoadProcessTableTask.Read(System.Nullable{System.Int64})
  name.vb: Read(Nullable(Of Int64))
  fullName: ALE.ETLBox.Logging.ReadLoadProcessTableTask.Read(System.Nullable<System.Int64>)
  fullName.vb: ALE.ETLBox.Logging.ReadLoadProcessTableTask.Read(System.Nullable(Of System.Int64))
  nameWithType: ReadLoadProcessTableTask.Read(Nullable<Int64>)
  nameWithType.vb: ReadLoadProcessTableTask.Read(Nullable(Of Int64))
- uid: ALE.ETLBox.Logging.ReadLoadProcessTableTask.Read*
  name: Read
  href: api/ALE.ETLBox.Logging.ReadLoadProcessTableTask.html#ALE_ETLBox_Logging_ReadLoadProcessTableTask_Read_
  commentId: Overload:ALE.ETLBox.Logging.ReadLoadProcessTableTask.Read
  isSpec: "True"
  fullName: ALE.ETLBox.Logging.ReadLoadProcessTableTask.Read
  nameWithType: ReadLoadProcessTableTask.Read
- uid: ALE.ETLBox.Logging.ReadLoadProcessTableTask.ReadAll
  name: ReadAll()
  href: api/ALE.ETLBox.Logging.ReadLoadProcessTableTask.html#ALE_ETLBox_Logging_ReadLoadProcessTableTask_ReadAll
  commentId: M:ALE.ETLBox.Logging.ReadLoadProcessTableTask.ReadAll
  fullName: ALE.ETLBox.Logging.ReadLoadProcessTableTask.ReadAll()
  nameWithType: ReadLoadProcessTableTask.ReadAll()
- uid: ALE.ETLBox.Logging.ReadLoadProcessTableTask.ReadAll*
  name: ReadAll
  href: api/ALE.ETLBox.Logging.ReadLoadProcessTableTask.html#ALE_ETLBox_Logging_ReadLoadProcessTableTask_ReadAll_
  commentId: Overload:ALE.ETLBox.Logging.ReadLoadProcessTableTask.ReadAll
  isSpec: "True"
  fullName: ALE.ETLBox.Logging.ReadLoadProcessTableTask.ReadAll
  nameWithType: ReadLoadProcessTableTask.ReadAll
- uid: ALE.ETLBox.Logging.ReadLoadProcessTableTask.ReadOption
  name: ReadOption
  href: api/ALE.ETLBox.Logging.ReadLoadProcessTableTask.html#ALE_ETLBox_Logging_ReadLoadProcessTableTask_ReadOption
  commentId: P:ALE.ETLBox.Logging.ReadLoadProcessTableTask.ReadOption
  fullName: ALE.ETLBox.Logging.ReadLoadProcessTableTask.ReadOption
  nameWithType: ReadLoadProcessTableTask.ReadOption
- uid: ALE.ETLBox.Logging.ReadLoadProcessTableTask.ReadOption*
  name: ReadOption
  href: api/ALE.ETLBox.Logging.ReadLoadProcessTableTask.html#ALE_ETLBox_Logging_ReadLoadProcessTableTask_ReadOption_
  commentId: Overload:ALE.ETLBox.Logging.ReadLoadProcessTableTask.ReadOption
  isSpec: "True"
  fullName: ALE.ETLBox.Logging.ReadLoadProcessTableTask.ReadOption
  nameWithType: ReadLoadProcessTableTask.ReadOption
- uid: ALE.ETLBox.Logging.ReadLoadProcessTableTask.ReadWithOption(ALE.ETLBox.Logging.ReadOptions)
  name: ReadWithOption(ReadOptions)
  href: api/ALE.ETLBox.Logging.ReadLoadProcessTableTask.html#ALE_ETLBox_Logging_ReadLoadProcessTableTask_ReadWithOption_ALE_ETLBox_Logging_ReadOptions_
  commentId: M:ALE.ETLBox.Logging.ReadLoadProcessTableTask.ReadWithOption(ALE.ETLBox.Logging.ReadOptions)
  fullName: ALE.ETLBox.Logging.ReadLoadProcessTableTask.ReadWithOption(ALE.ETLBox.Logging.ReadOptions)
  nameWithType: ReadLoadProcessTableTask.ReadWithOption(ReadOptions)
- uid: ALE.ETLBox.Logging.ReadLoadProcessTableTask.ReadWithOption*
  name: ReadWithOption
  href: api/ALE.ETLBox.Logging.ReadLoadProcessTableTask.html#ALE_ETLBox_Logging_ReadLoadProcessTableTask_ReadWithOption_
  commentId: Overload:ALE.ETLBox.Logging.ReadLoadProcessTableTask.ReadWithOption
  isSpec: "True"
  fullName: ALE.ETLBox.Logging.ReadLoadProcessTableTask.ReadWithOption
  nameWithType: ReadLoadProcessTableTask.ReadWithOption
- uid: ALE.ETLBox.Logging.ReadLoadProcessTableTask.Sql
  name: Sql
  href: api/ALE.ETLBox.Logging.ReadLoadProcessTableTask.html#ALE_ETLBox_Logging_ReadLoadProcessTableTask_Sql
  commentId: P:ALE.ETLBox.Logging.ReadLoadProcessTableTask.Sql
  fullName: ALE.ETLBox.Logging.ReadLoadProcessTableTask.Sql
  nameWithType: ReadLoadProcessTableTask.Sql
- uid: ALE.ETLBox.Logging.ReadLoadProcessTableTask.Sql*
  name: Sql
  href: api/ALE.ETLBox.Logging.ReadLoadProcessTableTask.html#ALE_ETLBox_Logging_ReadLoadProcessTableTask_Sql_
  commentId: Overload:ALE.ETLBox.Logging.ReadLoadProcessTableTask.Sql
  isSpec: "True"
  fullName: ALE.ETLBox.Logging.ReadLoadProcessTableTask.Sql
  nameWithType: ReadLoadProcessTableTask.Sql
- uid: ALE.ETLBox.Logging.ReadLoadProcessTableTask.TaskName
  name: TaskName
  href: api/ALE.ETLBox.Logging.ReadLoadProcessTableTask.html#ALE_ETLBox_Logging_ReadLoadProcessTableTask_TaskName
  commentId: P:ALE.ETLBox.Logging.ReadLoadProcessTableTask.TaskName
  fullName: ALE.ETLBox.Logging.ReadLoadProcessTableTask.TaskName
  nameWithType: ReadLoadProcessTableTask.TaskName
- uid: ALE.ETLBox.Logging.ReadLoadProcessTableTask.TaskName*
  name: TaskName
  href: api/ALE.ETLBox.Logging.ReadLoadProcessTableTask.html#ALE_ETLBox_Logging_ReadLoadProcessTableTask_TaskName_
  commentId: Overload:ALE.ETLBox.Logging.ReadLoadProcessTableTask.TaskName
  isSpec: "True"
  fullName: ALE.ETLBox.Logging.ReadLoadProcessTableTask.TaskName
  nameWithType: ReadLoadProcessTableTask.TaskName
- uid: ALE.ETLBox.Logging.ReadLogTableTask
  name: ReadLogTableTask
  href: api/ALE.ETLBox.Logging.ReadLogTableTask.html
  commentId: T:ALE.ETLBox.Logging.ReadLogTableTask
  fullName: ALE.ETLBox.Logging.ReadLogTableTask
  nameWithType: ReadLogTableTask
- uid: ALE.ETLBox.Logging.ReadLogTableTask.#ctor
  name: ReadLogTableTask()
  href: api/ALE.ETLBox.Logging.ReadLogTableTask.html#ALE_ETLBox_Logging_ReadLogTableTask__ctor
  commentId: M:ALE.ETLBox.Logging.ReadLogTableTask.#ctor
  fullName: ALE.ETLBox.Logging.ReadLogTableTask.ReadLogTableTask()
  nameWithType: ReadLogTableTask.ReadLogTableTask()
- uid: ALE.ETLBox.Logging.ReadLogTableTask.#ctor(System.Nullable{System.Int64})
  name: ReadLogTableTask(Nullable<Int64>)
  href: api/ALE.ETLBox.Logging.ReadLogTableTask.html#ALE_ETLBox_Logging_ReadLogTableTask__ctor_System_Nullable_System_Int64__
  commentId: M:ALE.ETLBox.Logging.ReadLogTableTask.#ctor(System.Nullable{System.Int64})
  name.vb: ReadLogTableTask(Nullable(Of Int64))
  fullName: ALE.ETLBox.Logging.ReadLogTableTask.ReadLogTableTask(System.Nullable<System.Int64>)
  fullName.vb: ALE.ETLBox.Logging.ReadLogTableTask.ReadLogTableTask(System.Nullable(Of System.Int64))
  nameWithType: ReadLogTableTask.ReadLogTableTask(Nullable<Int64>)
  nameWithType.vb: ReadLogTableTask.ReadLogTableTask(Nullable(Of Int64))
- uid: ALE.ETLBox.Logging.ReadLogTableTask.#ctor*
  name: ReadLogTableTask
  href: api/ALE.ETLBox.Logging.ReadLogTableTask.html#ALE_ETLBox_Logging_ReadLogTableTask__ctor_
  commentId: Overload:ALE.ETLBox.Logging.ReadLogTableTask.#ctor
  isSpec: "True"
  fullName: ALE.ETLBox.Logging.ReadLogTableTask.ReadLogTableTask
  nameWithType: ReadLogTableTask.ReadLogTableTask
- uid: ALE.ETLBox.Logging.ReadLogTableTask._loadProcessId
  name: _loadProcessId
  href: api/ALE.ETLBox.Logging.ReadLogTableTask.html#ALE_ETLBox_Logging_ReadLogTableTask__loadProcessId
  commentId: F:ALE.ETLBox.Logging.ReadLogTableTask._loadProcessId
  fullName: ALE.ETLBox.Logging.ReadLogTableTask._loadProcessId
  nameWithType: ReadLogTableTask._loadProcessId
- uid: ALE.ETLBox.Logging.ReadLogTableTask.Execute
  name: Execute()
  href: api/ALE.ETLBox.Logging.ReadLogTableTask.html#ALE_ETLBox_Logging_ReadLogTableTask_Execute
  commentId: M:ALE.ETLBox.Logging.ReadLogTableTask.Execute
  fullName: ALE.ETLBox.Logging.ReadLogTableTask.Execute()
  nameWithType: ReadLogTableTask.Execute()
- uid: ALE.ETLBox.Logging.ReadLogTableTask.Execute*
  name: Execute
  href: api/ALE.ETLBox.Logging.ReadLogTableTask.html#ALE_ETLBox_Logging_ReadLogTableTask_Execute_
  commentId: Overload:ALE.ETLBox.Logging.ReadLogTableTask.Execute
  isSpec: "True"
  fullName: ALE.ETLBox.Logging.ReadLogTableTask.Execute
  nameWithType: ReadLogTableTask.Execute
- uid: ALE.ETLBox.Logging.ReadLogTableTask.LoadProcessId
  name: LoadProcessId
  href: api/ALE.ETLBox.Logging.ReadLogTableTask.html#ALE_ETLBox_Logging_ReadLogTableTask_LoadProcessId
  commentId: P:ALE.ETLBox.Logging.ReadLogTableTask.LoadProcessId
  fullName: ALE.ETLBox.Logging.ReadLogTableTask.LoadProcessId
  nameWithType: ReadLogTableTask.LoadProcessId
- uid: ALE.ETLBox.Logging.ReadLogTableTask.LoadProcessId*
  name: LoadProcessId
  href: api/ALE.ETLBox.Logging.ReadLogTableTask.html#ALE_ETLBox_Logging_ReadLogTableTask_LoadProcessId_
  commentId: Overload:ALE.ETLBox.Logging.ReadLogTableTask.LoadProcessId
  isSpec: "True"
  fullName: ALE.ETLBox.Logging.ReadLogTableTask.LoadProcessId
  nameWithType: ReadLogTableTask.LoadProcessId
- uid: ALE.ETLBox.Logging.ReadLogTableTask.LogEntries
  name: LogEntries
  href: api/ALE.ETLBox.Logging.ReadLogTableTask.html#ALE_ETLBox_Logging_ReadLogTableTask_LogEntries
  commentId: P:ALE.ETLBox.Logging.ReadLogTableTask.LogEntries
  fullName: ALE.ETLBox.Logging.ReadLogTableTask.LogEntries
  nameWithType: ReadLogTableTask.LogEntries
- uid: ALE.ETLBox.Logging.ReadLogTableTask.LogEntries*
  name: LogEntries
  href: api/ALE.ETLBox.Logging.ReadLogTableTask.html#ALE_ETLBox_Logging_ReadLogTableTask_LogEntries_
  commentId: Overload:ALE.ETLBox.Logging.ReadLogTableTask.LogEntries
  isSpec: "True"
  fullName: ALE.ETLBox.Logging.ReadLogTableTask.LogEntries
  nameWithType: ReadLogTableTask.LogEntries
- uid: ALE.ETLBox.Logging.ReadLogTableTask.Read
  name: Read()
  href: api/ALE.ETLBox.Logging.ReadLogTableTask.html#ALE_ETLBox_Logging_ReadLogTableTask_Read
  commentId: M:ALE.ETLBox.Logging.ReadLogTableTask.Read
  fullName: ALE.ETLBox.Logging.ReadLogTableTask.Read()
  nameWithType: ReadLogTableTask.Read()
- uid: ALE.ETLBox.Logging.ReadLogTableTask.Read(ALE.ETLBox.ConnectionManager.IConnectionManager)
  name: Read(IConnectionManager)
  href: api/ALE.ETLBox.Logging.ReadLogTableTask.html#ALE_ETLBox_Logging_ReadLogTableTask_Read_ALE_ETLBox_ConnectionManager_IConnectionManager_
  commentId: M:ALE.ETLBox.Logging.ReadLogTableTask.Read(ALE.ETLBox.ConnectionManager.IConnectionManager)
  fullName: ALE.ETLBox.Logging.ReadLogTableTask.Read(ALE.ETLBox.ConnectionManager.IConnectionManager)
  nameWithType: ReadLogTableTask.Read(IConnectionManager)
- uid: ALE.ETLBox.Logging.ReadLogTableTask.Read(ALE.ETLBox.ConnectionManager.IConnectionManager,System.Nullable{System.Int64})
  name: Read(IConnectionManager, Nullable<Int64>)
  href: api/ALE.ETLBox.Logging.ReadLogTableTask.html#ALE_ETLBox_Logging_ReadLogTableTask_Read_ALE_ETLBox_ConnectionManager_IConnectionManager_System_Nullable_System_Int64__
  commentId: M:ALE.ETLBox.Logging.ReadLogTableTask.Read(ALE.ETLBox.ConnectionManager.IConnectionManager,System.Nullable{System.Int64})
  name.vb: Read(IConnectionManager, Nullable(Of Int64))
  fullName: ALE.ETLBox.Logging.ReadLogTableTask.Read(ALE.ETLBox.ConnectionManager.IConnectionManager, System.Nullable<System.Int64>)
  fullName.vb: ALE.ETLBox.Logging.ReadLogTableTask.Read(ALE.ETLBox.ConnectionManager.IConnectionManager, System.Nullable(Of System.Int64))
  nameWithType: ReadLogTableTask.Read(IConnectionManager, Nullable<Int64>)
  nameWithType.vb: ReadLogTableTask.Read(IConnectionManager, Nullable(Of Int64))
- uid: ALE.ETLBox.Logging.ReadLogTableTask.Read(System.Nullable{System.Int64})
  name: Read(Nullable<Int64>)
  href: api/ALE.ETLBox.Logging.ReadLogTableTask.html#ALE_ETLBox_Logging_ReadLogTableTask_Read_System_Nullable_System_Int64__
  commentId: M:ALE.ETLBox.Logging.ReadLogTableTask.Read(System.Nullable{System.Int64})
  name.vb: Read(Nullable(Of Int64))
  fullName: ALE.ETLBox.Logging.ReadLogTableTask.Read(System.Nullable<System.Int64>)
  fullName.vb: ALE.ETLBox.Logging.ReadLogTableTask.Read(System.Nullable(Of System.Int64))
  nameWithType: ReadLogTableTask.Read(Nullable<Int64>)
  nameWithType.vb: ReadLogTableTask.Read(Nullable(Of Int64))
- uid: ALE.ETLBox.Logging.ReadLogTableTask.Read*
  name: Read
  href: api/ALE.ETLBox.Logging.ReadLogTableTask.html#ALE_ETLBox_Logging_ReadLogTableTask_Read_
  commentId: Overload:ALE.ETLBox.Logging.ReadLogTableTask.Read
  isSpec: "True"
  fullName: ALE.ETLBox.Logging.ReadLogTableTask.Read
  nameWithType: ReadLogTableTask.Read
- uid: ALE.ETLBox.Logging.ReadLogTableTask.ReadLog
  name: ReadLog()
  href: api/ALE.ETLBox.Logging.ReadLogTableTask.html#ALE_ETLBox_Logging_ReadLogTableTask_ReadLog
  commentId: M:ALE.ETLBox.Logging.ReadLogTableTask.ReadLog
  fullName: ALE.ETLBox.Logging.ReadLogTableTask.ReadLog()
  nameWithType: ReadLogTableTask.ReadLog()
- uid: ALE.ETLBox.Logging.ReadLogTableTask.ReadLog*
  name: ReadLog
  href: api/ALE.ETLBox.Logging.ReadLogTableTask.html#ALE_ETLBox_Logging_ReadLogTableTask_ReadLog_
  commentId: Overload:ALE.ETLBox.Logging.ReadLogTableTask.ReadLog
  isSpec: "True"
  fullName: ALE.ETLBox.Logging.ReadLogTableTask.ReadLog
  nameWithType: ReadLogTableTask.ReadLog
- uid: ALE.ETLBox.Logging.ReadLogTableTask.Sql
  name: Sql
  href: api/ALE.ETLBox.Logging.ReadLogTableTask.html#ALE_ETLBox_Logging_ReadLogTableTask_Sql
  commentId: P:ALE.ETLBox.Logging.ReadLogTableTask.Sql
  fullName: ALE.ETLBox.Logging.ReadLogTableTask.Sql
  nameWithType: ReadLogTableTask.Sql
- uid: ALE.ETLBox.Logging.ReadLogTableTask.Sql*
  name: Sql
  href: api/ALE.ETLBox.Logging.ReadLogTableTask.html#ALE_ETLBox_Logging_ReadLogTableTask_Sql_
  commentId: Overload:ALE.ETLBox.Logging.ReadLogTableTask.Sql
  isSpec: "True"
  fullName: ALE.ETLBox.Logging.ReadLogTableTask.Sql
  nameWithType: ReadLogTableTask.Sql
- uid: ALE.ETLBox.Logging.ReadLogTableTask.TaskName
  name: TaskName
  href: api/ALE.ETLBox.Logging.ReadLogTableTask.html#ALE_ETLBox_Logging_ReadLogTableTask_TaskName
  commentId: P:ALE.ETLBox.Logging.ReadLogTableTask.TaskName
  fullName: ALE.ETLBox.Logging.ReadLogTableTask.TaskName
  nameWithType: ReadLogTableTask.TaskName
- uid: ALE.ETLBox.Logging.ReadLogTableTask.TaskName*
  name: TaskName
  href: api/ALE.ETLBox.Logging.ReadLogTableTask.html#ALE_ETLBox_Logging_ReadLogTableTask_TaskName_
  commentId: Overload:ALE.ETLBox.Logging.ReadLogTableTask.TaskName
  isSpec: "True"
  fullName: ALE.ETLBox.Logging.ReadLogTableTask.TaskName
  nameWithType: ReadLogTableTask.TaskName
- uid: ALE.ETLBox.Logging.ReadOptions
  name: ReadOptions
  href: api/ALE.ETLBox.Logging.ReadOptions.html
  commentId: T:ALE.ETLBox.Logging.ReadOptions
  fullName: ALE.ETLBox.Logging.ReadOptions
  nameWithType: ReadOptions
- uid: ALE.ETLBox.Logging.ReadOptions.ReadAllProcesses
  name: ReadAllProcesses
  href: api/ALE.ETLBox.Logging.ReadOptions.html#ALE_ETLBox_Logging_ReadOptions_ReadAllProcesses
  commentId: F:ALE.ETLBox.Logging.ReadOptions.ReadAllProcesses
  fullName: ALE.ETLBox.Logging.ReadOptions.ReadAllProcesses
  nameWithType: ReadOptions.ReadAllProcesses
- uid: ALE.ETLBox.Logging.ReadOptions.ReadLastAborted
  name: ReadLastAborted
  href: api/ALE.ETLBox.Logging.ReadOptions.html#ALE_ETLBox_Logging_ReadOptions_ReadLastAborted
  commentId: F:ALE.ETLBox.Logging.ReadOptions.ReadLastAborted
  fullName: ALE.ETLBox.Logging.ReadOptions.ReadLastAborted
  nameWithType: ReadOptions.ReadLastAborted
- uid: ALE.ETLBox.Logging.ReadOptions.ReadLastFinishedProcess
  name: ReadLastFinishedProcess
  href: api/ALE.ETLBox.Logging.ReadOptions.html#ALE_ETLBox_Logging_ReadOptions_ReadLastFinishedProcess
  commentId: F:ALE.ETLBox.Logging.ReadOptions.ReadLastFinishedProcess
  fullName: ALE.ETLBox.Logging.ReadOptions.ReadLastFinishedProcess
  nameWithType: ReadOptions.ReadLastFinishedProcess
- uid: ALE.ETLBox.Logging.ReadOptions.ReadLastSuccessful
  name: ReadLastSuccessful
  href: api/ALE.ETLBox.Logging.ReadOptions.html#ALE_ETLBox_Logging_ReadOptions_ReadLastSuccessful
  commentId: F:ALE.ETLBox.Logging.ReadOptions.ReadLastSuccessful
  fullName: ALE.ETLBox.Logging.ReadOptions.ReadLastSuccessful
  nameWithType: ReadOptions.ReadLastSuccessful
- uid: ALE.ETLBox.Logging.ReadOptions.ReadSingleProcess
  name: ReadSingleProcess
  href: api/ALE.ETLBox.Logging.ReadOptions.html#ALE_ETLBox_Logging_ReadOptions_ReadSingleProcess
  commentId: F:ALE.ETLBox.Logging.ReadOptions.ReadSingleProcess
  fullName: ALE.ETLBox.Logging.ReadOptions.ReadSingleProcess
  nameWithType: ReadOptions.ReadSingleProcess
- uid: ALE.ETLBox.Logging.StartLoadProcessTask
  name: StartLoadProcessTask
  href: api/ALE.ETLBox.Logging.StartLoadProcessTask.html
  commentId: T:ALE.ETLBox.Logging.StartLoadProcessTask
  fullName: ALE.ETLBox.Logging.StartLoadProcessTask
  nameWithType: StartLoadProcessTask
- uid: ALE.ETLBox.Logging.StartLoadProcessTask.#ctor
  name: StartLoadProcessTask()
  href: api/ALE.ETLBox.Logging.StartLoadProcessTask.html#ALE_ETLBox_Logging_StartLoadProcessTask__ctor
  commentId: M:ALE.ETLBox.Logging.StartLoadProcessTask.#ctor
  fullName: ALE.ETLBox.Logging.StartLoadProcessTask.StartLoadProcessTask()
  nameWithType: StartLoadProcessTask.StartLoadProcessTask()
- uid: ALE.ETLBox.Logging.StartLoadProcessTask.#ctor(System.String)
  name: StartLoadProcessTask(String)
  href: api/ALE.ETLBox.Logging.StartLoadProcessTask.html#ALE_ETLBox_Logging_StartLoadProcessTask__ctor_System_String_
  commentId: M:ALE.ETLBox.Logging.StartLoadProcessTask.#ctor(System.String)
  fullName: ALE.ETLBox.Logging.StartLoadProcessTask.StartLoadProcessTask(System.String)
  nameWithType: StartLoadProcessTask.StartLoadProcessTask(String)
- uid: ALE.ETLBox.Logging.StartLoadProcessTask.#ctor(System.String,System.String)
  name: StartLoadProcessTask(String, String)
  href: api/ALE.ETLBox.Logging.StartLoadProcessTask.html#ALE_ETLBox_Logging_StartLoadProcessTask__ctor_System_String_System_String_
  commentId: M:ALE.ETLBox.Logging.StartLoadProcessTask.#ctor(System.String,System.String)
  fullName: ALE.ETLBox.Logging.StartLoadProcessTask.StartLoadProcessTask(System.String, System.String)
  nameWithType: StartLoadProcessTask.StartLoadProcessTask(String, String)
- uid: ALE.ETLBox.Logging.StartLoadProcessTask.#ctor(System.String,System.String,System.String)
  name: StartLoadProcessTask(String, String, String)
  href: api/ALE.ETLBox.Logging.StartLoadProcessTask.html#ALE_ETLBox_Logging_StartLoadProcessTask__ctor_System_String_System_String_System_String_
  commentId: M:ALE.ETLBox.Logging.StartLoadProcessTask.#ctor(System.String,System.String,System.String)
  fullName: ALE.ETLBox.Logging.StartLoadProcessTask.StartLoadProcessTask(System.String, System.String, System.String)
  nameWithType: StartLoadProcessTask.StartLoadProcessTask(String, String, String)
- uid: ALE.ETLBox.Logging.StartLoadProcessTask.#ctor*
  name: StartLoadProcessTask
  href: api/ALE.ETLBox.Logging.StartLoadProcessTask.html#ALE_ETLBox_Logging_StartLoadProcessTask__ctor_
  commentId: Overload:ALE.ETLBox.Logging.StartLoadProcessTask.#ctor
  isSpec: "True"
  fullName: ALE.ETLBox.Logging.StartLoadProcessTask.StartLoadProcessTask
  nameWithType: StartLoadProcessTask.StartLoadProcessTask
- uid: ALE.ETLBox.Logging.StartLoadProcessTask._loadProcessId
  name: _loadProcessId
  href: api/ALE.ETLBox.Logging.StartLoadProcessTask.html#ALE_ETLBox_Logging_StartLoadProcessTask__loadProcessId
  commentId: F:ALE.ETLBox.Logging.StartLoadProcessTask._loadProcessId
  fullName: ALE.ETLBox.Logging.StartLoadProcessTask._loadProcessId
  nameWithType: StartLoadProcessTask._loadProcessId
- uid: ALE.ETLBox.Logging.StartLoadProcessTask.Execute
  name: Execute()
  href: api/ALE.ETLBox.Logging.StartLoadProcessTask.html#ALE_ETLBox_Logging_StartLoadProcessTask_Execute
  commentId: M:ALE.ETLBox.Logging.StartLoadProcessTask.Execute
  fullName: ALE.ETLBox.Logging.StartLoadProcessTask.Execute()
  nameWithType: StartLoadProcessTask.Execute()
- uid: ALE.ETLBox.Logging.StartLoadProcessTask.Execute*
  name: Execute
  href: api/ALE.ETLBox.Logging.StartLoadProcessTask.html#ALE_ETLBox_Logging_StartLoadProcessTask_Execute_
  commentId: Overload:ALE.ETLBox.Logging.StartLoadProcessTask.Execute
  isSpec: "True"
  fullName: ALE.ETLBox.Logging.StartLoadProcessTask.Execute
  nameWithType: StartLoadProcessTask.Execute
- uid: ALE.ETLBox.Logging.StartLoadProcessTask.LoadProcessId
  name: LoadProcessId
  href: api/ALE.ETLBox.Logging.StartLoadProcessTask.html#ALE_ETLBox_Logging_StartLoadProcessTask_LoadProcessId
  commentId: P:ALE.ETLBox.Logging.StartLoadProcessTask.LoadProcessId
  fullName: ALE.ETLBox.Logging.StartLoadProcessTask.LoadProcessId
  nameWithType: StartLoadProcessTask.LoadProcessId
- uid: ALE.ETLBox.Logging.StartLoadProcessTask.LoadProcessId*
  name: LoadProcessId
  href: api/ALE.ETLBox.Logging.StartLoadProcessTask.html#ALE_ETLBox_Logging_StartLoadProcessTask_LoadProcessId_
  commentId: Overload:ALE.ETLBox.Logging.StartLoadProcessTask.LoadProcessId
  isSpec: "True"
  fullName: ALE.ETLBox.Logging.StartLoadProcessTask.LoadProcessId
  nameWithType: StartLoadProcessTask.LoadProcessId
- uid: ALE.ETLBox.Logging.StartLoadProcessTask.ProcessName
  name: ProcessName
  href: api/ALE.ETLBox.Logging.StartLoadProcessTask.html#ALE_ETLBox_Logging_StartLoadProcessTask_ProcessName
  commentId: P:ALE.ETLBox.Logging.StartLoadProcessTask.ProcessName
  fullName: ALE.ETLBox.Logging.StartLoadProcessTask.ProcessName
  nameWithType: StartLoadProcessTask.ProcessName
- uid: ALE.ETLBox.Logging.StartLoadProcessTask.ProcessName*
  name: ProcessName
  href: api/ALE.ETLBox.Logging.StartLoadProcessTask.html#ALE_ETLBox_Logging_StartLoadProcessTask_ProcessName_
  commentId: Overload:ALE.ETLBox.Logging.StartLoadProcessTask.ProcessName
  isSpec: "True"
  fullName: ALE.ETLBox.Logging.StartLoadProcessTask.ProcessName
  nameWithType: StartLoadProcessTask.ProcessName
- uid: ALE.ETLBox.Logging.StartLoadProcessTask.Source
  name: Source
  href: api/ALE.ETLBox.Logging.StartLoadProcessTask.html#ALE_ETLBox_Logging_StartLoadProcessTask_Source
  commentId: P:ALE.ETLBox.Logging.StartLoadProcessTask.Source
  fullName: ALE.ETLBox.Logging.StartLoadProcessTask.Source
  nameWithType: StartLoadProcessTask.Source
- uid: ALE.ETLBox.Logging.StartLoadProcessTask.Source*
  name: Source
  href: api/ALE.ETLBox.Logging.StartLoadProcessTask.html#ALE_ETLBox_Logging_StartLoadProcessTask_Source_
  commentId: Overload:ALE.ETLBox.Logging.StartLoadProcessTask.Source
  isSpec: "True"
  fullName: ALE.ETLBox.Logging.StartLoadProcessTask.Source
  nameWithType: StartLoadProcessTask.Source
- uid: ALE.ETLBox.Logging.StartLoadProcessTask.Sql
  name: Sql
  href: api/ALE.ETLBox.Logging.StartLoadProcessTask.html#ALE_ETLBox_Logging_StartLoadProcessTask_Sql
  commentId: P:ALE.ETLBox.Logging.StartLoadProcessTask.Sql
  fullName: ALE.ETLBox.Logging.StartLoadProcessTask.Sql
  nameWithType: StartLoadProcessTask.Sql
- uid: ALE.ETLBox.Logging.StartLoadProcessTask.Sql*
  name: Sql
  href: api/ALE.ETLBox.Logging.StartLoadProcessTask.html#ALE_ETLBox_Logging_StartLoadProcessTask_Sql_
  commentId: Overload:ALE.ETLBox.Logging.StartLoadProcessTask.Sql
  isSpec: "True"
  fullName: ALE.ETLBox.Logging.StartLoadProcessTask.Sql
  nameWithType: StartLoadProcessTask.Sql
- uid: ALE.ETLBox.Logging.StartLoadProcessTask.Start(ALE.ETLBox.ConnectionManager.IConnectionManager,System.String)
  name: Start(IConnectionManager, String)
  href: api/ALE.ETLBox.Logging.StartLoadProcessTask.html#ALE_ETLBox_Logging_StartLoadProcessTask_Start_ALE_ETLBox_ConnectionManager_IConnectionManager_System_String_
  commentId: M:ALE.ETLBox.Logging.StartLoadProcessTask.Start(ALE.ETLBox.ConnectionManager.IConnectionManager,System.String)
  fullName: ALE.ETLBox.Logging.StartLoadProcessTask.Start(ALE.ETLBox.ConnectionManager.IConnectionManager, System.String)
  nameWithType: StartLoadProcessTask.Start(IConnectionManager, String)
- uid: ALE.ETLBox.Logging.StartLoadProcessTask.Start(ALE.ETLBox.ConnectionManager.IConnectionManager,System.String,System.String)
  name: Start(IConnectionManager, String, String)
  href: api/ALE.ETLBox.Logging.StartLoadProcessTask.html#ALE_ETLBox_Logging_StartLoadProcessTask_Start_ALE_ETLBox_ConnectionManager_IConnectionManager_System_String_System_String_
  commentId: M:ALE.ETLBox.Logging.StartLoadProcessTask.Start(ALE.ETLBox.ConnectionManager.IConnectionManager,System.String,System.String)
  fullName: ALE.ETLBox.Logging.StartLoadProcessTask.Start(ALE.ETLBox.ConnectionManager.IConnectionManager, System.String, System.String)
  nameWithType: StartLoadProcessTask.Start(IConnectionManager, String, String)
- uid: ALE.ETLBox.Logging.StartLoadProcessTask.Start(ALE.ETLBox.ConnectionManager.IConnectionManager,System.String,System.String,System.String)
  name: Start(IConnectionManager, String, String, String)
  href: api/ALE.ETLBox.Logging.StartLoadProcessTask.html#ALE_ETLBox_Logging_StartLoadProcessTask_Start_ALE_ETLBox_ConnectionManager_IConnectionManager_System_String_System_String_System_String_
  commentId: M:ALE.ETLBox.Logging.StartLoadProcessTask.Start(ALE.ETLBox.ConnectionManager.IConnectionManager,System.String,System.String,System.String)
  fullName: ALE.ETLBox.Logging.StartLoadProcessTask.Start(ALE.ETLBox.ConnectionManager.IConnectionManager, System.String, System.String, System.String)
  nameWithType: StartLoadProcessTask.Start(IConnectionManager, String, String, String)
- uid: ALE.ETLBox.Logging.StartLoadProcessTask.Start(System.String)
  name: Start(String)
  href: api/ALE.ETLBox.Logging.StartLoadProcessTask.html#ALE_ETLBox_Logging_StartLoadProcessTask_Start_System_String_
  commentId: M:ALE.ETLBox.Logging.StartLoadProcessTask.Start(System.String)
  fullName: ALE.ETLBox.Logging.StartLoadProcessTask.Start(System.String)
  nameWithType: StartLoadProcessTask.Start(String)
- uid: ALE.ETLBox.Logging.StartLoadProcessTask.Start(System.String,System.String)
  name: Start(String, String)
  href: api/ALE.ETLBox.Logging.StartLoadProcessTask.html#ALE_ETLBox_Logging_StartLoadProcessTask_Start_System_String_System_String_
  commentId: M:ALE.ETLBox.Logging.StartLoadProcessTask.Start(System.String,System.String)
  fullName: ALE.ETLBox.Logging.StartLoadProcessTask.Start(System.String, System.String)
  nameWithType: StartLoadProcessTask.Start(String, String)
- uid: ALE.ETLBox.Logging.StartLoadProcessTask.Start(System.String,System.String,System.String)
  name: Start(String, String, String)
  href: api/ALE.ETLBox.Logging.StartLoadProcessTask.html#ALE_ETLBox_Logging_StartLoadProcessTask_Start_System_String_System_String_System_String_
  commentId: M:ALE.ETLBox.Logging.StartLoadProcessTask.Start(System.String,System.String,System.String)
  fullName: ALE.ETLBox.Logging.StartLoadProcessTask.Start(System.String, System.String, System.String)
  nameWithType: StartLoadProcessTask.Start(String, String, String)
- uid: ALE.ETLBox.Logging.StartLoadProcessTask.Start*
  name: Start
  href: api/ALE.ETLBox.Logging.StartLoadProcessTask.html#ALE_ETLBox_Logging_StartLoadProcessTask_Start_
  commentId: Overload:ALE.ETLBox.Logging.StartLoadProcessTask.Start
  isSpec: "True"
  fullName: ALE.ETLBox.Logging.StartLoadProcessTask.Start
  nameWithType: StartLoadProcessTask.Start
- uid: ALE.ETLBox.Logging.StartLoadProcessTask.StartMessage
  name: StartMessage
  href: api/ALE.ETLBox.Logging.StartLoadProcessTask.html#ALE_ETLBox_Logging_StartLoadProcessTask_StartMessage
  commentId: P:ALE.ETLBox.Logging.StartLoadProcessTask.StartMessage
  fullName: ALE.ETLBox.Logging.StartLoadProcessTask.StartMessage
  nameWithType: StartLoadProcessTask.StartMessage
- uid: ALE.ETLBox.Logging.StartLoadProcessTask.StartMessage*
  name: StartMessage
  href: api/ALE.ETLBox.Logging.StartLoadProcessTask.html#ALE_ETLBox_Logging_StartLoadProcessTask_StartMessage_
  commentId: Overload:ALE.ETLBox.Logging.StartLoadProcessTask.StartMessage
  isSpec: "True"
  fullName: ALE.ETLBox.Logging.StartLoadProcessTask.StartMessage
  nameWithType: StartLoadProcessTask.StartMessage
- uid: ALE.ETLBox.Logging.StartLoadProcessTask.TaskName
  name: TaskName
  href: api/ALE.ETLBox.Logging.StartLoadProcessTask.html#ALE_ETLBox_Logging_StartLoadProcessTask_TaskName
  commentId: P:ALE.ETLBox.Logging.StartLoadProcessTask.TaskName
  fullName: ALE.ETLBox.Logging.StartLoadProcessTask.TaskName
  nameWithType: StartLoadProcessTask.TaskName
- uid: ALE.ETLBox.Logging.StartLoadProcessTask.TaskName*
  name: TaskName
  href: api/ALE.ETLBox.Logging.StartLoadProcessTask.html#ALE_ETLBox_Logging_StartLoadProcessTask_TaskName_
  commentId: Overload:ALE.ETLBox.Logging.StartLoadProcessTask.TaskName
  isSpec: "True"
  fullName: ALE.ETLBox.Logging.StartLoadProcessTask.TaskName
  nameWithType: StartLoadProcessTask.TaskName
- uid: ALE.ETLBox.MySqlConnectionString
  name: MySqlConnectionString
  href: api/ALE.ETLBox.MySqlConnectionString.html
  commentId: T:ALE.ETLBox.MySqlConnectionString
  fullName: ALE.ETLBox.MySqlConnectionString
  nameWithType: MySqlConnectionString
- uid: ALE.ETLBox.MySqlConnectionString.#ctor
  name: MySqlConnectionString()
  href: api/ALE.ETLBox.MySqlConnectionString.html#ALE_ETLBox_MySqlConnectionString__ctor
  commentId: M:ALE.ETLBox.MySqlConnectionString.#ctor
  fullName: ALE.ETLBox.MySqlConnectionString.MySqlConnectionString()
  nameWithType: MySqlConnectionString.MySqlConnectionString()
- uid: ALE.ETLBox.MySqlConnectionString.#ctor(System.String)
  name: MySqlConnectionString(String)
  href: api/ALE.ETLBox.MySqlConnectionString.html#ALE_ETLBox_MySqlConnectionString__ctor_System_String_
  commentId: M:ALE.ETLBox.MySqlConnectionString.#ctor(System.String)
  fullName: ALE.ETLBox.MySqlConnectionString.MySqlConnectionString(System.String)
  nameWithType: MySqlConnectionString.MySqlConnectionString(String)
- uid: ALE.ETLBox.MySqlConnectionString.#ctor*
  name: MySqlConnectionString
  href: api/ALE.ETLBox.MySqlConnectionString.html#ALE_ETLBox_MySqlConnectionString__ctor_
  commentId: Overload:ALE.ETLBox.MySqlConnectionString.#ctor
  isSpec: "True"
  fullName: ALE.ETLBox.MySqlConnectionString.MySqlConnectionString
  nameWithType: MySqlConnectionString.MySqlConnectionString
- uid: ALE.ETLBox.MySqlConnectionString.DBName
  name: DBName
  href: api/ALE.ETLBox.MySqlConnectionString.html#ALE_ETLBox_MySqlConnectionString_DBName
  commentId: P:ALE.ETLBox.MySqlConnectionString.DBName
  fullName: ALE.ETLBox.MySqlConnectionString.DBName
  nameWithType: MySqlConnectionString.DBName
- uid: ALE.ETLBox.MySqlConnectionString.DBName*
  name: DBName
  href: api/ALE.ETLBox.MySqlConnectionString.html#ALE_ETLBox_MySqlConnectionString_DBName_
  commentId: Overload:ALE.ETLBox.MySqlConnectionString.DBName
  isSpec: "True"
  fullName: ALE.ETLBox.MySqlConnectionString.DBName
  nameWithType: MySqlConnectionString.DBName
- uid: ALE.ETLBox.MySqlConnectionString.GetConnectionWithoutCatalog
  name: GetConnectionWithoutCatalog()
  href: api/ALE.ETLBox.MySqlConnectionString.html#ALE_ETLBox_MySqlConnectionString_GetConnectionWithoutCatalog
  commentId: M:ALE.ETLBox.MySqlConnectionString.GetConnectionWithoutCatalog
  fullName: ALE.ETLBox.MySqlConnectionString.GetConnectionWithoutCatalog()
  nameWithType: MySqlConnectionString.GetConnectionWithoutCatalog()
- uid: ALE.ETLBox.MySqlConnectionString.GetConnectionWithoutCatalog*
  name: GetConnectionWithoutCatalog
  href: api/ALE.ETLBox.MySqlConnectionString.html#ALE_ETLBox_MySqlConnectionString_GetConnectionWithoutCatalog_
  commentId: Overload:ALE.ETLBox.MySqlConnectionString.GetConnectionWithoutCatalog
  isSpec: "True"
  fullName: ALE.ETLBox.MySqlConnectionString.GetConnectionWithoutCatalog
  nameWithType: MySqlConnectionString.GetConnectionWithoutCatalog
- uid: ALE.ETLBox.MySqlConnectionString.GetMasterConnection
  name: GetMasterConnection()
  href: api/ALE.ETLBox.MySqlConnectionString.html#ALE_ETLBox_MySqlConnectionString_GetMasterConnection
  commentId: M:ALE.ETLBox.MySqlConnectionString.GetMasterConnection
  fullName: ALE.ETLBox.MySqlConnectionString.GetMasterConnection()
  nameWithType: MySqlConnectionString.GetMasterConnection()
- uid: ALE.ETLBox.MySqlConnectionString.GetMasterConnection*
  name: GetMasterConnection
  href: api/ALE.ETLBox.MySqlConnectionString.html#ALE_ETLBox_MySqlConnectionString_GetMasterConnection_
  commentId: Overload:ALE.ETLBox.MySqlConnectionString.GetMasterConnection
  isSpec: "True"
  fullName: ALE.ETLBox.MySqlConnectionString.GetMasterConnection
  nameWithType: MySqlConnectionString.GetMasterConnection
- uid: ALE.ETLBox.MySqlConnectionString.MySqlConnectionStringBuilder
  name: MySqlConnectionStringBuilder
  href: api/ALE.ETLBox.MySqlConnectionString.html#ALE_ETLBox_MySqlConnectionString_MySqlConnectionStringBuilder
  commentId: P:ALE.ETLBox.MySqlConnectionString.MySqlConnectionStringBuilder
  fullName: ALE.ETLBox.MySqlConnectionString.MySqlConnectionStringBuilder
  nameWithType: MySqlConnectionString.MySqlConnectionStringBuilder
- uid: ALE.ETLBox.MySqlConnectionString.MySqlConnectionStringBuilder*
  name: MySqlConnectionStringBuilder
  href: api/ALE.ETLBox.MySqlConnectionString.html#ALE_ETLBox_MySqlConnectionString_MySqlConnectionStringBuilder_
  commentId: Overload:ALE.ETLBox.MySqlConnectionString.MySqlConnectionStringBuilder
  isSpec: "True"
  fullName: ALE.ETLBox.MySqlConnectionString.MySqlConnectionStringBuilder
  nameWithType: MySqlConnectionString.MySqlConnectionStringBuilder
- uid: ALE.ETLBox.MySqlConnectionString.op_Implicit(System.String)~ALE.ETLBox.MySqlConnectionString
  name: Implicit(String to MySqlConnectionString)
  href: api/ALE.ETLBox.MySqlConnectionString.html#ALE_ETLBox_MySqlConnectionString_op_Implicit_System_String__ALE_ETLBox_MySqlConnectionString
  commentId: M:ALE.ETLBox.MySqlConnectionString.op_Implicit(System.String)~ALE.ETLBox.MySqlConnectionString
  name.vb: Widening(String to MySqlConnectionString)
  fullName: ALE.ETLBox.MySqlConnectionString.Implicit(System.String to ALE.ETLBox.MySqlConnectionString)
  fullName.vb: ALE.ETLBox.MySqlConnectionString.Widening(System.String to ALE.ETLBox.MySqlConnectionString)
  nameWithType: MySqlConnectionString.Implicit(String to MySqlConnectionString)
  nameWithType.vb: MySqlConnectionString.Widening(String to MySqlConnectionString)
- uid: ALE.ETLBox.MySqlConnectionString.op_Implicit*
  name: Implicit
  href: api/ALE.ETLBox.MySqlConnectionString.html#ALE_ETLBox_MySqlConnectionString_op_Implicit_
  commentId: Overload:ALE.ETLBox.MySqlConnectionString.op_Implicit
  isSpec: "True"
  name.vb: Widening
  fullName: ALE.ETLBox.MySqlConnectionString.Implicit
  fullName.vb: ALE.ETLBox.MySqlConnectionString.Widening
  nameWithType: MySqlConnectionString.Implicit
  nameWithType.vb: MySqlConnectionString.Widening
- uid: ALE.ETLBox.MySqlConnectionString.ToString
  name: ToString()
  href: api/ALE.ETLBox.MySqlConnectionString.html#ALE_ETLBox_MySqlConnectionString_ToString
  commentId: M:ALE.ETLBox.MySqlConnectionString.ToString
  fullName: ALE.ETLBox.MySqlConnectionString.ToString()
  nameWithType: MySqlConnectionString.ToString()
- uid: ALE.ETLBox.MySqlConnectionString.ToString*
  name: ToString
  href: api/ALE.ETLBox.MySqlConnectionString.html#ALE_ETLBox_MySqlConnectionString_ToString_
  commentId: Overload:ALE.ETLBox.MySqlConnectionString.ToString
  isSpec: "True"
  fullName: ALE.ETLBox.MySqlConnectionString.ToString
  nameWithType: MySqlConnectionString.ToString
- uid: ALE.ETLBox.MySqlConnectionString.Value
  name: Value
  href: api/ALE.ETLBox.MySqlConnectionString.html#ALE_ETLBox_MySqlConnectionString_Value
  commentId: P:ALE.ETLBox.MySqlConnectionString.Value
  fullName: ALE.ETLBox.MySqlConnectionString.Value
  nameWithType: MySqlConnectionString.Value
- uid: ALE.ETLBox.MySqlConnectionString.Value*
  name: Value
  href: api/ALE.ETLBox.MySqlConnectionString.html#ALE_ETLBox_MySqlConnectionString_Value_
  commentId: Overload:ALE.ETLBox.MySqlConnectionString.Value
  isSpec: "True"
  fullName: ALE.ETLBox.MySqlConnectionString.Value
  nameWithType: MySqlConnectionString.Value
- uid: ALE.ETLBox.ObjectNameDescriptor
  name: ObjectNameDescriptor
  href: api/ALE.ETLBox.ObjectNameDescriptor.html
  commentId: T:ALE.ETLBox.ObjectNameDescriptor
  fullName: ALE.ETLBox.ObjectNameDescriptor
  nameWithType: ObjectNameDescriptor
- uid: ALE.ETLBox.ObjectNameDescriptor.#ctor(System.String,ALE.ETLBox.ConnectionManager.ConnectionManagerType)
  name: ObjectNameDescriptor(String, ConnectionManagerType)
  href: api/ALE.ETLBox.ObjectNameDescriptor.html#ALE_ETLBox_ObjectNameDescriptor__ctor_System_String_ALE_ETLBox_ConnectionManager_ConnectionManagerType_
  commentId: M:ALE.ETLBox.ObjectNameDescriptor.#ctor(System.String,ALE.ETLBox.ConnectionManager.ConnectionManagerType)
  fullName: ALE.ETLBox.ObjectNameDescriptor.ObjectNameDescriptor(System.String, ALE.ETLBox.ConnectionManager.ConnectionManagerType)
  nameWithType: ObjectNameDescriptor.ObjectNameDescriptor(String, ConnectionManagerType)
- uid: ALE.ETLBox.ObjectNameDescriptor.#ctor(System.String,ALE.ETLBox.ConnectionManager.IConnectionManager)
  name: ObjectNameDescriptor(String, IConnectionManager)
  href: api/ALE.ETLBox.ObjectNameDescriptor.html#ALE_ETLBox_ObjectNameDescriptor__ctor_System_String_ALE_ETLBox_ConnectionManager_IConnectionManager_
  commentId: M:ALE.ETLBox.ObjectNameDescriptor.#ctor(System.String,ALE.ETLBox.ConnectionManager.IConnectionManager)
  fullName: ALE.ETLBox.ObjectNameDescriptor.ObjectNameDescriptor(System.String, ALE.ETLBox.ConnectionManager.IConnectionManager)
  nameWithType: ObjectNameDescriptor.ObjectNameDescriptor(String, IConnectionManager)
- uid: ALE.ETLBox.ObjectNameDescriptor.#ctor*
  name: ObjectNameDescriptor
  href: api/ALE.ETLBox.ObjectNameDescriptor.html#ALE_ETLBox_ObjectNameDescriptor__ctor_
  commentId: Overload:ALE.ETLBox.ObjectNameDescriptor.#ctor
  isSpec: "True"
  fullName: ALE.ETLBox.ObjectNameDescriptor.ObjectNameDescriptor
  nameWithType: ObjectNameDescriptor.ObjectNameDescriptor
- uid: ALE.ETLBox.ObjectNameDescriptor.ConnectionType
  name: ConnectionType
  href: api/ALE.ETLBox.ObjectNameDescriptor.html#ALE_ETLBox_ObjectNameDescriptor_ConnectionType
  commentId: P:ALE.ETLBox.ObjectNameDescriptor.ConnectionType
  fullName: ALE.ETLBox.ObjectNameDescriptor.ConnectionType
  nameWithType: ObjectNameDescriptor.ConnectionType
- uid: ALE.ETLBox.ObjectNameDescriptor.ConnectionType*
  name: ConnectionType
  href: api/ALE.ETLBox.ObjectNameDescriptor.html#ALE_ETLBox_ObjectNameDescriptor_ConnectionType_
  commentId: Overload:ALE.ETLBox.ObjectNameDescriptor.ConnectionType
  isSpec: "True"
  fullName: ALE.ETLBox.ObjectNameDescriptor.ConnectionType
  nameWithType: ObjectNameDescriptor.ConnectionType
- uid: ALE.ETLBox.ObjectNameDescriptor.ObjectName
  name: ObjectName
  href: api/ALE.ETLBox.ObjectNameDescriptor.html#ALE_ETLBox_ObjectNameDescriptor_ObjectName
  commentId: P:ALE.ETLBox.ObjectNameDescriptor.ObjectName
  fullName: ALE.ETLBox.ObjectNameDescriptor.ObjectName
  nameWithType: ObjectNameDescriptor.ObjectName
- uid: ALE.ETLBox.ObjectNameDescriptor.ObjectName*
  name: ObjectName
  href: api/ALE.ETLBox.ObjectNameDescriptor.html#ALE_ETLBox_ObjectNameDescriptor_ObjectName_
  commentId: Overload:ALE.ETLBox.ObjectNameDescriptor.ObjectName
  isSpec: "True"
  fullName: ALE.ETLBox.ObjectNameDescriptor.ObjectName
  nameWithType: ObjectNameDescriptor.ObjectName
- uid: ALE.ETLBox.ObjectNameDescriptor.QB
  name: QB
  href: api/ALE.ETLBox.ObjectNameDescriptor.html#ALE_ETLBox_ObjectNameDescriptor_QB
  commentId: P:ALE.ETLBox.ObjectNameDescriptor.QB
  fullName: ALE.ETLBox.ObjectNameDescriptor.QB
  nameWithType: ObjectNameDescriptor.QB
- uid: ALE.ETLBox.ObjectNameDescriptor.QB*
  name: QB
  href: api/ALE.ETLBox.ObjectNameDescriptor.html#ALE_ETLBox_ObjectNameDescriptor_QB_
  commentId: Overload:ALE.ETLBox.ObjectNameDescriptor.QB
  isSpec: "True"
  fullName: ALE.ETLBox.ObjectNameDescriptor.QB
  nameWithType: ObjectNameDescriptor.QB
- uid: ALE.ETLBox.ObjectNameDescriptor.QE
  name: QE
  href: api/ALE.ETLBox.ObjectNameDescriptor.html#ALE_ETLBox_ObjectNameDescriptor_QE
  commentId: P:ALE.ETLBox.ObjectNameDescriptor.QE
  fullName: ALE.ETLBox.ObjectNameDescriptor.QE
  nameWithType: ObjectNameDescriptor.QE
- uid: ALE.ETLBox.ObjectNameDescriptor.QE*
  name: QE
  href: api/ALE.ETLBox.ObjectNameDescriptor.html#ALE_ETLBox_ObjectNameDescriptor_QE_
  commentId: Overload:ALE.ETLBox.ObjectNameDescriptor.QE
  isSpec: "True"
  fullName: ALE.ETLBox.ObjectNameDescriptor.QE
  nameWithType: ObjectNameDescriptor.QE
- uid: ALE.ETLBox.ObjectNameDescriptor.QuotatedFullName
  name: QuotatedFullName
  href: api/ALE.ETLBox.ObjectNameDescriptor.html#ALE_ETLBox_ObjectNameDescriptor_QuotatedFullName
  commentId: P:ALE.ETLBox.ObjectNameDescriptor.QuotatedFullName
  fullName: ALE.ETLBox.ObjectNameDescriptor.QuotatedFullName
  nameWithType: ObjectNameDescriptor.QuotatedFullName
- uid: ALE.ETLBox.ObjectNameDescriptor.QuotatedFullName*
  name: QuotatedFullName
  href: api/ALE.ETLBox.ObjectNameDescriptor.html#ALE_ETLBox_ObjectNameDescriptor_QuotatedFullName_
  commentId: Overload:ALE.ETLBox.ObjectNameDescriptor.QuotatedFullName
  isSpec: "True"
  fullName: ALE.ETLBox.ObjectNameDescriptor.QuotatedFullName
  nameWithType: ObjectNameDescriptor.QuotatedFullName
- uid: ALE.ETLBox.ObjectNameDescriptor.QuotatedObjectName
  name: QuotatedObjectName
  href: api/ALE.ETLBox.ObjectNameDescriptor.html#ALE_ETLBox_ObjectNameDescriptor_QuotatedObjectName
  commentId: P:ALE.ETLBox.ObjectNameDescriptor.QuotatedObjectName
  fullName: ALE.ETLBox.ObjectNameDescriptor.QuotatedObjectName
  nameWithType: ObjectNameDescriptor.QuotatedObjectName
- uid: ALE.ETLBox.ObjectNameDescriptor.QuotatedObjectName*
  name: QuotatedObjectName
  href: api/ALE.ETLBox.ObjectNameDescriptor.html#ALE_ETLBox_ObjectNameDescriptor_QuotatedObjectName_
  commentId: Overload:ALE.ETLBox.ObjectNameDescriptor.QuotatedObjectName
  isSpec: "True"
  fullName: ALE.ETLBox.ObjectNameDescriptor.QuotatedObjectName
  nameWithType: ObjectNameDescriptor.QuotatedObjectName
- uid: ALE.ETLBox.ObjectNameDescriptor.QuotatedSchemaName
  name: QuotatedSchemaName
  href: api/ALE.ETLBox.ObjectNameDescriptor.html#ALE_ETLBox_ObjectNameDescriptor_QuotatedSchemaName
  commentId: P:ALE.ETLBox.ObjectNameDescriptor.QuotatedSchemaName
  fullName: ALE.ETLBox.ObjectNameDescriptor.QuotatedSchemaName
  nameWithType: ObjectNameDescriptor.QuotatedSchemaName
- uid: ALE.ETLBox.ObjectNameDescriptor.QuotatedSchemaName*
  name: QuotatedSchemaName
  href: api/ALE.ETLBox.ObjectNameDescriptor.html#ALE_ETLBox_ObjectNameDescriptor_QuotatedSchemaName_
  commentId: Overload:ALE.ETLBox.ObjectNameDescriptor.QuotatedSchemaName
  isSpec: "True"
  fullName: ALE.ETLBox.ObjectNameDescriptor.QuotatedSchemaName
  nameWithType: ObjectNameDescriptor.QuotatedSchemaName
- uid: ALE.ETLBox.ObjectNameDescriptor.Schema
  name: Schema
  href: api/ALE.ETLBox.ObjectNameDescriptor.html#ALE_ETLBox_ObjectNameDescriptor_Schema
  commentId: P:ALE.ETLBox.ObjectNameDescriptor.Schema
  fullName: ALE.ETLBox.ObjectNameDescriptor.Schema
  nameWithType: ObjectNameDescriptor.Schema
- uid: ALE.ETLBox.ObjectNameDescriptor.Schema*
  name: Schema
  href: api/ALE.ETLBox.ObjectNameDescriptor.html#ALE_ETLBox_ObjectNameDescriptor_Schema_
  commentId: Overload:ALE.ETLBox.ObjectNameDescriptor.Schema
  isSpec: "True"
  fullName: ALE.ETLBox.ObjectNameDescriptor.Schema
  nameWithType: ObjectNameDescriptor.Schema
- uid: ALE.ETLBox.ObjectNameDescriptor.Table
  name: Table
  href: api/ALE.ETLBox.ObjectNameDescriptor.html#ALE_ETLBox_ObjectNameDescriptor_Table
  commentId: P:ALE.ETLBox.ObjectNameDescriptor.Table
  fullName: ALE.ETLBox.ObjectNameDescriptor.Table
  nameWithType: ObjectNameDescriptor.Table
- uid: ALE.ETLBox.ObjectNameDescriptor.Table*
  name: Table
  href: api/ALE.ETLBox.ObjectNameDescriptor.html#ALE_ETLBox_ObjectNameDescriptor_Table_
  commentId: Overload:ALE.ETLBox.ObjectNameDescriptor.Table
  isSpec: "True"
  fullName: ALE.ETLBox.ObjectNameDescriptor.Table
  nameWithType: ObjectNameDescriptor.Table
- uid: ALE.ETLBox.ObjectNameDescriptor.UnquotatedFullName
  name: UnquotatedFullName
  href: api/ALE.ETLBox.ObjectNameDescriptor.html#ALE_ETLBox_ObjectNameDescriptor_UnquotatedFullName
  commentId: P:ALE.ETLBox.ObjectNameDescriptor.UnquotatedFullName
  fullName: ALE.ETLBox.ObjectNameDescriptor.UnquotatedFullName
  nameWithType: ObjectNameDescriptor.UnquotatedFullName
- uid: ALE.ETLBox.ObjectNameDescriptor.UnquotatedFullName*
  name: UnquotatedFullName
  href: api/ALE.ETLBox.ObjectNameDescriptor.html#ALE_ETLBox_ObjectNameDescriptor_UnquotatedFullName_
  commentId: Overload:ALE.ETLBox.ObjectNameDescriptor.UnquotatedFullName
  isSpec: "True"
  fullName: ALE.ETLBox.ObjectNameDescriptor.UnquotatedFullName
  nameWithType: ObjectNameDescriptor.UnquotatedFullName
- uid: ALE.ETLBox.ObjectNameDescriptor.UnquotatedObjectName
  name: UnquotatedObjectName
  href: api/ALE.ETLBox.ObjectNameDescriptor.html#ALE_ETLBox_ObjectNameDescriptor_UnquotatedObjectName
  commentId: P:ALE.ETLBox.ObjectNameDescriptor.UnquotatedObjectName
  fullName: ALE.ETLBox.ObjectNameDescriptor.UnquotatedObjectName
  nameWithType: ObjectNameDescriptor.UnquotatedObjectName
- uid: ALE.ETLBox.ObjectNameDescriptor.UnquotatedObjectName*
  name: UnquotatedObjectName
  href: api/ALE.ETLBox.ObjectNameDescriptor.html#ALE_ETLBox_ObjectNameDescriptor_UnquotatedObjectName_
  commentId: Overload:ALE.ETLBox.ObjectNameDescriptor.UnquotatedObjectName
  isSpec: "True"
  fullName: ALE.ETLBox.ObjectNameDescriptor.UnquotatedObjectName
  nameWithType: ObjectNameDescriptor.UnquotatedObjectName
- uid: ALE.ETLBox.ObjectNameDescriptor.UnquotatedSchemaName
  name: UnquotatedSchemaName
  href: api/ALE.ETLBox.ObjectNameDescriptor.html#ALE_ETLBox_ObjectNameDescriptor_UnquotatedSchemaName
  commentId: P:ALE.ETLBox.ObjectNameDescriptor.UnquotatedSchemaName
  fullName: ALE.ETLBox.ObjectNameDescriptor.UnquotatedSchemaName
  nameWithType: ObjectNameDescriptor.UnquotatedSchemaName
- uid: ALE.ETLBox.ObjectNameDescriptor.UnquotatedSchemaName*
  name: UnquotatedSchemaName
  href: api/ALE.ETLBox.ObjectNameDescriptor.html#ALE_ETLBox_ObjectNameDescriptor_UnquotatedSchemaName_
  commentId: Overload:ALE.ETLBox.ObjectNameDescriptor.UnquotatedSchemaName
  isSpec: "True"
  fullName: ALE.ETLBox.ObjectNameDescriptor.UnquotatedSchemaName
  nameWithType: ObjectNameDescriptor.UnquotatedSchemaName
- uid: ALE.ETLBox.OdbcConnectionString
  name: OdbcConnectionString
  href: api/ALE.ETLBox.OdbcConnectionString.html
  commentId: T:ALE.ETLBox.OdbcConnectionString
  fullName: ALE.ETLBox.OdbcConnectionString
  nameWithType: OdbcConnectionString
- uid: ALE.ETLBox.OdbcConnectionString.#ctor
  name: OdbcConnectionString()
  href: api/ALE.ETLBox.OdbcConnectionString.html#ALE_ETLBox_OdbcConnectionString__ctor
  commentId: M:ALE.ETLBox.OdbcConnectionString.#ctor
  fullName: ALE.ETLBox.OdbcConnectionString.OdbcConnectionString()
  nameWithType: OdbcConnectionString.OdbcConnectionString()
- uid: ALE.ETLBox.OdbcConnectionString.#ctor(System.String)
  name: OdbcConnectionString(String)
  href: api/ALE.ETLBox.OdbcConnectionString.html#ALE_ETLBox_OdbcConnectionString__ctor_System_String_
  commentId: M:ALE.ETLBox.OdbcConnectionString.#ctor(System.String)
  fullName: ALE.ETLBox.OdbcConnectionString.OdbcConnectionString(System.String)
  nameWithType: OdbcConnectionString.OdbcConnectionString(String)
- uid: ALE.ETLBox.OdbcConnectionString.#ctor*
  name: OdbcConnectionString
  href: api/ALE.ETLBox.OdbcConnectionString.html#ALE_ETLBox_OdbcConnectionString__ctor_
  commentId: Overload:ALE.ETLBox.OdbcConnectionString.#ctor
  isSpec: "True"
  fullName: ALE.ETLBox.OdbcConnectionString.OdbcConnectionString
  nameWithType: OdbcConnectionString.OdbcConnectionString
- uid: ALE.ETLBox.OdbcConnectionString.OdbcConnectionStringBuilder
  name: OdbcConnectionStringBuilder
  href: api/ALE.ETLBox.OdbcConnectionString.html#ALE_ETLBox_OdbcConnectionString_OdbcConnectionStringBuilder
  commentId: P:ALE.ETLBox.OdbcConnectionString.OdbcConnectionStringBuilder
  fullName: ALE.ETLBox.OdbcConnectionString.OdbcConnectionStringBuilder
  nameWithType: OdbcConnectionString.OdbcConnectionStringBuilder
- uid: ALE.ETLBox.OdbcConnectionString.OdbcConnectionStringBuilder*
  name: OdbcConnectionStringBuilder
  href: api/ALE.ETLBox.OdbcConnectionString.html#ALE_ETLBox_OdbcConnectionString_OdbcConnectionStringBuilder_
  commentId: Overload:ALE.ETLBox.OdbcConnectionString.OdbcConnectionStringBuilder
  isSpec: "True"
  fullName: ALE.ETLBox.OdbcConnectionString.OdbcConnectionStringBuilder
  nameWithType: OdbcConnectionString.OdbcConnectionStringBuilder
- uid: ALE.ETLBox.OdbcConnectionString.op_Implicit(System.String)~ALE.ETLBox.OdbcConnectionString
  name: Implicit(String to OdbcConnectionString)
  href: api/ALE.ETLBox.OdbcConnectionString.html#ALE_ETLBox_OdbcConnectionString_op_Implicit_System_String__ALE_ETLBox_OdbcConnectionString
  commentId: M:ALE.ETLBox.OdbcConnectionString.op_Implicit(System.String)~ALE.ETLBox.OdbcConnectionString
  name.vb: Widening(String to OdbcConnectionString)
  fullName: ALE.ETLBox.OdbcConnectionString.Implicit(System.String to ALE.ETLBox.OdbcConnectionString)
  fullName.vb: ALE.ETLBox.OdbcConnectionString.Widening(System.String to ALE.ETLBox.OdbcConnectionString)
  nameWithType: OdbcConnectionString.Implicit(String to OdbcConnectionString)
  nameWithType.vb: OdbcConnectionString.Widening(String to OdbcConnectionString)
- uid: ALE.ETLBox.OdbcConnectionString.op_Implicit*
  name: Implicit
  href: api/ALE.ETLBox.OdbcConnectionString.html#ALE_ETLBox_OdbcConnectionString_op_Implicit_
  commentId: Overload:ALE.ETLBox.OdbcConnectionString.op_Implicit
  isSpec: "True"
  name.vb: Widening
  fullName: ALE.ETLBox.OdbcConnectionString.Implicit
  fullName.vb: ALE.ETLBox.OdbcConnectionString.Widening
  nameWithType: OdbcConnectionString.Implicit
  nameWithType.vb: OdbcConnectionString.Widening
- uid: ALE.ETLBox.OdbcConnectionString.ToString
  name: ToString()
  href: api/ALE.ETLBox.OdbcConnectionString.html#ALE_ETLBox_OdbcConnectionString_ToString
  commentId: M:ALE.ETLBox.OdbcConnectionString.ToString
  fullName: ALE.ETLBox.OdbcConnectionString.ToString()
  nameWithType: OdbcConnectionString.ToString()
- uid: ALE.ETLBox.OdbcConnectionString.ToString*
  name: ToString
  href: api/ALE.ETLBox.OdbcConnectionString.html#ALE_ETLBox_OdbcConnectionString_ToString_
  commentId: Overload:ALE.ETLBox.OdbcConnectionString.ToString
  isSpec: "True"
  fullName: ALE.ETLBox.OdbcConnectionString.ToString
  nameWithType: OdbcConnectionString.ToString
- uid: ALE.ETLBox.OdbcConnectionString.Value
  name: Value
  href: api/ALE.ETLBox.OdbcConnectionString.html#ALE_ETLBox_OdbcConnectionString_Value
  commentId: P:ALE.ETLBox.OdbcConnectionString.Value
  fullName: ALE.ETLBox.OdbcConnectionString.Value
  nameWithType: OdbcConnectionString.Value
- uid: ALE.ETLBox.OdbcConnectionString.Value*
  name: Value
  href: api/ALE.ETLBox.OdbcConnectionString.html#ALE_ETLBox_OdbcConnectionString_Value_
  commentId: Overload:ALE.ETLBox.OdbcConnectionString.Value
  isSpec: "True"
  fullName: ALE.ETLBox.OdbcConnectionString.Value
  nameWithType: OdbcConnectionString.Value
- uid: ALE.ETLBox.PostgresConnectionString
  name: PostgresConnectionString
  href: api/ALE.ETLBox.PostgresConnectionString.html
  commentId: T:ALE.ETLBox.PostgresConnectionString
  fullName: ALE.ETLBox.PostgresConnectionString
  nameWithType: PostgresConnectionString
- uid: ALE.ETLBox.PostgresConnectionString.#ctor
  name: PostgresConnectionString()
  href: api/ALE.ETLBox.PostgresConnectionString.html#ALE_ETLBox_PostgresConnectionString__ctor
  commentId: M:ALE.ETLBox.PostgresConnectionString.#ctor
  fullName: ALE.ETLBox.PostgresConnectionString.PostgresConnectionString()
  nameWithType: PostgresConnectionString.PostgresConnectionString()
- uid: ALE.ETLBox.PostgresConnectionString.#ctor(System.String)
  name: PostgresConnectionString(String)
  href: api/ALE.ETLBox.PostgresConnectionString.html#ALE_ETLBox_PostgresConnectionString__ctor_System_String_
  commentId: M:ALE.ETLBox.PostgresConnectionString.#ctor(System.String)
  fullName: ALE.ETLBox.PostgresConnectionString.PostgresConnectionString(System.String)
  nameWithType: PostgresConnectionString.PostgresConnectionString(String)
- uid: ALE.ETLBox.PostgresConnectionString.#ctor*
  name: PostgresConnectionString
  href: api/ALE.ETLBox.PostgresConnectionString.html#ALE_ETLBox_PostgresConnectionString__ctor_
  commentId: Overload:ALE.ETLBox.PostgresConnectionString.#ctor
  isSpec: "True"
  fullName: ALE.ETLBox.PostgresConnectionString.PostgresConnectionString
  nameWithType: PostgresConnectionString.PostgresConnectionString
- uid: ALE.ETLBox.PostgresConnectionString.DBName
  name: DBName
  href: api/ALE.ETLBox.PostgresConnectionString.html#ALE_ETLBox_PostgresConnectionString_DBName
  commentId: P:ALE.ETLBox.PostgresConnectionString.DBName
  fullName: ALE.ETLBox.PostgresConnectionString.DBName
  nameWithType: PostgresConnectionString.DBName
- uid: ALE.ETLBox.PostgresConnectionString.DBName*
  name: DBName
  href: api/ALE.ETLBox.PostgresConnectionString.html#ALE_ETLBox_PostgresConnectionString_DBName_
  commentId: Overload:ALE.ETLBox.PostgresConnectionString.DBName
  isSpec: "True"
  fullName: ALE.ETLBox.PostgresConnectionString.DBName
  nameWithType: PostgresConnectionString.DBName
- uid: ALE.ETLBox.PostgresConnectionString.GetConnectionWithoutCatalog
  name: GetConnectionWithoutCatalog()
  href: api/ALE.ETLBox.PostgresConnectionString.html#ALE_ETLBox_PostgresConnectionString_GetConnectionWithoutCatalog
  commentId: M:ALE.ETLBox.PostgresConnectionString.GetConnectionWithoutCatalog
  fullName: ALE.ETLBox.PostgresConnectionString.GetConnectionWithoutCatalog()
  nameWithType: PostgresConnectionString.GetConnectionWithoutCatalog()
- uid: ALE.ETLBox.PostgresConnectionString.GetConnectionWithoutCatalog*
  name: GetConnectionWithoutCatalog
  href: api/ALE.ETLBox.PostgresConnectionString.html#ALE_ETLBox_PostgresConnectionString_GetConnectionWithoutCatalog_
  commentId: Overload:ALE.ETLBox.PostgresConnectionString.GetConnectionWithoutCatalog
  isSpec: "True"
  fullName: ALE.ETLBox.PostgresConnectionString.GetConnectionWithoutCatalog
  nameWithType: PostgresConnectionString.GetConnectionWithoutCatalog
- uid: ALE.ETLBox.PostgresConnectionString.GetMasterConnection
  name: GetMasterConnection()
  href: api/ALE.ETLBox.PostgresConnectionString.html#ALE_ETLBox_PostgresConnectionString_GetMasterConnection
  commentId: M:ALE.ETLBox.PostgresConnectionString.GetMasterConnection
  fullName: ALE.ETLBox.PostgresConnectionString.GetMasterConnection()
  nameWithType: PostgresConnectionString.GetMasterConnection()
- uid: ALE.ETLBox.PostgresConnectionString.GetMasterConnection*
  name: GetMasterConnection
  href: api/ALE.ETLBox.PostgresConnectionString.html#ALE_ETLBox_PostgresConnectionString_GetMasterConnection_
  commentId: Overload:ALE.ETLBox.PostgresConnectionString.GetMasterConnection
  isSpec: "True"
  fullName: ALE.ETLBox.PostgresConnectionString.GetMasterConnection
  nameWithType: PostgresConnectionString.GetMasterConnection
- uid: ALE.ETLBox.PostgresConnectionString.MySqlConnectionStringBuilder
  name: MySqlConnectionStringBuilder
  href: api/ALE.ETLBox.PostgresConnectionString.html#ALE_ETLBox_PostgresConnectionString_MySqlConnectionStringBuilder
  commentId: P:ALE.ETLBox.PostgresConnectionString.MySqlConnectionStringBuilder
  fullName: ALE.ETLBox.PostgresConnectionString.MySqlConnectionStringBuilder
  nameWithType: PostgresConnectionString.MySqlConnectionStringBuilder
- uid: ALE.ETLBox.PostgresConnectionString.MySqlConnectionStringBuilder*
  name: MySqlConnectionStringBuilder
  href: api/ALE.ETLBox.PostgresConnectionString.html#ALE_ETLBox_PostgresConnectionString_MySqlConnectionStringBuilder_
  commentId: Overload:ALE.ETLBox.PostgresConnectionString.MySqlConnectionStringBuilder
  isSpec: "True"
  fullName: ALE.ETLBox.PostgresConnectionString.MySqlConnectionStringBuilder
  nameWithType: PostgresConnectionString.MySqlConnectionStringBuilder
- uid: ALE.ETLBox.PostgresConnectionString.op_Implicit(System.String)~ALE.ETLBox.PostgresConnectionString
  name: Implicit(String to PostgresConnectionString)
  href: api/ALE.ETLBox.PostgresConnectionString.html#ALE_ETLBox_PostgresConnectionString_op_Implicit_System_String__ALE_ETLBox_PostgresConnectionString
  commentId: M:ALE.ETLBox.PostgresConnectionString.op_Implicit(System.String)~ALE.ETLBox.PostgresConnectionString
  name.vb: Widening(String to PostgresConnectionString)
  fullName: ALE.ETLBox.PostgresConnectionString.Implicit(System.String to ALE.ETLBox.PostgresConnectionString)
  fullName.vb: ALE.ETLBox.PostgresConnectionString.Widening(System.String to ALE.ETLBox.PostgresConnectionString)
  nameWithType: PostgresConnectionString.Implicit(String to PostgresConnectionString)
  nameWithType.vb: PostgresConnectionString.Widening(String to PostgresConnectionString)
- uid: ALE.ETLBox.PostgresConnectionString.op_Implicit*
  name: Implicit
  href: api/ALE.ETLBox.PostgresConnectionString.html#ALE_ETLBox_PostgresConnectionString_op_Implicit_
  commentId: Overload:ALE.ETLBox.PostgresConnectionString.op_Implicit
  isSpec: "True"
  name.vb: Widening
  fullName: ALE.ETLBox.PostgresConnectionString.Implicit
  fullName.vb: ALE.ETLBox.PostgresConnectionString.Widening
  nameWithType: PostgresConnectionString.Implicit
  nameWithType.vb: PostgresConnectionString.Widening
- uid: ALE.ETLBox.PostgresConnectionString.ToString
  name: ToString()
  href: api/ALE.ETLBox.PostgresConnectionString.html#ALE_ETLBox_PostgresConnectionString_ToString
  commentId: M:ALE.ETLBox.PostgresConnectionString.ToString
  fullName: ALE.ETLBox.PostgresConnectionString.ToString()
  nameWithType: PostgresConnectionString.ToString()
- uid: ALE.ETLBox.PostgresConnectionString.ToString*
  name: ToString
  href: api/ALE.ETLBox.PostgresConnectionString.html#ALE_ETLBox_PostgresConnectionString_ToString_
  commentId: Overload:ALE.ETLBox.PostgresConnectionString.ToString
  isSpec: "True"
  fullName: ALE.ETLBox.PostgresConnectionString.ToString
  nameWithType: PostgresConnectionString.ToString
- uid: ALE.ETLBox.PostgresConnectionString.Value
  name: Value
  href: api/ALE.ETLBox.PostgresConnectionString.html#ALE_ETLBox_PostgresConnectionString_Value
  commentId: P:ALE.ETLBox.PostgresConnectionString.Value
  fullName: ALE.ETLBox.PostgresConnectionString.Value
  nameWithType: PostgresConnectionString.Value
- uid: ALE.ETLBox.PostgresConnectionString.Value*
  name: Value
  href: api/ALE.ETLBox.PostgresConnectionString.html#ALE_ETLBox_PostgresConnectionString_Value_
  commentId: Overload:ALE.ETLBox.PostgresConnectionString.Value
  isSpec: "True"
  fullName: ALE.ETLBox.PostgresConnectionString.Value
  nameWithType: PostgresConnectionString.Value
- uid: ALE.ETLBox.ProcedureDefinition
  name: ProcedureDefinition
  href: api/ALE.ETLBox.ProcedureDefinition.html
  commentId: T:ALE.ETLBox.ProcedureDefinition
  fullName: ALE.ETLBox.ProcedureDefinition
  nameWithType: ProcedureDefinition
- uid: ALE.ETLBox.ProcedureDefinition.#ctor
  name: ProcedureDefinition()
  href: api/ALE.ETLBox.ProcedureDefinition.html#ALE_ETLBox_ProcedureDefinition__ctor
  commentId: M:ALE.ETLBox.ProcedureDefinition.#ctor
  fullName: ALE.ETLBox.ProcedureDefinition.ProcedureDefinition()
  nameWithType: ProcedureDefinition.ProcedureDefinition()
- uid: ALE.ETLBox.ProcedureDefinition.#ctor(System.String,System.String)
  name: ProcedureDefinition(String, String)
  href: api/ALE.ETLBox.ProcedureDefinition.html#ALE_ETLBox_ProcedureDefinition__ctor_System_String_System_String_
  commentId: M:ALE.ETLBox.ProcedureDefinition.#ctor(System.String,System.String)
  fullName: ALE.ETLBox.ProcedureDefinition.ProcedureDefinition(System.String, System.String)
  nameWithType: ProcedureDefinition.ProcedureDefinition(String, String)
- uid: ALE.ETLBox.ProcedureDefinition.#ctor(System.String,System.String,System.Collections.Generic.List{ALE.ETLBox.ProcedureParameter})
  name: ProcedureDefinition(String, String, List<ProcedureParameter>)
  href: api/ALE.ETLBox.ProcedureDefinition.html#ALE_ETLBox_ProcedureDefinition__ctor_System_String_System_String_System_Collections_Generic_List_ALE_ETLBox_ProcedureParameter__
  commentId: M:ALE.ETLBox.ProcedureDefinition.#ctor(System.String,System.String,System.Collections.Generic.List{ALE.ETLBox.ProcedureParameter})
  name.vb: ProcedureDefinition(String, String, List(Of ProcedureParameter))
  fullName: ALE.ETLBox.ProcedureDefinition.ProcedureDefinition(System.String, System.String, System.Collections.Generic.List<ALE.ETLBox.ProcedureParameter>)
  fullName.vb: ALE.ETLBox.ProcedureDefinition.ProcedureDefinition(System.String, System.String, System.Collections.Generic.List(Of ALE.ETLBox.ProcedureParameter))
  nameWithType: ProcedureDefinition.ProcedureDefinition(String, String, List<ProcedureParameter>)
  nameWithType.vb: ProcedureDefinition.ProcedureDefinition(String, String, List(Of ProcedureParameter))
- uid: ALE.ETLBox.ProcedureDefinition.#ctor*
  name: ProcedureDefinition
  href: api/ALE.ETLBox.ProcedureDefinition.html#ALE_ETLBox_ProcedureDefinition__ctor_
  commentId: Overload:ALE.ETLBox.ProcedureDefinition.#ctor
  isSpec: "True"
  fullName: ALE.ETLBox.ProcedureDefinition.ProcedureDefinition
  nameWithType: ProcedureDefinition.ProcedureDefinition
- uid: ALE.ETLBox.ProcedureDefinition.Definition
  name: Definition
  href: api/ALE.ETLBox.ProcedureDefinition.html#ALE_ETLBox_ProcedureDefinition_Definition
  commentId: P:ALE.ETLBox.ProcedureDefinition.Definition
  fullName: ALE.ETLBox.ProcedureDefinition.Definition
  nameWithType: ProcedureDefinition.Definition
- uid: ALE.ETLBox.ProcedureDefinition.Definition*
  name: Definition
  href: api/ALE.ETLBox.ProcedureDefinition.html#ALE_ETLBox_ProcedureDefinition_Definition_
  commentId: Overload:ALE.ETLBox.ProcedureDefinition.Definition
  isSpec: "True"
  fullName: ALE.ETLBox.ProcedureDefinition.Definition
  nameWithType: ProcedureDefinition.Definition
- uid: ALE.ETLBox.ProcedureDefinition.Name
  name: Name
  href: api/ALE.ETLBox.ProcedureDefinition.html#ALE_ETLBox_ProcedureDefinition_Name
  commentId: P:ALE.ETLBox.ProcedureDefinition.Name
  fullName: ALE.ETLBox.ProcedureDefinition.Name
  nameWithType: ProcedureDefinition.Name
- uid: ALE.ETLBox.ProcedureDefinition.Name*
  name: Name
  href: api/ALE.ETLBox.ProcedureDefinition.html#ALE_ETLBox_ProcedureDefinition_Name_
  commentId: Overload:ALE.ETLBox.ProcedureDefinition.Name
  isSpec: "True"
  fullName: ALE.ETLBox.ProcedureDefinition.Name
  nameWithType: ProcedureDefinition.Name
- uid: ALE.ETLBox.ProcedureDefinition.Parameter
  name: Parameter
  href: api/ALE.ETLBox.ProcedureDefinition.html#ALE_ETLBox_ProcedureDefinition_Parameter
  commentId: P:ALE.ETLBox.ProcedureDefinition.Parameter
  fullName: ALE.ETLBox.ProcedureDefinition.Parameter
  nameWithType: ProcedureDefinition.Parameter
- uid: ALE.ETLBox.ProcedureDefinition.Parameter*
  name: Parameter
  href: api/ALE.ETLBox.ProcedureDefinition.html#ALE_ETLBox_ProcedureDefinition_Parameter_
  commentId: Overload:ALE.ETLBox.ProcedureDefinition.Parameter
  isSpec: "True"
  fullName: ALE.ETLBox.ProcedureDefinition.Parameter
  nameWithType: ProcedureDefinition.Parameter
- uid: ALE.ETLBox.ProcedureParameter
  name: ProcedureParameter
  href: api/ALE.ETLBox.ProcedureParameter.html
  commentId: T:ALE.ETLBox.ProcedureParameter
  fullName: ALE.ETLBox.ProcedureParameter
  nameWithType: ProcedureParameter
- uid: ALE.ETLBox.ProcedureParameter.#ctor
  name: ProcedureParameter()
  href: api/ALE.ETLBox.ProcedureParameter.html#ALE_ETLBox_ProcedureParameter__ctor
  commentId: M:ALE.ETLBox.ProcedureParameter.#ctor
  fullName: ALE.ETLBox.ProcedureParameter.ProcedureParameter()
  nameWithType: ProcedureParameter.ProcedureParameter()
- uid: ALE.ETLBox.ProcedureParameter.#ctor(System.String,System.String)
  name: ProcedureParameter(String, String)
  href: api/ALE.ETLBox.ProcedureParameter.html#ALE_ETLBox_ProcedureParameter__ctor_System_String_System_String_
  commentId: M:ALE.ETLBox.ProcedureParameter.#ctor(System.String,System.String)
  fullName: ALE.ETLBox.ProcedureParameter.ProcedureParameter(System.String, System.String)
  nameWithType: ProcedureParameter.ProcedureParameter(String, String)
- uid: ALE.ETLBox.ProcedureParameter.#ctor(System.String,System.String,System.String)
  name: ProcedureParameter(String, String, String)
  href: api/ALE.ETLBox.ProcedureParameter.html#ALE_ETLBox_ProcedureParameter__ctor_System_String_System_String_System_String_
  commentId: M:ALE.ETLBox.ProcedureParameter.#ctor(System.String,System.String,System.String)
  fullName: ALE.ETLBox.ProcedureParameter.ProcedureParameter(System.String, System.String, System.String)
  nameWithType: ProcedureParameter.ProcedureParameter(String, String, String)
- uid: ALE.ETLBox.ProcedureParameter.#ctor*
  name: ProcedureParameter
  href: api/ALE.ETLBox.ProcedureParameter.html#ALE_ETLBox_ProcedureParameter__ctor_
  commentId: Overload:ALE.ETLBox.ProcedureParameter.#ctor
  isSpec: "True"
  fullName: ALE.ETLBox.ProcedureParameter.ProcedureParameter
  nameWithType: ProcedureParameter.ProcedureParameter
- uid: ALE.ETLBox.ProcedureParameter.DataType
  name: DataType
  href: api/ALE.ETLBox.ProcedureParameter.html#ALE_ETLBox_ProcedureParameter_DataType
  commentId: P:ALE.ETLBox.ProcedureParameter.DataType
  fullName: ALE.ETLBox.ProcedureParameter.DataType
  nameWithType: ProcedureParameter.DataType
- uid: ALE.ETLBox.ProcedureParameter.DataType*
  name: DataType
  href: api/ALE.ETLBox.ProcedureParameter.html#ALE_ETLBox_ProcedureParameter_DataType_
  commentId: Overload:ALE.ETLBox.ProcedureParameter.DataType
  isSpec: "True"
  fullName: ALE.ETLBox.ProcedureParameter.DataType
  nameWithType: ProcedureParameter.DataType
- uid: ALE.ETLBox.ProcedureParameter.DefaultValue
  name: DefaultValue
  href: api/ALE.ETLBox.ProcedureParameter.html#ALE_ETLBox_ProcedureParameter_DefaultValue
  commentId: P:ALE.ETLBox.ProcedureParameter.DefaultValue
  fullName: ALE.ETLBox.ProcedureParameter.DefaultValue
  nameWithType: ProcedureParameter.DefaultValue
- uid: ALE.ETLBox.ProcedureParameter.DefaultValue*
  name: DefaultValue
  href: api/ALE.ETLBox.ProcedureParameter.html#ALE_ETLBox_ProcedureParameter_DefaultValue_
  commentId: Overload:ALE.ETLBox.ProcedureParameter.DefaultValue
  isSpec: "True"
  fullName: ALE.ETLBox.ProcedureParameter.DefaultValue
  nameWithType: ProcedureParameter.DefaultValue
- uid: ALE.ETLBox.ProcedureParameter.HasDefaultValue
  name: HasDefaultValue
  href: api/ALE.ETLBox.ProcedureParameter.html#ALE_ETLBox_ProcedureParameter_HasDefaultValue
  commentId: P:ALE.ETLBox.ProcedureParameter.HasDefaultValue
  fullName: ALE.ETLBox.ProcedureParameter.HasDefaultValue
  nameWithType: ProcedureParameter.HasDefaultValue
- uid: ALE.ETLBox.ProcedureParameter.HasDefaultValue*
  name: HasDefaultValue
  href: api/ALE.ETLBox.ProcedureParameter.html#ALE_ETLBox_ProcedureParameter_HasDefaultValue_
  commentId: Overload:ALE.ETLBox.ProcedureParameter.HasDefaultValue
  isSpec: "True"
  fullName: ALE.ETLBox.ProcedureParameter.HasDefaultValue
  nameWithType: ProcedureParameter.HasDefaultValue
- uid: ALE.ETLBox.ProcedureParameter.Name
  name: Name
  href: api/ALE.ETLBox.ProcedureParameter.html#ALE_ETLBox_ProcedureParameter_Name
  commentId: P:ALE.ETLBox.ProcedureParameter.Name
  fullName: ALE.ETLBox.ProcedureParameter.Name
  nameWithType: ProcedureParameter.Name
- uid: ALE.ETLBox.ProcedureParameter.Name*
  name: Name
  href: api/ALE.ETLBox.ProcedureParameter.html#ALE_ETLBox_ProcedureParameter_Name_
  commentId: Overload:ALE.ETLBox.ProcedureParameter.Name
  isSpec: "True"
  fullName: ALE.ETLBox.ProcedureParameter.Name
  nameWithType: ProcedureParameter.Name
- uid: ALE.ETLBox.ProcedureParameter.Out
  name: Out
  href: api/ALE.ETLBox.ProcedureParameter.html#ALE_ETLBox_ProcedureParameter_Out
  commentId: P:ALE.ETLBox.ProcedureParameter.Out
  fullName: ALE.ETLBox.ProcedureParameter.Out
  nameWithType: ProcedureParameter.Out
- uid: ALE.ETLBox.ProcedureParameter.Out*
  name: Out
  href: api/ALE.ETLBox.ProcedureParameter.html#ALE_ETLBox_ProcedureParameter_Out_
  commentId: Overload:ALE.ETLBox.ProcedureParameter.Out
  isSpec: "True"
  fullName: ALE.ETLBox.ProcedureParameter.Out
  nameWithType: ProcedureParameter.Out
- uid: ALE.ETLBox.ProcedureParameter.ReadOnly
  name: ReadOnly
  href: api/ALE.ETLBox.ProcedureParameter.html#ALE_ETLBox_ProcedureParameter_ReadOnly
  commentId: P:ALE.ETLBox.ProcedureParameter.ReadOnly
  fullName: ALE.ETLBox.ProcedureParameter.ReadOnly
  nameWithType: ProcedureParameter.ReadOnly
- uid: ALE.ETLBox.ProcedureParameter.ReadOnly*
  name: ReadOnly
  href: api/ALE.ETLBox.ProcedureParameter.html#ALE_ETLBox_ProcedureParameter_ReadOnly_
  commentId: Overload:ALE.ETLBox.ProcedureParameter.ReadOnly
  isSpec: "True"
  fullName: ALE.ETLBox.ProcedureParameter.ReadOnly
  nameWithType: ProcedureParameter.ReadOnly
- uid: ALE.ETLBox.QueryParameter
  name: QueryParameter
  href: api/ALE.ETLBox.QueryParameter.html
  commentId: T:ALE.ETLBox.QueryParameter
  fullName: ALE.ETLBox.QueryParameter
  nameWithType: QueryParameter
- uid: ALE.ETLBox.QueryParameter.#ctor(System.String,System.String,System.Object)
  name: QueryParameter(String, String, Object)
  href: api/ALE.ETLBox.QueryParameter.html#ALE_ETLBox_QueryParameter__ctor_System_String_System_String_System_Object_
  commentId: M:ALE.ETLBox.QueryParameter.#ctor(System.String,System.String,System.Object)
  fullName: ALE.ETLBox.QueryParameter.QueryParameter(System.String, System.String, System.Object)
  nameWithType: QueryParameter.QueryParameter(String, String, Object)
- uid: ALE.ETLBox.QueryParameter.#ctor*
  name: QueryParameter
  href: api/ALE.ETLBox.QueryParameter.html#ALE_ETLBox_QueryParameter__ctor_
  commentId: Overload:ALE.ETLBox.QueryParameter.#ctor
  isSpec: "True"
  fullName: ALE.ETLBox.QueryParameter.QueryParameter
  nameWithType: QueryParameter.QueryParameter
- uid: ALE.ETLBox.QueryParameter.DBType
  name: DBType
  href: api/ALE.ETLBox.QueryParameter.html#ALE_ETLBox_QueryParameter_DBType
  commentId: P:ALE.ETLBox.QueryParameter.DBType
  fullName: ALE.ETLBox.QueryParameter.DBType
  nameWithType: QueryParameter.DBType
- uid: ALE.ETLBox.QueryParameter.DBType*
  name: DBType
  href: api/ALE.ETLBox.QueryParameter.html#ALE_ETLBox_QueryParameter_DBType_
  commentId: Overload:ALE.ETLBox.QueryParameter.DBType
  isSpec: "True"
  fullName: ALE.ETLBox.QueryParameter.DBType
  nameWithType: QueryParameter.DBType
- uid: ALE.ETLBox.QueryParameter.Name
  name: Name
  href: api/ALE.ETLBox.QueryParameter.html#ALE_ETLBox_QueryParameter_Name
  commentId: P:ALE.ETLBox.QueryParameter.Name
  fullName: ALE.ETLBox.QueryParameter.Name
  nameWithType: QueryParameter.Name
- uid: ALE.ETLBox.QueryParameter.Name*
  name: Name
  href: api/ALE.ETLBox.QueryParameter.html#ALE_ETLBox_QueryParameter_Name_
  commentId: Overload:ALE.ETLBox.QueryParameter.Name
  isSpec: "True"
  fullName: ALE.ETLBox.QueryParameter.Name
  nameWithType: QueryParameter.Name
- uid: ALE.ETLBox.QueryParameter.Type
  name: Type
  href: api/ALE.ETLBox.QueryParameter.html#ALE_ETLBox_QueryParameter_Type
  commentId: P:ALE.ETLBox.QueryParameter.Type
  fullName: ALE.ETLBox.QueryParameter.Type
  nameWithType: QueryParameter.Type
- uid: ALE.ETLBox.QueryParameter.Type*
  name: Type
  href: api/ALE.ETLBox.QueryParameter.html#ALE_ETLBox_QueryParameter_Type_
  commentId: Overload:ALE.ETLBox.QueryParameter.Type
  isSpec: "True"
  fullName: ALE.ETLBox.QueryParameter.Type
  nameWithType: QueryParameter.Type
- uid: ALE.ETLBox.QueryParameter.Value
  name: Value
  href: api/ALE.ETLBox.QueryParameter.html#ALE_ETLBox_QueryParameter_Value
  commentId: P:ALE.ETLBox.QueryParameter.Value
  fullName: ALE.ETLBox.QueryParameter.Value
  nameWithType: QueryParameter.Value
- uid: ALE.ETLBox.QueryParameter.Value*
  name: Value
  href: api/ALE.ETLBox.QueryParameter.html#ALE_ETLBox_QueryParameter_Value_
  commentId: Overload:ALE.ETLBox.QueryParameter.Value
  isSpec: "True"
  fullName: ALE.ETLBox.QueryParameter.Value
  nameWithType: QueryParameter.Value
- uid: ALE.ETLBox.SqlConnectionString
  name: SqlConnectionString
  href: api/ALE.ETLBox.SqlConnectionString.html
  commentId: T:ALE.ETLBox.SqlConnectionString
  fullName: ALE.ETLBox.SqlConnectionString
  nameWithType: SqlConnectionString
- uid: ALE.ETLBox.SqlConnectionString.#ctor
  name: SqlConnectionString()
  href: api/ALE.ETLBox.SqlConnectionString.html#ALE_ETLBox_SqlConnectionString__ctor
  commentId: M:ALE.ETLBox.SqlConnectionString.#ctor
  fullName: ALE.ETLBox.SqlConnectionString.SqlConnectionString()
  nameWithType: SqlConnectionString.SqlConnectionString()
- uid: ALE.ETLBox.SqlConnectionString.#ctor(System.String)
  name: SqlConnectionString(String)
  href: api/ALE.ETLBox.SqlConnectionString.html#ALE_ETLBox_SqlConnectionString__ctor_System_String_
  commentId: M:ALE.ETLBox.SqlConnectionString.#ctor(System.String)
  fullName: ALE.ETLBox.SqlConnectionString.SqlConnectionString(System.String)
  nameWithType: SqlConnectionString.SqlConnectionString(String)
- uid: ALE.ETLBox.SqlConnectionString.#ctor*
  name: SqlConnectionString
  href: api/ALE.ETLBox.SqlConnectionString.html#ALE_ETLBox_SqlConnectionString__ctor_
  commentId: Overload:ALE.ETLBox.SqlConnectionString.#ctor
  isSpec: "True"
  fullName: ALE.ETLBox.SqlConnectionString.SqlConnectionString
  nameWithType: SqlConnectionString.SqlConnectionString
- uid: ALE.ETLBox.SqlConnectionString.DBName
  name: DBName
  href: api/ALE.ETLBox.SqlConnectionString.html#ALE_ETLBox_SqlConnectionString_DBName
  commentId: P:ALE.ETLBox.SqlConnectionString.DBName
  fullName: ALE.ETLBox.SqlConnectionString.DBName
  nameWithType: SqlConnectionString.DBName
- uid: ALE.ETLBox.SqlConnectionString.DBName*
  name: DBName
  href: api/ALE.ETLBox.SqlConnectionString.html#ALE_ETLBox_SqlConnectionString_DBName_
  commentId: Overload:ALE.ETLBox.SqlConnectionString.DBName
  isSpec: "True"
  fullName: ALE.ETLBox.SqlConnectionString.DBName
  nameWithType: SqlConnectionString.DBName
- uid: ALE.ETLBox.SqlConnectionString.GetConnectionWithoutCatalog
  name: GetConnectionWithoutCatalog()
  href: api/ALE.ETLBox.SqlConnectionString.html#ALE_ETLBox_SqlConnectionString_GetConnectionWithoutCatalog
  commentId: M:ALE.ETLBox.SqlConnectionString.GetConnectionWithoutCatalog
  fullName: ALE.ETLBox.SqlConnectionString.GetConnectionWithoutCatalog()
  nameWithType: SqlConnectionString.GetConnectionWithoutCatalog()
- uid: ALE.ETLBox.SqlConnectionString.GetConnectionWithoutCatalog*
  name: GetConnectionWithoutCatalog
  href: api/ALE.ETLBox.SqlConnectionString.html#ALE_ETLBox_SqlConnectionString_GetConnectionWithoutCatalog_
  commentId: Overload:ALE.ETLBox.SqlConnectionString.GetConnectionWithoutCatalog
  isSpec: "True"
  fullName: ALE.ETLBox.SqlConnectionString.GetConnectionWithoutCatalog
  nameWithType: SqlConnectionString.GetConnectionWithoutCatalog
- uid: ALE.ETLBox.SqlConnectionString.GetMasterConnection
  name: GetMasterConnection()
  href: api/ALE.ETLBox.SqlConnectionString.html#ALE_ETLBox_SqlConnectionString_GetMasterConnection
  commentId: M:ALE.ETLBox.SqlConnectionString.GetMasterConnection
  fullName: ALE.ETLBox.SqlConnectionString.GetMasterConnection()
  nameWithType: SqlConnectionString.GetMasterConnection()
- uid: ALE.ETLBox.SqlConnectionString.GetMasterConnection*
  name: GetMasterConnection
  href: api/ALE.ETLBox.SqlConnectionString.html#ALE_ETLBox_SqlConnectionString_GetMasterConnection_
  commentId: Overload:ALE.ETLBox.SqlConnectionString.GetMasterConnection
  isSpec: "True"
  fullName: ALE.ETLBox.SqlConnectionString.GetMasterConnection
  nameWithType: SqlConnectionString.GetMasterConnection
- uid: ALE.ETLBox.SqlConnectionString.op_Implicit(System.String)~ALE.ETLBox.SqlConnectionString
  name: Implicit(String to SqlConnectionString)
  href: api/ALE.ETLBox.SqlConnectionString.html#ALE_ETLBox_SqlConnectionString_op_Implicit_System_String__ALE_ETLBox_SqlConnectionString
  commentId: M:ALE.ETLBox.SqlConnectionString.op_Implicit(System.String)~ALE.ETLBox.SqlConnectionString
  name.vb: Widening(String to SqlConnectionString)
  fullName: ALE.ETLBox.SqlConnectionString.Implicit(System.String to ALE.ETLBox.SqlConnectionString)
  fullName.vb: ALE.ETLBox.SqlConnectionString.Widening(System.String to ALE.ETLBox.SqlConnectionString)
  nameWithType: SqlConnectionString.Implicit(String to SqlConnectionString)
  nameWithType.vb: SqlConnectionString.Widening(String to SqlConnectionString)
- uid: ALE.ETLBox.SqlConnectionString.op_Implicit*
  name: Implicit
  href: api/ALE.ETLBox.SqlConnectionString.html#ALE_ETLBox_SqlConnectionString_op_Implicit_
  commentId: Overload:ALE.ETLBox.SqlConnectionString.op_Implicit
  isSpec: "True"
  name.vb: Widening
  fullName: ALE.ETLBox.SqlConnectionString.Implicit
  fullName.vb: ALE.ETLBox.SqlConnectionString.Widening
  nameWithType: SqlConnectionString.Implicit
  nameWithType.vb: SqlConnectionString.Widening
- uid: ALE.ETLBox.SqlConnectionString.SqlConnectionStringBuilder
  name: SqlConnectionStringBuilder
  href: api/ALE.ETLBox.SqlConnectionString.html#ALE_ETLBox_SqlConnectionString_SqlConnectionStringBuilder
  commentId: P:ALE.ETLBox.SqlConnectionString.SqlConnectionStringBuilder
  fullName: ALE.ETLBox.SqlConnectionString.SqlConnectionStringBuilder
  nameWithType: SqlConnectionString.SqlConnectionStringBuilder
- uid: ALE.ETLBox.SqlConnectionString.SqlConnectionStringBuilder*
  name: SqlConnectionStringBuilder
  href: api/ALE.ETLBox.SqlConnectionString.html#ALE_ETLBox_SqlConnectionString_SqlConnectionStringBuilder_
  commentId: Overload:ALE.ETLBox.SqlConnectionString.SqlConnectionStringBuilder
  isSpec: "True"
  fullName: ALE.ETLBox.SqlConnectionString.SqlConnectionStringBuilder
  nameWithType: SqlConnectionString.SqlConnectionStringBuilder
- uid: ALE.ETLBox.SqlConnectionString.ToString
  name: ToString()
  href: api/ALE.ETLBox.SqlConnectionString.html#ALE_ETLBox_SqlConnectionString_ToString
  commentId: M:ALE.ETLBox.SqlConnectionString.ToString
  fullName: ALE.ETLBox.SqlConnectionString.ToString()
  nameWithType: SqlConnectionString.ToString()
- uid: ALE.ETLBox.SqlConnectionString.ToString*
  name: ToString
  href: api/ALE.ETLBox.SqlConnectionString.html#ALE_ETLBox_SqlConnectionString_ToString_
  commentId: Overload:ALE.ETLBox.SqlConnectionString.ToString
  isSpec: "True"
  fullName: ALE.ETLBox.SqlConnectionString.ToString
  nameWithType: SqlConnectionString.ToString
- uid: ALE.ETLBox.SqlConnectionString.Value
  name: Value
  href: api/ALE.ETLBox.SqlConnectionString.html#ALE_ETLBox_SqlConnectionString_Value
  commentId: P:ALE.ETLBox.SqlConnectionString.Value
  fullName: ALE.ETLBox.SqlConnectionString.Value
  nameWithType: SqlConnectionString.Value
- uid: ALE.ETLBox.SqlConnectionString.Value*
  name: Value
  href: api/ALE.ETLBox.SqlConnectionString.html#ALE_ETLBox_SqlConnectionString_Value_
  commentId: Overload:ALE.ETLBox.SqlConnectionString.Value
  isSpec: "True"
  fullName: ALE.ETLBox.SqlConnectionString.Value
  nameWithType: SqlConnectionString.Value
- uid: ALE.ETLBox.SQLiteConnectionString
  name: SQLiteConnectionString
  href: api/ALE.ETLBox.SQLiteConnectionString.html
  commentId: T:ALE.ETLBox.SQLiteConnectionString
  fullName: ALE.ETLBox.SQLiteConnectionString
  nameWithType: SQLiteConnectionString
- uid: ALE.ETLBox.SQLiteConnectionString.#ctor
  name: SQLiteConnectionString()
  href: api/ALE.ETLBox.SQLiteConnectionString.html#ALE_ETLBox_SQLiteConnectionString__ctor
  commentId: M:ALE.ETLBox.SQLiteConnectionString.#ctor
  fullName: ALE.ETLBox.SQLiteConnectionString.SQLiteConnectionString()
  nameWithType: SQLiteConnectionString.SQLiteConnectionString()
- uid: ALE.ETLBox.SQLiteConnectionString.#ctor(System.String)
  name: SQLiteConnectionString(String)
  href: api/ALE.ETLBox.SQLiteConnectionString.html#ALE_ETLBox_SQLiteConnectionString__ctor_System_String_
  commentId: M:ALE.ETLBox.SQLiteConnectionString.#ctor(System.String)
  fullName: ALE.ETLBox.SQLiteConnectionString.SQLiteConnectionString(System.String)
  nameWithType: SQLiteConnectionString.SQLiteConnectionString(String)
- uid: ALE.ETLBox.SQLiteConnectionString.#ctor*
  name: SQLiteConnectionString
  href: api/ALE.ETLBox.SQLiteConnectionString.html#ALE_ETLBox_SQLiteConnectionString__ctor_
  commentId: Overload:ALE.ETLBox.SQLiteConnectionString.#ctor
  isSpec: "True"
  fullName: ALE.ETLBox.SQLiteConnectionString.SQLiteConnectionString
  nameWithType: SQLiteConnectionString.SQLiteConnectionString
- uid: ALE.ETLBox.SQLiteConnectionString.OdbcConnectionStringBuilder
  name: OdbcConnectionStringBuilder
  href: api/ALE.ETLBox.SQLiteConnectionString.html#ALE_ETLBox_SQLiteConnectionString_OdbcConnectionStringBuilder
  commentId: P:ALE.ETLBox.SQLiteConnectionString.OdbcConnectionStringBuilder
  fullName: ALE.ETLBox.SQLiteConnectionString.OdbcConnectionStringBuilder
  nameWithType: SQLiteConnectionString.OdbcConnectionStringBuilder
- uid: ALE.ETLBox.SQLiteConnectionString.OdbcConnectionStringBuilder*
  name: OdbcConnectionStringBuilder
  href: api/ALE.ETLBox.SQLiteConnectionString.html#ALE_ETLBox_SQLiteConnectionString_OdbcConnectionStringBuilder_
  commentId: Overload:ALE.ETLBox.SQLiteConnectionString.OdbcConnectionStringBuilder
  isSpec: "True"
  fullName: ALE.ETLBox.SQLiteConnectionString.OdbcConnectionStringBuilder
  nameWithType: SQLiteConnectionString.OdbcConnectionStringBuilder
- uid: ALE.ETLBox.SQLiteConnectionString.op_Implicit(System.String)~ALE.ETLBox.SQLiteConnectionString
  name: Implicit(String to SQLiteConnectionString)
  href: api/ALE.ETLBox.SQLiteConnectionString.html#ALE_ETLBox_SQLiteConnectionString_op_Implicit_System_String__ALE_ETLBox_SQLiteConnectionString
  commentId: M:ALE.ETLBox.SQLiteConnectionString.op_Implicit(System.String)~ALE.ETLBox.SQLiteConnectionString
  name.vb: Widening(String to SQLiteConnectionString)
  fullName: ALE.ETLBox.SQLiteConnectionString.Implicit(System.String to ALE.ETLBox.SQLiteConnectionString)
  fullName.vb: ALE.ETLBox.SQLiteConnectionString.Widening(System.String to ALE.ETLBox.SQLiteConnectionString)
  nameWithType: SQLiteConnectionString.Implicit(String to SQLiteConnectionString)
  nameWithType.vb: SQLiteConnectionString.Widening(String to SQLiteConnectionString)
- uid: ALE.ETLBox.SQLiteConnectionString.op_Implicit*
  name: Implicit
  href: api/ALE.ETLBox.SQLiteConnectionString.html#ALE_ETLBox_SQLiteConnectionString_op_Implicit_
  commentId: Overload:ALE.ETLBox.SQLiteConnectionString.op_Implicit
  isSpec: "True"
  name.vb: Widening
  fullName: ALE.ETLBox.SQLiteConnectionString.Implicit
  fullName.vb: ALE.ETLBox.SQLiteConnectionString.Widening
  nameWithType: SQLiteConnectionString.Implicit
  nameWithType.vb: SQLiteConnectionString.Widening
- uid: ALE.ETLBox.SQLiteConnectionString.ToString
  name: ToString()
  href: api/ALE.ETLBox.SQLiteConnectionString.html#ALE_ETLBox_SQLiteConnectionString_ToString
  commentId: M:ALE.ETLBox.SQLiteConnectionString.ToString
  fullName: ALE.ETLBox.SQLiteConnectionString.ToString()
  nameWithType: SQLiteConnectionString.ToString()
- uid: ALE.ETLBox.SQLiteConnectionString.ToString*
  name: ToString
  href: api/ALE.ETLBox.SQLiteConnectionString.html#ALE_ETLBox_SQLiteConnectionString_ToString_
  commentId: Overload:ALE.ETLBox.SQLiteConnectionString.ToString
  isSpec: "True"
  fullName: ALE.ETLBox.SQLiteConnectionString.ToString
  nameWithType: SQLiteConnectionString.ToString
- uid: ALE.ETLBox.SQLiteConnectionString.Value
  name: Value
  href: api/ALE.ETLBox.SQLiteConnectionString.html#ALE_ETLBox_SQLiteConnectionString_Value
  commentId: P:ALE.ETLBox.SQLiteConnectionString.Value
  fullName: ALE.ETLBox.SQLiteConnectionString.Value
  nameWithType: SQLiteConnectionString.Value
- uid: ALE.ETLBox.SQLiteConnectionString.Value*
  name: Value
  href: api/ALE.ETLBox.SQLiteConnectionString.html#ALE_ETLBox_SQLiteConnectionString_Value_
  commentId: Overload:ALE.ETLBox.SQLiteConnectionString.Value
  isSpec: "True"
  fullName: ALE.ETLBox.SQLiteConnectionString.Value
  nameWithType: SQLiteConnectionString.Value
- uid: ALE.ETLBox.TableColumn
  name: TableColumn
  href: api/ALE.ETLBox.TableColumn.html
  commentId: T:ALE.ETLBox.TableColumn
  fullName: ALE.ETLBox.TableColumn
  nameWithType: TableColumn
- uid: ALE.ETLBox.TableColumn.#ctor
  name: TableColumn()
  href: api/ALE.ETLBox.TableColumn.html#ALE_ETLBox_TableColumn__ctor
  commentId: M:ALE.ETLBox.TableColumn.#ctor
  fullName: ALE.ETLBox.TableColumn.TableColumn()
  nameWithType: TableColumn.TableColumn()
- uid: ALE.ETLBox.TableColumn.#ctor(System.String,System.String)
  name: TableColumn(String, String)
  href: api/ALE.ETLBox.TableColumn.html#ALE_ETLBox_TableColumn__ctor_System_String_System_String_
  commentId: M:ALE.ETLBox.TableColumn.#ctor(System.String,System.String)
  fullName: ALE.ETLBox.TableColumn.TableColumn(System.String, System.String)
  nameWithType: TableColumn.TableColumn(String, String)
- uid: ALE.ETLBox.TableColumn.#ctor(System.String,System.String,System.Boolean)
  name: TableColumn(String, String, Boolean)
  href: api/ALE.ETLBox.TableColumn.html#ALE_ETLBox_TableColumn__ctor_System_String_System_String_System_Boolean_
  commentId: M:ALE.ETLBox.TableColumn.#ctor(System.String,System.String,System.Boolean)
  fullName: ALE.ETLBox.TableColumn.TableColumn(System.String, System.String, System.Boolean)
  nameWithType: TableColumn.TableColumn(String, String, Boolean)
- uid: ALE.ETLBox.TableColumn.#ctor(System.String,System.String,System.Boolean,System.Boolean)
  name: TableColumn(String, String, Boolean, Boolean)
  href: api/ALE.ETLBox.TableColumn.html#ALE_ETLBox_TableColumn__ctor_System_String_System_String_System_Boolean_System_Boolean_
  commentId: M:ALE.ETLBox.TableColumn.#ctor(System.String,System.String,System.Boolean,System.Boolean)
  fullName: ALE.ETLBox.TableColumn.TableColumn(System.String, System.String, System.Boolean, System.Boolean)
  nameWithType: TableColumn.TableColumn(String, String, Boolean, Boolean)
- uid: ALE.ETLBox.TableColumn.#ctor(System.String,System.String,System.Boolean,System.Boolean,System.Boolean)
  name: TableColumn(String, String, Boolean, Boolean, Boolean)
  href: api/ALE.ETLBox.TableColumn.html#ALE_ETLBox_TableColumn__ctor_System_String_System_String_System_Boolean_System_Boolean_System_Boolean_
  commentId: M:ALE.ETLBox.TableColumn.#ctor(System.String,System.String,System.Boolean,System.Boolean,System.Boolean)
  fullName: ALE.ETLBox.TableColumn.TableColumn(System.String, System.String, System.Boolean, System.Boolean, System.Boolean)
  nameWithType: TableColumn.TableColumn(String, String, Boolean, Boolean, Boolean)
- uid: ALE.ETLBox.TableColumn.#ctor*
  name: TableColumn
  href: api/ALE.ETLBox.TableColumn.html#ALE_ETLBox_TableColumn__ctor_
  commentId: Overload:ALE.ETLBox.TableColumn.#ctor
  isSpec: "True"
  fullName: ALE.ETLBox.TableColumn.TableColumn
  nameWithType: TableColumn.TableColumn
- uid: ALE.ETLBox.TableColumn.AllowNulls
  name: AllowNulls
  href: api/ALE.ETLBox.TableColumn.html#ALE_ETLBox_TableColumn_AllowNulls
  commentId: P:ALE.ETLBox.TableColumn.AllowNulls
  fullName: ALE.ETLBox.TableColumn.AllowNulls
  nameWithType: TableColumn.AllowNulls
- uid: ALE.ETLBox.TableColumn.AllowNulls*
  name: AllowNulls
  href: api/ALE.ETLBox.TableColumn.html#ALE_ETLBox_TableColumn_AllowNulls_
  commentId: Overload:ALE.ETLBox.TableColumn.AllowNulls
  isSpec: "True"
  fullName: ALE.ETLBox.TableColumn.AllowNulls
  nameWithType: TableColumn.AllowNulls
- uid: ALE.ETLBox.TableColumn.Collation
  name: Collation
  href: api/ALE.ETLBox.TableColumn.html#ALE_ETLBox_TableColumn_Collation
  commentId: P:ALE.ETLBox.TableColumn.Collation
  fullName: ALE.ETLBox.TableColumn.Collation
  nameWithType: TableColumn.Collation
- uid: ALE.ETLBox.TableColumn.Collation*
  name: Collation
  href: api/ALE.ETLBox.TableColumn.html#ALE_ETLBox_TableColumn_Collation_
  commentId: Overload:ALE.ETLBox.TableColumn.Collation
  isSpec: "True"
  fullName: ALE.ETLBox.TableColumn.Collation
  nameWithType: TableColumn.Collation
- uid: ALE.ETLBox.TableColumn.ComputedColumn
  name: ComputedColumn
  href: api/ALE.ETLBox.TableColumn.html#ALE_ETLBox_TableColumn_ComputedColumn
  commentId: P:ALE.ETLBox.TableColumn.ComputedColumn
  fullName: ALE.ETLBox.TableColumn.ComputedColumn
  nameWithType: TableColumn.ComputedColumn
- uid: ALE.ETLBox.TableColumn.ComputedColumn*
  name: ComputedColumn
  href: api/ALE.ETLBox.TableColumn.html#ALE_ETLBox_TableColumn_ComputedColumn_
  commentId: Overload:ALE.ETLBox.TableColumn.ComputedColumn
  isSpec: "True"
  fullName: ALE.ETLBox.TableColumn.ComputedColumn
  nameWithType: TableColumn.ComputedColumn
- uid: ALE.ETLBox.TableColumn.DataSetColumn
  name: DataSetColumn
  href: api/ALE.ETLBox.TableColumn.html#ALE_ETLBox_TableColumn_DataSetColumn
  commentId: P:ALE.ETLBox.TableColumn.DataSetColumn
  fullName: ALE.ETLBox.TableColumn.DataSetColumn
  nameWithType: TableColumn.DataSetColumn
- uid: ALE.ETLBox.TableColumn.DataSetColumn*
  name: DataSetColumn
  href: api/ALE.ETLBox.TableColumn.html#ALE_ETLBox_TableColumn_DataSetColumn_
  commentId: Overload:ALE.ETLBox.TableColumn.DataSetColumn
  isSpec: "True"
  fullName: ALE.ETLBox.TableColumn.DataSetColumn
  nameWithType: TableColumn.DataSetColumn
- uid: ALE.ETLBox.TableColumn.DataType
  name: DataType
  href: api/ALE.ETLBox.TableColumn.html#ALE_ETLBox_TableColumn_DataType
  commentId: P:ALE.ETLBox.TableColumn.DataType
  fullName: ALE.ETLBox.TableColumn.DataType
  nameWithType: TableColumn.DataType
- uid: ALE.ETLBox.TableColumn.DataType*
  name: DataType
  href: api/ALE.ETLBox.TableColumn.html#ALE_ETLBox_TableColumn_DataType_
  commentId: Overload:ALE.ETLBox.TableColumn.DataType
  isSpec: "True"
  fullName: ALE.ETLBox.TableColumn.DataType
  nameWithType: TableColumn.DataType
- uid: ALE.ETLBox.TableColumn.DefaultValue
  name: DefaultValue
  href: api/ALE.ETLBox.TableColumn.html#ALE_ETLBox_TableColumn_DefaultValue
  commentId: P:ALE.ETLBox.TableColumn.DefaultValue
  fullName: ALE.ETLBox.TableColumn.DefaultValue
  nameWithType: TableColumn.DefaultValue
- uid: ALE.ETLBox.TableColumn.DefaultValue*
  name: DefaultValue
  href: api/ALE.ETLBox.TableColumn.html#ALE_ETLBox_TableColumn_DefaultValue_
  commentId: Overload:ALE.ETLBox.TableColumn.DefaultValue
  isSpec: "True"
  fullName: ALE.ETLBox.TableColumn.DefaultValue
  nameWithType: TableColumn.DefaultValue
- uid: ALE.ETLBox.TableColumn.HasComputedColumn
  name: HasComputedColumn
  href: api/ALE.ETLBox.TableColumn.html#ALE_ETLBox_TableColumn_HasComputedColumn
  commentId: P:ALE.ETLBox.TableColumn.HasComputedColumn
  fullName: ALE.ETLBox.TableColumn.HasComputedColumn
  nameWithType: TableColumn.HasComputedColumn
- uid: ALE.ETLBox.TableColumn.HasComputedColumn*
  name: HasComputedColumn
  href: api/ALE.ETLBox.TableColumn.html#ALE_ETLBox_TableColumn_HasComputedColumn_
  commentId: Overload:ALE.ETLBox.TableColumn.HasComputedColumn
  isSpec: "True"
  fullName: ALE.ETLBox.TableColumn.HasComputedColumn
  nameWithType: TableColumn.HasComputedColumn
- uid: ALE.ETLBox.TableColumn.IdentityIncrement
  name: IdentityIncrement
  href: api/ALE.ETLBox.TableColumn.html#ALE_ETLBox_TableColumn_IdentityIncrement
  commentId: P:ALE.ETLBox.TableColumn.IdentityIncrement
  fullName: ALE.ETLBox.TableColumn.IdentityIncrement
  nameWithType: TableColumn.IdentityIncrement
- uid: ALE.ETLBox.TableColumn.IdentityIncrement*
  name: IdentityIncrement
  href: api/ALE.ETLBox.TableColumn.html#ALE_ETLBox_TableColumn_IdentityIncrement_
  commentId: Overload:ALE.ETLBox.TableColumn.IdentityIncrement
  isSpec: "True"
  fullName: ALE.ETLBox.TableColumn.IdentityIncrement
  nameWithType: TableColumn.IdentityIncrement
- uid: ALE.ETLBox.TableColumn.IdentitySeed
  name: IdentitySeed
  href: api/ALE.ETLBox.TableColumn.html#ALE_ETLBox_TableColumn_IdentitySeed
  commentId: P:ALE.ETLBox.TableColumn.IdentitySeed
  fullName: ALE.ETLBox.TableColumn.IdentitySeed
  nameWithType: TableColumn.IdentitySeed
- uid: ALE.ETLBox.TableColumn.IdentitySeed*
  name: IdentitySeed
  href: api/ALE.ETLBox.TableColumn.html#ALE_ETLBox_TableColumn_IdentitySeed_
  commentId: Overload:ALE.ETLBox.TableColumn.IdentitySeed
  isSpec: "True"
  fullName: ALE.ETLBox.TableColumn.IdentitySeed
  nameWithType: TableColumn.IdentitySeed
- uid: ALE.ETLBox.TableColumn.IsIdentity
  name: IsIdentity
  href: api/ALE.ETLBox.TableColumn.html#ALE_ETLBox_TableColumn_IsIdentity
  commentId: P:ALE.ETLBox.TableColumn.IsIdentity
  fullName: ALE.ETLBox.TableColumn.IsIdentity
  nameWithType: TableColumn.IsIdentity
- uid: ALE.ETLBox.TableColumn.IsIdentity*
  name: IsIdentity
  href: api/ALE.ETLBox.TableColumn.html#ALE_ETLBox_TableColumn_IsIdentity_
  commentId: Overload:ALE.ETLBox.TableColumn.IsIdentity
  isSpec: "True"
  fullName: ALE.ETLBox.TableColumn.IsIdentity
  nameWithType: TableColumn.IsIdentity
- uid: ALE.ETLBox.TableColumn.IsPrimaryKey
  name: IsPrimaryKey
  href: api/ALE.ETLBox.TableColumn.html#ALE_ETLBox_TableColumn_IsPrimaryKey
  commentId: P:ALE.ETLBox.TableColumn.IsPrimaryKey
  fullName: ALE.ETLBox.TableColumn.IsPrimaryKey
  nameWithType: TableColumn.IsPrimaryKey
- uid: ALE.ETLBox.TableColumn.IsPrimaryKey*
  name: IsPrimaryKey
  href: api/ALE.ETLBox.TableColumn.html#ALE_ETLBox_TableColumn_IsPrimaryKey_
  commentId: Overload:ALE.ETLBox.TableColumn.IsPrimaryKey
  isSpec: "True"
  fullName: ALE.ETLBox.TableColumn.IsPrimaryKey
  nameWithType: TableColumn.IsPrimaryKey
- uid: ALE.ETLBox.TableColumn.Name
  name: Name
  href: api/ALE.ETLBox.TableColumn.html#ALE_ETLBox_TableColumn_Name
  commentId: P:ALE.ETLBox.TableColumn.Name
  fullName: ALE.ETLBox.TableColumn.Name
  nameWithType: TableColumn.Name
- uid: ALE.ETLBox.TableColumn.Name*
  name: Name
  href: api/ALE.ETLBox.TableColumn.html#ALE_ETLBox_TableColumn_Name_
  commentId: Overload:ALE.ETLBox.TableColumn.Name
  isSpec: "True"
  fullName: ALE.ETLBox.TableColumn.Name
  nameWithType: TableColumn.Name
- uid: ALE.ETLBox.TableColumn.NETDataType
  name: NETDataType
  href: api/ALE.ETLBox.TableColumn.html#ALE_ETLBox_TableColumn_NETDataType
  commentId: P:ALE.ETLBox.TableColumn.NETDataType
  fullName: ALE.ETLBox.TableColumn.NETDataType
  nameWithType: TableColumn.NETDataType
- uid: ALE.ETLBox.TableColumn.NETDataType*
  name: NETDataType
  href: api/ALE.ETLBox.TableColumn.html#ALE_ETLBox_TableColumn_NETDataType_
  commentId: Overload:ALE.ETLBox.TableColumn.NETDataType
  isSpec: "True"
  fullName: ALE.ETLBox.TableColumn.NETDataType
  nameWithType: TableColumn.NETDataType
- uid: ALE.ETLBox.TableColumn.SourceColumn
  name: SourceColumn
  href: api/ALE.ETLBox.TableColumn.html#ALE_ETLBox_TableColumn_SourceColumn
  commentId: P:ALE.ETLBox.TableColumn.SourceColumn
  fullName: ALE.ETLBox.TableColumn.SourceColumn
  nameWithType: TableColumn.SourceColumn
- uid: ALE.ETLBox.TableColumn.SourceColumn*
  name: SourceColumn
  href: api/ALE.ETLBox.TableColumn.html#ALE_ETLBox_TableColumn_SourceColumn_
  commentId: Overload:ALE.ETLBox.TableColumn.SourceColumn
  isSpec: "True"
  fullName: ALE.ETLBox.TableColumn.SourceColumn
  nameWithType: TableColumn.SourceColumn
- uid: ALE.ETLBox.TableData
  name: TableData
  href: api/ALE.ETLBox.TableData.html
  commentId: T:ALE.ETLBox.TableData
  fullName: ALE.ETLBox.TableData
  nameWithType: TableData
- uid: ALE.ETLBox.TableData.#ctor(ALE.ETLBox.TableDefinition)
  name: TableData(TableDefinition)
  href: api/ALE.ETLBox.TableData.html#ALE_ETLBox_TableData__ctor_ALE_ETLBox_TableDefinition_
  commentId: M:ALE.ETLBox.TableData.#ctor(ALE.ETLBox.TableDefinition)
  fullName: ALE.ETLBox.TableData.TableData(ALE.ETLBox.TableDefinition)
  nameWithType: TableData.TableData(TableDefinition)
- uid: ALE.ETLBox.TableData.#ctor(ALE.ETLBox.TableDefinition,System.Int32)
  name: TableData(TableDefinition, Int32)
  href: api/ALE.ETLBox.TableData.html#ALE_ETLBox_TableData__ctor_ALE_ETLBox_TableDefinition_System_Int32_
  commentId: M:ALE.ETLBox.TableData.#ctor(ALE.ETLBox.TableDefinition,System.Int32)
  fullName: ALE.ETLBox.TableData.TableData(ALE.ETLBox.TableDefinition, System.Int32)
  nameWithType: TableData.TableData(TableDefinition, Int32)
- uid: ALE.ETLBox.TableData.#ctor*
  name: TableData
  href: api/ALE.ETLBox.TableData.html#ALE_ETLBox_TableData__ctor_
  commentId: Overload:ALE.ETLBox.TableData.#ctor
  isSpec: "True"
  fullName: ALE.ETLBox.TableData.TableData
  nameWithType: TableData.TableData
- uid: ALE.ETLBox.TableData`1
  name: TableData<T>
  href: api/ALE.ETLBox.TableData-1.html
  commentId: T:ALE.ETLBox.TableData`1
  name.vb: TableData(Of T)
  fullName: ALE.ETLBox.TableData<T>
  fullName.vb: ALE.ETLBox.TableData(Of T)
  nameWithType: TableData<T>
  nameWithType.vb: TableData(Of T)
- uid: ALE.ETLBox.TableData`1.#ctor(ALE.ETLBox.TableDefinition)
  name: TableData(TableDefinition)
  href: api/ALE.ETLBox.TableData-1.html#ALE_ETLBox_TableData_1__ctor_ALE_ETLBox_TableDefinition_
  commentId: M:ALE.ETLBox.TableData`1.#ctor(ALE.ETLBox.TableDefinition)
  fullName: ALE.ETLBox.TableData<T>.TableData(ALE.ETLBox.TableDefinition)
  fullName.vb: ALE.ETLBox.TableData(Of T).TableData(ALE.ETLBox.TableDefinition)
  nameWithType: TableData<T>.TableData(TableDefinition)
  nameWithType.vb: TableData(Of T).TableData(TableDefinition)
- uid: ALE.ETLBox.TableData`1.#ctor(ALE.ETLBox.TableDefinition,System.Int32)
  name: TableData(TableDefinition, Int32)
  href: api/ALE.ETLBox.TableData-1.html#ALE_ETLBox_TableData_1__ctor_ALE_ETLBox_TableDefinition_System_Int32_
  commentId: M:ALE.ETLBox.TableData`1.#ctor(ALE.ETLBox.TableDefinition,System.Int32)
  fullName: ALE.ETLBox.TableData<T>.TableData(ALE.ETLBox.TableDefinition, System.Int32)
  fullName.vb: ALE.ETLBox.TableData(Of T).TableData(ALE.ETLBox.TableDefinition, System.Int32)
  nameWithType: TableData<T>.TableData(TableDefinition, Int32)
  nameWithType.vb: TableData(Of T).TableData(TableDefinition, Int32)
- uid: ALE.ETLBox.TableData`1.#ctor*
  name: TableData
  href: api/ALE.ETLBox.TableData-1.html#ALE_ETLBox_TableData_1__ctor_
  commentId: Overload:ALE.ETLBox.TableData`1.#ctor
  isSpec: "True"
  fullName: ALE.ETLBox.TableData<T>.TableData
  fullName.vb: ALE.ETLBox.TableData(Of T).TableData
  nameWithType: TableData<T>.TableData
  nameWithType.vb: TableData(Of T).TableData
- uid: ALE.ETLBox.TableData`1.Close
  name: Close()
  href: api/ALE.ETLBox.TableData-1.html#ALE_ETLBox_TableData_1_Close
  commentId: M:ALE.ETLBox.TableData`1.Close
  fullName: ALE.ETLBox.TableData<T>.Close()
  fullName.vb: ALE.ETLBox.TableData(Of T).Close()
  nameWithType: TableData<T>.Close()
  nameWithType.vb: TableData(Of T).Close()
- uid: ALE.ETLBox.TableData`1.Close*
  name: Close
  href: api/ALE.ETLBox.TableData-1.html#ALE_ETLBox_TableData_1_Close_
  commentId: Overload:ALE.ETLBox.TableData`1.Close
  isSpec: "True"
  fullName: ALE.ETLBox.TableData<T>.Close
  fullName.vb: ALE.ETLBox.TableData(Of T).Close
  nameWithType: TableData<T>.Close
  nameWithType.vb: TableData(Of T).Close
- uid: ALE.ETLBox.TableData`1.ColumnMapping
  name: ColumnMapping
  href: api/ALE.ETLBox.TableData-1.html#ALE_ETLBox_TableData_1_ColumnMapping
  commentId: P:ALE.ETLBox.TableData`1.ColumnMapping
  fullName: ALE.ETLBox.TableData<T>.ColumnMapping
  fullName.vb: ALE.ETLBox.TableData(Of T).ColumnMapping
  nameWithType: TableData<T>.ColumnMapping
  nameWithType.vb: TableData(Of T).ColumnMapping
- uid: ALE.ETLBox.TableData`1.ColumnMapping*
  name: ColumnMapping
  href: api/ALE.ETLBox.TableData-1.html#ALE_ETLBox_TableData_1_ColumnMapping_
  commentId: Overload:ALE.ETLBox.TableData`1.ColumnMapping
  isSpec: "True"
  fullName: ALE.ETLBox.TableData<T>.ColumnMapping
  fullName.vb: ALE.ETLBox.TableData(Of T).ColumnMapping
  nameWithType: TableData<T>.ColumnMapping
  nameWithType.vb: TableData(Of T).ColumnMapping
- uid: ALE.ETLBox.TableData`1.CurrentRow
  name: CurrentRow
  href: api/ALE.ETLBox.TableData-1.html#ALE_ETLBox_TableData_1_CurrentRow
  commentId: P:ALE.ETLBox.TableData`1.CurrentRow
  fullName: ALE.ETLBox.TableData<T>.CurrentRow
  fullName.vb: ALE.ETLBox.TableData(Of T).CurrentRow
  nameWithType: TableData<T>.CurrentRow
  nameWithType.vb: TableData(Of T).CurrentRow
- uid: ALE.ETLBox.TableData`1.CurrentRow*
  name: CurrentRow
  href: api/ALE.ETLBox.TableData-1.html#ALE_ETLBox_TableData_1_CurrentRow_
  commentId: Overload:ALE.ETLBox.TableData`1.CurrentRow
  isSpec: "True"
  fullName: ALE.ETLBox.TableData<T>.CurrentRow
  fullName.vb: ALE.ETLBox.TableData(Of T).CurrentRow
  nameWithType: TableData<T>.CurrentRow
  nameWithType.vb: TableData(Of T).CurrentRow
- uid: ALE.ETLBox.TableData`1.Depth
  name: Depth
  href: api/ALE.ETLBox.TableData-1.html#ALE_ETLBox_TableData_1_Depth
  commentId: P:ALE.ETLBox.TableData`1.Depth
  fullName: ALE.ETLBox.TableData<T>.Depth
  fullName.vb: ALE.ETLBox.TableData(Of T).Depth
  nameWithType: TableData<T>.Depth
  nameWithType.vb: TableData(Of T).Depth
- uid: ALE.ETLBox.TableData`1.Depth*
  name: Depth
  href: api/ALE.ETLBox.TableData-1.html#ALE_ETLBox_TableData_1_Depth_
  commentId: Overload:ALE.ETLBox.TableData`1.Depth
  isSpec: "True"
  fullName: ALE.ETLBox.TableData<T>.Depth
  fullName.vb: ALE.ETLBox.TableData(Of T).Depth
  nameWithType: TableData<T>.Depth
  nameWithType.vb: TableData(Of T).Depth
- uid: ALE.ETLBox.TableData`1.Dispose
  name: Dispose()
  href: api/ALE.ETLBox.TableData-1.html#ALE_ETLBox_TableData_1_Dispose
  commentId: M:ALE.ETLBox.TableData`1.Dispose
  fullName: ALE.ETLBox.TableData<T>.Dispose()
  fullName.vb: ALE.ETLBox.TableData(Of T).Dispose()
  nameWithType: TableData<T>.Dispose()
  nameWithType.vb: TableData(Of T).Dispose()
- uid: ALE.ETLBox.TableData`1.Dispose(System.Boolean)
  name: Dispose(Boolean)
  href: api/ALE.ETLBox.TableData-1.html#ALE_ETLBox_TableData_1_Dispose_System_Boolean_
  commentId: M:ALE.ETLBox.TableData`1.Dispose(System.Boolean)
  fullName: ALE.ETLBox.TableData<T>.Dispose(System.Boolean)
  fullName.vb: ALE.ETLBox.TableData(Of T).Dispose(System.Boolean)
  nameWithType: TableData<T>.Dispose(Boolean)
  nameWithType.vb: TableData(Of T).Dispose(Boolean)
- uid: ALE.ETLBox.TableData`1.Dispose*
  name: Dispose
  href: api/ALE.ETLBox.TableData-1.html#ALE_ETLBox_TableData_1_Dispose_
  commentId: Overload:ALE.ETLBox.TableData`1.Dispose
  isSpec: "True"
  fullName: ALE.ETLBox.TableData<T>.Dispose
  fullName.vb: ALE.ETLBox.TableData(Of T).Dispose
  nameWithType: TableData<T>.Dispose
  nameWithType.vb: TableData(Of T).Dispose
- uid: ALE.ETLBox.TableData`1.DynamicColumnNames
  name: DynamicColumnNames
  href: api/ALE.ETLBox.TableData-1.html#ALE_ETLBox_TableData_1_DynamicColumnNames
  commentId: P:ALE.ETLBox.TableData`1.DynamicColumnNames
  fullName: ALE.ETLBox.TableData<T>.DynamicColumnNames
  fullName.vb: ALE.ETLBox.TableData(Of T).DynamicColumnNames
  nameWithType: TableData<T>.DynamicColumnNames
  nameWithType.vb: TableData(Of T).DynamicColumnNames
- uid: ALE.ETLBox.TableData`1.DynamicColumnNames*
  name: DynamicColumnNames
  href: api/ALE.ETLBox.TableData-1.html#ALE_ETLBox_TableData_1_DynamicColumnNames_
  commentId: Overload:ALE.ETLBox.TableData`1.DynamicColumnNames
  isSpec: "True"
  fullName: ALE.ETLBox.TableData<T>.DynamicColumnNames
  fullName.vb: ALE.ETLBox.TableData(Of T).DynamicColumnNames
  nameWithType: TableData<T>.DynamicColumnNames
  nameWithType.vb: TableData(Of T).DynamicColumnNames
- uid: ALE.ETLBox.TableData`1.EstimatedBatchSize
  name: EstimatedBatchSize
  href: api/ALE.ETLBox.TableData-1.html#ALE_ETLBox_TableData_1_EstimatedBatchSize
  commentId: P:ALE.ETLBox.TableData`1.EstimatedBatchSize
  fullName: ALE.ETLBox.TableData<T>.EstimatedBatchSize
  fullName.vb: ALE.ETLBox.TableData(Of T).EstimatedBatchSize
  nameWithType: TableData<T>.EstimatedBatchSize
  nameWithType.vb: TableData(Of T).EstimatedBatchSize
- uid: ALE.ETLBox.TableData`1.EstimatedBatchSize*
  name: EstimatedBatchSize
  href: api/ALE.ETLBox.TableData-1.html#ALE_ETLBox_TableData_1_EstimatedBatchSize_
  commentId: Overload:ALE.ETLBox.TableData`1.EstimatedBatchSize
  isSpec: "True"
  fullName: ALE.ETLBox.TableData<T>.EstimatedBatchSize
  fullName.vb: ALE.ETLBox.TableData(Of T).EstimatedBatchSize
  nameWithType: TableData<T>.EstimatedBatchSize
  nameWithType.vb: TableData(Of T).EstimatedBatchSize
- uid: ALE.ETLBox.TableData`1.FieldCount
  name: FieldCount
  href: api/ALE.ETLBox.TableData-1.html#ALE_ETLBox_TableData_1_FieldCount
  commentId: P:ALE.ETLBox.TableData`1.FieldCount
  fullName: ALE.ETLBox.TableData<T>.FieldCount
  fullName.vb: ALE.ETLBox.TableData(Of T).FieldCount
  nameWithType: TableData<T>.FieldCount
  nameWithType.vb: TableData(Of T).FieldCount
- uid: ALE.ETLBox.TableData`1.FieldCount*
  name: FieldCount
  href: api/ALE.ETLBox.TableData-1.html#ALE_ETLBox_TableData_1_FieldCount_
  commentId: Overload:ALE.ETLBox.TableData`1.FieldCount
  isSpec: "True"
  fullName: ALE.ETLBox.TableData<T>.FieldCount
  fullName.vb: ALE.ETLBox.TableData(Of T).FieldCount
  nameWithType: TableData<T>.FieldCount
  nameWithType.vb: TableData(Of T).FieldCount
- uid: ALE.ETLBox.TableData`1.GetBoolean(System.Int32)
  name: GetBoolean(Int32)
  href: api/ALE.ETLBox.TableData-1.html#ALE_ETLBox_TableData_1_GetBoolean_System_Int32_
  commentId: M:ALE.ETLBox.TableData`1.GetBoolean(System.Int32)
  fullName: ALE.ETLBox.TableData<T>.GetBoolean(System.Int32)
  fullName.vb: ALE.ETLBox.TableData(Of T).GetBoolean(System.Int32)
  nameWithType: TableData<T>.GetBoolean(Int32)
  nameWithType.vb: TableData(Of T).GetBoolean(Int32)
- uid: ALE.ETLBox.TableData`1.GetBoolean*
  name: GetBoolean
  href: api/ALE.ETLBox.TableData-1.html#ALE_ETLBox_TableData_1_GetBoolean_
  commentId: Overload:ALE.ETLBox.TableData`1.GetBoolean
  isSpec: "True"
  fullName: ALE.ETLBox.TableData<T>.GetBoolean
  fullName.vb: ALE.ETLBox.TableData(Of T).GetBoolean
  nameWithType: TableData<T>.GetBoolean
  nameWithType.vb: TableData(Of T).GetBoolean
- uid: ALE.ETLBox.TableData`1.GetByte(System.Int32)
  name: GetByte(Int32)
  href: api/ALE.ETLBox.TableData-1.html#ALE_ETLBox_TableData_1_GetByte_System_Int32_
  commentId: M:ALE.ETLBox.TableData`1.GetByte(System.Int32)
  fullName: ALE.ETLBox.TableData<T>.GetByte(System.Int32)
  fullName.vb: ALE.ETLBox.TableData(Of T).GetByte(System.Int32)
  nameWithType: TableData<T>.GetByte(Int32)
  nameWithType.vb: TableData(Of T).GetByte(Int32)
- uid: ALE.ETLBox.TableData`1.GetByte*
  name: GetByte
  href: api/ALE.ETLBox.TableData-1.html#ALE_ETLBox_TableData_1_GetByte_
  commentId: Overload:ALE.ETLBox.TableData`1.GetByte
  isSpec: "True"
  fullName: ALE.ETLBox.TableData<T>.GetByte
  fullName.vb: ALE.ETLBox.TableData(Of T).GetByte
  nameWithType: TableData<T>.GetByte
  nameWithType.vb: TableData(Of T).GetByte
- uid: ALE.ETLBox.TableData`1.GetBytes(System.Int32,System.Int64,System.Byte[],System.Int32,System.Int32)
  name: GetBytes(Int32, Int64, Byte[], Int32, Int32)
  href: api/ALE.ETLBox.TableData-1.html#ALE_ETLBox_TableData_1_GetBytes_System_Int32_System_Int64_System_Byte___System_Int32_System_Int32_
  commentId: M:ALE.ETLBox.TableData`1.GetBytes(System.Int32,System.Int64,System.Byte[],System.Int32,System.Int32)
  name.vb: GetBytes(Int32, Int64, Byte(), Int32, Int32)
  fullName: ALE.ETLBox.TableData<T>.GetBytes(System.Int32, System.Int64, System.Byte[], System.Int32, System.Int32)
  fullName.vb: ALE.ETLBox.TableData(Of T).GetBytes(System.Int32, System.Int64, System.Byte(), System.Int32, System.Int32)
  nameWithType: TableData<T>.GetBytes(Int32, Int64, Byte[], Int32, Int32)
  nameWithType.vb: TableData(Of T).GetBytes(Int32, Int64, Byte(), Int32, Int32)
- uid: ALE.ETLBox.TableData`1.GetBytes*
  name: GetBytes
  href: api/ALE.ETLBox.TableData-1.html#ALE_ETLBox_TableData_1_GetBytes_
  commentId: Overload:ALE.ETLBox.TableData`1.GetBytes
  isSpec: "True"
  fullName: ALE.ETLBox.TableData<T>.GetBytes
  fullName.vb: ALE.ETLBox.TableData(Of T).GetBytes
  nameWithType: TableData<T>.GetBytes
  nameWithType.vb: TableData(Of T).GetBytes
- uid: ALE.ETLBox.TableData`1.GetChar(System.Int32)
  name: GetChar(Int32)
  href: api/ALE.ETLBox.TableData-1.html#ALE_ETLBox_TableData_1_GetChar_System_Int32_
  commentId: M:ALE.ETLBox.TableData`1.GetChar(System.Int32)
  fullName: ALE.ETLBox.TableData<T>.GetChar(System.Int32)
  fullName.vb: ALE.ETLBox.TableData(Of T).GetChar(System.Int32)
  nameWithType: TableData<T>.GetChar(Int32)
  nameWithType.vb: TableData(Of T).GetChar(Int32)
- uid: ALE.ETLBox.TableData`1.GetChar*
  name: GetChar
  href: api/ALE.ETLBox.TableData-1.html#ALE_ETLBox_TableData_1_GetChar_
  commentId: Overload:ALE.ETLBox.TableData`1.GetChar
  isSpec: "True"
  fullName: ALE.ETLBox.TableData<T>.GetChar
  fullName.vb: ALE.ETLBox.TableData(Of T).GetChar
  nameWithType: TableData<T>.GetChar
  nameWithType.vb: TableData(Of T).GetChar
- uid: ALE.ETLBox.TableData`1.GetChars(System.Int32,System.Int64,System.Char[],System.Int32,System.Int32)
  name: GetChars(Int32, Int64, Char[], Int32, Int32)
  href: api/ALE.ETLBox.TableData-1.html#ALE_ETLBox_TableData_1_GetChars_System_Int32_System_Int64_System_Char___System_Int32_System_Int32_
  commentId: M:ALE.ETLBox.TableData`1.GetChars(System.Int32,System.Int64,System.Char[],System.Int32,System.Int32)
  name.vb: GetChars(Int32, Int64, Char(), Int32, Int32)
  fullName: ALE.ETLBox.TableData<T>.GetChars(System.Int32, System.Int64, System.Char[], System.Int32, System.Int32)
  fullName.vb: ALE.ETLBox.TableData(Of T).GetChars(System.Int32, System.Int64, System.Char(), System.Int32, System.Int32)
  nameWithType: TableData<T>.GetChars(Int32, Int64, Char[], Int32, Int32)
  nameWithType.vb: TableData(Of T).GetChars(Int32, Int64, Char(), Int32, Int32)
- uid: ALE.ETLBox.TableData`1.GetChars*
  name: GetChars
  href: api/ALE.ETLBox.TableData-1.html#ALE_ETLBox_TableData_1_GetChars_
  commentId: Overload:ALE.ETLBox.TableData`1.GetChars
  isSpec: "True"
  fullName: ALE.ETLBox.TableData<T>.GetChars
  fullName.vb: ALE.ETLBox.TableData(Of T).GetChars
  nameWithType: TableData<T>.GetChars
  nameWithType.vb: TableData(Of T).GetChars
- uid: ALE.ETLBox.TableData`1.GetData(System.Int32)
  name: GetData(Int32)
  href: api/ALE.ETLBox.TableData-1.html#ALE_ETLBox_TableData_1_GetData_System_Int32_
  commentId: M:ALE.ETLBox.TableData`1.GetData(System.Int32)
  fullName: ALE.ETLBox.TableData<T>.GetData(System.Int32)
  fullName.vb: ALE.ETLBox.TableData(Of T).GetData(System.Int32)
  nameWithType: TableData<T>.GetData(Int32)
  nameWithType.vb: TableData(Of T).GetData(Int32)
- uid: ALE.ETLBox.TableData`1.GetData*
  name: GetData
  href: api/ALE.ETLBox.TableData-1.html#ALE_ETLBox_TableData_1_GetData_
  commentId: Overload:ALE.ETLBox.TableData`1.GetData
  isSpec: "True"
  fullName: ALE.ETLBox.TableData<T>.GetData
  fullName.vb: ALE.ETLBox.TableData(Of T).GetData
  nameWithType: TableData<T>.GetData
  nameWithType.vb: TableData(Of T).GetData
- uid: ALE.ETLBox.TableData`1.GetDataTypeName(System.Int32)
  name: GetDataTypeName(Int32)
  href: api/ALE.ETLBox.TableData-1.html#ALE_ETLBox_TableData_1_GetDataTypeName_System_Int32_
  commentId: M:ALE.ETLBox.TableData`1.GetDataTypeName(System.Int32)
  fullName: ALE.ETLBox.TableData<T>.GetDataTypeName(System.Int32)
  fullName.vb: ALE.ETLBox.TableData(Of T).GetDataTypeName(System.Int32)
  nameWithType: TableData<T>.GetDataTypeName(Int32)
  nameWithType.vb: TableData(Of T).GetDataTypeName(Int32)
- uid: ALE.ETLBox.TableData`1.GetDataTypeName*
  name: GetDataTypeName
  href: api/ALE.ETLBox.TableData-1.html#ALE_ETLBox_TableData_1_GetDataTypeName_
  commentId: Overload:ALE.ETLBox.TableData`1.GetDataTypeName
  isSpec: "True"
  fullName: ALE.ETLBox.TableData<T>.GetDataTypeName
  fullName.vb: ALE.ETLBox.TableData(Of T).GetDataTypeName
  nameWithType: TableData<T>.GetDataTypeName
  nameWithType.vb: TableData(Of T).GetDataTypeName
- uid: ALE.ETLBox.TableData`1.GetDateTime(System.Int32)
  name: GetDateTime(Int32)
  href: api/ALE.ETLBox.TableData-1.html#ALE_ETLBox_TableData_1_GetDateTime_System_Int32_
  commentId: M:ALE.ETLBox.TableData`1.GetDateTime(System.Int32)
  fullName: ALE.ETLBox.TableData<T>.GetDateTime(System.Int32)
  fullName.vb: ALE.ETLBox.TableData(Of T).GetDateTime(System.Int32)
  nameWithType: TableData<T>.GetDateTime(Int32)
  nameWithType.vb: TableData(Of T).GetDateTime(Int32)
- uid: ALE.ETLBox.TableData`1.GetDateTime*
  name: GetDateTime
  href: api/ALE.ETLBox.TableData-1.html#ALE_ETLBox_TableData_1_GetDateTime_
  commentId: Overload:ALE.ETLBox.TableData`1.GetDateTime
  isSpec: "True"
  fullName: ALE.ETLBox.TableData<T>.GetDateTime
  fullName.vb: ALE.ETLBox.TableData(Of T).GetDateTime
  nameWithType: TableData<T>.GetDateTime
  nameWithType.vb: TableData(Of T).GetDateTime
- uid: ALE.ETLBox.TableData`1.GetDecimal(System.Int32)
  name: GetDecimal(Int32)
  href: api/ALE.ETLBox.TableData-1.html#ALE_ETLBox_TableData_1_GetDecimal_System_Int32_
  commentId: M:ALE.ETLBox.TableData`1.GetDecimal(System.Int32)
  fullName: ALE.ETLBox.TableData<T>.GetDecimal(System.Int32)
  fullName.vb: ALE.ETLBox.TableData(Of T).GetDecimal(System.Int32)
  nameWithType: TableData<T>.GetDecimal(Int32)
  nameWithType.vb: TableData(Of T).GetDecimal(Int32)
- uid: ALE.ETLBox.TableData`1.GetDecimal*
  name: GetDecimal
  href: api/ALE.ETLBox.TableData-1.html#ALE_ETLBox_TableData_1_GetDecimal_
  commentId: Overload:ALE.ETLBox.TableData`1.GetDecimal
  isSpec: "True"
  fullName: ALE.ETLBox.TableData<T>.GetDecimal
  fullName.vb: ALE.ETLBox.TableData(Of T).GetDecimal
  nameWithType: TableData<T>.GetDecimal
  nameWithType.vb: TableData(Of T).GetDecimal
- uid: ALE.ETLBox.TableData`1.GetDouble(System.Int32)
  name: GetDouble(Int32)
  href: api/ALE.ETLBox.TableData-1.html#ALE_ETLBox_TableData_1_GetDouble_System_Int32_
  commentId: M:ALE.ETLBox.TableData`1.GetDouble(System.Int32)
  fullName: ALE.ETLBox.TableData<T>.GetDouble(System.Int32)
  fullName.vb: ALE.ETLBox.TableData(Of T).GetDouble(System.Int32)
  nameWithType: TableData<T>.GetDouble(Int32)
  nameWithType.vb: TableData(Of T).GetDouble(Int32)
- uid: ALE.ETLBox.TableData`1.GetDouble*
  name: GetDouble
  href: api/ALE.ETLBox.TableData-1.html#ALE_ETLBox_TableData_1_GetDouble_
  commentId: Overload:ALE.ETLBox.TableData`1.GetDouble
  isSpec: "True"
  fullName: ALE.ETLBox.TableData<T>.GetDouble
  fullName.vb: ALE.ETLBox.TableData(Of T).GetDouble
  nameWithType: TableData<T>.GetDouble
  nameWithType.vb: TableData(Of T).GetDouble
- uid: ALE.ETLBox.TableData`1.GetFieldType(System.Int32)
  name: GetFieldType(Int32)
  href: api/ALE.ETLBox.TableData-1.html#ALE_ETLBox_TableData_1_GetFieldType_System_Int32_
  commentId: M:ALE.ETLBox.TableData`1.GetFieldType(System.Int32)
  fullName: ALE.ETLBox.TableData<T>.GetFieldType(System.Int32)
  fullName.vb: ALE.ETLBox.TableData(Of T).GetFieldType(System.Int32)
  nameWithType: TableData<T>.GetFieldType(Int32)
  nameWithType.vb: TableData(Of T).GetFieldType(Int32)
- uid: ALE.ETLBox.TableData`1.GetFieldType*
  name: GetFieldType
  href: api/ALE.ETLBox.TableData-1.html#ALE_ETLBox_TableData_1_GetFieldType_
  commentId: Overload:ALE.ETLBox.TableData`1.GetFieldType
  isSpec: "True"
  fullName: ALE.ETLBox.TableData<T>.GetFieldType
  fullName.vb: ALE.ETLBox.TableData(Of T).GetFieldType
  nameWithType: TableData<T>.GetFieldType
  nameWithType.vb: TableData(Of T).GetFieldType
- uid: ALE.ETLBox.TableData`1.GetFloat(System.Int32)
  name: GetFloat(Int32)
  href: api/ALE.ETLBox.TableData-1.html#ALE_ETLBox_TableData_1_GetFloat_System_Int32_
  commentId: M:ALE.ETLBox.TableData`1.GetFloat(System.Int32)
  fullName: ALE.ETLBox.TableData<T>.GetFloat(System.Int32)
  fullName.vb: ALE.ETLBox.TableData(Of T).GetFloat(System.Int32)
  nameWithType: TableData<T>.GetFloat(Int32)
  nameWithType.vb: TableData(Of T).GetFloat(Int32)
- uid: ALE.ETLBox.TableData`1.GetFloat*
  name: GetFloat
  href: api/ALE.ETLBox.TableData-1.html#ALE_ETLBox_TableData_1_GetFloat_
  commentId: Overload:ALE.ETLBox.TableData`1.GetFloat
  isSpec: "True"
  fullName: ALE.ETLBox.TableData<T>.GetFloat
  fullName.vb: ALE.ETLBox.TableData(Of T).GetFloat
  nameWithType: TableData<T>.GetFloat
  nameWithType.vb: TableData(Of T).GetFloat
- uid: ALE.ETLBox.TableData`1.GetGuid(System.Int32)
  name: GetGuid(Int32)
  href: api/ALE.ETLBox.TableData-1.html#ALE_ETLBox_TableData_1_GetGuid_System_Int32_
  commentId: M:ALE.ETLBox.TableData`1.GetGuid(System.Int32)
  fullName: ALE.ETLBox.TableData<T>.GetGuid(System.Int32)
  fullName.vb: ALE.ETLBox.TableData(Of T).GetGuid(System.Int32)
  nameWithType: TableData<T>.GetGuid(Int32)
  nameWithType.vb: TableData(Of T).GetGuid(Int32)
- uid: ALE.ETLBox.TableData`1.GetGuid*
  name: GetGuid
  href: api/ALE.ETLBox.TableData-1.html#ALE_ETLBox_TableData_1_GetGuid_
  commentId: Overload:ALE.ETLBox.TableData`1.GetGuid
  isSpec: "True"
  fullName: ALE.ETLBox.TableData<T>.GetGuid
  fullName.vb: ALE.ETLBox.TableData(Of T).GetGuid
  nameWithType: TableData<T>.GetGuid
  nameWithType.vb: TableData(Of T).GetGuid
- uid: ALE.ETLBox.TableData`1.GetInt16(System.Int32)
  name: GetInt16(Int32)
  href: api/ALE.ETLBox.TableData-1.html#ALE_ETLBox_TableData_1_GetInt16_System_Int32_
  commentId: M:ALE.ETLBox.TableData`1.GetInt16(System.Int32)
  fullName: ALE.ETLBox.TableData<T>.GetInt16(System.Int32)
  fullName.vb: ALE.ETLBox.TableData(Of T).GetInt16(System.Int32)
  nameWithType: TableData<T>.GetInt16(Int32)
  nameWithType.vb: TableData(Of T).GetInt16(Int32)
- uid: ALE.ETLBox.TableData`1.GetInt16*
  name: GetInt16
  href: api/ALE.ETLBox.TableData-1.html#ALE_ETLBox_TableData_1_GetInt16_
  commentId: Overload:ALE.ETLBox.TableData`1.GetInt16
  isSpec: "True"
  fullName: ALE.ETLBox.TableData<T>.GetInt16
  fullName.vb: ALE.ETLBox.TableData(Of T).GetInt16
  nameWithType: TableData<T>.GetInt16
  nameWithType.vb: TableData(Of T).GetInt16
- uid: ALE.ETLBox.TableData`1.GetInt32(System.Int32)
  name: GetInt32(Int32)
  href: api/ALE.ETLBox.TableData-1.html#ALE_ETLBox_TableData_1_GetInt32_System_Int32_
  commentId: M:ALE.ETLBox.TableData`1.GetInt32(System.Int32)
  fullName: ALE.ETLBox.TableData<T>.GetInt32(System.Int32)
  fullName.vb: ALE.ETLBox.TableData(Of T).GetInt32(System.Int32)
  nameWithType: TableData<T>.GetInt32(Int32)
  nameWithType.vb: TableData(Of T).GetInt32(Int32)
- uid: ALE.ETLBox.TableData`1.GetInt32*
  name: GetInt32
  href: api/ALE.ETLBox.TableData-1.html#ALE_ETLBox_TableData_1_GetInt32_
  commentId: Overload:ALE.ETLBox.TableData`1.GetInt32
  isSpec: "True"
  fullName: ALE.ETLBox.TableData<T>.GetInt32
  fullName.vb: ALE.ETLBox.TableData(Of T).GetInt32
  nameWithType: TableData<T>.GetInt32
  nameWithType.vb: TableData(Of T).GetInt32
- uid: ALE.ETLBox.TableData`1.GetInt64(System.Int32)
  name: GetInt64(Int32)
  href: api/ALE.ETLBox.TableData-1.html#ALE_ETLBox_TableData_1_GetInt64_System_Int32_
  commentId: M:ALE.ETLBox.TableData`1.GetInt64(System.Int32)
  fullName: ALE.ETLBox.TableData<T>.GetInt64(System.Int32)
  fullName.vb: ALE.ETLBox.TableData(Of T).GetInt64(System.Int32)
  nameWithType: TableData<T>.GetInt64(Int32)
  nameWithType.vb: TableData(Of T).GetInt64(Int32)
- uid: ALE.ETLBox.TableData`1.GetInt64*
  name: GetInt64
  href: api/ALE.ETLBox.TableData-1.html#ALE_ETLBox_TableData_1_GetInt64_
  commentId: Overload:ALE.ETLBox.TableData`1.GetInt64
  isSpec: "True"
  fullName: ALE.ETLBox.TableData<T>.GetInt64
  fullName.vb: ALE.ETLBox.TableData(Of T).GetInt64
  nameWithType: TableData<T>.GetInt64
  nameWithType.vb: TableData(Of T).GetInt64
- uid: ALE.ETLBox.TableData`1.GetName(System.Int32)
  name: GetName(Int32)
  href: api/ALE.ETLBox.TableData-1.html#ALE_ETLBox_TableData_1_GetName_System_Int32_
  commentId: M:ALE.ETLBox.TableData`1.GetName(System.Int32)
  fullName: ALE.ETLBox.TableData<T>.GetName(System.Int32)
  fullName.vb: ALE.ETLBox.TableData(Of T).GetName(System.Int32)
  nameWithType: TableData<T>.GetName(Int32)
  nameWithType.vb: TableData(Of T).GetName(Int32)
- uid: ALE.ETLBox.TableData`1.GetName*
  name: GetName
  href: api/ALE.ETLBox.TableData-1.html#ALE_ETLBox_TableData_1_GetName_
  commentId: Overload:ALE.ETLBox.TableData`1.GetName
  isSpec: "True"
  fullName: ALE.ETLBox.TableData<T>.GetName
  fullName.vb: ALE.ETLBox.TableData(Of T).GetName
  nameWithType: TableData<T>.GetName
  nameWithType.vb: TableData(Of T).GetName
- uid: ALE.ETLBox.TableData`1.GetOrdinal(System.String)
  name: GetOrdinal(String)
  href: api/ALE.ETLBox.TableData-1.html#ALE_ETLBox_TableData_1_GetOrdinal_System_String_
  commentId: M:ALE.ETLBox.TableData`1.GetOrdinal(System.String)
  fullName: ALE.ETLBox.TableData<T>.GetOrdinal(System.String)
  fullName.vb: ALE.ETLBox.TableData(Of T).GetOrdinal(System.String)
  nameWithType: TableData<T>.GetOrdinal(String)
  nameWithType.vb: TableData(Of T).GetOrdinal(String)
- uid: ALE.ETLBox.TableData`1.GetOrdinal*
  name: GetOrdinal
  href: api/ALE.ETLBox.TableData-1.html#ALE_ETLBox_TableData_1_GetOrdinal_
  commentId: Overload:ALE.ETLBox.TableData`1.GetOrdinal
  isSpec: "True"
  fullName: ALE.ETLBox.TableData<T>.GetOrdinal
  fullName.vb: ALE.ETLBox.TableData(Of T).GetOrdinal
  nameWithType: TableData<T>.GetOrdinal
  nameWithType.vb: TableData(Of T).GetOrdinal
- uid: ALE.ETLBox.TableData`1.GetSchemaTable
  name: GetSchemaTable()
  href: api/ALE.ETLBox.TableData-1.html#ALE_ETLBox_TableData_1_GetSchemaTable
  commentId: M:ALE.ETLBox.TableData`1.GetSchemaTable
  fullName: ALE.ETLBox.TableData<T>.GetSchemaTable()
  fullName.vb: ALE.ETLBox.TableData(Of T).GetSchemaTable()
  nameWithType: TableData<T>.GetSchemaTable()
  nameWithType.vb: TableData(Of T).GetSchemaTable()
- uid: ALE.ETLBox.TableData`1.GetSchemaTable*
  name: GetSchemaTable
  href: api/ALE.ETLBox.TableData-1.html#ALE_ETLBox_TableData_1_GetSchemaTable_
  commentId: Overload:ALE.ETLBox.TableData`1.GetSchemaTable
  isSpec: "True"
  fullName: ALE.ETLBox.TableData<T>.GetSchemaTable
  fullName.vb: ALE.ETLBox.TableData(Of T).GetSchemaTable
  nameWithType: TableData<T>.GetSchemaTable
  nameWithType.vb: TableData(Of T).GetSchemaTable
- uid: ALE.ETLBox.TableData`1.GetString(System.Int32)
  name: GetString(Int32)
  href: api/ALE.ETLBox.TableData-1.html#ALE_ETLBox_TableData_1_GetString_System_Int32_
  commentId: M:ALE.ETLBox.TableData`1.GetString(System.Int32)
  fullName: ALE.ETLBox.TableData<T>.GetString(System.Int32)
  fullName.vb: ALE.ETLBox.TableData(Of T).GetString(System.Int32)
  nameWithType: TableData<T>.GetString(Int32)
  nameWithType.vb: TableData(Of T).GetString(Int32)
- uid: ALE.ETLBox.TableData`1.GetString*
  name: GetString
  href: api/ALE.ETLBox.TableData-1.html#ALE_ETLBox_TableData_1_GetString_
  commentId: Overload:ALE.ETLBox.TableData`1.GetString
  isSpec: "True"
  fullName: ALE.ETLBox.TableData<T>.GetString
  fullName.vb: ALE.ETLBox.TableData(Of T).GetString
  nameWithType: TableData<T>.GetString
  nameWithType.vb: TableData(Of T).GetString
- uid: ALE.ETLBox.TableData`1.GetValue(System.Int32)
  name: GetValue(Int32)
  href: api/ALE.ETLBox.TableData-1.html#ALE_ETLBox_TableData_1_GetValue_System_Int32_
  commentId: M:ALE.ETLBox.TableData`1.GetValue(System.Int32)
  fullName: ALE.ETLBox.TableData<T>.GetValue(System.Int32)
  fullName.vb: ALE.ETLBox.TableData(Of T).GetValue(System.Int32)
  nameWithType: TableData<T>.GetValue(Int32)
  nameWithType.vb: TableData(Of T).GetValue(Int32)
- uid: ALE.ETLBox.TableData`1.GetValue*
  name: GetValue
  href: api/ALE.ETLBox.TableData-1.html#ALE_ETLBox_TableData_1_GetValue_
  commentId: Overload:ALE.ETLBox.TableData`1.GetValue
  isSpec: "True"
  fullName: ALE.ETLBox.TableData<T>.GetValue
  fullName.vb: ALE.ETLBox.TableData(Of T).GetValue
  nameWithType: TableData<T>.GetValue
  nameWithType.vb: TableData(Of T).GetValue
- uid: ALE.ETLBox.TableData`1.GetValues(System.Object[])
  name: GetValues(Object[])
  href: api/ALE.ETLBox.TableData-1.html#ALE_ETLBox_TableData_1_GetValues_System_Object___
  commentId: M:ALE.ETLBox.TableData`1.GetValues(System.Object[])
  name.vb: GetValues(Object())
  fullName: ALE.ETLBox.TableData<T>.GetValues(System.Object[])
  fullName.vb: ALE.ETLBox.TableData(Of T).GetValues(System.Object())
  nameWithType: TableData<T>.GetValues(Object[])
  nameWithType.vb: TableData(Of T).GetValues(Object())
- uid: ALE.ETLBox.TableData`1.GetValues*
  name: GetValues
  href: api/ALE.ETLBox.TableData-1.html#ALE_ETLBox_TableData_1_GetValues_
  commentId: Overload:ALE.ETLBox.TableData`1.GetValues
  isSpec: "True"
  fullName: ALE.ETLBox.TableData<T>.GetValues
  fullName.vb: ALE.ETLBox.TableData(Of T).GetValues
  nameWithType: TableData<T>.GetValues
  nameWithType.vb: TableData(Of T).GetValues
- uid: ALE.ETLBox.TableData`1.HasDefinition
  name: HasDefinition
  href: api/ALE.ETLBox.TableData-1.html#ALE_ETLBox_TableData_1_HasDefinition
  commentId: P:ALE.ETLBox.TableData`1.HasDefinition
  fullName: ALE.ETLBox.TableData<T>.HasDefinition
  fullName.vb: ALE.ETLBox.TableData(Of T).HasDefinition
  nameWithType: TableData<T>.HasDefinition
  nameWithType.vb: TableData(Of T).HasDefinition
- uid: ALE.ETLBox.TableData`1.HasDefinition*
  name: HasDefinition
  href: api/ALE.ETLBox.TableData-1.html#ALE_ETLBox_TableData_1_HasDefinition_
  commentId: Overload:ALE.ETLBox.TableData`1.HasDefinition
  isSpec: "True"
  fullName: ALE.ETLBox.TableData<T>.HasDefinition
  fullName.vb: ALE.ETLBox.TableData(Of T).HasDefinition
  nameWithType: TableData<T>.HasDefinition
  nameWithType.vb: TableData(Of T).HasDefinition
- uid: ALE.ETLBox.TableData`1.IsClosed
  name: IsClosed
  href: api/ALE.ETLBox.TableData-1.html#ALE_ETLBox_TableData_1_IsClosed
  commentId: P:ALE.ETLBox.TableData`1.IsClosed
  fullName: ALE.ETLBox.TableData<T>.IsClosed
  fullName.vb: ALE.ETLBox.TableData(Of T).IsClosed
  nameWithType: TableData<T>.IsClosed
  nameWithType.vb: TableData(Of T).IsClosed
- uid: ALE.ETLBox.TableData`1.IsClosed*
  name: IsClosed
  href: api/ALE.ETLBox.TableData-1.html#ALE_ETLBox_TableData_1_IsClosed_
  commentId: Overload:ALE.ETLBox.TableData`1.IsClosed
  isSpec: "True"
  fullName: ALE.ETLBox.TableData<T>.IsClosed
  fullName.vb: ALE.ETLBox.TableData(Of T).IsClosed
  nameWithType: TableData<T>.IsClosed
  nameWithType.vb: TableData(Of T).IsClosed
- uid: ALE.ETLBox.TableData`1.IsDBNull(System.Int32)
  name: IsDBNull(Int32)
  href: api/ALE.ETLBox.TableData-1.html#ALE_ETLBox_TableData_1_IsDBNull_System_Int32_
  commentId: M:ALE.ETLBox.TableData`1.IsDBNull(System.Int32)
  fullName: ALE.ETLBox.TableData<T>.IsDBNull(System.Int32)
  fullName.vb: ALE.ETLBox.TableData(Of T).IsDBNull(System.Int32)
  nameWithType: TableData<T>.IsDBNull(Int32)
  nameWithType.vb: TableData(Of T).IsDBNull(Int32)
- uid: ALE.ETLBox.TableData`1.IsDBNull*
  name: IsDBNull
  href: api/ALE.ETLBox.TableData-1.html#ALE_ETLBox_TableData_1_IsDBNull_
  commentId: Overload:ALE.ETLBox.TableData`1.IsDBNull
  isSpec: "True"
  fullName: ALE.ETLBox.TableData<T>.IsDBNull
  fullName.vb: ALE.ETLBox.TableData(Of T).IsDBNull
  nameWithType: TableData<T>.IsDBNull
  nameWithType.vb: TableData(Of T).IsDBNull
- uid: ALE.ETLBox.TableData`1.Item(System.Int32)
  name: Item[Int32]
  href: api/ALE.ETLBox.TableData-1.html#ALE_ETLBox_TableData_1_Item_System_Int32_
  commentId: P:ALE.ETLBox.TableData`1.Item(System.Int32)
  name.vb: Item(Int32)
  fullName: ALE.ETLBox.TableData<T>.Item[System.Int32]
  fullName.vb: ALE.ETLBox.TableData(Of T).Item(System.Int32)
  nameWithType: TableData<T>.Item[Int32]
  nameWithType.vb: TableData(Of T).Item(Int32)
- uid: ALE.ETLBox.TableData`1.Item(System.String)
  name: Item[String]
  href: api/ALE.ETLBox.TableData-1.html#ALE_ETLBox_TableData_1_Item_System_String_
  commentId: P:ALE.ETLBox.TableData`1.Item(System.String)
  name.vb: Item(String)
  fullName: ALE.ETLBox.TableData<T>.Item[System.String]
  fullName.vb: ALE.ETLBox.TableData(Of T).Item(System.String)
  nameWithType: TableData<T>.Item[String]
  nameWithType.vb: TableData(Of T).Item(String)
- uid: ALE.ETLBox.TableData`1.Item*
  name: Item
  href: api/ALE.ETLBox.TableData-1.html#ALE_ETLBox_TableData_1_Item_
  commentId: Overload:ALE.ETLBox.TableData`1.Item
  isSpec: "True"
  fullName: ALE.ETLBox.TableData<T>.Item
  fullName.vb: ALE.ETLBox.TableData(Of T).Item
  nameWithType: TableData<T>.Item
  nameWithType.vb: TableData(Of T).Item
- uid: ALE.ETLBox.TableData`1.NextResult
  name: NextResult()
  href: api/ALE.ETLBox.TableData-1.html#ALE_ETLBox_TableData_1_NextResult
  commentId: M:ALE.ETLBox.TableData`1.NextResult
  fullName: ALE.ETLBox.TableData<T>.NextResult()
  fullName.vb: ALE.ETLBox.TableData(Of T).NextResult()
  nameWithType: TableData<T>.NextResult()
  nameWithType.vb: TableData(Of T).NextResult()
- uid: ALE.ETLBox.TableData`1.NextResult*
  name: NextResult
  href: api/ALE.ETLBox.TableData-1.html#ALE_ETLBox_TableData_1_NextResult_
  commentId: Overload:ALE.ETLBox.TableData`1.NextResult
  isSpec: "True"
  fullName: ALE.ETLBox.TableData<T>.NextResult
  fullName.vb: ALE.ETLBox.TableData(Of T).NextResult
  nameWithType: TableData<T>.NextResult
  nameWithType.vb: TableData(Of T).NextResult
- uid: ALE.ETLBox.TableData`1.Read
  name: Read()
  href: api/ALE.ETLBox.TableData-1.html#ALE_ETLBox_TableData_1_Read
  commentId: M:ALE.ETLBox.TableData`1.Read
  fullName: ALE.ETLBox.TableData<T>.Read()
  fullName.vb: ALE.ETLBox.TableData(Of T).Read()
  nameWithType: TableData<T>.Read()
  nameWithType.vb: TableData(Of T).Read()
- uid: ALE.ETLBox.TableData`1.Read*
  name: Read
  href: api/ALE.ETLBox.TableData-1.html#ALE_ETLBox_TableData_1_Read_
  commentId: Overload:ALE.ETLBox.TableData`1.Read
  isSpec: "True"
  fullName: ALE.ETLBox.TableData<T>.Read
  fullName.vb: ALE.ETLBox.TableData(Of T).Read
  nameWithType: TableData<T>.Read
  nameWithType.vb: TableData(Of T).Read
- uid: ALE.ETLBox.TableData`1.RecordsAffected
  name: RecordsAffected
  href: api/ALE.ETLBox.TableData-1.html#ALE_ETLBox_TableData_1_RecordsAffected
  commentId: P:ALE.ETLBox.TableData`1.RecordsAffected
  fullName: ALE.ETLBox.TableData<T>.RecordsAffected
  fullName.vb: ALE.ETLBox.TableData(Of T).RecordsAffected
  nameWithType: TableData<T>.RecordsAffected
  nameWithType.vb: TableData(Of T).RecordsAffected
- uid: ALE.ETLBox.TableData`1.RecordsAffected*
  name: RecordsAffected
  href: api/ALE.ETLBox.TableData-1.html#ALE_ETLBox_TableData_1_RecordsAffected_
  commentId: Overload:ALE.ETLBox.TableData`1.RecordsAffected
  isSpec: "True"
  fullName: ALE.ETLBox.TableData<T>.RecordsAffected
  fullName.vb: ALE.ETLBox.TableData(Of T).RecordsAffected
  nameWithType: TableData<T>.RecordsAffected
  nameWithType.vb: TableData(Of T).RecordsAffected
- uid: ALE.ETLBox.TableData`1.Rows
  name: Rows
  href: api/ALE.ETLBox.TableData-1.html#ALE_ETLBox_TableData_1_Rows
  commentId: P:ALE.ETLBox.TableData`1.Rows
  fullName: ALE.ETLBox.TableData<T>.Rows
  fullName.vb: ALE.ETLBox.TableData(Of T).Rows
  nameWithType: TableData<T>.Rows
  nameWithType.vb: TableData(Of T).Rows
- uid: ALE.ETLBox.TableData`1.Rows*
  name: Rows
  href: api/ALE.ETLBox.TableData-1.html#ALE_ETLBox_TableData_1_Rows_
  commentId: Overload:ALE.ETLBox.TableData`1.Rows
  isSpec: "True"
  fullName: ALE.ETLBox.TableData<T>.Rows
  fullName.vb: ALE.ETLBox.TableData(Of T).Rows
  nameWithType: TableData<T>.Rows
  nameWithType.vb: TableData(Of T).Rows
- uid: ALE.ETLBox.TableDefinition
  name: TableDefinition
  href: api/ALE.ETLBox.TableDefinition.html
  commentId: T:ALE.ETLBox.TableDefinition
  fullName: ALE.ETLBox.TableDefinition
  nameWithType: TableDefinition
- uid: ALE.ETLBox.TableDefinition.#ctor
  name: TableDefinition()
  href: api/ALE.ETLBox.TableDefinition.html#ALE_ETLBox_TableDefinition__ctor
  commentId: M:ALE.ETLBox.TableDefinition.#ctor
  fullName: ALE.ETLBox.TableDefinition.TableDefinition()
  nameWithType: TableDefinition.TableDefinition()
- uid: ALE.ETLBox.TableDefinition.#ctor(System.String)
  name: TableDefinition(String)
  href: api/ALE.ETLBox.TableDefinition.html#ALE_ETLBox_TableDefinition__ctor_System_String_
  commentId: M:ALE.ETLBox.TableDefinition.#ctor(System.String)
  fullName: ALE.ETLBox.TableDefinition.TableDefinition(System.String)
  nameWithType: TableDefinition.TableDefinition(String)
- uid: ALE.ETLBox.TableDefinition.#ctor(System.String,System.Collections.Generic.List{ALE.ETLBox.TableColumn})
  name: TableDefinition(String, List<TableColumn>)
  href: api/ALE.ETLBox.TableDefinition.html#ALE_ETLBox_TableDefinition__ctor_System_String_System_Collections_Generic_List_ALE_ETLBox_TableColumn__
  commentId: M:ALE.ETLBox.TableDefinition.#ctor(System.String,System.Collections.Generic.List{ALE.ETLBox.TableColumn})
  name.vb: TableDefinition(String, List(Of TableColumn))
  fullName: ALE.ETLBox.TableDefinition.TableDefinition(System.String, System.Collections.Generic.List<ALE.ETLBox.TableColumn>)
  fullName.vb: ALE.ETLBox.TableDefinition.TableDefinition(System.String, System.Collections.Generic.List(Of ALE.ETLBox.TableColumn))
  nameWithType: TableDefinition.TableDefinition(String, List<TableColumn>)
  nameWithType.vb: TableDefinition.TableDefinition(String, List(Of TableColumn))
- uid: ALE.ETLBox.TableDefinition.#ctor*
  name: TableDefinition
  href: api/ALE.ETLBox.TableDefinition.html#ALE_ETLBox_TableDefinition__ctor_
  commentId: Overload:ALE.ETLBox.TableDefinition.#ctor
  isSpec: "True"
  fullName: ALE.ETLBox.TableDefinition.TableDefinition
  nameWithType: TableDefinition.TableDefinition
- uid: ALE.ETLBox.TableDefinition.AllColumnsWithoutIdentity
  name: AllColumnsWithoutIdentity
  href: api/ALE.ETLBox.TableDefinition.html#ALE_ETLBox_TableDefinition_AllColumnsWithoutIdentity
  commentId: P:ALE.ETLBox.TableDefinition.AllColumnsWithoutIdentity
  fullName: ALE.ETLBox.TableDefinition.AllColumnsWithoutIdentity
  nameWithType: TableDefinition.AllColumnsWithoutIdentity
- uid: ALE.ETLBox.TableDefinition.AllColumnsWithoutIdentity*
  name: AllColumnsWithoutIdentity
  href: api/ALE.ETLBox.TableDefinition.html#ALE_ETLBox_TableDefinition_AllColumnsWithoutIdentity_
  commentId: Overload:ALE.ETLBox.TableDefinition.AllColumnsWithoutIdentity
  isSpec: "True"
  fullName: ALE.ETLBox.TableDefinition.AllColumnsWithoutIdentity
  nameWithType: TableDefinition.AllColumnsWithoutIdentity
- uid: ALE.ETLBox.TableDefinition.Columns
  name: Columns
  href: api/ALE.ETLBox.TableDefinition.html#ALE_ETLBox_TableDefinition_Columns
  commentId: P:ALE.ETLBox.TableDefinition.Columns
  fullName: ALE.ETLBox.TableDefinition.Columns
  nameWithType: TableDefinition.Columns
- uid: ALE.ETLBox.TableDefinition.Columns*
  name: Columns
  href: api/ALE.ETLBox.TableDefinition.html#ALE_ETLBox_TableDefinition_Columns_
  commentId: Overload:ALE.ETLBox.TableDefinition.Columns
  isSpec: "True"
  fullName: ALE.ETLBox.TableDefinition.Columns
  nameWithType: TableDefinition.Columns
- uid: ALE.ETLBox.TableDefinition.CreateTable
  name: CreateTable()
  href: api/ALE.ETLBox.TableDefinition.html#ALE_ETLBox_TableDefinition_CreateTable
  commentId: M:ALE.ETLBox.TableDefinition.CreateTable
  fullName: ALE.ETLBox.TableDefinition.CreateTable()
  nameWithType: TableDefinition.CreateTable()
- uid: ALE.ETLBox.TableDefinition.CreateTable(ALE.ETLBox.ConnectionManager.IConnectionManager)
  name: CreateTable(IConnectionManager)
  href: api/ALE.ETLBox.TableDefinition.html#ALE_ETLBox_TableDefinition_CreateTable_ALE_ETLBox_ConnectionManager_IConnectionManager_
  commentId: M:ALE.ETLBox.TableDefinition.CreateTable(ALE.ETLBox.ConnectionManager.IConnectionManager)
  fullName: ALE.ETLBox.TableDefinition.CreateTable(ALE.ETLBox.ConnectionManager.IConnectionManager)
  nameWithType: TableDefinition.CreateTable(IConnectionManager)
- uid: ALE.ETLBox.TableDefinition.CreateTable*
  name: CreateTable
  href: api/ALE.ETLBox.TableDefinition.html#ALE_ETLBox_TableDefinition_CreateTable_
  commentId: Overload:ALE.ETLBox.TableDefinition.CreateTable
  isSpec: "True"
  fullName: ALE.ETLBox.TableDefinition.CreateTable
  nameWithType: TableDefinition.CreateTable
- uid: ALE.ETLBox.TableDefinition.GetDefinitionFromTableName(ALE.ETLBox.ConnectionManager.IConnectionManager,System.String)
  name: GetDefinitionFromTableName(IConnectionManager, String)
  href: api/ALE.ETLBox.TableDefinition.html#ALE_ETLBox_TableDefinition_GetDefinitionFromTableName_ALE_ETLBox_ConnectionManager_IConnectionManager_System_String_
  commentId: M:ALE.ETLBox.TableDefinition.GetDefinitionFromTableName(ALE.ETLBox.ConnectionManager.IConnectionManager,System.String)
  fullName: ALE.ETLBox.TableDefinition.GetDefinitionFromTableName(ALE.ETLBox.ConnectionManager.IConnectionManager, System.String)
  nameWithType: TableDefinition.GetDefinitionFromTableName(IConnectionManager, String)
- uid: ALE.ETLBox.TableDefinition.GetDefinitionFromTableName*
  name: GetDefinitionFromTableName
  href: api/ALE.ETLBox.TableDefinition.html#ALE_ETLBox_TableDefinition_GetDefinitionFromTableName_
  commentId: Overload:ALE.ETLBox.TableDefinition.GetDefinitionFromTableName
  isSpec: "True"
  fullName: ALE.ETLBox.TableDefinition.GetDefinitionFromTableName
  nameWithType: TableDefinition.GetDefinitionFromTableName
- uid: ALE.ETLBox.TableDefinition.IDColumnIndex
  name: IDColumnIndex
  href: api/ALE.ETLBox.TableDefinition.html#ALE_ETLBox_TableDefinition_IDColumnIndex
  commentId: P:ALE.ETLBox.TableDefinition.IDColumnIndex
  fullName: ALE.ETLBox.TableDefinition.IDColumnIndex
  nameWithType: TableDefinition.IDColumnIndex
- uid: ALE.ETLBox.TableDefinition.IDColumnIndex*
  name: IDColumnIndex
  href: api/ALE.ETLBox.TableDefinition.html#ALE_ETLBox_TableDefinition_IDColumnIndex_
  commentId: Overload:ALE.ETLBox.TableDefinition.IDColumnIndex
  isSpec: "True"
  fullName: ALE.ETLBox.TableDefinition.IDColumnIndex
  nameWithType: TableDefinition.IDColumnIndex
- uid: ALE.ETLBox.TableDefinition.Name
  name: Name
  href: api/ALE.ETLBox.TableDefinition.html#ALE_ETLBox_TableDefinition_Name
  commentId: P:ALE.ETLBox.TableDefinition.Name
  fullName: ALE.ETLBox.TableDefinition.Name
  nameWithType: TableDefinition.Name
- uid: ALE.ETLBox.TableDefinition.Name*
  name: Name
  href: api/ALE.ETLBox.TableDefinition.html#ALE_ETLBox_TableDefinition_Name_
  commentId: Overload:ALE.ETLBox.TableDefinition.Name
  isSpec: "True"
  fullName: ALE.ETLBox.TableDefinition.Name
  nameWithType: TableDefinition.Name
